// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
// Date        : Wed Sep  2 13:43:56 2020
// Host        : IITICUBLAP127 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim
//               c:/Progetti/electronics/projects/boards/P2017_08_UZCB_UltraZynqCarrierBoard/fpga/Vivado/UZCB.srcs/sources_1/ip/mipi_dphy_0/mipi_dphy_0_sim_netlist.v
// Design      : mipi_dphy_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu5ev-sfvc784-2-i
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* C_CAL_MODE = "FIXED" *) (* C_DIV4_CLK_PERIOD = "8.000000" *) (* C_DPHY_LANES = "4" *) 
(* C_DPHY_MODE = "MASTER" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_REG_IF = "0" *) 
(* C_EN_TIMEOUT_REGS = "0" *) (* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) 
(* C_EXAMPLE_SIMULATION = "false" *) (* C_HS_LINE_RATE = "1000" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "0" *) (* C_INIT = "1000000" *) (* C_LPX_PERIOD = "50" *) 
(* C_RCVE_DESKEW_SEQ = "false" *) (* C_SKEWCAL_FIRST_TIME = "4096" *) (* C_SKEWCAL_PERIODIC_TIME = "128" *) 
(* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) (* C_WAKEUP = "1000000" *) 
(* C_XMIT_FIRST_DESKEW_SEQ = "false" *) (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DPHY_PRESET = "None" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) (* SUPPORT_LEVEL = "0" *) 
(* NotValidForBitStream *)
module mipi_dphy_0
   (core_clk,
    core_rst,
    txclkesc_in,
    txbyteclkhs_in,
    clkoutphy_in,
    pll_lock_in,
    system_rst_in,
    init_done,
    cl_txclkactivehs,
    cl_txrequesths,
    cl_stopstate,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    cl_ulpsactivenot,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_txreadyhs,
    dl0_forcetxstopmode,
    dl0_stopstate,
    dl0_enable,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_ulpsactivenot,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl0_txreadyesc,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_txreadyhs,
    dl1_forcetxstopmode,
    dl1_stopstate,
    dl1_enable,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_ulpsactivenot,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl1_txreadyesc,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_txreadyhs,
    dl2_forcetxstopmode,
    dl2_stopstate,
    dl2_enable,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_ulpsactivenot,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl2_txreadyesc,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_txreadyhs,
    dl3_forcetxstopmode,
    dl3_stopstate,
    dl3_enable,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_ulpsactivenot,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    dl3_txreadyesc,
    clk_txp,
    clk_txn,
    data_txp,
    data_txn);
  input core_clk;
  input core_rst;
  input txclkesc_in;
  input txbyteclkhs_in;
  input clkoutphy_in;
  input pll_lock_in;
  input system_rst_in;
  output init_done;
  output cl_txclkactivehs;
  input cl_txrequesths;
  output cl_stopstate;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  output cl_ulpsactivenot;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  output dl0_txreadyhs;
  input dl0_forcetxstopmode;
  output dl0_stopstate;
  input dl0_enable;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  output dl0_ulpsactivenot;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  output dl0_txreadyesc;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  output dl1_txreadyhs;
  input dl1_forcetxstopmode;
  output dl1_stopstate;
  input dl1_enable;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  output dl1_ulpsactivenot;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  output dl1_txreadyesc;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  output dl2_txreadyhs;
  input dl2_forcetxstopmode;
  output dl2_stopstate;
  input dl2_enable;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  output dl2_ulpsactivenot;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  output dl2_txreadyesc;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  output dl3_txreadyhs;
  input dl3_forcetxstopmode;
  output dl3_stopstate;
  input dl3_enable;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  output dl3_ulpsactivenot;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  output dl3_txreadyesc;
  output clk_txp;
  output clk_txn;
  output [3:0]data_txp;
  output [3:0]data_txn;

  wire cl_enable;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txrequesths;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  (* IOSTANDARD = "MIPI_DPHY_DCI" *) wire clk_txn;
  (* IOSTANDARD = "MIPI_DPHY_DCI" *) wire clk_txp;
  wire clkoutphy_in;
  wire core_clk;
  wire core_rst;
  (* IOSTANDARD = "MIPI_DPHY_DCI" *) wire [3:0]data_txn;
  (* IOSTANDARD = "MIPI_DPHY_DCI" *) wire [3:0]data_txp;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire init_done;
  wire pll_lock_in;
  wire system_rst_in;
  wire txbyteclkhs_in;
  wire txclkesc_in;

  (* C_CAL_MODE = "FIXED" *) 
  (* C_DIV4_CLK_PERIOD = "8.000000" *) 
  (* C_DPHY_LANES = "4" *) 
  (* C_DPHY_MODE = "MASTER" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_REG_IF = "0" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_ESC_CLK_PERIOD = "50.000000" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_EXAMPLE_SIMULATION = "false" *) 
  (* C_HS_LINE_RATE = "1000" *) 
  (* C_HS_TIMEOUT = "65541" *) 
  (* C_IDLY_TAP = "0" *) 
  (* C_INIT = "1000000" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_RCVE_DESKEW_SEQ = "false" *) 
  (* C_SKEWCAL_FIRST_TIME = "4096" *) 
  (* C_SKEWCAL_PERIODIC_TIME = "128" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) 
  (* C_WAKEUP = "1000000" *) 
  (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
  (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) 
  (* DPHY_PRESET = "None" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* SUPPORT_LEVEL = "0" *) 
  mipi_dphy_0_mipi_dphy_0_core inst
       (.cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_txn(clk_txn),
        .clk_txp(clk_txp),
        .clkoutphy_in(clkoutphy_in),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_txn(data_txn),
        .data_txp(data_txp),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txreadyesc(dl0_txreadyesc),
        .dl0_txreadyhs(dl0_txreadyhs),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txreadyesc(dl1_txreadyesc),
        .dl1_txreadyhs(dl1_txreadyhs),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txreadyesc(dl2_txreadyesc),
        .dl2_txreadyhs(dl2_txreadyhs),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txreadyesc(dl3_txreadyesc),
        .dl3_txreadyhs(dl3_txreadyhs),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .init_done(init_done),
        .pll_lock_in(pll_lock_in),
        .system_rst_in(system_rst_in),
        .txbyteclkhs_in(txbyteclkhs_in),
        .txclkesc_in(txclkesc_in));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_bs_ctrl_top" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_bs_ctrl_top
   (\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7] ,
    n0_vtc_rdy_out,
    n1_vtc_rdy_out,
    n2_vtc_rdy_out,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7]_0 ,
    core_rdy,
    dly_rdy_bsc0,
    dly_rdy_bsc1,
    dly_rdy_bsc2,
    clkoutphy_in,
    in0,
    riu_valid_bg0_bs0,
    riu_rd_data_bg0_bs0,
    n0_rx_bit_ctrl_out0,
    n0_rx_bit_ctrl_out2,
    n0_rx_bit_ctrl_out4,
    n0_tx_bit_ctrl_out0,
    n0_tx_bit_ctrl_out2,
    n0_tx_bit_ctrl_out4,
    riu_valid_bg0_bs1,
    riu_rd_data_bg0_bs1,
    n1_rx_bit_ctrl_out2,
    n1_tx_bit_ctrl_out2,
    riu_valid_bg1_bs2,
    riu_rd_data_bg1_bs2,
    n2_rx_bit_ctrl_out2,
    n2_tx_bit_ctrl_out2,
    riu_valid_bg0,
    riu_rd_data_bg0,
    Q,
    n0_en_vtc_in,
    shared_pll0_clkoutphy_in,
    riu_clk,
    riu_nibble_sel_bg0,
    riu_wr_en_bg0,
    bsctrl_rst,
    riu_wr_data_bg0,
    tx_bs0_rx_bit_ctrl_out,
    tx_bs2_rx_bit_ctrl_out,
    tx_bs4_rx_bit_ctrl_out,
    tx_bs0_tx_bit_ctrl_out,
    tx_bs2_tx_bit_ctrl_out,
    tx_bs4_tx_bit_ctrl_out,
    n0_tbyte_in,
    riu_addr_bg0,
    n1_en_vtc_in,
    tx_bs8_rx_bit_ctrl_out,
    tx_bs8_tx_bit_ctrl_out,
    n1_tbyte_in,
    n2_en_vtc_in,
    riu_nibble_sel_bg1,
    riu_wr_en_bg1,
    riu_wr_data_bg1,
    tx_bs15_rx_bit_ctrl_out,
    tx_bs15_tx_bit_ctrl_out,
    n2_tbyte_in,
    riu_addr_bg1);
  output \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7] ;
  output n0_vtc_rdy_out;
  output n1_vtc_rdy_out;
  output n2_vtc_rdy_out;
  output \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7]_0 ;
  output core_rdy;
  output dly_rdy_bsc0;
  output dly_rdy_bsc1;
  output dly_rdy_bsc2;
  output clkoutphy_in;
  output [0:0]in0;
  output riu_valid_bg0_bs0;
  output [15:0]riu_rd_data_bg0_bs0;
  output [39:0]n0_rx_bit_ctrl_out0;
  output [39:0]n0_rx_bit_ctrl_out2;
  output [39:0]n0_rx_bit_ctrl_out4;
  output [39:0]n0_tx_bit_ctrl_out0;
  output [39:0]n0_tx_bit_ctrl_out2;
  output [39:0]n0_tx_bit_ctrl_out4;
  output riu_valid_bg0_bs1;
  output [15:0]riu_rd_data_bg0_bs1;
  output [39:0]n1_rx_bit_ctrl_out2;
  output [39:0]n1_tx_bit_ctrl_out2;
  output riu_valid_bg1_bs2;
  output [15:0]riu_rd_data_bg1_bs2;
  output [39:0]n2_rx_bit_ctrl_out2;
  output [39:0]n2_tx_bit_ctrl_out2;
  output riu_valid_bg0;
  output [15:0]riu_rd_data_bg0;
  input [0:0]Q;
  input n0_en_vtc_in;
  input shared_pll0_clkoutphy_in;
  input riu_clk;
  input [1:0]riu_nibble_sel_bg0;
  input riu_wr_en_bg0;
  input bsctrl_rst;
  input [15:0]riu_wr_data_bg0;
  input [39:0]tx_bs0_rx_bit_ctrl_out;
  input [39:0]tx_bs2_rx_bit_ctrl_out;
  input [39:0]tx_bs4_rx_bit_ctrl_out;
  input [39:0]tx_bs0_tx_bit_ctrl_out;
  input [39:0]tx_bs2_tx_bit_ctrl_out;
  input [39:0]tx_bs4_tx_bit_ctrl_out;
  input [3:0]n0_tbyte_in;
  input [5:0]riu_addr_bg0;
  input n1_en_vtc_in;
  input [39:0]tx_bs8_rx_bit_ctrl_out;
  input [39:0]tx_bs8_tx_bit_ctrl_out;
  input [3:0]n1_tbyte_in;
  input n2_en_vtc_in;
  input [0:0]riu_nibble_sel_bg1;
  input riu_wr_en_bg1;
  input [15:0]riu_wr_data_bg1;
  input [39:0]tx_bs15_rx_bit_ctrl_out;
  input [39:0]tx_bs15_tx_bit_ctrl_out;
  input [3:0]n2_tbyte_in;
  input [5:0]riu_addr_bg1;

  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_263 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_264 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_265 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_266 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_267 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_268 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_269 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_270 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_271 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_272 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_273 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_274 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_275 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_276 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_277 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_278 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_279 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_280 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_281 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_282 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_283 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_284 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_285 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_286 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_287 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_288 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_289 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_290 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_291 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_292 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_293 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_294 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_295 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_296 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_297 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_298 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_299 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_300 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_301 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_302 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_543 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_544 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_545 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_546 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_547 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_548 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_549 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_550 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_551 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_552 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_553 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_554 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_555 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_556 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_557 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_558 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_559 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_560 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_561 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_562 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_563 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_564 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_565 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_566 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_567 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_568 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_569 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_570 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_571 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_572 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_573 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_574 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_575 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_576 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_577 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_578 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_579 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_580 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_581 ;
  wire \BITSLICE_CTRL[0].bs_ctrl_inst_n_582 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_263 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_264 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_265 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_266 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_267 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_268 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_269 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_270 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_271 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_272 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_273 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_274 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_275 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_276 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_277 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_278 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_279 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_280 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_281 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_282 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_283 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_284 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_285 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_286 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_287 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_288 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_289 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_290 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_291 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_292 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_293 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_294 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_295 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_296 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_297 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_298 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_299 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_300 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_301 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_302 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_543 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_544 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_545 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_546 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_547 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_548 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_549 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_550 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_551 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_552 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_553 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_554 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_555 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_556 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_557 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_558 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_559 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_560 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_561 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_562 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_563 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_564 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_565 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_566 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_567 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_568 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_569 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_570 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_571 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_572 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_573 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_574 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_575 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_576 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_577 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_578 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_579 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_580 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_581 ;
  wire \BITSLICE_CTRL[2].bs_ctrl_inst_n_582 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7]_0 ;
  wire [0:0]Q;
  wire bsctrl_rst;
  wire clkoutphy_in;
  wire core_rdy;
  wire dly_rdy_bsc0;
  wire dly_rdy_bsc1;
  wire dly_rdy_bsc2;
  wire [0:0]in0;
  wire n0_en_vtc_in;
  wire [39:0]n0_rx_bit_ctrl_out0;
  wire [39:0]n0_rx_bit_ctrl_out1;
  wire [39:0]n0_rx_bit_ctrl_out2;
  wire [39:0]n0_rx_bit_ctrl_out3;
  wire [39:0]n0_rx_bit_ctrl_out4;
  wire [39:0]n0_rx_bit_ctrl_out5;
  wire [3:0]n0_tbyte_in;
  wire [39:0]n0_tx_bit_ctrl_out0;
  wire [39:0]n0_tx_bit_ctrl_out1;
  wire [39:0]n0_tx_bit_ctrl_out2;
  wire [39:0]n0_tx_bit_ctrl_out3;
  wire [39:0]n0_tx_bit_ctrl_out4;
  wire [39:0]n0_tx_bit_ctrl_out5;
  wire [39:0]n0_tx_bit_ctrl_out_tri;
  wire n0_vtc_rdy_out;
  wire n1_en_vtc_in;
  wire [39:0]n1_rx_bit_ctrl_out0;
  wire [39:0]n1_rx_bit_ctrl_out1;
  wire [39:0]n1_rx_bit_ctrl_out2;
  wire [39:0]n1_rx_bit_ctrl_out3;
  wire [39:0]n1_rx_bit_ctrl_out4;
  wire [39:0]n1_rx_bit_ctrl_out5;
  wire [39:0]n1_rx_bit_ctrl_out6;
  wire [3:0]n1_tbyte_in;
  wire [39:0]n1_tx_bit_ctrl_out0;
  wire [39:0]n1_tx_bit_ctrl_out1;
  wire [39:0]n1_tx_bit_ctrl_out2;
  wire [39:0]n1_tx_bit_ctrl_out3;
  wire [39:0]n1_tx_bit_ctrl_out4;
  wire [39:0]n1_tx_bit_ctrl_out5;
  wire [39:0]n1_tx_bit_ctrl_out6;
  wire [39:0]n1_tx_bit_ctrl_out_tri;
  wire n1_vtc_rdy_out;
  wire n2_en_vtc_in;
  wire [39:0]n2_rx_bit_ctrl_out0;
  wire [39:0]n2_rx_bit_ctrl_out1;
  wire [39:0]n2_rx_bit_ctrl_out2;
  wire [39:0]n2_rx_bit_ctrl_out3;
  wire [39:0]n2_rx_bit_ctrl_out4;
  wire [39:0]n2_rx_bit_ctrl_out5;
  wire [3:0]n2_tbyte_in;
  wire [39:0]n2_tx_bit_ctrl_out0;
  wire [39:0]n2_tx_bit_ctrl_out1;
  wire [39:0]n2_tx_bit_ctrl_out2;
  wire [39:0]n2_tx_bit_ctrl_out3;
  wire [39:0]n2_tx_bit_ctrl_out4;
  wire [39:0]n2_tx_bit_ctrl_out5;
  wire [39:0]n2_tx_bit_ctrl_out_tri;
  wire n2_vtc_rdy_out;
  wire [1:0]nclk_nibble_out;
  wire [1:0]pclk_nibble_out;
  wire [5:0]riu_addr_bg0;
  wire [5:0]riu_addr_bg1;
  wire riu_clk;
  wire [1:0]riu_nibble_sel_bg0;
  wire [0:0]riu_nibble_sel_bg1;
  wire [15:0]riu_rd_data_bg0;
  wire [15:0]riu_rd_data_bg0_bs0;
  wire [15:0]riu_rd_data_bg0_bs1;
  wire [15:0]riu_rd_data_bg1_bs2;
  wire riu_valid_bg0;
  wire riu_valid_bg0_bs0;
  wire riu_valid_bg0_bs1;
  wire riu_valid_bg1_bs2;
  wire [15:0]riu_wr_data_bg0;
  wire [15:0]riu_wr_data_bg1;
  wire riu_wr_en_bg0;
  wire riu_wr_en_bg1;
  wire shared_pll0_clkoutphy_in;
  wire [39:0]tx_bs0_rx_bit_ctrl_out;
  wire [39:0]tx_bs0_tx_bit_ctrl_out;
  wire [39:0]tx_bs15_rx_bit_ctrl_out;
  wire [39:0]tx_bs15_tx_bit_ctrl_out;
  wire [39:0]tx_bs2_rx_bit_ctrl_out;
  wire [39:0]tx_bs2_tx_bit_ctrl_out;
  wire [39:0]tx_bs4_rx_bit_ctrl_out;
  wire [39:0]tx_bs4_tx_bit_ctrl_out;
  wire [39:0]tx_bs8_rx_bit_ctrl_out;
  wire [39:0]tx_bs8_tx_bit_ctrl_out;
  wire \NLW_BITSLICE_CTRL[0].bs_ctrl_inst_CLK_TO_EXT_NORTH_UNCONNECTED ;
  wire \NLW_BITSLICE_CTRL[0].bs_ctrl_inst_CLK_TO_EXT_SOUTH_UNCONNECTED ;
  wire [6:0]\NLW_BITSLICE_CTRL[0].bs_ctrl_inst_DYN_DCI_UNCONNECTED ;
  wire \NLW_BITSLICE_CTRL[1].bs_ctrl_inst_CLK_TO_EXT_NORTH_UNCONNECTED ;
  wire \NLW_BITSLICE_CTRL[1].bs_ctrl_inst_CLK_TO_EXT_SOUTH_UNCONNECTED ;
  wire [6:0]\NLW_BITSLICE_CTRL[1].bs_ctrl_inst_DYN_DCI_UNCONNECTED ;
  wire \NLW_BITSLICE_CTRL[2].bs_ctrl_inst_CLK_TO_EXT_NORTH_UNCONNECTED ;
  wire \NLW_BITSLICE_CTRL[2].bs_ctrl_inst_CLK_TO_EXT_SOUTH_UNCONNECTED ;
  wire \NLW_BITSLICE_CTRL[2].bs_ctrl_inst_NCLK_NIBBLE_OUT_UNCONNECTED ;
  wire \NLW_BITSLICE_CTRL[2].bs_ctrl_inst_PCLK_NIBBLE_OUT_UNCONNECTED ;
  wire [6:0]\NLW_BITSLICE_CTRL[2].bs_ctrl_inst_DYN_DCI_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BITSLICE_CONTROL #(
    .CTRL_CLK("EXTERNAL"),
    .DIV_MODE("DIV4"),
    .EN_CLK_TO_EXT_NORTH("DISABLE"),
    .EN_CLK_TO_EXT_SOUTH("DISABLE"),
    .EN_DYN_ODLY_MODE("FALSE"),
    .EN_OTHER_NCLK("FALSE"),
    .EN_OTHER_PCLK("FALSE"),
    .IDLY_VT_TRACK("TRUE"),
    .INV_RXCLK("FALSE"),
    .ODLY_VT_TRACK("TRUE"),
    .QDLY_VT_TRACK("TRUE"),
    .READ_IDLE_COUNT(6'h00),
    .REFCLK_SRC("PLLCLK"),
    .ROUNDING_FACTOR(16),
    .RXGATE_EXTEND("FALSE"),
    .RX_CLK_PHASE_N("SHIFT_0"),
    .RX_CLK_PHASE_P("SHIFT_0"),
    .RX_GATING("DISABLE"),
    .SELF_CALIBRATE("ENABLE"),
    .SERIAL_MODE("FALSE"),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_SPEEDUP("FAST"),
    .SIM_VERSION(2.000000),
    .TX_GATING("ENABLE")) 
    \BITSLICE_CTRL[0].bs_ctrl_inst 
       (.CLK_FROM_EXT(1'b1),
        .CLK_TO_EXT_NORTH(\NLW_BITSLICE_CTRL[0].bs_ctrl_inst_CLK_TO_EXT_NORTH_UNCONNECTED ),
        .CLK_TO_EXT_SOUTH(\NLW_BITSLICE_CTRL[0].bs_ctrl_inst_CLK_TO_EXT_SOUTH_UNCONNECTED ),
        .DLY_RDY(dly_rdy_bsc0),
        .DYN_DCI(\NLW_BITSLICE_CTRL[0].bs_ctrl_inst_DYN_DCI_UNCONNECTED [6:0]),
        .EN_VTC(n0_en_vtc_in),
        .NCLK_NIBBLE_IN(nclk_nibble_out[1]),
        .NCLK_NIBBLE_OUT(nclk_nibble_out[0]),
        .PCLK_NIBBLE_IN(pclk_nibble_out[1]),
        .PCLK_NIBBLE_OUT(pclk_nibble_out[0]),
        .PHY_RDCS0({1'b0,1'b0,1'b0,1'b0}),
        .PHY_RDCS1({1'b0,1'b0,1'b0,1'b0}),
        .PHY_RDEN({1'b0,1'b0,1'b0,1'b0}),
        .PHY_WRCS0({1'b0,1'b0,1'b0,1'b0}),
        .PHY_WRCS1({1'b0,1'b0,1'b0,1'b0}),
        .PLL_CLK(shared_pll0_clkoutphy_in),
        .REFCLK(1'b0),
        .RIU_ADDR(riu_addr_bg0),
        .RIU_CLK(riu_clk),
        .RIU_NIBBLE_SEL(riu_nibble_sel_bg0[0]),
        .RIU_RD_DATA(riu_rd_data_bg0_bs0),
        .RIU_VALID(riu_valid_bg0_bs0),
        .RIU_WR_DATA(riu_wr_data_bg0),
        .RIU_WR_EN(riu_wr_en_bg0),
        .RST(bsctrl_rst),
        .RX_BIT_CTRL_IN0(tx_bs0_rx_bit_ctrl_out),
        .RX_BIT_CTRL_IN1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN2(tx_bs2_rx_bit_ctrl_out),
        .RX_BIT_CTRL_IN3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN4(tx_bs4_rx_bit_ctrl_out),
        .RX_BIT_CTRL_IN5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_OUT0(n0_rx_bit_ctrl_out0),
        .RX_BIT_CTRL_OUT1(n0_rx_bit_ctrl_out1),
        .RX_BIT_CTRL_OUT2(n0_rx_bit_ctrl_out2),
        .RX_BIT_CTRL_OUT3(n0_rx_bit_ctrl_out3),
        .RX_BIT_CTRL_OUT4(n0_rx_bit_ctrl_out4),
        .RX_BIT_CTRL_OUT5(n0_rx_bit_ctrl_out5),
        .RX_BIT_CTRL_OUT6({\BITSLICE_CTRL[0].bs_ctrl_inst_n_263 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_264 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_265 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_266 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_267 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_268 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_269 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_270 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_271 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_272 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_273 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_274 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_275 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_276 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_277 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_278 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_279 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_280 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_281 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_282 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_283 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_284 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_285 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_286 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_287 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_288 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_289 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_290 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_291 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_292 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_293 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_294 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_295 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_296 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_297 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_298 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_299 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_300 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_301 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_302 }),
        .TBYTE_IN(n0_tbyte_in),
        .TX_BIT_CTRL_IN0(tx_bs0_tx_bit_ctrl_out),
        .TX_BIT_CTRL_IN1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN2(tx_bs2_tx_bit_ctrl_out),
        .TX_BIT_CTRL_IN3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN4(tx_bs4_tx_bit_ctrl_out),
        .TX_BIT_CTRL_IN5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN_TRI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_OUT0(n0_tx_bit_ctrl_out0),
        .TX_BIT_CTRL_OUT1(n0_tx_bit_ctrl_out1),
        .TX_BIT_CTRL_OUT2(n0_tx_bit_ctrl_out2),
        .TX_BIT_CTRL_OUT3(n0_tx_bit_ctrl_out3),
        .TX_BIT_CTRL_OUT4(n0_tx_bit_ctrl_out4),
        .TX_BIT_CTRL_OUT5(n0_tx_bit_ctrl_out5),
        .TX_BIT_CTRL_OUT6({\BITSLICE_CTRL[0].bs_ctrl_inst_n_543 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_544 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_545 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_546 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_547 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_548 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_549 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_550 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_551 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_552 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_553 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_554 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_555 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_556 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_557 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_558 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_559 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_560 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_561 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_562 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_563 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_564 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_565 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_566 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_567 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_568 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_569 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_570 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_571 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_572 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_573 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_574 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_575 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_576 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_577 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_578 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_579 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_580 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_581 ,\BITSLICE_CTRL[0].bs_ctrl_inst_n_582 }),
        .TX_BIT_CTRL_OUT_TRI(n0_tx_bit_ctrl_out_tri),
        .VTC_RDY(n0_vtc_rdy_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BITSLICE_CONTROL #(
    .CTRL_CLK("EXTERNAL"),
    .DIV_MODE("DIV4"),
    .EN_CLK_TO_EXT_NORTH("DISABLE"),
    .EN_CLK_TO_EXT_SOUTH("DISABLE"),
    .EN_DYN_ODLY_MODE("FALSE"),
    .EN_OTHER_NCLK("FALSE"),
    .EN_OTHER_PCLK("FALSE"),
    .IDLY_VT_TRACK("TRUE"),
    .INV_RXCLK("FALSE"),
    .ODLY_VT_TRACK("TRUE"),
    .QDLY_VT_TRACK("TRUE"),
    .READ_IDLE_COUNT(6'h00),
    .REFCLK_SRC("PLLCLK"),
    .ROUNDING_FACTOR(16),
    .RXGATE_EXTEND("FALSE"),
    .RX_CLK_PHASE_N("SHIFT_0"),
    .RX_CLK_PHASE_P("SHIFT_0"),
    .RX_GATING("DISABLE"),
    .SELF_CALIBRATE("ENABLE"),
    .SERIAL_MODE("FALSE"),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_SPEEDUP("FAST"),
    .SIM_VERSION(2.000000),
    .TX_GATING("ENABLE")) 
    \BITSLICE_CTRL[1].bs_ctrl_inst 
       (.CLK_FROM_EXT(1'b1),
        .CLK_TO_EXT_NORTH(\NLW_BITSLICE_CTRL[1].bs_ctrl_inst_CLK_TO_EXT_NORTH_UNCONNECTED ),
        .CLK_TO_EXT_SOUTH(\NLW_BITSLICE_CTRL[1].bs_ctrl_inst_CLK_TO_EXT_SOUTH_UNCONNECTED ),
        .DLY_RDY(dly_rdy_bsc1),
        .DYN_DCI(\NLW_BITSLICE_CTRL[1].bs_ctrl_inst_DYN_DCI_UNCONNECTED [6:0]),
        .EN_VTC(n1_en_vtc_in),
        .NCLK_NIBBLE_IN(nclk_nibble_out[0]),
        .NCLK_NIBBLE_OUT(nclk_nibble_out[1]),
        .PCLK_NIBBLE_IN(pclk_nibble_out[0]),
        .PCLK_NIBBLE_OUT(pclk_nibble_out[1]),
        .PHY_RDCS0({1'b0,1'b0,1'b0,1'b0}),
        .PHY_RDCS1({1'b0,1'b0,1'b0,1'b0}),
        .PHY_RDEN({1'b0,1'b0,1'b0,1'b0}),
        .PHY_WRCS0({1'b0,1'b0,1'b0,1'b0}),
        .PHY_WRCS1({1'b0,1'b0,1'b0,1'b0}),
        .PLL_CLK(shared_pll0_clkoutphy_in),
        .REFCLK(1'b0),
        .RIU_ADDR(riu_addr_bg0),
        .RIU_CLK(riu_clk),
        .RIU_NIBBLE_SEL(riu_nibble_sel_bg0[1]),
        .RIU_RD_DATA(riu_rd_data_bg0_bs1),
        .RIU_VALID(riu_valid_bg0_bs1),
        .RIU_WR_DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,riu_nibble_sel_bg0}),
        .RIU_WR_EN(riu_wr_en_bg0),
        .RST(bsctrl_rst),
        .RX_BIT_CTRL_IN0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN2(tx_bs8_rx_bit_ctrl_out),
        .RX_BIT_CTRL_IN3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_OUT0(n1_rx_bit_ctrl_out0),
        .RX_BIT_CTRL_OUT1(n1_rx_bit_ctrl_out1),
        .RX_BIT_CTRL_OUT2(n1_rx_bit_ctrl_out2),
        .RX_BIT_CTRL_OUT3(n1_rx_bit_ctrl_out3),
        .RX_BIT_CTRL_OUT4(n1_rx_bit_ctrl_out4),
        .RX_BIT_CTRL_OUT5(n1_rx_bit_ctrl_out5),
        .RX_BIT_CTRL_OUT6(n1_rx_bit_ctrl_out6),
        .TBYTE_IN(n1_tbyte_in),
        .TX_BIT_CTRL_IN0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN2(tx_bs8_tx_bit_ctrl_out),
        .TX_BIT_CTRL_IN3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN_TRI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_OUT0(n1_tx_bit_ctrl_out0),
        .TX_BIT_CTRL_OUT1(n1_tx_bit_ctrl_out1),
        .TX_BIT_CTRL_OUT2(n1_tx_bit_ctrl_out2),
        .TX_BIT_CTRL_OUT3(n1_tx_bit_ctrl_out3),
        .TX_BIT_CTRL_OUT4(n1_tx_bit_ctrl_out4),
        .TX_BIT_CTRL_OUT5(n1_tx_bit_ctrl_out5),
        .TX_BIT_CTRL_OUT6(n1_tx_bit_ctrl_out6),
        .TX_BIT_CTRL_OUT_TRI(n1_tx_bit_ctrl_out_tri),
        .VTC_RDY(n1_vtc_rdy_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BITSLICE_CONTROL #(
    .CTRL_CLK("EXTERNAL"),
    .DIV_MODE("DIV4"),
    .EN_CLK_TO_EXT_NORTH("DISABLE"),
    .EN_CLK_TO_EXT_SOUTH("DISABLE"),
    .EN_DYN_ODLY_MODE("FALSE"),
    .EN_OTHER_NCLK("FALSE"),
    .EN_OTHER_PCLK("FALSE"),
    .IDLY_VT_TRACK("TRUE"),
    .INV_RXCLK("FALSE"),
    .ODLY_VT_TRACK("TRUE"),
    .QDLY_VT_TRACK("TRUE"),
    .READ_IDLE_COUNT(6'h00),
    .REFCLK_SRC("PLLCLK"),
    .ROUNDING_FACTOR(16),
    .RXGATE_EXTEND("FALSE"),
    .RX_CLK_PHASE_N("SHIFT_0"),
    .RX_CLK_PHASE_P("SHIFT_0"),
    .RX_GATING("DISABLE"),
    .SELF_CALIBRATE("ENABLE"),
    .SERIAL_MODE("FALSE"),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_SPEEDUP("FAST"),
    .SIM_VERSION(2.000000),
    .TX_GATING("ENABLE")) 
    \BITSLICE_CTRL[2].bs_ctrl_inst 
       (.CLK_FROM_EXT(1'b1),
        .CLK_TO_EXT_NORTH(\NLW_BITSLICE_CTRL[2].bs_ctrl_inst_CLK_TO_EXT_NORTH_UNCONNECTED ),
        .CLK_TO_EXT_SOUTH(\NLW_BITSLICE_CTRL[2].bs_ctrl_inst_CLK_TO_EXT_SOUTH_UNCONNECTED ),
        .DLY_RDY(dly_rdy_bsc2),
        .DYN_DCI(\NLW_BITSLICE_CTRL[2].bs_ctrl_inst_DYN_DCI_UNCONNECTED [6:0]),
        .EN_VTC(n2_en_vtc_in),
        .NCLK_NIBBLE_IN(1'b0),
        .NCLK_NIBBLE_OUT(\NLW_BITSLICE_CTRL[2].bs_ctrl_inst_NCLK_NIBBLE_OUT_UNCONNECTED ),
        .PCLK_NIBBLE_IN(1'b0),
        .PCLK_NIBBLE_OUT(\NLW_BITSLICE_CTRL[2].bs_ctrl_inst_PCLK_NIBBLE_OUT_UNCONNECTED ),
        .PHY_RDCS0({1'b0,1'b0,1'b0,1'b0}),
        .PHY_RDCS1({1'b0,1'b0,1'b0,1'b0}),
        .PHY_RDEN({1'b0,1'b0,1'b0,1'b0}),
        .PHY_WRCS0({1'b0,1'b0,1'b0,1'b0}),
        .PHY_WRCS1({1'b0,1'b0,1'b0,1'b0}),
        .PLL_CLK(shared_pll0_clkoutphy_in),
        .REFCLK(1'b0),
        .RIU_ADDR(riu_addr_bg1),
        .RIU_CLK(riu_clk),
        .RIU_NIBBLE_SEL(riu_nibble_sel_bg1),
        .RIU_RD_DATA(riu_rd_data_bg1_bs2),
        .RIU_VALID(riu_valid_bg1_bs2),
        .RIU_WR_DATA(riu_wr_data_bg1),
        .RIU_WR_EN(riu_wr_en_bg1),
        .RST(bsctrl_rst),
        .RX_BIT_CTRL_IN0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN2(tx_bs15_rx_bit_ctrl_out),
        .RX_BIT_CTRL_IN3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_IN6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RX_BIT_CTRL_OUT0(n2_rx_bit_ctrl_out0),
        .RX_BIT_CTRL_OUT1(n2_rx_bit_ctrl_out1),
        .RX_BIT_CTRL_OUT2(n2_rx_bit_ctrl_out2),
        .RX_BIT_CTRL_OUT3(n2_rx_bit_ctrl_out3),
        .RX_BIT_CTRL_OUT4(n2_rx_bit_ctrl_out4),
        .RX_BIT_CTRL_OUT5(n2_rx_bit_ctrl_out5),
        .RX_BIT_CTRL_OUT6({\BITSLICE_CTRL[2].bs_ctrl_inst_n_263 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_264 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_265 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_266 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_267 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_268 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_269 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_270 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_271 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_272 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_273 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_274 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_275 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_276 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_277 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_278 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_279 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_280 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_281 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_282 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_283 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_284 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_285 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_286 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_287 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_288 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_289 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_290 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_291 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_292 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_293 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_294 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_295 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_296 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_297 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_298 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_299 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_300 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_301 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_302 }),
        .TBYTE_IN(n2_tbyte_in),
        .TX_BIT_CTRL_IN0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN2(tx_bs15_tx_bit_ctrl_out),
        .TX_BIT_CTRL_IN3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_IN_TRI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX_BIT_CTRL_OUT0(n2_tx_bit_ctrl_out0),
        .TX_BIT_CTRL_OUT1(n2_tx_bit_ctrl_out1),
        .TX_BIT_CTRL_OUT2(n2_tx_bit_ctrl_out2),
        .TX_BIT_CTRL_OUT3(n2_tx_bit_ctrl_out3),
        .TX_BIT_CTRL_OUT4(n2_tx_bit_ctrl_out4),
        .TX_BIT_CTRL_OUT5(n2_tx_bit_ctrl_out5),
        .TX_BIT_CTRL_OUT6({\BITSLICE_CTRL[2].bs_ctrl_inst_n_543 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_544 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_545 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_546 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_547 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_548 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_549 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_550 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_551 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_552 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_553 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_554 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_555 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_556 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_557 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_558 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_559 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_560 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_561 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_562 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_563 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_564 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_565 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_566 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_567 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_568 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_569 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_570 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_571 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_572 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_573 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_574 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_575 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_576 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_577 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_578 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_579 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_580 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_581 ,\BITSLICE_CTRL[2].bs_ctrl_inst_n_582 }),
        .TX_BIT_CTRL_OUT_TRI(n2_tx_bit_ctrl_out_tri),
        .VTC_RDY(n2_vtc_rdy_out));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \CORE_RDY_GEN[0].core_rdy_r[0]_i_1 
       (.I0(dly_rdy_bsc0),
        .I1(dly_rdy_bsc1),
        .I2(dly_rdy_bsc2),
        .I3(n0_vtc_rdy_out),
        .I4(n1_vtc_rdy_out),
        .I5(n2_vtc_rdy_out),
        .O(core_rdy));
  LUT3 #(
    .INIT(8'h7F)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[8]_i_2 
       (.I0(n2_vtc_rdy_out),
        .I1(n1_vtc_rdy_out),
        .I2(n0_vtc_rdy_out),
        .O(clkoutphy_in));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_7 
       (.I0(Q),
        .I1(n0_vtc_rdy_out),
        .I2(n1_vtc_rdy_out),
        .I3(n2_vtc_rdy_out),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'h80FF)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_9 
       (.I0(n0_vtc_rdy_out),
        .I1(n1_vtc_rdy_out),
        .I2(n2_vtc_rdy_out),
        .I3(Q),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  RIU_OR #(
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_VERSION(2.000000)) 
    \RIU_OR[0].riu_or_inst 
       (.RIU_RD_DATA(riu_rd_data_bg0),
        .RIU_RD_DATA_LOW(riu_rd_data_bg0_bs0),
        .RIU_RD_DATA_UPP(riu_rd_data_bg0_bs1),
        .RIU_RD_VALID(riu_valid_bg0),
        .RIU_RD_VALID_LOW(riu_valid_bg0_bs0),
        .RIU_RD_VALID_UPP(riu_valid_bg0_bs1));
  LUT3 #(
    .INIT(8'h80)) 
    src_data_inferred_i_1
       (.I0(dly_rdy_bsc2),
        .I1(dly_rdy_bsc1),
        .I2(dly_rdy_bsc0),
        .O(in0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_bs_top" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_bs_top
   (bs_to_buf_data_in,
    hs_tx_t,
    tx_bs0_rx_bit_ctrl_out,
    tx_bs0_tx_bit_ctrl_out,
    tx_bs2_rx_bit_ctrl_out,
    tx_bs2_tx_bit_ctrl_out,
    tx_bs4_rx_bit_ctrl_out,
    tx_bs4_tx_bit_ctrl_out,
    tx_bs8_rx_bit_ctrl_out,
    tx_bs8_tx_bit_ctrl_out,
    tx_bs15_rx_bit_ctrl_out,
    tx_bs15_tx_bit_ctrl_out,
    tx_bs_rst_in,
    tx_bs_rst_dly_in,
    tri_t_0,
    tx_bs0_rx_bit_ctrl_in,
    tx_bs0_tx_bit_ctrl_in,
    data_from_fabric_data_txp0,
    tri_t_2,
    tx_bs2_rx_bit_ctrl_in,
    tx_bs2_tx_bit_ctrl_in,
    data_from_fabric_data_txp2,
    tri_t_4,
    tx_bs4_rx_bit_ctrl_in,
    tx_bs4_tx_bit_ctrl_in,
    data_from_fabric_data_txp1,
    tri_t_8,
    tx_bs8_rx_bit_ctrl_in,
    tx_bs8_tx_bit_ctrl_in,
    data_from_fabric_data_txp3,
    tri_t_15,
    tx_bs15_rx_bit_ctrl_in,
    tx_bs15_tx_bit_ctrl_in,
    data_from_fabric_clk_txp);
  output [4:0]bs_to_buf_data_in;
  output [4:0]hs_tx_t;
  output [39:0]tx_bs0_rx_bit_ctrl_out;
  output [39:0]tx_bs0_tx_bit_ctrl_out;
  output [39:0]tx_bs2_rx_bit_ctrl_out;
  output [39:0]tx_bs2_tx_bit_ctrl_out;
  output [39:0]tx_bs4_rx_bit_ctrl_out;
  output [39:0]tx_bs4_tx_bit_ctrl_out;
  output [39:0]tx_bs8_rx_bit_ctrl_out;
  output [39:0]tx_bs8_tx_bit_ctrl_out;
  output [39:0]tx_bs15_rx_bit_ctrl_out;
  output [39:0]tx_bs15_tx_bit_ctrl_out;
  input [4:0]tx_bs_rst_in;
  input [4:0]tx_bs_rst_dly_in;
  input tri_t_0;
  input [39:0]tx_bs0_rx_bit_ctrl_in;
  input [39:0]tx_bs0_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp0;
  input tri_t_2;
  input [39:0]tx_bs2_rx_bit_ctrl_in;
  input [39:0]tx_bs2_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp2;
  input tri_t_4;
  input [39:0]tx_bs4_rx_bit_ctrl_in;
  input [39:0]tx_bs4_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp1;
  input tri_t_8;
  input [39:0]tx_bs8_rx_bit_ctrl_in;
  input [39:0]tx_bs8_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp3;
  input tri_t_15;
  input [39:0]tx_bs15_rx_bit_ctrl_in;
  input [39:0]tx_bs15_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_clk_txp;

  wire [4:0]bs_to_buf_data_in;
  wire [7:0]data_from_fabric_clk_txp;
  wire [7:0]data_from_fabric_data_txp0;
  wire [7:0]data_from_fabric_data_txp1;
  wire [7:0]data_from_fabric_data_txp2;
  wire [7:0]data_from_fabric_data_txp3;
  wire [4:0]hs_tx_t;
  wire tri_t_0;
  wire tri_t_15;
  wire tri_t_2;
  wire tri_t_4;
  wire tri_t_8;
  wire [39:0]tx_bs0_rx_bit_ctrl_in;
  wire [39:0]tx_bs0_rx_bit_ctrl_out;
  wire [39:0]tx_bs0_tx_bit_ctrl_in;
  wire [39:0]tx_bs0_tx_bit_ctrl_out;
  wire [39:0]tx_bs15_rx_bit_ctrl_in;
  wire [39:0]tx_bs15_rx_bit_ctrl_out;
  wire [39:0]tx_bs15_tx_bit_ctrl_in;
  wire [39:0]tx_bs15_tx_bit_ctrl_out;
  wire [39:0]tx_bs2_rx_bit_ctrl_in;
  wire [39:0]tx_bs2_rx_bit_ctrl_out;
  wire [39:0]tx_bs2_tx_bit_ctrl_in;
  wire [39:0]tx_bs2_tx_bit_ctrl_out;
  wire [39:0]tx_bs4_rx_bit_ctrl_in;
  wire [39:0]tx_bs4_rx_bit_ctrl_out;
  wire [39:0]tx_bs4_tx_bit_ctrl_in;
  wire [39:0]tx_bs4_tx_bit_ctrl_out;
  wire [39:0]tx_bs8_rx_bit_ctrl_in;
  wire [39:0]tx_bs8_rx_bit_ctrl_out;
  wire [39:0]tx_bs8_tx_bit_ctrl_in;
  wire [39:0]tx_bs8_tx_bit_ctrl_out;
  wire [4:0]tx_bs_rst_dly_in;
  wire [4:0]tx_bs_rst_in;

  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_tx_bs u_tx_bs
       (.bs_to_buf_data_in(bs_to_buf_data_in),
        .data_from_fabric_clk_txp(data_from_fabric_clk_txp),
        .data_from_fabric_data_txp0(data_from_fabric_data_txp0),
        .data_from_fabric_data_txp1(data_from_fabric_data_txp1),
        .data_from_fabric_data_txp2(data_from_fabric_data_txp2),
        .data_from_fabric_data_txp3(data_from_fabric_data_txp3),
        .hs_tx_t(hs_tx_t),
        .tri_t_0(tri_t_0),
        .tri_t_15(tri_t_15),
        .tri_t_2(tri_t_2),
        .tri_t_4(tri_t_4),
        .tri_t_8(tri_t_8),
        .tx_bs0_rx_bit_ctrl_in(tx_bs0_rx_bit_ctrl_in),
        .tx_bs0_rx_bit_ctrl_out(tx_bs0_rx_bit_ctrl_out),
        .tx_bs0_tx_bit_ctrl_in(tx_bs0_tx_bit_ctrl_in),
        .tx_bs0_tx_bit_ctrl_out(tx_bs0_tx_bit_ctrl_out),
        .tx_bs15_rx_bit_ctrl_in(tx_bs15_rx_bit_ctrl_in),
        .tx_bs15_rx_bit_ctrl_out(tx_bs15_rx_bit_ctrl_out),
        .tx_bs15_tx_bit_ctrl_in(tx_bs15_tx_bit_ctrl_in),
        .tx_bs15_tx_bit_ctrl_out(tx_bs15_tx_bit_ctrl_out),
        .tx_bs2_rx_bit_ctrl_in(tx_bs2_rx_bit_ctrl_in),
        .tx_bs2_rx_bit_ctrl_out(tx_bs2_rx_bit_ctrl_out),
        .tx_bs2_tx_bit_ctrl_in(tx_bs2_tx_bit_ctrl_in),
        .tx_bs2_tx_bit_ctrl_out(tx_bs2_tx_bit_ctrl_out),
        .tx_bs4_rx_bit_ctrl_in(tx_bs4_rx_bit_ctrl_in),
        .tx_bs4_rx_bit_ctrl_out(tx_bs4_rx_bit_ctrl_out),
        .tx_bs4_tx_bit_ctrl_in(tx_bs4_tx_bit_ctrl_in),
        .tx_bs4_tx_bit_ctrl_out(tx_bs4_tx_bit_ctrl_out),
        .tx_bs8_rx_bit_ctrl_in(tx_bs8_rx_bit_ctrl_in),
        .tx_bs8_rx_bit_ctrl_out(tx_bs8_rx_bit_ctrl_out),
        .tx_bs8_tx_bit_ctrl_in(tx_bs8_tx_bit_ctrl_in),
        .tx_bs8_tx_bit_ctrl_out(tx_bs8_tx_bit_ctrl_out),
        .tx_bs_rst_dly_in(tx_bs_rst_dly_in),
        .tx_bs_rst_in(tx_bs_rst_in));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_clk_rst_top" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_clk_rst_top
   (out,
    \bs_rst_int_r_reg[15] ,
    bsctrl_rst,
    Q,
    rst_seq_done1,
    n0_en_vtc_in,
    n1_en_vtc_in,
    n2_en_vtc_in,
    shared_pll0_locked_in,
    rst,
    bs_rst_dphy_in,
    multi_intf_lock_in,
    in0,
    riu_clk,
    shared_pll0_clkout0_in,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ,
    n0_vtc_rdy_out,
    n1_vtc_rdy_out,
    n2_vtc_rdy_out,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ,
    en_vtc_bsc0,
    en_vtc_bsc1,
    en_vtc_bsc2);
  output [4:0]out;
  output [4:0]\bs_rst_int_r_reg[15] ;
  output bsctrl_rst;
  output [0:0]Q;
  output rst_seq_done1;
  output n0_en_vtc_in;
  output n1_en_vtc_in;
  output n2_en_vtc_in;
  input shared_pll0_locked_in;
  input rst;
  input bs_rst_dphy_in;
  input multi_intf_lock_in;
  input [0:0]in0;
  input riu_clk;
  input shared_pll0_clkout0_in;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ;
  input n0_vtc_rdy_out;
  input n1_vtc_rdy_out;
  input n2_vtc_rdy_out;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ;
  input en_vtc_bsc0;
  input en_vtc_bsc1;
  input en_vtc_bsc2;

  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ;
  wire [0:0]Q;
  wire bs_rst_dphy_in;
  wire [4:0]\bs_rst_int_r_reg[15] ;
  wire bsctrl_rst;
  wire en_vtc_bsc0;
  wire en_vtc_bsc1;
  wire en_vtc_bsc2;
  wire [0:0]in0;
  wire multi_intf_lock_in;
  wire n0_en_vtc_in;
  wire n0_vtc_rdy_out;
  wire n1_en_vtc_in;
  wire n1_vtc_rdy_out;
  wire n2_en_vtc_in;
  wire n2_vtc_rdy_out;
  wire [4:0]out;
  wire riu_clk;
  wire rst;
  wire rst_seq_done1;
  wire shared_pll0_clkout0_in;
  wire shared_pll0_locked_in;

  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_rst_scheme rst_scheme_inst
       (.\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 (bsctrl_rst),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 (\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ),
        .\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 (rst_seq_done1),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 (\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 (\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ),
        .Q(Q),
        .bs_rst_dphy_in(bs_rst_dphy_in),
        .\bs_rst_int_r_reg[15]_0 (\bs_rst_int_r_reg[15] ),
        .en_vtc_bsc0(en_vtc_bsc0),
        .en_vtc_bsc1(en_vtc_bsc1),
        .en_vtc_bsc2(en_vtc_bsc2),
        .in0(in0),
        .multi_intf_lock_in(multi_intf_lock_in),
        .n0_en_vtc_in(n0_en_vtc_in),
        .n0_vtc_rdy_out(n0_vtc_rdy_out),
        .n1_en_vtc_in(n1_en_vtc_in),
        .n1_vtc_rdy_out(n1_vtc_rdy_out),
        .n2_en_vtc_in(n2_en_vtc_in),
        .n2_vtc_rdy_out(n2_vtc_rdy_out),
        .out(out),
        .riu_clk(riu_clk),
        .rst(rst),
        .shared_pll0_clkout0_in(shared_pll0_clkout0_in),
        .shared_pll0_locked_in(shared_pll0_locked_in));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_rst_scheme" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_rst_scheme
   (out,
    \bs_rst_int_r_reg[15]_0 ,
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ,
    Q,
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ,
    n0_en_vtc_in,
    n1_en_vtc_in,
    n2_en_vtc_in,
    shared_pll0_locked_in,
    rst,
    bs_rst_dphy_in,
    multi_intf_lock_in,
    in0,
    riu_clk,
    shared_pll0_clkout0_in,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ,
    n0_vtc_rdy_out,
    n1_vtc_rdy_out,
    n2_vtc_rdy_out,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ,
    en_vtc_bsc0,
    en_vtc_bsc1,
    en_vtc_bsc2);
  output [4:0]out;
  output [4:0]\bs_rst_int_r_reg[15]_0 ;
  output \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ;
  output [0:0]Q;
  output \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ;
  output n0_en_vtc_in;
  output n1_en_vtc_in;
  output n2_en_vtc_in;
  input shared_pll0_locked_in;
  input rst;
  input bs_rst_dphy_in;
  input multi_intf_lock_in;
  input [0:0]in0;
  input riu_clk;
  input shared_pll0_clkout0_in;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ;
  input n0_vtc_rdy_out;
  input n1_vtc_rdy_out;
  input n2_vtc_rdy_out;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ;
  input en_vtc_bsc0;
  input en_vtc_bsc1;
  input en_vtc_bsc2;

  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_3_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_4_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_5_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_6_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_7_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_8_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_3_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_4_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_5_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_7_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_3_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_5_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_8_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ;
  wire [0:0]Q;
  wire all_bsc_dly_rdy;
  wire bs_dly_rst;
  (* RTL_KEEP = "true" *) wire [51:0]bs_dly_rst_r;
  wire bs_rst_dphy_in;
  wire bs_rst_dphy_sync;
  (* RTL_KEEP = "true" *) wire [51:0]bs_rst_int_r;
  (* RTL_KEEP = "true" *) wire [51:0]bs_rst_r;
  wire bsc_en_vtc;
  wire bsc_en_vtc_1;
  wire en_vtc_bsc0;
  wire en_vtc_bsc1;
  wire en_vtc_bsc2;
  wire [8:0]hssio_state;
  wire \hssio_state_inferred__3/i___0_n_0 ;
  wire \hssio_state_inferred__3/i___1_n_0 ;
  wire \hssio_state_inferred__3/i___2_n_0 ;
  wire \hssio_state_inferred__3/i___3_n_0 ;
  wire \hssio_state_inferred__3/i__n_0 ;
  wire [0:0]in0;
  wire locked;
  wire multi_intf_lock_in;
  wire n0_en_vtc_in;
  wire n0_vtc_rdy_out;
  wire n1_en_vtc_in;
  wire n1_vtc_rdy_out;
  wire n2_en_vtc_in;
  wire n2_vtc_rdy_out;
  wire [6:0]p_0_in;
  wire [8:0]p_0_in_0;
  wire \pll0_fab_clk_cntr[6]_i_3_n_0 ;
  wire \pll0_fab_clk_cntr[6]_i_4_n_0 ;
  wire [6:6]pll0_fab_clk_cntr_reg;
  wire [5:0]pll0_fab_clk_cntr_reg__0;
  wire riu_clk;
  wire rst;
  wire rst_in_sync;
  wire rst_seq_done;
  wire shared_pll0_clkout0_in;
  wire shared_pll0_locked_in;
  wire sync_cell_dly_rdy_inst_n_2;
  wire sync_cell_dly_rdy_inst_n_3;
  wire sync_cell_pll0lock_inst_n_7;
  wire sync_cell_pll0lock_inst_n_8;
  wire sync_cell_pll0lock_inst_n_9;
  wire sync_cell_start_fab_cntr_pll0_inst_n_0;
  wire sync_cell_wait_pll0_fab_timeout_inst_n_2;
  wire sync_cell_wait_pll0_fab_timeout_inst_n_3;
  wire timeout_cntr;
  wire \timeout_cntr[0]_i_3_n_0 ;
  wire \timeout_cntr[0]_i_4_n_0 ;
  wire \timeout_cntr[0]_i_5_n_0 ;
  wire \timeout_cntr[0]_i_6_n_0 ;
  wire [19:0]timeout_cntr_reg;
  wire \timeout_cntr_reg[0]_i_2_n_0 ;
  wire \timeout_cntr_reg[0]_i_2_n_1 ;
  wire \timeout_cntr_reg[0]_i_2_n_10 ;
  wire \timeout_cntr_reg[0]_i_2_n_11 ;
  wire \timeout_cntr_reg[0]_i_2_n_12 ;
  wire \timeout_cntr_reg[0]_i_2_n_13 ;
  wire \timeout_cntr_reg[0]_i_2_n_14 ;
  wire \timeout_cntr_reg[0]_i_2_n_15 ;
  wire \timeout_cntr_reg[0]_i_2_n_2 ;
  wire \timeout_cntr_reg[0]_i_2_n_3 ;
  wire \timeout_cntr_reg[0]_i_2_n_4 ;
  wire \timeout_cntr_reg[0]_i_2_n_5 ;
  wire \timeout_cntr_reg[0]_i_2_n_6 ;
  wire \timeout_cntr_reg[0]_i_2_n_7 ;
  wire \timeout_cntr_reg[0]_i_2_n_8 ;
  wire \timeout_cntr_reg[0]_i_2_n_9 ;
  wire \timeout_cntr_reg[16]_i_1_n_12 ;
  wire \timeout_cntr_reg[16]_i_1_n_13 ;
  wire \timeout_cntr_reg[16]_i_1_n_14 ;
  wire \timeout_cntr_reg[16]_i_1_n_15 ;
  wire \timeout_cntr_reg[16]_i_1_n_5 ;
  wire \timeout_cntr_reg[16]_i_1_n_6 ;
  wire \timeout_cntr_reg[16]_i_1_n_7 ;
  wire \timeout_cntr_reg[8]_i_1_n_0 ;
  wire \timeout_cntr_reg[8]_i_1_n_1 ;
  wire \timeout_cntr_reg[8]_i_1_n_10 ;
  wire \timeout_cntr_reg[8]_i_1_n_11 ;
  wire \timeout_cntr_reg[8]_i_1_n_12 ;
  wire \timeout_cntr_reg[8]_i_1_n_13 ;
  wire \timeout_cntr_reg[8]_i_1_n_14 ;
  wire \timeout_cntr_reg[8]_i_1_n_15 ;
  wire \timeout_cntr_reg[8]_i_1_n_2 ;
  wire \timeout_cntr_reg[8]_i_1_n_3 ;
  wire \timeout_cntr_reg[8]_i_1_n_4 ;
  wire \timeout_cntr_reg[8]_i_1_n_5 ;
  wire \timeout_cntr_reg[8]_i_1_n_6 ;
  wire \timeout_cntr_reg[8]_i_1_n_7 ;
  wire \timeout_cntr_reg[8]_i_1_n_8 ;
  wire \timeout_cntr_reg[8]_i_1_n_9 ;
  wire timeout_cntr_rst;
  wire wait_pll0_x_fab_clk_timeout;
  wire wait_pll0_x_fab_clk_timeout_sync;
  wire wait_pll_lock_timeout_i_1_n_0;
  wire wait_pll_lock_timeout_i_2_n_0;
  wire wait_pll_lock_timeout_i_3_n_0;
  wire wait_pll_lock_timeout_i_4_n_0;
  wire wait_pll_lock_timeout_i_5_n_0;
  wire wait_pll_lock_timeout_i_6_n_0;
  wire wait_pll_lock_timeout_i_7_n_0;
  wire wait_pll_lock_timeout_reg_n_0;
  wire [7:3]\NLW_timeout_cntr_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:4]\NLW_timeout_cntr_reg[16]_i_1_O_UNCONNECTED ;

  assign \bs_rst_int_r_reg[15]_0 [4] = bs_rst_int_r[15];
  assign \bs_rst_int_r_reg[15]_0 [3] = bs_rst_int_r[8];
  assign \bs_rst_int_r_reg[15]_0 [2] = bs_rst_int_r[4];
  assign \bs_rst_int_r_reg[15]_0 [1] = bs_rst_int_r[2];
  assign \bs_rst_int_r_reg[15]_0 [0] = bs_rst_int_r[0];
  assign out[4] = bs_dly_rst_r[15];
  assign out[3] = bs_dly_rst_r[8];
  assign out[2] = bs_dly_rst_r[4];
  assign out[1] = bs_dly_rst_r[2];
  assign out[0] = bs_dly_rst_r[0];
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \BITSLICE_CTRL[0].bs_ctrl_inst_i_1 
       (.I0(en_vtc_bsc0),
        .I1(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ),
        .I2(bsc_en_vtc),
        .O(n0_en_vtc_in));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \BITSLICE_CTRL[1].bs_ctrl_inst_i_1 
       (.I0(en_vtc_bsc1),
        .I1(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ),
        .I2(bsc_en_vtc),
        .O(n1_en_vtc_in));
  LUT3 #(
    .INIT(8'hB8)) 
    \BITSLICE_CTRL[2].bs_ctrl_inst_i_1 
       (.I0(en_vtc_bsc2),
        .I1(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ),
        .I2(bsc_en_vtc),
        .O(n2_en_vtc_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_2 
       (.I0(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ),
        .I1(hssio_state[8]),
        .I2(hssio_state[3]),
        .I3(hssio_state[5]),
        .I4(Q),
        .I5(hssio_state[0]),
        .O(bs_dly_rst));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'hFFFEFEE0)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_3 
       (.I0(hssio_state[5]),
        .I1(Q),
        .I2(hssio_state[3]),
        .I3(hssio_state[8]),
        .I4(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ),
        .O(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFEEEEEEFFEEEEEF)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_4 
       (.I0(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_5_n_0 ),
        .I1(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_7_n_0 ),
        .I2(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_6_n_0 ),
        .I3(hssio_state[1]),
        .I4(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_7_n_0 ),
        .I5(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_8_n_0 ),
        .O(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_5 
       (.I0(hssio_state[2]),
        .I1(bsc_en_vtc_1),
        .I2(hssio_state[4]),
        .O(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_6 
       (.I0(hssio_state[3]),
        .I1(hssio_state[8]),
        .O(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_7 
       (.I0(bsc_en_vtc_1),
        .I1(hssio_state[4]),
        .I2(hssio_state[2]),
        .O(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_8 
       (.I0(hssio_state[5]),
        .I1(Q),
        .O(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_8_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_cell_pll0lock_inst_n_9),
        .Q(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .S(rst_in_sync));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_cell_dly_rdy_inst_n_3),
        .Q(bsc_en_vtc),
        .R(rst_in_sync));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_3 
       (.I0(Q),
        .I1(hssio_state[5]),
        .I2(hssio_state[8]),
        .I3(hssio_state[3]),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[1]_i_1 
       (.I0(\hssio_state_inferred__3/i___3_n_0 ),
        .I1(hssio_state[0]),
        .O(p_0_in_0[1]));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[0]),
        .Q(hssio_state[0]),
        .S(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[1] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[1]),
        .Q(hssio_state[1]),
        .R(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[2] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[2]),
        .Q(hssio_state[2]),
        .R(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[3] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[3]),
        .Q(hssio_state[3]),
        .R(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[4]),
        .Q(hssio_state[4]),
        .R(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[5]),
        .Q(hssio_state[5]),
        .R(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[6]),
        .Q(bsc_en_vtc_1),
        .R(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[7]),
        .Q(Q),
        .R(rst_in_sync));
  (* FSM_ENCODED_STATES = "WAIT_FOR_PLL_LOCK:000000100,WAIT_FOR_BSC_VTC_RDY:010000000,ASSERT_BSC_EN_VTC:001000000,DEASSERT_PLL_RESET:000000010,ASSERT_PLL_CLKOUTPHYEN:000010000,ASSERT_ALL_RESETS:000000001,WAIT_FOR_BSC_DLY_RDY:000100000,DEASSERT_BS_RESETS:000001000,RESET_SEQ_DONE:100000000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(p_0_in_0[8]),
        .Q(hssio_state[8]),
        .R(rst_in_sync));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_2 
       (.I0(Q),
        .I1(hssio_state[5]),
        .I2(hssio_state[3]),
        .I3(hssio_state[8]),
        .I4(hssio_state[0]),
        .I5(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ),
        .O(rst_seq_done));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_4 
       (.I0(Q),
        .I1(hssio_state[5]),
        .I2(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ),
        .I3(hssio_state[3]),
        .I4(hssio_state[8]),
        .O(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT5 #(
    .INIT(32'hFFFEFEEA)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_5 
       (.I0(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_7_n_0 ),
        .I1(hssio_state[1]),
        .I2(hssio_state[4]),
        .I3(bsc_en_vtc_1),
        .I4(hssio_state[2]),
        .O(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6 
       (.I0(hssio_state[2]),
        .I1(hssio_state[4]),
        .I2(bsc_en_vtc_1),
        .I3(hssio_state[1]),
        .O(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_7 
       (.I0(Q),
        .I1(hssio_state[5]),
        .I2(hssio_state[0]),
        .O(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_cell_pll0lock_inst_n_8),
        .Q(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ),
        .R(rst_in_sync));
  FDRE \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_cell_wait_pll0_fab_timeout_inst_n_3),
        .Q(\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_n_0 ),
        .R(rst_in_sync));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEEA)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_3 
       (.I0(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ),
        .I1(hssio_state[2]),
        .I2(bsc_en_vtc_1),
        .I3(hssio_state[4]),
        .I4(hssio_state[1]),
        .I5(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_7_n_0 ),
        .O(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEA)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_5 
       (.I0(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_8_n_0 ),
        .I1(Q),
        .I2(hssio_state[5]),
        .I3(hssio_state[0]),
        .I4(hssio_state[1]),
        .I5(hssio_state[8]),
        .O(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFE01)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_8 
       (.I0(Q),
        .I1(hssio_state[5]),
        .I2(hssio_state[3]),
        .I3(hssio_state[4]),
        .I4(bsc_en_vtc_1),
        .I5(hssio_state[2]),
        .O(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_8_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_cell_dly_rdy_inst_n_2),
        .Q(timeout_cntr_rst),
        .S(rst_in_sync));
  FDRE \bs_rst_gen[0].bs_dly_rst_r_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[0].bs_rst_r_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[10].bs_dly_rst_r_reg[10] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[10]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[10].bs_rst_r_reg[10] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[10]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[11].bs_dly_rst_r_reg[11] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[11]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[11].bs_rst_r_reg[11] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[11]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[12].bs_dly_rst_r_reg[12] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[12]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[12].bs_rst_r_reg[12] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[12]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[13].bs_dly_rst_r_reg[13] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[13]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[13].bs_rst_r_reg[13] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[13]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[14].bs_dly_rst_r_reg[14] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[14]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[14].bs_rst_r_reg[14] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[14]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[15].bs_dly_rst_r_reg[15] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[15]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[15].bs_rst_r_reg[15] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[15]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[16].bs_dly_rst_r_reg[16] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[16]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[16].bs_rst_r_reg[16] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[16]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[17].bs_dly_rst_r_reg[17] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[17]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[17].bs_rst_r_reg[17] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[17]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[18].bs_dly_rst_r_reg[18] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[18]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[18].bs_rst_r_reg[18] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[18]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[19].bs_dly_rst_r_reg[19] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[19]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[19].bs_rst_r_reg[19] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[19]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[1].bs_dly_rst_r_reg[1] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[1].bs_rst_r_reg[1] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[20].bs_dly_rst_r_reg[20] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[20]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[20].bs_rst_r_reg[20] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[20]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[21].bs_dly_rst_r_reg[21] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[21]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[21].bs_rst_r_reg[21] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[21]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[22].bs_dly_rst_r_reg[22] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[22]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[22].bs_rst_r_reg[22] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[22]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[23].bs_dly_rst_r_reg[23] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[23]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[23].bs_rst_r_reg[23] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[23]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[24].bs_dly_rst_r_reg[24] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[24]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[24].bs_rst_r_reg[24] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[24]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[25].bs_dly_rst_r_reg[25] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[25]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[25].bs_rst_r_reg[25] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[25]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[26].bs_dly_rst_r_reg[26] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[26]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[26].bs_rst_r_reg[26] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[26]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[27].bs_dly_rst_r_reg[27] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[27]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[27].bs_rst_r_reg[27] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[27]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[28].bs_dly_rst_r_reg[28] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[28]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[28].bs_rst_r_reg[28] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[28]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[29].bs_dly_rst_r_reg[29] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[29]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[29].bs_rst_r_reg[29] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[29]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[2].bs_dly_rst_r_reg[2] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[2]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[2].bs_rst_r_reg[2] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[2]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[30].bs_dly_rst_r_reg[30] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[30]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[30].bs_rst_r_reg[30] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[30]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[31].bs_dly_rst_r_reg[31] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[31]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[31].bs_rst_r_reg[31] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[31]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[32].bs_dly_rst_r_reg[32] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[32]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[32].bs_rst_r_reg[32] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[32]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[33].bs_dly_rst_r_reg[33] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[33]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[33].bs_rst_r_reg[33] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[33]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[34].bs_dly_rst_r_reg[34] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[34]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[34].bs_rst_r_reg[34] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[34]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[35].bs_dly_rst_r_reg[35] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[35]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[35].bs_rst_r_reg[35] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[35]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[36].bs_dly_rst_r_reg[36] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[36]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[36].bs_rst_r_reg[36] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[36]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[37].bs_dly_rst_r_reg[37] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[37]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[37].bs_rst_r_reg[37] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[37]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[38].bs_dly_rst_r_reg[38] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[38]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[38].bs_rst_r_reg[38] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[38]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[39].bs_dly_rst_r_reg[39] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[39]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[39].bs_rst_r_reg[39] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[39]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[3].bs_dly_rst_r_reg[3] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[3]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[3].bs_rst_r_reg[3] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[3]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[40].bs_dly_rst_r_reg[40] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[40]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[40].bs_rst_r_reg[40] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[40]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[41].bs_dly_rst_r_reg[41] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[41]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[41].bs_rst_r_reg[41] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[41]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[42].bs_dly_rst_r_reg[42] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[42]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[42].bs_rst_r_reg[42] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[42]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[43].bs_dly_rst_r_reg[43] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[43]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[43].bs_rst_r_reg[43] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[43]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[44].bs_dly_rst_r_reg[44] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[44]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[44].bs_rst_r_reg[44] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[44]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[45].bs_dly_rst_r_reg[45] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[45]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[45].bs_rst_r_reg[45] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[45]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[46].bs_dly_rst_r_reg[46] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[46]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[46].bs_rst_r_reg[46] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[46]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[47].bs_dly_rst_r_reg[47] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[47]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[47].bs_rst_r_reg[47] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[47]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[48].bs_dly_rst_r_reg[48] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[48]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[48].bs_rst_r_reg[48] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[48]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[49].bs_dly_rst_r_reg[49] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[49]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[49].bs_rst_r_reg[49] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[49]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[4].bs_dly_rst_r_reg[4] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[4]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[4].bs_rst_r_reg[4] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[4]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[50].bs_dly_rst_r_reg[50] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[50]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[50].bs_rst_r_reg[50] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[50]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[51].bs_dly_rst_r_reg[51] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[51]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[51].bs_rst_r_reg[51] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[51]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[5].bs_dly_rst_r_reg[5] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[5]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[5].bs_rst_r_reg[5] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[5]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[6].bs_dly_rst_r_reg[6] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[6]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[6].bs_rst_r_reg[6] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[6]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[7].bs_dly_rst_r_reg[7] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[7]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[7].bs_rst_r_reg[7] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[7]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[8].bs_dly_rst_r_reg[8] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[8]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[8].bs_rst_r_reg[8] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[8]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[9].bs_dly_rst_r_reg[9] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_dly_rst_r[9]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \bs_rst_gen[9].bs_rst_r_reg[9] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .Q(bs_rst_r[9]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[0]),
        .Q(bs_rst_int_r[0]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[10] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[10]),
        .Q(bs_rst_int_r[10]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[11] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[11]),
        .Q(bs_rst_int_r[11]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[12] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[12]),
        .Q(bs_rst_int_r[12]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[13] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[13]),
        .Q(bs_rst_int_r[13]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[14] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[14]),
        .Q(bs_rst_int_r[14]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[15] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[15]),
        .Q(bs_rst_int_r[15]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[16] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[16]),
        .Q(bs_rst_int_r[16]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[17] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[17]),
        .Q(bs_rst_int_r[17]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[18] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[18]),
        .Q(bs_rst_int_r[18]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[19] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[19]),
        .Q(bs_rst_int_r[19]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[1] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[1]),
        .Q(bs_rst_int_r[1]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[20] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[20]),
        .Q(bs_rst_int_r[20]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[21] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[21]),
        .Q(bs_rst_int_r[21]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[22] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[22]),
        .Q(bs_rst_int_r[22]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[23] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[23]),
        .Q(bs_rst_int_r[23]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[24] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[24]),
        .Q(bs_rst_int_r[24]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[25] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[25]),
        .Q(bs_rst_int_r[25]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[26] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[26]),
        .Q(bs_rst_int_r[26]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[27] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[27]),
        .Q(bs_rst_int_r[27]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[28] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[28]),
        .Q(bs_rst_int_r[28]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[29] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[29]),
        .Q(bs_rst_int_r[29]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[2] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[2]),
        .Q(bs_rst_int_r[2]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[30] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[30]),
        .Q(bs_rst_int_r[30]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[31] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[31]),
        .Q(bs_rst_int_r[31]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[32] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[32]),
        .Q(bs_rst_int_r[32]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[33] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[33]),
        .Q(bs_rst_int_r[33]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[34] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[34]),
        .Q(bs_rst_int_r[34]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[35] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[35]),
        .Q(bs_rst_int_r[35]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[36] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[36]),
        .Q(bs_rst_int_r[36]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[37] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[37]),
        .Q(bs_rst_int_r[37]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[38] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[38]),
        .Q(bs_rst_int_r[38]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[39] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[39]),
        .Q(bs_rst_int_r[39]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[3] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[3]),
        .Q(bs_rst_int_r[3]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[40] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[40]),
        .Q(bs_rst_int_r[40]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[41] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[41]),
        .Q(bs_rst_int_r[41]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[42] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[42]),
        .Q(bs_rst_int_r[42]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[43] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[43]),
        .Q(bs_rst_int_r[43]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[44] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[44]),
        .Q(bs_rst_int_r[44]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[45] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[45]),
        .Q(bs_rst_int_r[45]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[46] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[46]),
        .Q(bs_rst_int_r[46]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[47] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[47]),
        .Q(bs_rst_int_r[47]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[48] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[48]),
        .Q(bs_rst_int_r[48]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[49] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[49]),
        .Q(bs_rst_int_r[49]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[4] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[4]),
        .Q(bs_rst_int_r[4]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[50] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[50]),
        .Q(bs_rst_int_r[50]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[51] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[51]),
        .Q(bs_rst_int_r[51]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[5] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[5]),
        .Q(bs_rst_int_r[5]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[6] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[6]),
        .Q(bs_rst_int_r[6]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[7] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[7]),
        .Q(bs_rst_int_r[7]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[8] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[8]),
        .Q(bs_rst_int_r[8]),
        .S(bs_rst_dphy_sync));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \bs_rst_int_r_reg[9] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_r[9]),
        .Q(bs_rst_int_r[9]),
        .S(bs_rst_dphy_sync));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    \hssio_state_inferred__3/i_ 
       (.I0(hssio_state[0]),
        .I1(hssio_state[1]),
        .I2(hssio_state[2]),
        .I3(hssio_state[3]),
        .O(\hssio_state_inferred__3/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \hssio_state_inferred__3/i___0 
       (.I0(hssio_state[0]),
        .I1(hssio_state[1]),
        .I2(hssio_state[2]),
        .I3(hssio_state[3]),
        .O(\hssio_state_inferred__3/i___0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \hssio_state_inferred__3/i___1 
       (.I0(hssio_state[4]),
        .I1(hssio_state[5]),
        .I2(bsc_en_vtc_1),
        .I3(Q),
        .I4(hssio_state[8]),
        .O(\hssio_state_inferred__3/i___1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'hFFFEFEE8)) 
    \hssio_state_inferred__3/i___2 
       (.I0(hssio_state[4]),
        .I1(hssio_state[5]),
        .I2(bsc_en_vtc_1),
        .I3(Q),
        .I4(hssio_state[8]),
        .O(\hssio_state_inferred__3/i___2_n_0 ));
  LUT4 #(
    .INIT(16'h0012)) 
    \hssio_state_inferred__3/i___3 
       (.I0(\hssio_state_inferred__3/i__n_0 ),
        .I1(\hssio_state_inferred__3/i___0_n_0 ),
        .I2(\hssio_state_inferred__3/i___1_n_0 ),
        .I3(\hssio_state_inferred__3/i___2_n_0 ),
        .O(\hssio_state_inferred__3/i___3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pll0_fab_clk_cntr[0]_i_1 
       (.I0(pll0_fab_clk_cntr_reg__0[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pll0_fab_clk_cntr[1]_i_1 
       (.I0(pll0_fab_clk_cntr_reg__0[0]),
        .I1(pll0_fab_clk_cntr_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \pll0_fab_clk_cntr[2]_i_1 
       (.I0(pll0_fab_clk_cntr_reg__0[0]),
        .I1(pll0_fab_clk_cntr_reg__0[1]),
        .I2(pll0_fab_clk_cntr_reg__0[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \pll0_fab_clk_cntr[3]_i_1 
       (.I0(pll0_fab_clk_cntr_reg__0[1]),
        .I1(pll0_fab_clk_cntr_reg__0[0]),
        .I2(pll0_fab_clk_cntr_reg__0[2]),
        .I3(pll0_fab_clk_cntr_reg__0[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \pll0_fab_clk_cntr[4]_i_1 
       (.I0(pll0_fab_clk_cntr_reg__0[2]),
        .I1(pll0_fab_clk_cntr_reg__0[0]),
        .I2(pll0_fab_clk_cntr_reg__0[1]),
        .I3(pll0_fab_clk_cntr_reg__0[3]),
        .I4(pll0_fab_clk_cntr_reg__0[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \pll0_fab_clk_cntr[5]_i_1 
       (.I0(pll0_fab_clk_cntr_reg__0[3]),
        .I1(pll0_fab_clk_cntr_reg__0[1]),
        .I2(pll0_fab_clk_cntr_reg__0[0]),
        .I3(pll0_fab_clk_cntr_reg__0[2]),
        .I4(pll0_fab_clk_cntr_reg__0[4]),
        .I5(pll0_fab_clk_cntr_reg__0[5]),
        .O(p_0_in[5]));
  LUT3 #(
    .INIT(8'h78)) 
    \pll0_fab_clk_cntr[6]_i_2 
       (.I0(\pll0_fab_clk_cntr[6]_i_4_n_0 ),
        .I1(pll0_fab_clk_cntr_reg__0[5]),
        .I2(pll0_fab_clk_cntr_reg),
        .O(p_0_in[6]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \pll0_fab_clk_cntr[6]_i_3 
       (.I0(pll0_fab_clk_cntr_reg__0[3]),
        .I1(pll0_fab_clk_cntr_reg__0[2]),
        .I2(pll0_fab_clk_cntr_reg__0[5]),
        .I3(pll0_fab_clk_cntr_reg__0[4]),
        .I4(pll0_fab_clk_cntr_reg__0[1]),
        .I5(pll0_fab_clk_cntr_reg__0[0]),
        .O(\pll0_fab_clk_cntr[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \pll0_fab_clk_cntr[6]_i_4 
       (.I0(pll0_fab_clk_cntr_reg__0[4]),
        .I1(pll0_fab_clk_cntr_reg__0[2]),
        .I2(pll0_fab_clk_cntr_reg__0[0]),
        .I3(pll0_fab_clk_cntr_reg__0[1]),
        .I4(pll0_fab_clk_cntr_reg__0[3]),
        .O(\pll0_fab_clk_cntr[6]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pll0_fab_clk_cntr_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(pll0_fab_clk_cntr_reg__0[0]),
        .R(sync_cell_start_fab_cntr_pll0_inst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \pll0_fab_clk_cntr_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(pll0_fab_clk_cntr_reg__0[1]),
        .R(sync_cell_start_fab_cntr_pll0_inst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \pll0_fab_clk_cntr_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(pll0_fab_clk_cntr_reg__0[2]),
        .R(sync_cell_start_fab_cntr_pll0_inst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \pll0_fab_clk_cntr_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(pll0_fab_clk_cntr_reg__0[3]),
        .R(sync_cell_start_fab_cntr_pll0_inst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \pll0_fab_clk_cntr_reg[4] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(pll0_fab_clk_cntr_reg__0[4]),
        .R(sync_cell_start_fab_cntr_pll0_inst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \pll0_fab_clk_cntr_reg[5] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(pll0_fab_clk_cntr_reg__0[5]),
        .R(sync_cell_start_fab_cntr_pll0_inst_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \pll0_fab_clk_cntr_reg[6] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(pll0_fab_clk_cntr_reg),
        .R(sync_cell_start_fab_cntr_pll0_inst_n_0));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_0 sync_cell_bs_rst_dphy_inst
       (.SS(bs_rst_dphy_sync),
        .bs_rst_dphy_in(bs_rst_dphy_in),
        .riu_clk(riu_clk));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_1 sync_cell_dly_rdy_inst
       (.D(p_0_in_0[6]),
        .\GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg (\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_4_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg_0 (\GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_3_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6] (sync_cell_dly_rdy_inst_n_3),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 (locked),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_1 (\hssio_state_inferred__3/i___3_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg (sync_cell_dly_rdy_inst_n_2),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 (\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 (\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_8_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_2 (\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_3 (sync_cell_wait_pll0_fab_timeout_inst_n_2),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_4 (\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_3_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_5 (\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_5_n_0 ),
        .Q({Q,bsc_en_vtc_1,hssio_state[5:0]}),
        .bsc_en_vtc(bsc_en_vtc),
        .in0(in0),
        .out(all_bsc_dly_rdy),
        .riu_clk(riu_clk),
        .timeout_cntr_rst(timeout_cntr_rst));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_2 sync_cell_mult_intf_lock_inst
       (.multi_intf_lock_in(multi_intf_lock_in),
        .riu_clk(riu_clk));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_3 sync_cell_pll0lock_inst
       (.D({p_0_in_0[8:7],p_0_in_0[4:2],p_0_in_0[0]}),
        .\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg (\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_3_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 (\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_4_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_1 (\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[0] (\GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_3_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[2] (wait_pll_lock_timeout_reg_n_0),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[3] (sync_cell_pll0lock_inst_n_9),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] (wait_pll0_x_fab_clk_timeout_sync),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] (\hssio_state_inferred__3/i___3_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 (all_bsc_dly_rdy),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_1 (\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ),
        .\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg (sync_cell_pll0lock_inst_n_8),
        .\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 (\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_1 (\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_4_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_2 (\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_5_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_3 (\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ),
        .Q({hssio_state[8],Q,bsc_en_vtc_1,hssio_state[5:1]}),
        .bs_dly_rst(bs_dly_rst),
        .n0_vtc_rdy_out(n0_vtc_rdy_out),
        .n1_vtc_rdy_out(n1_vtc_rdy_out),
        .n2_vtc_rdy_out(n2_vtc_rdy_out),
        .out(locked),
        .riu_clk(riu_clk),
        .rst_seq_done(rst_seq_done),
        .shared_pll0_locked_in(shared_pll0_locked_in),
        .\sync_flop_1_reg[0]_0 (sync_cell_pll0lock_inst_n_7));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_4 sync_cell_rst_inst
       (.out(rst_in_sync),
        .riu_clk(riu_clk),
        .rst(rst));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_5 sync_cell_start_fab_cntr_pll0_inst
       (.Q(pll0_fab_clk_cntr_reg),
        .SR(sync_cell_start_fab_cntr_pll0_inst_n_0),
        .in0(\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_n_0 ),
        .\pll0_fab_clk_cntr_reg[0] (\pll0_fab_clk_cntr[6]_i_3_n_0 ),
        .shared_pll0_clkout0_in(shared_pll0_clkout0_in));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_6 sync_cell_wait_pll0_fab_timeout_inst
       (.D(p_0_in_0[5]),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] (sync_cell_wait_pll0_fab_timeout_inst_n_3),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5] (\hssio_state_inferred__3/i___3_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_0 (locked),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_1 (all_bsc_dly_rdy),
        .\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg (\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_4_n_0 ),
        .\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_0 (sync_cell_pll0lock_inst_n_7),
        .\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_1 (\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_n_0 ),
        .Q({hssio_state[8],hssio_state[5:3],hssio_state[0]}),
        .in0(wait_pll0_x_fab_clk_timeout),
        .out(wait_pll0_x_fab_clk_timeout_sync),
        .riu_clk(riu_clk),
        .\sync_flop_1_reg[0]_0 (sync_cell_wait_pll0_fab_timeout_inst_n_2));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \timeout_cntr[0]_i_1 
       (.I0(timeout_cntr_reg[0]),
        .I1(timeout_cntr_reg[1]),
        .I2(\timeout_cntr[0]_i_3_n_0 ),
        .I3(\timeout_cntr[0]_i_4_n_0 ),
        .I4(\timeout_cntr[0]_i_5_n_0 ),
        .O(timeout_cntr));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    \timeout_cntr[0]_i_3 
       (.I0(timeout_cntr_reg[6]),
        .I1(timeout_cntr_reg[7]),
        .I2(timeout_cntr_reg[4]),
        .I3(timeout_cntr_reg[5]),
        .I4(timeout_cntr_reg[3]),
        .I5(timeout_cntr_reg[2]),
        .O(\timeout_cntr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFFFFFFFFFF)) 
    \timeout_cntr[0]_i_4 
       (.I0(timeout_cntr_reg[18]),
        .I1(timeout_cntr_reg[19]),
        .I2(timeout_cntr_reg[16]),
        .I3(timeout_cntr_reg[17]),
        .I4(timeout_cntr_reg[15]),
        .I5(timeout_cntr_reg[14]),
        .O(\timeout_cntr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \timeout_cntr[0]_i_5 
       (.I0(timeout_cntr_reg[12]),
        .I1(timeout_cntr_reg[13]),
        .I2(timeout_cntr_reg[10]),
        .I3(timeout_cntr_reg[11]),
        .I4(timeout_cntr_reg[8]),
        .I5(timeout_cntr_reg[9]),
        .O(\timeout_cntr[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \timeout_cntr[0]_i_6 
       (.I0(timeout_cntr_reg[0]),
        .O(\timeout_cntr[0]_i_6_n_0 ));
  FDRE \timeout_cntr_reg[0] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_15 ),
        .Q(timeout_cntr_reg[0]),
        .R(timeout_cntr_rst));
  CARRY8 \timeout_cntr_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\timeout_cntr_reg[0]_i_2_n_0 ,\timeout_cntr_reg[0]_i_2_n_1 ,\timeout_cntr_reg[0]_i_2_n_2 ,\timeout_cntr_reg[0]_i_2_n_3 ,\timeout_cntr_reg[0]_i_2_n_4 ,\timeout_cntr_reg[0]_i_2_n_5 ,\timeout_cntr_reg[0]_i_2_n_6 ,\timeout_cntr_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\timeout_cntr_reg[0]_i_2_n_8 ,\timeout_cntr_reg[0]_i_2_n_9 ,\timeout_cntr_reg[0]_i_2_n_10 ,\timeout_cntr_reg[0]_i_2_n_11 ,\timeout_cntr_reg[0]_i_2_n_12 ,\timeout_cntr_reg[0]_i_2_n_13 ,\timeout_cntr_reg[0]_i_2_n_14 ,\timeout_cntr_reg[0]_i_2_n_15 }),
        .S({timeout_cntr_reg[7:1],\timeout_cntr[0]_i_6_n_0 }));
  FDRE \timeout_cntr_reg[10] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_13 ),
        .Q(timeout_cntr_reg[10]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[11] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_12 ),
        .Q(timeout_cntr_reg[11]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[12] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_11 ),
        .Q(timeout_cntr_reg[12]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[13] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_10 ),
        .Q(timeout_cntr_reg[13]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[14] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_9 ),
        .Q(timeout_cntr_reg[14]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[15] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_8 ),
        .Q(timeout_cntr_reg[15]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[16] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[16]_i_1_n_15 ),
        .Q(timeout_cntr_reg[16]),
        .R(timeout_cntr_rst));
  CARRY8 \timeout_cntr_reg[16]_i_1 
       (.CI(\timeout_cntr_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_timeout_cntr_reg[16]_i_1_CO_UNCONNECTED [7:3],\timeout_cntr_reg[16]_i_1_n_5 ,\timeout_cntr_reg[16]_i_1_n_6 ,\timeout_cntr_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_timeout_cntr_reg[16]_i_1_O_UNCONNECTED [7:4],\timeout_cntr_reg[16]_i_1_n_12 ,\timeout_cntr_reg[16]_i_1_n_13 ,\timeout_cntr_reg[16]_i_1_n_14 ,\timeout_cntr_reg[16]_i_1_n_15 }),
        .S({1'b0,1'b0,1'b0,1'b0,timeout_cntr_reg[19:16]}));
  FDRE \timeout_cntr_reg[17] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[16]_i_1_n_14 ),
        .Q(timeout_cntr_reg[17]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[18] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[16]_i_1_n_13 ),
        .Q(timeout_cntr_reg[18]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[19] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[16]_i_1_n_12 ),
        .Q(timeout_cntr_reg[19]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[1] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_14 ),
        .Q(timeout_cntr_reg[1]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[2] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_13 ),
        .Q(timeout_cntr_reg[2]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[3] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_12 ),
        .Q(timeout_cntr_reg[3]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[4] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_11 ),
        .Q(timeout_cntr_reg[4]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[5] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_10 ),
        .Q(timeout_cntr_reg[5]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[6] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_9 ),
        .Q(timeout_cntr_reg[6]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[7] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[0]_i_2_n_8 ),
        .Q(timeout_cntr_reg[7]),
        .R(timeout_cntr_rst));
  FDRE \timeout_cntr_reg[8] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_15 ),
        .Q(timeout_cntr_reg[8]),
        .R(timeout_cntr_rst));
  CARRY8 \timeout_cntr_reg[8]_i_1 
       (.CI(\timeout_cntr_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\timeout_cntr_reg[8]_i_1_n_0 ,\timeout_cntr_reg[8]_i_1_n_1 ,\timeout_cntr_reg[8]_i_1_n_2 ,\timeout_cntr_reg[8]_i_1_n_3 ,\timeout_cntr_reg[8]_i_1_n_4 ,\timeout_cntr_reg[8]_i_1_n_5 ,\timeout_cntr_reg[8]_i_1_n_6 ,\timeout_cntr_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\timeout_cntr_reg[8]_i_1_n_8 ,\timeout_cntr_reg[8]_i_1_n_9 ,\timeout_cntr_reg[8]_i_1_n_10 ,\timeout_cntr_reg[8]_i_1_n_11 ,\timeout_cntr_reg[8]_i_1_n_12 ,\timeout_cntr_reg[8]_i_1_n_13 ,\timeout_cntr_reg[8]_i_1_n_14 ,\timeout_cntr_reg[8]_i_1_n_15 }),
        .S(timeout_cntr_reg[15:8]));
  FDRE \timeout_cntr_reg[9] 
       (.C(riu_clk),
        .CE(timeout_cntr),
        .D(\timeout_cntr_reg[8]_i_1_n_14 ),
        .Q(timeout_cntr_reg[9]),
        .R(timeout_cntr_rst));
  FDRE wait_pll0_x_fab_clk_timeout_reg
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(pll0_fab_clk_cntr_reg),
        .Q(wait_pll0_x_fab_clk_timeout),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000EA2A)) 
    wait_pll_lock_timeout_i_1
       (.I0(wait_pll_lock_timeout_reg_n_0),
        .I1(wait_pll_lock_timeout_i_2_n_0),
        .I2(wait_pll_lock_timeout_i_3_n_0),
        .I3(wait_pll_lock_timeout_i_4_n_0),
        .I4(timeout_cntr_rst),
        .O(wait_pll_lock_timeout_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF9)) 
    wait_pll_lock_timeout_i_2
       (.I0(hssio_state[5]),
        .I1(Q),
        .I2(hssio_state[0]),
        .I3(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_6_n_0 ),
        .I4(hssio_state[3]),
        .I5(hssio_state[8]),
        .O(wait_pll_lock_timeout_i_2_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    wait_pll_lock_timeout_i_3
       (.I0(wait_pll_lock_timeout_i_5_n_0),
        .I1(wait_pll_lock_timeout_i_6_n_0),
        .I2(wait_pll_lock_timeout_i_7_n_0),
        .I3(timeout_cntr_reg[0]),
        .I4(timeout_cntr_reg[1]),
        .O(wait_pll_lock_timeout_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    wait_pll_lock_timeout_i_4
       (.I0(hssio_state[0]),
        .I1(hssio_state[2]),
        .I2(hssio_state[1]),
        .I3(hssio_state[4]),
        .I4(bsc_en_vtc_1),
        .I5(\GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_3_n_0 ),
        .O(wait_pll_lock_timeout_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    wait_pll_lock_timeout_i_5
       (.I0(timeout_cntr_reg[10]),
        .I1(timeout_cntr_reg[11]),
        .I2(timeout_cntr_reg[9]),
        .I3(timeout_cntr_reg[8]),
        .I4(timeout_cntr_reg[13]),
        .I5(timeout_cntr_reg[12]),
        .O(wait_pll_lock_timeout_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    wait_pll_lock_timeout_i_6
       (.I0(timeout_cntr_reg[4]),
        .I1(timeout_cntr_reg[5]),
        .I2(timeout_cntr_reg[2]),
        .I3(timeout_cntr_reg[3]),
        .I4(timeout_cntr_reg[7]),
        .I5(timeout_cntr_reg[6]),
        .O(wait_pll_lock_timeout_i_6_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    wait_pll_lock_timeout_i_7
       (.I0(timeout_cntr_reg[16]),
        .I1(timeout_cntr_reg[17]),
        .I2(timeout_cntr_reg[14]),
        .I3(timeout_cntr_reg[15]),
        .I4(timeout_cntr_reg[19]),
        .I5(timeout_cntr_reg[18]),
        .O(wait_pll_lock_timeout_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wait_pll_lock_timeout_reg
       (.C(riu_clk),
        .CE(1'b1),
        .D(wait_pll_lock_timeout_i_1_n_0),
        .Q(wait_pll_lock_timeout_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell
   (SR,
    out,
    shared_pll0_clkout0_in);
  output [0:0]SR;
  input out;
  input shared_pll0_clkout0_in;

  wire [0:0]SR;
  wire out;
  wire shared_pll0_clkout0_in;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  LUT1 #(
    .INIT(2'h1)) 
    \GEN_NIB0_TBYTE.n0_tbyte_d[3]_i_1 
       (.I0(sync_flop_1),
        .O(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(out),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_0
   (SS,
    bs_rst_dphy_in,
    riu_clk);
  output [0:0]SS;
  input bs_rst_dphy_in;
  input riu_clk;

  wire bs_rst_dphy_in;
  wire riu_clk;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  assign SS[0] = sync_flop_1;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(bs_rst_dphy_in),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_1
   (out,
    D,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6] ,
    in0,
    riu_clk,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 ,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ,
    Q,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_1 ,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_2 ,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_3 ,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_4 ,
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_5 ,
    timeout_cntr_rst,
    \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg ,
    \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg_0 ,
    bsc_en_vtc);
  output out;
  output [0:0]D;
  output \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ;
  output \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6] ;
  input [0:0]in0;
  input riu_clk;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 ;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ;
  input [7:0]Q;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_1 ;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_2 ;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_3 ;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_4 ;
  input \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_5 ;
  input timeout_cntr_rst;
  input \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg ;
  input \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg_0 ;
  input bsc_en_vtc;

  wire [0:0]D;
  wire \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_i_2_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg ;
  wire \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_1 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_4_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_6_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_2 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_3 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_4 ;
  wire \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_5 ;
  wire [7:0]Q;
  wire bsc_en_vtc;
  wire [0:0]in0;
  wire riu_clk;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;
  wire timeout_cntr_rst;

  assign out = sync_flop_1;
  LUT6 #(
    .INIT(64'hBBBBFFAF888800A0)) 
    \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_i_1 
       (.I0(Q[6]),
        .I1(\GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg ),
        .I2(\GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_i_2_n_0 ),
        .I3(\GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_reg_0 ),
        .I4(Q[0]),
        .I5(bsc_en_vtc),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6] ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(sync_flop_1),
        .I5(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 ),
        .O(\GEN_RIU_NOT_FROM_PLL.bsc_en_vtc_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[6]_i_1 
       (.I0(sync_flop_1),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_1 ),
        .I2(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 ),
        .I3(Q[5]),
        .O(D));
  LUT6 #(
    .INIT(64'hFEFEFEFFFEFEFE00)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_1 
       (.I0(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_3 ),
        .I1(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_4 ),
        .I2(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_4_n_0 ),
        .I3(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_5 ),
        .I4(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_6_n_0 ),
        .I5(timeout_cntr_rst),
        .O(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg ));
  LUT6 #(
    .INIT(64'hFFEAFFC0FFEAC0FF)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_4 
       (.I0(sync_flop_1),
        .I1(Q[2]),
        .I2(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 ),
        .I3(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_2 ),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF80CC808080CC)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_6 
       (.I0(sync_flop_1),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[6]_0 ),
        .I2(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 ),
        .I3(Q[6]),
        .I4(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_1 ),
        .I5(Q[3]),
        .O(\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_6_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(in0),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_2
   (multi_intf_lock_in,
    riu_clk);
  input multi_intf_lock_in;
  input riu_clk;

  wire multi_intf_lock_in;
  wire riu_clk;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(multi_intf_lock_in),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_3
   (out,
    D,
    \sync_flop_1_reg[0]_0 ,
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[3] ,
    shared_pll0_locked_in,
    riu_clk,
    Q,
    n0_vtc_rdy_out,
    n1_vtc_rdy_out,
    n2_vtc_rdy_out,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_1 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[2] ,
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[0] ,
    rst_seq_done,
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_1 ,
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_2 ,
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_3 ,
    bs_dly_rst,
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg ,
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ,
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_1 );
  output out;
  output [5:0]D;
  output \sync_flop_1_reg[0]_0 ;
  output \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg ;
  output \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[3] ;
  input shared_pll0_locked_in;
  input riu_clk;
  input [7:0]Q;
  input n0_vtc_rdy_out;
  input n1_vtc_rdy_out;
  input n2_vtc_rdy_out;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_1 ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[2] ;
  input \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[0] ;
  input rst_seq_done;
  input \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_1 ;
  input \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_2 ;
  input \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_3 ;
  input bs_dly_rst;
  input \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg ;
  input \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ;
  input \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_1 ;

  wire [5:0]D;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_1 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_2_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state[7]_i_2_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[0] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[2] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[3] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_1 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_3_n_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_1 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_2 ;
  wire \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_3 ;
  wire [7:0]Q;
  wire bs_dly_rst;
  wire n0_vtc_rdy_out;
  wire n1_vtc_rdy_out;
  wire n2_vtc_rdy_out;
  wire riu_clk;
  wire rst_seq_done;
  wire shared_pll0_locked_in;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  wire \sync_flop_1_reg[0]_0 ;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  assign out = sync_flop_1;
  LUT6 #(
    .INIT(64'hAAAAABBBAAAAA888)) 
    \GEN_RIU_NOT_FROM_PLL.bs_dly_rst_i_1 
       (.I0(bs_dly_rst),
        .I1(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg ),
        .I2(Q[2]),
        .I3(sync_flop_1),
        .I4(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_0 ),
        .I5(\GEN_RIU_NOT_FROM_PLL.bs_dly_rst_reg_1 ),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[3] ));
  LUT6 #(
    .INIT(64'hDFDFDFDFDFDFDFDD)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_1 
       (.I0(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_2_n_0 ),
        .I2(sync_flop_1),
        .I3(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[0] ),
        .I4(Q[5]),
        .I5(Q[3]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h4040FFFF4040FF40)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_2 
       (.I0(sync_flop_1),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[2] ),
        .I2(Q[1]),
        .I3(Q[6]),
        .I4(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ),
        .I5(Q[5]),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAB00AA00)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[2]_i_1 
       (.I0(Q[0]),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[2] ),
        .I2(sync_flop_1),
        .I3(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ),
        .I4(Q[1]),
        .O(D[1]));
  LUT3 #(
    .INIT(8'h80)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[3]_i_1 
       (.I0(sync_flop_1),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ),
        .I2(Q[1]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h8080C080)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[4]_i_1 
       (.I0(Q[2]),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ),
        .I2(sync_flop_1),
        .I3(Q[3]),
        .I4(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hBFFFAAAA00000000)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[7]_i_1 
       (.I0(Q[5]),
        .I1(n0_vtc_rdy_out),
        .I2(n1_vtc_rdy_out),
        .I3(n2_vtc_rdy_out),
        .I4(Q[6]),
        .I5(\GEN_RIU_NOT_FROM_PLL.hssio_state[7]_i_2_n_0 ),
        .O(D[4]));
  LUT3 #(
    .INIT(8'h80)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[7]_i_2 
       (.I0(sync_flop_1),
        .I1(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ),
        .I2(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h80808080C0808080)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[8]_i_1 
       (.I0(Q[7]),
        .I1(sync_flop_1),
        .I2(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] ),
        .I3(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_0 ),
        .I4(Q[6]),
        .I5(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8]_1 ),
        .O(D[5]));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_1 
       (.I0(rst_seq_done),
        .I1(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_3_n_0 ),
        .I2(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_1 ),
        .I3(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_2 ),
        .I4(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_3 ),
        .O(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg ));
  LUT6 #(
    .INIT(64'hFFFCFFFCFFFCFCE2)) 
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_3 
       (.I0(sync_flop_1),
        .I1(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg_0 ),
        .I2(Q[7]),
        .I3(Q[2]),
        .I4(Q[6]),
        .I5(Q[4]),
        .O(\GEN_RIU_NOT_FROM_PLL.rst_seq_done_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_i_2 
       (.I0(sync_flop_1),
        .I1(Q[5]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[0] ),
        .O(\sync_flop_1_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(shared_pll0_locked_in),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_4
   (out,
    rst,
    riu_clk);
  output out;
  input rst;
  input riu_clk;

  wire riu_clk;
  wire rst;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  assign out = sync_flop_1;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(rst),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_5
   (SR,
    in0,
    shared_pll0_clkout0_in,
    Q,
    \pll0_fab_clk_cntr_reg[0] );
  output [0:0]SR;
  input [0:0]in0;
  input shared_pll0_clkout0_in;
  input [0:0]Q;
  input \pll0_fab_clk_cntr_reg[0] ;

  wire [0:0]Q;
  wire [0:0]SR;
  wire [0:0]in0;
  wire \pll0_fab_clk_cntr_reg[0] ;
  wire shared_pll0_clkout0_in;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  LUT3 #(
    .INIT(8'h5D)) 
    \pll0_fab_clk_cntr[6]_i_1 
       (.I0(sync_flop_1),
        .I1(Q),
        .I2(\pll0_fab_clk_cntr_reg[0] ),
        .O(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(in0),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_sync_cell" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell_6
   (out,
    D,
    \sync_flop_1_reg[0]_0 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ,
    in0,
    riu_clk,
    Q,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5] ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_0 ,
    \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_1 ,
    \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg ,
    \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_0 ,
    \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_1 );
  output out;
  output [0:0]D;
  output \sync_flop_1_reg[0]_0 ;
  output \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ;
  input [0:0]in0;
  input riu_clk;
  input [4:0]Q;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5] ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_0 ;
  input \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_1 ;
  input \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg ;
  input \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_0 ;
  input [0:0]\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_1 ;

  wire [0:0]D;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5] ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_0 ;
  wire \GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_1 ;
  wire \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg ;
  wire \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_0 ;
  wire [0:0]\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_1 ;
  wire [4:0]Q;
  wire [0:0]in0;
  wire riu_clk;
  (* async_reg = "true" *) wire sync_flop_0;
  (* async_reg = "true" *) wire sync_flop_1;
  wire \sync_flop_1_reg[0]_0 ;
  (* async_reg = "true" *) wire sync_flop_2;
  (* async_reg = "true" *) wire sync_flop_3;
  (* async_reg = "true" *) wire sync_flop_4;
  (* async_reg = "true" *) wire sync_flop_5;
  (* async_reg = "true" *) wire sync_flop_6;

  assign out = sync_flop_1;
  LUT6 #(
    .INIT(64'h80008000F0008000)) 
    \GEN_RIU_NOT_FROM_PLL.hssio_state[5]_i_1 
       (.I0(sync_flop_1),
        .I1(Q[2]),
        .I2(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5] ),
        .I3(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_0 ),
        .I4(Q[3]),
        .I5(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[5]_1 ),
        .O(D));
  LUT6 #(
    .INIT(64'h2F222FFF20222000)) 
    \GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_i_1 
       (.I0(Q[2]),
        .I1(sync_flop_1),
        .I2(\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg ),
        .I3(Q[0]),
        .I4(\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_0 ),
        .I5(\GEN_RIU_NOT_FROM_PLL.start_fab_clk_cntr_reg_1 ),
        .O(\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[4] ));
  LUT4 #(
    .INIT(16'hFFF4)) 
    \GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_i_2 
       (.I0(sync_flop_1),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(Q[1]),
        .O(\sync_flop_1_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_0_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(in0),
        .Q(sync_flop_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_1_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_0),
        .Q(sync_flop_1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_2_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_1),
        .Q(sync_flop_2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_3_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_2),
        .Q(sync_flop_3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_4_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_3),
        .Q(sync_flop_4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_5_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_4),
        .Q(sync_flop_5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \sync_flop_6_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(sync_flop_5),
        .Q(sync_flop_6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "high_speed_selectio_wiz_v3_5_1_tx_bs" *) 
module mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_tx_bs
   (bs_to_buf_data_in,
    hs_tx_t,
    tx_bs0_rx_bit_ctrl_out,
    tx_bs0_tx_bit_ctrl_out,
    tx_bs2_rx_bit_ctrl_out,
    tx_bs2_tx_bit_ctrl_out,
    tx_bs4_rx_bit_ctrl_out,
    tx_bs4_tx_bit_ctrl_out,
    tx_bs8_rx_bit_ctrl_out,
    tx_bs8_tx_bit_ctrl_out,
    tx_bs15_rx_bit_ctrl_out,
    tx_bs15_tx_bit_ctrl_out,
    tx_bs_rst_in,
    tx_bs_rst_dly_in,
    tri_t_0,
    tx_bs0_rx_bit_ctrl_in,
    tx_bs0_tx_bit_ctrl_in,
    data_from_fabric_data_txp0,
    tri_t_2,
    tx_bs2_rx_bit_ctrl_in,
    tx_bs2_tx_bit_ctrl_in,
    data_from_fabric_data_txp2,
    tri_t_4,
    tx_bs4_rx_bit_ctrl_in,
    tx_bs4_tx_bit_ctrl_in,
    data_from_fabric_data_txp1,
    tri_t_8,
    tx_bs8_rx_bit_ctrl_in,
    tx_bs8_tx_bit_ctrl_in,
    data_from_fabric_data_txp3,
    tri_t_15,
    tx_bs15_rx_bit_ctrl_in,
    tx_bs15_tx_bit_ctrl_in,
    data_from_fabric_clk_txp);
  output [4:0]bs_to_buf_data_in;
  output [4:0]hs_tx_t;
  output [39:0]tx_bs0_rx_bit_ctrl_out;
  output [39:0]tx_bs0_tx_bit_ctrl_out;
  output [39:0]tx_bs2_rx_bit_ctrl_out;
  output [39:0]tx_bs2_tx_bit_ctrl_out;
  output [39:0]tx_bs4_rx_bit_ctrl_out;
  output [39:0]tx_bs4_tx_bit_ctrl_out;
  output [39:0]tx_bs8_rx_bit_ctrl_out;
  output [39:0]tx_bs8_tx_bit_ctrl_out;
  output [39:0]tx_bs15_rx_bit_ctrl_out;
  output [39:0]tx_bs15_tx_bit_ctrl_out;
  input [4:0]tx_bs_rst_in;
  input [4:0]tx_bs_rst_dly_in;
  input tri_t_0;
  input [39:0]tx_bs0_rx_bit_ctrl_in;
  input [39:0]tx_bs0_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp0;
  input tri_t_2;
  input [39:0]tx_bs2_rx_bit_ctrl_in;
  input [39:0]tx_bs2_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp2;
  input tri_t_4;
  input [39:0]tx_bs4_rx_bit_ctrl_in;
  input [39:0]tx_bs4_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp1;
  input tri_t_8;
  input [39:0]tx_bs8_rx_bit_ctrl_in;
  input [39:0]tx_bs8_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_data_txp3;
  input tri_t_15;
  input [39:0]tx_bs15_rx_bit_ctrl_in;
  input [39:0]tx_bs15_tx_bit_ctrl_in;
  input [7:0]data_from_fabric_clk_txp;

  wire [4:0]bs_to_buf_data_in;
  wire [7:0]data_from_fabric_clk_txp;
  wire [7:0]data_from_fabric_data_txp0;
  wire [7:0]data_from_fabric_data_txp1;
  wire [7:0]data_from_fabric_data_txp2;
  wire [7:0]data_from_fabric_data_txp3;
  wire [4:0]hs_tx_t;
  wire tri_t_0;
  wire tri_t_15;
  wire tri_t_2;
  wire tri_t_4;
  wire tri_t_8;
  wire [39:0]tx_bs0_rx_bit_ctrl_in;
  wire [39:0]tx_bs0_rx_bit_ctrl_out;
  wire [39:0]tx_bs0_tx_bit_ctrl_in;
  wire [39:0]tx_bs0_tx_bit_ctrl_out;
  wire [39:0]tx_bs15_rx_bit_ctrl_in;
  wire [39:0]tx_bs15_rx_bit_ctrl_out;
  wire [39:0]tx_bs15_tx_bit_ctrl_in;
  wire [39:0]tx_bs15_tx_bit_ctrl_out;
  wire [39:0]tx_bs2_rx_bit_ctrl_in;
  wire [39:0]tx_bs2_rx_bit_ctrl_out;
  wire [39:0]tx_bs2_tx_bit_ctrl_in;
  wire [39:0]tx_bs2_tx_bit_ctrl_out;
  wire [39:0]tx_bs4_rx_bit_ctrl_in;
  wire [39:0]tx_bs4_rx_bit_ctrl_out;
  wire [39:0]tx_bs4_tx_bit_ctrl_in;
  wire [39:0]tx_bs4_tx_bit_ctrl_out;
  wire [39:0]tx_bs8_rx_bit_ctrl_in;
  wire [39:0]tx_bs8_rx_bit_ctrl_out;
  wire [39:0]tx_bs8_tx_bit_ctrl_in;
  wire [39:0]tx_bs8_tx_bit_ctrl_out;
  wire [4:0]tx_bs_rst_dly_in;
  wire [4:0]tx_bs_rst_in;
  wire [8:0]\NLW_TX_BS[0].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED ;
  wire [8:0]\NLW_TX_BS[15].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED ;
  wire [8:0]\NLW_TX_BS[2].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED ;
  wire [8:0]\NLW_TX_BS[4].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED ;
  wire [8:0]\NLW_TX_BS[8].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  TX_BITSLICE #(
    .DATA_WIDTH(8),
    .DELAY_FORMAT("TIME"),
    .DELAY_TYPE("FIXED"),
    .DELAY_VALUE(0),
    .ENABLE_PRE_EMPHASIS("FALSE"),
    .INIT(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_RST_DLY_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .NATIVE_ODELAY_BYPASS("FALSE"),
    .OUTPUT_PHASE_90("FALSE"),
    .REFCLK_FREQUENCY(1000.000000),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_VERSION(2.000000),
    .TBYTE_CTL("T"),
    .UPDATE_MODE("ASYNC")) 
    \TX_BS[0].u_tx_bitslice_if_bs 
       (.CE(1'b0),
        .CLK(1'b0),
        .CNTVALUEIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CNTVALUEOUT(\NLW_TX_BS[0].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED [8:0]),
        .D(data_from_fabric_data_txp0),
        .EN_VTC(1'b1),
        .INC(1'b0),
        .LOAD(1'b0),
        .O(bs_to_buf_data_in[0]),
        .RST(tx_bs_rst_in[0]),
        .RST_DLY(tx_bs_rst_dly_in[0]),
        .RX_BIT_CTRL_IN(tx_bs0_rx_bit_ctrl_in),
        .RX_BIT_CTRL_OUT(tx_bs0_rx_bit_ctrl_out),
        .T(tri_t_0),
        .TBYTE_IN(1'b0),
        .TX_BIT_CTRL_IN(tx_bs0_tx_bit_ctrl_in),
        .TX_BIT_CTRL_OUT(tx_bs0_tx_bit_ctrl_out),
        .T_OUT(hs_tx_t[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  TX_BITSLICE #(
    .DATA_WIDTH(8),
    .DELAY_FORMAT("TIME"),
    .DELAY_TYPE("FIXED"),
    .DELAY_VALUE(0),
    .ENABLE_PRE_EMPHASIS("FALSE"),
    .INIT(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_RST_DLY_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .NATIVE_ODELAY_BYPASS("FALSE"),
    .OUTPUT_PHASE_90("TRUE"),
    .REFCLK_FREQUENCY(1000.000000),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_VERSION(2.000000),
    .TBYTE_CTL("T"),
    .UPDATE_MODE("ASYNC")) 
    \TX_BS[15].u_tx_bitslice_if_bs 
       (.CE(1'b0),
        .CLK(1'b0),
        .CNTVALUEIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CNTVALUEOUT(\NLW_TX_BS[15].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED [8:0]),
        .D(data_from_fabric_clk_txp),
        .EN_VTC(1'b1),
        .INC(1'b0),
        .LOAD(1'b0),
        .O(bs_to_buf_data_in[4]),
        .RST(tx_bs_rst_in[4]),
        .RST_DLY(tx_bs_rst_dly_in[4]),
        .RX_BIT_CTRL_IN(tx_bs15_rx_bit_ctrl_in),
        .RX_BIT_CTRL_OUT(tx_bs15_rx_bit_ctrl_out),
        .T(tri_t_15),
        .TBYTE_IN(1'b0),
        .TX_BIT_CTRL_IN(tx_bs15_tx_bit_ctrl_in),
        .TX_BIT_CTRL_OUT(tx_bs15_tx_bit_ctrl_out),
        .T_OUT(hs_tx_t[4]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  TX_BITSLICE #(
    .DATA_WIDTH(8),
    .DELAY_FORMAT("TIME"),
    .DELAY_TYPE("FIXED"),
    .DELAY_VALUE(0),
    .ENABLE_PRE_EMPHASIS("FALSE"),
    .INIT(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_RST_DLY_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .NATIVE_ODELAY_BYPASS("FALSE"),
    .OUTPUT_PHASE_90("FALSE"),
    .REFCLK_FREQUENCY(1000.000000),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_VERSION(2.000000),
    .TBYTE_CTL("T"),
    .UPDATE_MODE("ASYNC")) 
    \TX_BS[2].u_tx_bitslice_if_bs 
       (.CE(1'b0),
        .CLK(1'b0),
        .CNTVALUEIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CNTVALUEOUT(\NLW_TX_BS[2].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED [8:0]),
        .D(data_from_fabric_data_txp2),
        .EN_VTC(1'b1),
        .INC(1'b0),
        .LOAD(1'b0),
        .O(bs_to_buf_data_in[1]),
        .RST(tx_bs_rst_in[1]),
        .RST_DLY(tx_bs_rst_dly_in[1]),
        .RX_BIT_CTRL_IN(tx_bs2_rx_bit_ctrl_in),
        .RX_BIT_CTRL_OUT(tx_bs2_rx_bit_ctrl_out),
        .T(tri_t_2),
        .TBYTE_IN(1'b0),
        .TX_BIT_CTRL_IN(tx_bs2_tx_bit_ctrl_in),
        .TX_BIT_CTRL_OUT(tx_bs2_tx_bit_ctrl_out),
        .T_OUT(hs_tx_t[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  TX_BITSLICE #(
    .DATA_WIDTH(8),
    .DELAY_FORMAT("TIME"),
    .DELAY_TYPE("FIXED"),
    .DELAY_VALUE(0),
    .ENABLE_PRE_EMPHASIS("FALSE"),
    .INIT(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_RST_DLY_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .NATIVE_ODELAY_BYPASS("FALSE"),
    .OUTPUT_PHASE_90("FALSE"),
    .REFCLK_FREQUENCY(1000.000000),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_VERSION(2.000000),
    .TBYTE_CTL("T"),
    .UPDATE_MODE("ASYNC")) 
    \TX_BS[4].u_tx_bitslice_if_bs 
       (.CE(1'b0),
        .CLK(1'b0),
        .CNTVALUEIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CNTVALUEOUT(\NLW_TX_BS[4].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED [8:0]),
        .D(data_from_fabric_data_txp1),
        .EN_VTC(1'b1),
        .INC(1'b0),
        .LOAD(1'b0),
        .O(bs_to_buf_data_in[2]),
        .RST(tx_bs_rst_in[2]),
        .RST_DLY(tx_bs_rst_dly_in[2]),
        .RX_BIT_CTRL_IN(tx_bs4_rx_bit_ctrl_in),
        .RX_BIT_CTRL_OUT(tx_bs4_rx_bit_ctrl_out),
        .T(tri_t_4),
        .TBYTE_IN(1'b0),
        .TX_BIT_CTRL_IN(tx_bs4_tx_bit_ctrl_in),
        .TX_BIT_CTRL_OUT(tx_bs4_tx_bit_ctrl_out),
        .T_OUT(hs_tx_t[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  TX_BITSLICE #(
    .DATA_WIDTH(8),
    .DELAY_FORMAT("TIME"),
    .DELAY_TYPE("FIXED"),
    .DELAY_VALUE(0),
    .ENABLE_PRE_EMPHASIS("FALSE"),
    .INIT(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_RST_DLY_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .NATIVE_ODELAY_BYPASS("FALSE"),
    .OUTPUT_PHASE_90("FALSE"),
    .REFCLK_FREQUENCY(1000.000000),
    .SIM_DEVICE("ULTRASCALE_PLUS_ES1"),
    .SIM_VERSION(2.000000),
    .TBYTE_CTL("T"),
    .UPDATE_MODE("ASYNC")) 
    \TX_BS[8].u_tx_bitslice_if_bs 
       (.CE(1'b0),
        .CLK(1'b0),
        .CNTVALUEIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CNTVALUEOUT(\NLW_TX_BS[8].u_tx_bitslice_if_bs_CNTVALUEOUT_UNCONNECTED [8:0]),
        .D(data_from_fabric_data_txp3),
        .EN_VTC(1'b1),
        .INC(1'b0),
        .LOAD(1'b0),
        .O(bs_to_buf_data_in[3]),
        .RST(tx_bs_rst_in[3]),
        .RST_DLY(tx_bs_rst_dly_in[3]),
        .RX_BIT_CTRL_IN(tx_bs8_rx_bit_ctrl_in),
        .RX_BIT_CTRL_OUT(tx_bs8_rx_bit_ctrl_out),
        .T(tri_t_8),
        .TBYTE_IN(1'b0),
        .TX_BIT_CTRL_IN(tx_bs8_tx_bit_ctrl_in),
        .TX_BIT_CTRL_OUT(tx_bs8_tx_bit_ctrl_out),
        .T_OUT(hs_tx_t[3]));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_0_c1" *) 
module mipi_dphy_0_mipi_dphy_0_c1
   (init_done,
    cl_txclkactivehs,
    cl_stopstate,
    cl_ulpsactivenot,
    dl0_txreadyhs,
    dl0_stopstate,
    dl0_ulpsactivenot,
    dl0_txreadyesc,
    dl1_txreadyhs,
    dl1_stopstate,
    dl1_ulpsactivenot,
    dl1_txreadyesc,
    dl2_txreadyhs,
    dl2_stopstate,
    dl2_ulpsactivenot,
    dl2_txreadyesc,
    dl3_txreadyhs,
    dl3_stopstate,
    dl3_ulpsactivenot,
    dl3_txreadyesc,
    data_txp,
    data_txn,
    clk_txp,
    clk_txn,
    txbyteclkhs_in,
    core_clk,
    core_rst,
    system_rst_in,
    cl_txrequesths,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_forcetxstopmode,
    dl0_enable,
    txclkesc_in,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_forcetxstopmode,
    dl1_enable,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_forcetxstopmode,
    dl2_enable,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_forcetxstopmode,
    dl3_enable,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    clkoutphy_in,
    pll_lock_in);
  output init_done;
  output cl_txclkactivehs;
  output cl_stopstate;
  output cl_ulpsactivenot;
  output dl0_txreadyhs;
  output dl0_stopstate;
  output dl0_ulpsactivenot;
  output dl0_txreadyesc;
  output dl1_txreadyhs;
  output dl1_stopstate;
  output dl1_ulpsactivenot;
  output dl1_txreadyesc;
  output dl2_txreadyhs;
  output dl2_stopstate;
  output dl2_ulpsactivenot;
  output dl2_txreadyesc;
  output dl3_txreadyhs;
  output dl3_stopstate;
  output dl3_ulpsactivenot;
  output dl3_txreadyesc;
  output [3:0]data_txp;
  output [3:0]data_txn;
  output clk_txp;
  output clk_txn;
  input txbyteclkhs_in;
  input core_clk;
  input core_rst;
  input system_rst_in;
  input cl_txrequesths;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  input dl0_forcetxstopmode;
  input dl0_enable;
  input txclkesc_in;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  input dl1_forcetxstopmode;
  input dl1_enable;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  input dl2_forcetxstopmode;
  input dl2_enable;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  input dl3_forcetxstopmode;
  input dl3_enable;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  input clkoutphy_in;
  input pll_lock_in;

  wire cl_enable;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txrequesths;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire clk_txn;
  wire clk_txp;
  wire clkoutphy_in;
  wire core_clk;
  wire core_rst;
  wire [3:0]data_txn;
  wire [3:0]data_txp;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire init_done;
  wire phy_rdy_all;
  wire phy_rst_w;
  wire pll_lock_in;
  wire system_rst_in;
  wire tx_cl_en_hs_tst_w;
  wire tx_cl_en_lp_tst_w;
  wire tx_cl_lp_cn_w;
  wire tx_cl_lp_cp_w;
  wire tx_dl0_en_hs_tst_w;
  wire tx_dl0_en_lp_tst_w;
  wire [7:0]tx_dl0_hs_dp_w;
  wire tx_dl0_lp_dn_w;
  wire tx_dl0_lp_dp_w;
  wire tx_dl1_en_hs_tst_w;
  wire tx_dl1_en_lp_tst_w;
  wire [7:0]tx_dl1_hs_dp_w;
  wire tx_dl1_lp_dn_w;
  wire tx_dl1_lp_dp_w;
  wire tx_dl2_en_hs_tst_w;
  wire tx_dl2_en_lp_tst_w;
  wire [7:0]tx_dl2_hs_dp_w;
  wire tx_dl2_lp_dn_w;
  wire tx_dl2_lp_dp_w;
  wire tx_dl3_en_hs_tst_w;
  wire tx_dl3_en_lp_tst_w;
  wire [7:0]tx_dl3_hs_dp_w;
  wire tx_dl3_lp_dn_w;
  wire tx_dl3_lp_dp_w;
  wire [6:6]tx_hs_clk_p_w;
  wire txbyteclkhs_in;
  wire txclkesc_in;
  wire \NLW_master_tx.dphy_tx_fab_top_core_ref_clk_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl0_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl1_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl2_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl3_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl4_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl5_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl6_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_stopstate_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_txbyteclkhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_txreadyesc_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_txreadyhs_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dl7_ulpsactivenot_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dphy_en_out_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_dphy_srst_out_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_s_axi_arready_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_s_axi_awready_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_s_axi_bvalid_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_s_axi_rvalid_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_s_axi_wready_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dp_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dp_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dp_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_hs_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_lp_tst_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dn_UNCONNECTED ;
  wire \NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dp_UNCONNECTED ;
  wire [1:0]\NLW_master_tx.dphy_tx_fab_top_s_axi_bresp_UNCONNECTED ;
  wire [31:0]\NLW_master_tx.dphy_tx_fab_top_s_axi_rdata_UNCONNECTED ;
  wire [1:0]\NLW_master_tx.dphy_tx_fab_top_s_axi_rresp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl4_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl5_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl6_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_dl7_hs_dp_UNCONNECTED ;
  wire [7:0]\NLW_master_tx.dphy_tx_fab_top_tx_hs_clk_p_UNCONNECTED ;
  wire \NLW_master_tx.mipi_dphy_0_tx65_hssio_i_dly_rdy_bsc0_UNCONNECTED ;
  wire \NLW_master_tx.mipi_dphy_0_tx65_hssio_i_dly_rdy_bsc1_UNCONNECTED ;
  wire \NLW_master_tx.mipi_dphy_0_tx65_hssio_i_dly_rdy_bsc2_UNCONNECTED ;
  wire \NLW_master_tx.mipi_dphy_0_tx65_hssio_i_vtc_rdy_bsc0_UNCONNECTED ;
  wire \NLW_master_tx.mipi_dphy_0_tx65_hssio_i_vtc_rdy_bsc1_UNCONNECTED ;
  wire \NLW_master_tx.mipi_dphy_0_tx65_hssio_i_vtc_rdy_bsc2_UNCONNECTED ;

  (* BYTE_UI_LOCAL = "8" *) 
  (* C_CLK_POST_VAL = "112" *) 
  (* C_CLK_PREPARE_VAL = "95" *) 
  (* C_CLK_PRE_VAL = "8" *) 
  (* C_CLK_TRAIL_VAL = "60" *) 
  (* C_CLK_ZERO_VAL = "205" *) 
  (* C_DPHY_LANES = "4" *) 
  (* C_DPHY_MODE = "MASTER" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_HS_OBUFTDS = "FALSE" *) 
  (* C_EN_REGISTER = "0" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_ESC_CLK_PERIOD = "50.000000" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_HS_EXIT_VAL = "100" *) 
  (* C_HS_LINE_RATE = "1000" *) 
  (* C_HS_PREPARE_VAL = "91" *) 
  (* C_HS_TRAIL_VAL = "64" *) 
  (* C_HS_TX_TIMEOUT = "65541" *) 
  (* C_HS_ZERO_VAL = "111" *) 
  (* C_INIT = "1000000" *) 
  (* C_IS_7SERIES = "FALSE" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_USE_LANE0_TXREADYHS = "TRUE" *) 
  (* C_WAKEUP = "1000000" *) 
  (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
  (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* IS_VERSAL = "0" *) 
  (* LINE_RATE_SPEC_SWITCH = "1500" *) 
  (* LP_STATE_CNT = "9" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* SKEW_CAL_FIRST_TIME = "4096" *) 
  (* SKEW_CAL_PERIODIC_TIME = "128" *) 
  (* SUPPORT_LEVEL = "0" *) 
  (* UI = "1000" *) 
  (* UI4 = "4" *) 
  (* UI52 = "52" *) 
  (* UI6 = "6" *) 
  (* UI8 = "8" *) 
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_fab_top \master_tx.dphy_tx_fab_top 
       (.active_lanes_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_tst_clk_in(1'b0),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .config_div4_clk(1'b0),
        .core_clk(core_clk),
        .core_ref_clk(\NLW_master_tx.dphy_tx_fab_top_core_ref_clk_UNCONNECTED ),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl0_txbyteclkhs_UNCONNECTED ),
        .dl0_txclkesc(txclkesc_in),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txreadyesc(dl0_txreadyesc),
        .dl0_txreadyhs(dl0_txreadyhs),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txskewcalhs(1'b0),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl1_txbyteclkhs_UNCONNECTED ),
        .dl1_txclkesc(1'b0),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txreadyesc(dl1_txreadyesc),
        .dl1_txreadyhs(dl1_txreadyhs),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txskewcalhs(1'b0),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl2_txbyteclkhs_UNCONNECTED ),
        .dl2_txclkesc(1'b0),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txreadyesc(dl2_txreadyesc),
        .dl2_txreadyhs(dl2_txreadyhs),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txskewcalhs(1'b0),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl3_txbyteclkhs_UNCONNECTED ),
        .dl3_txclkesc(1'b0),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txreadyesc(dl3_txreadyesc),
        .dl3_txreadyhs(dl3_txreadyhs),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txskewcalhs(1'b0),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl4_enable(1'b0),
        .dl4_forcetxstopmode(1'b0),
        .dl4_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl4_stopstate_UNCONNECTED ),
        .dl4_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl4_txbyteclkhs_UNCONNECTED ),
        .dl4_txclkesc(1'b0),
        .dl4_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl4_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl4_txlpdtesc(1'b0),
        .dl4_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl4_txreadyesc_UNCONNECTED ),
        .dl4_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl4_txreadyhs_UNCONNECTED ),
        .dl4_txrequestesc(1'b0),
        .dl4_txrequesths(1'b0),
        .dl4_txskewcalhs(1'b0),
        .dl4_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl4_txulpsesc(1'b0),
        .dl4_txulpsexit(1'b0),
        .dl4_txvalidesc(1'b0),
        .dl4_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl4_ulpsactivenot_UNCONNECTED ),
        .dl5_enable(1'b0),
        .dl5_forcetxstopmode(1'b0),
        .dl5_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl5_stopstate_UNCONNECTED ),
        .dl5_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl5_txbyteclkhs_UNCONNECTED ),
        .dl5_txclkesc(1'b0),
        .dl5_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl5_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl5_txlpdtesc(1'b0),
        .dl5_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl5_txreadyesc_UNCONNECTED ),
        .dl5_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl5_txreadyhs_UNCONNECTED ),
        .dl5_txrequestesc(1'b0),
        .dl5_txrequesths(1'b0),
        .dl5_txskewcalhs(1'b0),
        .dl5_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl5_txulpsesc(1'b0),
        .dl5_txulpsexit(1'b0),
        .dl5_txvalidesc(1'b0),
        .dl5_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl5_ulpsactivenot_UNCONNECTED ),
        .dl6_enable(1'b0),
        .dl6_forcetxstopmode(1'b0),
        .dl6_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl6_stopstate_UNCONNECTED ),
        .dl6_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl6_txbyteclkhs_UNCONNECTED ),
        .dl6_txclkesc(1'b0),
        .dl6_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl6_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl6_txlpdtesc(1'b0),
        .dl6_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl6_txreadyesc_UNCONNECTED ),
        .dl6_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl6_txreadyhs_UNCONNECTED ),
        .dl6_txrequestesc(1'b0),
        .dl6_txrequesths(1'b0),
        .dl6_txskewcalhs(1'b0),
        .dl6_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl6_txulpsesc(1'b0),
        .dl6_txulpsexit(1'b0),
        .dl6_txvalidesc(1'b0),
        .dl6_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl6_ulpsactivenot_UNCONNECTED ),
        .dl7_enable(1'b0),
        .dl7_forcetxstopmode(1'b0),
        .dl7_stopstate(\NLW_master_tx.dphy_tx_fab_top_dl7_stopstate_UNCONNECTED ),
        .dl7_txbyteclkhs(\NLW_master_tx.dphy_tx_fab_top_dl7_txbyteclkhs_UNCONNECTED ),
        .dl7_txclkesc(1'b0),
        .dl7_txdataesc({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl7_txdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl7_txlpdtesc(1'b0),
        .dl7_txreadyesc(\NLW_master_tx.dphy_tx_fab_top_dl7_txreadyesc_UNCONNECTED ),
        .dl7_txreadyhs(\NLW_master_tx.dphy_tx_fab_top_dl7_txreadyhs_UNCONNECTED ),
        .dl7_txrequestesc(1'b0),
        .dl7_txrequesths(1'b0),
        .dl7_txskewcalhs(1'b0),
        .dl7_txtriggeresc({1'b0,1'b0,1'b0,1'b0}),
        .dl7_txulpsesc(1'b0),
        .dl7_txulpsexit(1'b0),
        .dl7_txvalidesc(1'b0),
        .dl7_ulpsactivenot(\NLW_master_tx.dphy_tx_fab_top_dl7_ulpsactivenot_UNCONNECTED ),
        .dl_tst_clk_in(1'b0),
        .dphy_en_out(\NLW_master_tx.dphy_tx_fab_top_dphy_en_out_UNCONNECTED ),
        .dphy_srst_out(\NLW_master_tx.dphy_tx_fab_top_dphy_srst_out_UNCONNECTED ),
        .init_done(init_done),
        .oserdes_clkdiv_in(1'b0),
        .phy_ready(phy_rdy_all),
        .phy_rst(phy_rst_w),
        .s_axi_aclk(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_aresetn(1'b0),
        .s_axi_arready(\NLW_master_tx.dphy_tx_fab_top_s_axi_arready_UNCONNECTED ),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(\NLW_master_tx.dphy_tx_fab_top_s_axi_awready_UNCONNECTED ),
        .s_axi_awvalid(1'b0),
        .s_axi_bready(1'b0),
        .s_axi_bresp(\NLW_master_tx.dphy_tx_fab_top_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_bvalid(\NLW_master_tx.dphy_tx_fab_top_s_axi_bvalid_UNCONNECTED ),
        .s_axi_rdata(\NLW_master_tx.dphy_tx_fab_top_s_axi_rdata_UNCONNECTED [31:0]),
        .s_axi_rready(1'b0),
        .s_axi_rresp(\NLW_master_tx.dphy_tx_fab_top_s_axi_rresp_UNCONNECTED [1:0]),
        .s_axi_rvalid(\NLW_master_tx.dphy_tx_fab_top_s_axi_rvalid_UNCONNECTED ),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wready(\NLW_master_tx.dphy_tx_fab_top_s_axi_wready_UNCONNECTED ),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wvalid(1'b0),
        .system_rst_byteclk_in(1'b0),
        .system_rst_escclk_in(1'b0),
        .system_rst_in(system_rst_in),
        .system_rst_phybyteclk_in(1'b0),
        .tx_cl_en_hs_tst(tx_cl_en_hs_tst_w),
        .tx_cl_en_lp_tst(tx_cl_en_lp_tst_w),
        .tx_cl_lp_cn(tx_cl_lp_cn_w),
        .tx_cl_lp_cp(tx_cl_lp_cp_w),
        .tx_div4_clk(txbyteclkhs_in),
        .tx_dl0_en_hs_tst(tx_dl0_en_hs_tst_w),
        .tx_dl0_en_lp_tst(tx_dl0_en_lp_tst_w),
        .tx_dl0_hs_dp(tx_dl0_hs_dp_w),
        .tx_dl0_lp_dn(tx_dl0_lp_dn_w),
        .tx_dl0_lp_dp(tx_dl0_lp_dp_w),
        .tx_dl1_en_hs_tst(tx_dl1_en_hs_tst_w),
        .tx_dl1_en_lp_tst(tx_dl1_en_lp_tst_w),
        .tx_dl1_hs_dp(tx_dl1_hs_dp_w),
        .tx_dl1_lp_dn(tx_dl1_lp_dn_w),
        .tx_dl1_lp_dp(tx_dl1_lp_dp_w),
        .tx_dl2_en_hs_tst(tx_dl2_en_hs_tst_w),
        .tx_dl2_en_lp_tst(tx_dl2_en_lp_tst_w),
        .tx_dl2_hs_dp(tx_dl2_hs_dp_w),
        .tx_dl2_lp_dn(tx_dl2_lp_dn_w),
        .tx_dl2_lp_dp(tx_dl2_lp_dp_w),
        .tx_dl3_en_hs_tst(tx_dl3_en_hs_tst_w),
        .tx_dl3_en_lp_tst(tx_dl3_en_lp_tst_w),
        .tx_dl3_hs_dp(tx_dl3_hs_dp_w),
        .tx_dl3_lp_dn(tx_dl3_lp_dn_w),
        .tx_dl3_lp_dp(tx_dl3_lp_dp_w),
        .tx_dl4_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_hs_tst_UNCONNECTED ),
        .tx_dl4_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_en_lp_tst_UNCONNECTED ),
        .tx_dl4_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_hs_dp_UNCONNECTED [7:0]),
        .tx_dl4_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dn_UNCONNECTED ),
        .tx_dl4_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl4_lp_dp_UNCONNECTED ),
        .tx_dl5_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_hs_tst_UNCONNECTED ),
        .tx_dl5_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_en_lp_tst_UNCONNECTED ),
        .tx_dl5_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_hs_dp_UNCONNECTED [7:0]),
        .tx_dl5_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dn_UNCONNECTED ),
        .tx_dl5_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl5_lp_dp_UNCONNECTED ),
        .tx_dl6_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_hs_tst_UNCONNECTED ),
        .tx_dl6_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_en_lp_tst_UNCONNECTED ),
        .tx_dl6_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_hs_dp_UNCONNECTED [7:0]),
        .tx_dl6_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dn_UNCONNECTED ),
        .tx_dl6_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl6_lp_dp_UNCONNECTED ),
        .tx_dl7_en_hs_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_hs_tst_UNCONNECTED ),
        .tx_dl7_en_lp_tst(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_en_lp_tst_UNCONNECTED ),
        .tx_dl7_hs_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_hs_dp_UNCONNECTED [7:0]),
        .tx_dl7_lp_dn(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dn_UNCONNECTED ),
        .tx_dl7_lp_dp(\NLW_master_tx.dphy_tx_fab_top_tx_dl7_lp_dp_UNCONNECTED ),
        .tx_hs_clk_p({\NLW_master_tx.dphy_tx_fab_top_tx_hs_clk_p_UNCONNECTED [7],tx_hs_clk_p_w,\NLW_master_tx.dphy_tx_fab_top_tx_hs_clk_p_UNCONNECTED [5:0]}));
  (* CHECK_LICENSE_TYPE = "mipi_dphy_0_hssio_tx65,mipi_dphy_0_hssio_tx65_high_speed_selectio_wiz_v3_5_1,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "mipi_dphy_0_hssio_tx65_high_speed_selectio_wiz_v3_5_1,Vivado 2019.1" *) 
  mipi_dphy_0_mipi_dphy_0_hssio_tx65 \master_tx.mipi_dphy_0_tx65_hssio_i 
       (.bs_rst_dphy_in(1'b0),
        .clk_txn(clk_txn),
        .clk_txp(clk_txp),
        .data_from_fabric_clk_txp({1'b0,tx_hs_clk_p_w,1'b0,tx_hs_clk_p_w,1'b0,tx_hs_clk_p_w,1'b0,tx_hs_clk_p_w}),
        .data_from_fabric_data_txp0(tx_dl0_hs_dp_w),
        .data_from_fabric_data_txp1(tx_dl1_hs_dp_w),
        .data_from_fabric_data_txp2(tx_dl2_hs_dp_w),
        .data_from_fabric_data_txp3(tx_dl3_hs_dp_w),
        .data_txn0(data_txn[0]),
        .data_txn1(data_txn[1]),
        .data_txn2(data_txn[2]),
        .data_txn3(data_txn[3]),
        .data_txp0(data_txp[0]),
        .data_txp1(data_txp[1]),
        .data_txp2(data_txp[2]),
        .data_txp3(data_txp[3]),
        .dly_rdy_bsc0(\NLW_master_tx.mipi_dphy_0_tx65_hssio_i_dly_rdy_bsc0_UNCONNECTED ),
        .dly_rdy_bsc1(\NLW_master_tx.mipi_dphy_0_tx65_hssio_i_dly_rdy_bsc1_UNCONNECTED ),
        .dly_rdy_bsc2(\NLW_master_tx.mipi_dphy_0_tx65_hssio_i_dly_rdy_bsc2_UNCONNECTED ),
        .en_vtc_bsc0(1'b1),
        .en_vtc_bsc1(1'b1),
        .en_vtc_bsc2(1'b1),
        .lptx_i_n({tx_cl_lp_cn_w,tx_dl3_lp_dn_w,tx_dl1_lp_dn_w,tx_dl2_lp_dn_w,tx_dl0_lp_dn_w}),
        .lptx_i_p({tx_cl_lp_cp_w,tx_dl3_lp_dp_w,tx_dl1_lp_dp_w,tx_dl2_lp_dp_w,tx_dl0_lp_dp_w}),
        .lptx_t({tx_cl_en_lp_tst_w,tx_dl3_en_lp_tst_w,tx_dl1_en_lp_tst_w,tx_dl2_en_lp_tst_w,tx_dl0_en_lp_tst_w}),
        .riu_clk(core_clk),
        .rst(phy_rst_w),
        .rst_seq_done(phy_rdy_all),
        .shared_pll0_clkout0_in(txbyteclkhs_in),
        .shared_pll0_clkoutphy_in(clkoutphy_in),
        .shared_pll0_locked_in(pll_lock_in),
        .tri_t_0(tx_dl0_en_hs_tst_w),
        .tri_t_15(tx_cl_en_hs_tst_w),
        .tri_t_2(tx_dl2_en_hs_tst_w),
        .tri_t_4(tx_dl1_en_hs_tst_w),
        .tri_t_8(tx_dl3_en_hs_tst_w),
        .vtc_rdy_bsc0(\NLW_master_tx.mipi_dphy_0_tx65_hssio_i_vtc_rdy_bsc0_UNCONNECTED ),
        .vtc_rdy_bsc1(\NLW_master_tx.mipi_dphy_0_tx65_hssio_i_vtc_rdy_bsc1_UNCONNECTED ),
        .vtc_rdy_bsc2(\NLW_master_tx.mipi_dphy_0_tx65_hssio_i_vtc_rdy_bsc2_UNCONNECTED ));
endmodule

(* C_CAL_MODE = "FIXED" *) (* C_DIV4_CLK_PERIOD = "8.000000" *) (* C_DPHY_LANES = "4" *) 
(* C_DPHY_MODE = "MASTER" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_REG_IF = "0" *) 
(* C_EN_TIMEOUT_REGS = "0" *) (* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) 
(* C_EXAMPLE_SIMULATION = "false" *) (* C_HS_LINE_RATE = "1000" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "0" *) (* C_INIT = "1000000" *) (* C_LPX_PERIOD = "50" *) 
(* C_RCVE_DESKEW_SEQ = "false" *) (* C_SKEWCAL_FIRST_TIME = "4096" *) (* C_SKEWCAL_PERIODIC_TIME = "128" *) 
(* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) (* C_WAKEUP = "1000000" *) 
(* C_XMIT_FIRST_DESKEW_SEQ = "false" *) (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DPHY_PRESET = "None" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) (* ORIG_REF_NAME = "mipi_dphy_0_core" *) 
(* SUPPORT_LEVEL = "0" *) 
module mipi_dphy_0_mipi_dphy_0_core
   (core_clk,
    core_rst,
    txclkesc_in,
    txbyteclkhs_in,
    clkoutphy_in,
    pll_lock_in,
    system_rst_in,
    init_done,
    cl_txclkactivehs,
    cl_txrequesths,
    cl_stopstate,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    cl_ulpsactivenot,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_txreadyhs,
    dl0_forcetxstopmode,
    dl0_stopstate,
    dl0_enable,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_ulpsactivenot,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl0_txreadyesc,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_txreadyhs,
    dl1_forcetxstopmode,
    dl1_stopstate,
    dl1_enable,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_ulpsactivenot,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl1_txreadyesc,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_txreadyhs,
    dl2_forcetxstopmode,
    dl2_stopstate,
    dl2_enable,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_ulpsactivenot,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl2_txreadyesc,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_txreadyhs,
    dl3_forcetxstopmode,
    dl3_stopstate,
    dl3_enable,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_ulpsactivenot,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    dl3_txreadyesc,
    clk_txp,
    clk_txn,
    data_txp,
    data_txn);
  input core_clk;
  input core_rst;
  input txclkesc_in;
  input txbyteclkhs_in;
  input clkoutphy_in;
  input pll_lock_in;
  input system_rst_in;
  output init_done;
  output cl_txclkactivehs;
  input cl_txrequesths;
  output cl_stopstate;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  output cl_ulpsactivenot;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  output dl0_txreadyhs;
  input dl0_forcetxstopmode;
  output dl0_stopstate;
  input dl0_enable;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  output dl0_ulpsactivenot;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  output dl0_txreadyesc;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  output dl1_txreadyhs;
  input dl1_forcetxstopmode;
  output dl1_stopstate;
  input dl1_enable;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  output dl1_ulpsactivenot;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  output dl1_txreadyesc;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  output dl2_txreadyhs;
  input dl2_forcetxstopmode;
  output dl2_stopstate;
  input dl2_enable;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  output dl2_ulpsactivenot;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  output dl2_txreadyesc;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  output dl3_txreadyhs;
  input dl3_forcetxstopmode;
  output dl3_stopstate;
  input dl3_enable;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  output dl3_ulpsactivenot;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  output dl3_txreadyesc;
  output clk_txp;
  output clk_txn;
  output [3:0]data_txp;
  output [3:0]data_txn;

  wire cl_enable;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txrequesths;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire clk_txn;
  wire clk_txp;
  wire clkoutphy_in;
  wire core_clk;
  wire core_rst;
  wire [3:0]data_txn;
  wire [3:0]data_txp;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire init_done;
  wire pll_lock_in;
  wire system_rst_in;
  wire txbyteclkhs_in;
  wire txclkesc_in;

  mipi_dphy_0_mipi_dphy_0_c1 inst
       (.cl_enable(cl_enable),
        .cl_stopstate(cl_stopstate),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_txn(clk_txn),
        .clk_txp(clk_txp),
        .clkoutphy_in(clkoutphy_in),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_txn(data_txn),
        .data_txp(data_txp),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txreadyesc(dl0_txreadyesc),
        .dl0_txreadyhs(dl0_txreadyhs),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txreadyesc(dl1_txreadyesc),
        .dl1_txreadyhs(dl1_txreadyhs),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txreadyesc(dl2_txreadyesc),
        .dl2_txreadyhs(dl2_txreadyhs),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txreadyesc(dl3_txreadyesc),
        .dl3_txreadyhs(dl3_txreadyhs),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .init_done(init_done),
        .pll_lock_in(pll_lock_in),
        .system_rst_in(system_rst_in),
        .txbyteclkhs_in(txbyteclkhs_in),
        .txclkesc_in(txclkesc_in));
endmodule

(* CHECK_LICENSE_TYPE = "mipi_dphy_0_hssio_tx65,mipi_dphy_0_hssio_tx65_high_speed_selectio_wiz_v3_5_1,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_0_hssio_tx65" *) 
(* X_CORE_INFO = "mipi_dphy_0_hssio_tx65_high_speed_selectio_wiz_v3_5_1,Vivado 2019.1" *) 
module mipi_dphy_0_mipi_dphy_0_hssio_tx65
   (lptx_t,
    lptx_i_p,
    lptx_i_n,
    tri_t_0,
    tri_t_2,
    tri_t_4,
    tri_t_8,
    tri_t_15,
    vtc_rdy_bsc0,
    en_vtc_bsc0,
    vtc_rdy_bsc1,
    en_vtc_bsc1,
    vtc_rdy_bsc2,
    en_vtc_bsc2,
    dly_rdy_bsc0,
    dly_rdy_bsc1,
    dly_rdy_bsc2,
    rst_seq_done,
    shared_pll0_clkout0_in,
    shared_pll0_clkoutphy_in,
    shared_pll0_locked_in,
    rst,
    bs_rst_dphy_in,
    riu_clk,
    data_txp0,
    data_from_fabric_data_txp0,
    data_txn0,
    data_txp2,
    data_from_fabric_data_txp2,
    data_txn2,
    data_txp1,
    data_from_fabric_data_txp1,
    data_txn1,
    data_txp3,
    data_from_fabric_data_txp3,
    data_txn3,
    clk_txp,
    data_from_fabric_clk_txp,
    clk_txn);
  input [4:0]lptx_t;
  input [4:0]lptx_i_p;
  input [4:0]lptx_i_n;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL tri_t_0" *) input tri_t_0;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL tri_t_2" *) input tri_t_2;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL tri_t_4" *) input tri_t_4;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL tri_t_8" *) input tri_t_8;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL tri_t_15" *) input tri_t_15;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL vtc_rdy_bsc0" *) output vtc_rdy_bsc0;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL en_vtc_bsc0" *) input en_vtc_bsc0;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL vtc_rdy_bsc1" *) output vtc_rdy_bsc1;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL en_vtc_bsc1" *) input en_vtc_bsc1;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL vtc_rdy_bsc2" *) output vtc_rdy_bsc2;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL en_vtc_bsc2" *) input en_vtc_bsc2;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL dly_rdy_bsc0" *) output dly_rdy_bsc0;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL dly_rdy_bsc1" *) output dly_rdy_bsc1;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL dly_rdy_bsc2" *) output dly_rdy_bsc2;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL rst_seq_done" *) output rst_seq_done;
  input shared_pll0_clkout0_in;
  input shared_pll0_clkoutphy_in;
  input shared_pll0_locked_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 reset_rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME reset_rst, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input rst;
  input bs_rst_dphy_in;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_ctrl:1.0 HSSIO_CTRL riu_clk" *) input riu_clk;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin0" *) output data_txp0;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_fab_to_ip:1.0 data_from_fabric fabric_to_ip_0" *) input [7:0]data_from_fabric_data_txp0;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin1" *) output data_txn0;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin2" *) output data_txp2;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_fab_to_ip:1.0 data_from_fabric fabric_to_ip_2" *) input [7:0]data_from_fabric_data_txp2;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin3" *) output data_txn2;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin4" *) output data_txp1;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_fab_to_ip:1.0 data_from_fabric fabric_to_ip_4" *) input [7:0]data_from_fabric_data_txp1;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin5" *) output data_txn1;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin8" *) output data_txp3;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_fab_to_ip:1.0 data_from_fabric fabric_to_ip_8" *) input [7:0]data_from_fabric_data_txp3;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin9" *) output data_txn3;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin15" *) output clk_txp;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_fab_to_ip:1.0 data_from_fabric fabric_to_ip_15" *) input [7:0]data_from_fabric_clk_txp;
  (* X_INTERFACE_INFO = "xilinx.com:display_high_speed_selectio_wiz:hssio_data_tx:1.0 xiphy_tx_pins pin16" *) output clk_txn;

  wire bs_rst_dphy_in;
  wire clk_txn;
  wire clk_txp;
  wire [7:0]data_from_fabric_clk_txp;
  wire [7:0]data_from_fabric_data_txp0;
  wire [7:0]data_from_fabric_data_txp1;
  wire [7:0]data_from_fabric_data_txp2;
  wire [7:0]data_from_fabric_data_txp3;
  wire data_txn0;
  wire data_txn1;
  wire data_txn2;
  wire data_txn3;
  wire data_txp0;
  wire data_txp1;
  wire data_txp2;
  wire data_txp3;
  wire dly_rdy_bsc0;
  wire dly_rdy_bsc1;
  wire dly_rdy_bsc2;
  wire en_vtc_bsc0;
  wire en_vtc_bsc1;
  wire en_vtc_bsc2;
  wire [4:0]lptx_i_n;
  wire [4:0]lptx_i_p;
  wire [4:0]lptx_t;
  wire riu_clk;
  wire rst;
  wire rst_seq_done;
  wire shared_pll0_clkout0_in;
  wire shared_pll0_clkoutphy_in;
  wire shared_pll0_locked_in;
  wire tri_t_0;
  wire tri_t_15;
  wire tri_t_2;
  wire tri_t_4;
  wire tri_t_8;
  wire vtc_rdy_bsc0;
  wire vtc_rdy_bsc1;
  wire vtc_rdy_bsc2;
  wire NLW_inst_bitslip_error_0_UNCONNECTED;
  wire NLW_inst_bitslip_error_1_UNCONNECTED;
  wire NLW_inst_bitslip_error_10_UNCONNECTED;
  wire NLW_inst_bitslip_error_11_UNCONNECTED;
  wire NLW_inst_bitslip_error_12_UNCONNECTED;
  wire NLW_inst_bitslip_error_13_UNCONNECTED;
  wire NLW_inst_bitslip_error_14_UNCONNECTED;
  wire NLW_inst_bitslip_error_15_UNCONNECTED;
  wire NLW_inst_bitslip_error_16_UNCONNECTED;
  wire NLW_inst_bitslip_error_17_UNCONNECTED;
  wire NLW_inst_bitslip_error_18_UNCONNECTED;
  wire NLW_inst_bitslip_error_19_UNCONNECTED;
  wire NLW_inst_bitslip_error_2_UNCONNECTED;
  wire NLW_inst_bitslip_error_20_UNCONNECTED;
  wire NLW_inst_bitslip_error_21_UNCONNECTED;
  wire NLW_inst_bitslip_error_22_UNCONNECTED;
  wire NLW_inst_bitslip_error_23_UNCONNECTED;
  wire NLW_inst_bitslip_error_24_UNCONNECTED;
  wire NLW_inst_bitslip_error_25_UNCONNECTED;
  wire NLW_inst_bitslip_error_26_UNCONNECTED;
  wire NLW_inst_bitslip_error_27_UNCONNECTED;
  wire NLW_inst_bitslip_error_28_UNCONNECTED;
  wire NLW_inst_bitslip_error_29_UNCONNECTED;
  wire NLW_inst_bitslip_error_3_UNCONNECTED;
  wire NLW_inst_bitslip_error_30_UNCONNECTED;
  wire NLW_inst_bitslip_error_31_UNCONNECTED;
  wire NLW_inst_bitslip_error_32_UNCONNECTED;
  wire NLW_inst_bitslip_error_33_UNCONNECTED;
  wire NLW_inst_bitslip_error_34_UNCONNECTED;
  wire NLW_inst_bitslip_error_35_UNCONNECTED;
  wire NLW_inst_bitslip_error_36_UNCONNECTED;
  wire NLW_inst_bitslip_error_37_UNCONNECTED;
  wire NLW_inst_bitslip_error_38_UNCONNECTED;
  wire NLW_inst_bitslip_error_39_UNCONNECTED;
  wire NLW_inst_bitslip_error_4_UNCONNECTED;
  wire NLW_inst_bitslip_error_40_UNCONNECTED;
  wire NLW_inst_bitslip_error_41_UNCONNECTED;
  wire NLW_inst_bitslip_error_42_UNCONNECTED;
  wire NLW_inst_bitslip_error_43_UNCONNECTED;
  wire NLW_inst_bitslip_error_44_UNCONNECTED;
  wire NLW_inst_bitslip_error_45_UNCONNECTED;
  wire NLW_inst_bitslip_error_46_UNCONNECTED;
  wire NLW_inst_bitslip_error_47_UNCONNECTED;
  wire NLW_inst_bitslip_error_48_UNCONNECTED;
  wire NLW_inst_bitslip_error_49_UNCONNECTED;
  wire NLW_inst_bitslip_error_5_UNCONNECTED;
  wire NLW_inst_bitslip_error_50_UNCONNECTED;
  wire NLW_inst_bitslip_error_51_UNCONNECTED;
  wire NLW_inst_bitslip_error_6_UNCONNECTED;
  wire NLW_inst_bitslip_error_7_UNCONNECTED;
  wire NLW_inst_bitslip_error_8_UNCONNECTED;
  wire NLW_inst_bitslip_error_9_UNCONNECTED;
  wire NLW_inst_clk_from_ibuf_UNCONNECTED;
  wire NLW_inst_dly_rdy_bsc3_UNCONNECTED;
  wire NLW_inst_dly_rdy_bsc4_UNCONNECTED;
  wire NLW_inst_dly_rdy_bsc5_UNCONNECTED;
  wire NLW_inst_dly_rdy_bsc6_UNCONNECTED;
  wire NLW_inst_dly_rdy_bsc7_UNCONNECTED;
  wire NLW_inst_drdy_UNCONNECTED;
  wire NLW_inst_fifo_empty_0_UNCONNECTED;
  wire NLW_inst_fifo_empty_1_UNCONNECTED;
  wire NLW_inst_fifo_empty_10_UNCONNECTED;
  wire NLW_inst_fifo_empty_11_UNCONNECTED;
  wire NLW_inst_fifo_empty_12_UNCONNECTED;
  wire NLW_inst_fifo_empty_13_UNCONNECTED;
  wire NLW_inst_fifo_empty_14_UNCONNECTED;
  wire NLW_inst_fifo_empty_15_UNCONNECTED;
  wire NLW_inst_fifo_empty_16_UNCONNECTED;
  wire NLW_inst_fifo_empty_17_UNCONNECTED;
  wire NLW_inst_fifo_empty_18_UNCONNECTED;
  wire NLW_inst_fifo_empty_19_UNCONNECTED;
  wire NLW_inst_fifo_empty_2_UNCONNECTED;
  wire NLW_inst_fifo_empty_20_UNCONNECTED;
  wire NLW_inst_fifo_empty_21_UNCONNECTED;
  wire NLW_inst_fifo_empty_22_UNCONNECTED;
  wire NLW_inst_fifo_empty_23_UNCONNECTED;
  wire NLW_inst_fifo_empty_24_UNCONNECTED;
  wire NLW_inst_fifo_empty_25_UNCONNECTED;
  wire NLW_inst_fifo_empty_26_UNCONNECTED;
  wire NLW_inst_fifo_empty_27_UNCONNECTED;
  wire NLW_inst_fifo_empty_28_UNCONNECTED;
  wire NLW_inst_fifo_empty_29_UNCONNECTED;
  wire NLW_inst_fifo_empty_3_UNCONNECTED;
  wire NLW_inst_fifo_empty_30_UNCONNECTED;
  wire NLW_inst_fifo_empty_31_UNCONNECTED;
  wire NLW_inst_fifo_empty_32_UNCONNECTED;
  wire NLW_inst_fifo_empty_33_UNCONNECTED;
  wire NLW_inst_fifo_empty_34_UNCONNECTED;
  wire NLW_inst_fifo_empty_35_UNCONNECTED;
  wire NLW_inst_fifo_empty_36_UNCONNECTED;
  wire NLW_inst_fifo_empty_37_UNCONNECTED;
  wire NLW_inst_fifo_empty_38_UNCONNECTED;
  wire NLW_inst_fifo_empty_39_UNCONNECTED;
  wire NLW_inst_fifo_empty_4_UNCONNECTED;
  wire NLW_inst_fifo_empty_40_UNCONNECTED;
  wire NLW_inst_fifo_empty_41_UNCONNECTED;
  wire NLW_inst_fifo_empty_42_UNCONNECTED;
  wire NLW_inst_fifo_empty_43_UNCONNECTED;
  wire NLW_inst_fifo_empty_44_UNCONNECTED;
  wire NLW_inst_fifo_empty_45_UNCONNECTED;
  wire NLW_inst_fifo_empty_46_UNCONNECTED;
  wire NLW_inst_fifo_empty_47_UNCONNECTED;
  wire NLW_inst_fifo_empty_48_UNCONNECTED;
  wire NLW_inst_fifo_empty_49_UNCONNECTED;
  wire NLW_inst_fifo_empty_5_UNCONNECTED;
  wire NLW_inst_fifo_empty_50_UNCONNECTED;
  wire NLW_inst_fifo_empty_51_UNCONNECTED;
  wire NLW_inst_fifo_empty_6_UNCONNECTED;
  wire NLW_inst_fifo_empty_7_UNCONNECTED;
  wire NLW_inst_fifo_empty_8_UNCONNECTED;
  wire NLW_inst_fifo_empty_9_UNCONNECTED;
  wire NLW_inst_fifo_rd_data_valid_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_0_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_13_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_19_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_26_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_32_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_39_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_45_UNCONNECTED;
  wire NLW_inst_fifo_wr_clk_6_UNCONNECTED;
  wire NLW_inst_intf_rdy_UNCONNECTED;
  wire NLW_inst_pll0_clkout0_UNCONNECTED;
  wire NLW_inst_pll0_clkout1_UNCONNECTED;
  wire NLW_inst_pll0_locked_UNCONNECTED;
  wire NLW_inst_pll1_clkout0_UNCONNECTED;
  wire NLW_inst_pll1_locked_UNCONNECTED;
  wire NLW_inst_riu_valid_bg0_UNCONNECTED;
  wire NLW_inst_riu_valid_bg0_bs0_UNCONNECTED;
  wire NLW_inst_riu_valid_bg0_bs1_UNCONNECTED;
  wire NLW_inst_riu_valid_bg1_UNCONNECTED;
  wire NLW_inst_riu_valid_bg1_bs2_UNCONNECTED;
  wire NLW_inst_riu_valid_bg1_bs3_UNCONNECTED;
  wire NLW_inst_riu_valid_bg2_UNCONNECTED;
  wire NLW_inst_riu_valid_bg2_bs4_UNCONNECTED;
  wire NLW_inst_riu_valid_bg2_bs5_UNCONNECTED;
  wire NLW_inst_riu_valid_bg3_UNCONNECTED;
  wire NLW_inst_riu_valid_bg3_bs6_UNCONNECTED;
  wire NLW_inst_riu_valid_bg3_bs7_UNCONNECTED;
  wire NLW_inst_rx_bitslip_sync_done_UNCONNECTED;
  wire NLW_inst_rxtx_bitslip_sync_done_UNCONNECTED;
  wire NLW_inst_shared_pll0_clkoutphy_out_UNCONNECTED;
  wire NLW_inst_shared_pll1_clkoutphy_out_UNCONNECTED;
  wire NLW_inst_vtc_rdy_bsc3_UNCONNECTED;
  wire NLW_inst_vtc_rdy_bsc4_UNCONNECTED;
  wire NLW_inst_vtc_rdy_bsc5_UNCONNECTED;
  wire NLW_inst_vtc_rdy_bsc6_UNCONNECTED;
  wire NLW_inst_vtc_rdy_bsc7_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout0_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout1_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout2_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout3_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout4_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout5_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout6_UNCONNECTED;
  wire [8:0]NLW_inst_bidir_tx_bs_tri_cntvalueout7_UNCONNECTED;
  wire [15:0]NLW_inst_do_out_UNCONNECTED;
  wire [4:0]NLW_inst_lp_rx_o_n_UNCONNECTED;
  wire [4:0]NLW_inst_lp_rx_o_p_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg0_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg0_bs0_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg0_bs1_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg1_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg1_bs2_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg1_bs3_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg2_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg2_bs4_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg2_bs5_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg3_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg3_bs6_UNCONNECTED;
  wire [15:0]NLW_inst_riu_rd_data_bg3_bs7_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_0_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_1_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_10_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_11_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_12_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_13_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_14_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_15_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_16_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_17_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_18_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_19_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_2_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_20_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_21_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_22_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_23_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_24_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_25_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_26_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_27_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_28_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_29_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_3_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_30_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_31_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_32_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_33_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_34_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_35_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_36_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_37_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_38_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_39_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_4_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_40_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_41_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_42_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_43_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_44_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_45_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_46_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_47_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_48_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_49_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_5_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_50_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_51_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_6_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_7_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_8_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_9_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_0_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_1_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_10_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_11_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_12_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_13_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_14_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_15_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_16_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_17_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_18_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_19_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_2_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_20_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_21_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_22_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_23_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_24_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_25_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_26_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_27_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_28_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_29_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_3_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_30_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_31_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_32_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_33_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_34_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_35_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_36_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_37_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_38_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_39_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_4_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_40_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_41_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_42_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_43_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_44_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_45_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_46_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_47_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_48_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_49_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_5_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_50_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_51_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_6_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_7_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_8_UNCONNECTED;
  wire [8:0]NLW_inst_rx_cntvalueout_ext_9_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_0_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_1_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_10_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_11_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_12_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_13_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_14_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_15_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_16_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_17_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_18_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_19_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_2_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_20_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_21_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_22_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_23_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_24_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_25_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_26_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_27_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_28_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_29_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_3_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_30_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_31_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_32_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_33_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_34_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_35_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_36_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_37_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_38_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_39_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_4_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_40_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_41_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_42_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_43_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_44_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_45_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_46_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_47_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_48_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_49_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_5_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_50_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_51_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_6_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_7_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_8_UNCONNECTED;
  wire [8:0]NLW_inst_tx_cntvalueout_9_UNCONNECTED;

  (* C_ALL_EN_PIN_INFO = "0 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp0 loc W8} 1 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn0 loc Y8} 2 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp2 loc U9} 3 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn2 loc V9} 4 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp1 loc U8} 5 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn1 loc V8} 8 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp3 loc R7} 9 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn3 loc T7} 15 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txp loc J1} 16 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txn loc H1}" *) 
  (* C_ALL_RX_EN = "52'b0000000000000000000000000000000000000000000000000000" *) 
  (* C_BANK = "65" *) 
  (* C_BIDIR_BITSLICE_EN = "52'b0000000000000000000000000000000000000000000000000000" *) 
  (* C_BIDIR_FIFO_SYNC_MODE = "FALSE" *) 
  (* C_BIDIR_IS_RX_CLK_INVERTED = "1'b0" *) 
  (* C_BIDIR_IS_RX_RST_DLY_INVERTED = "1'b0" *) 
  (* C_BIDIR_IS_RX_RST_INVERTED = "1'b0" *) 
  (* C_BIDIR_IS_TX_CLK_INVERTED = "1'b0" *) 
  (* C_BIDIR_IS_TX_RST_DLY_INVERTED = "1'b0" *) 
  (* C_BIDIR_IS_TX_RST_INVERTED = "1'b0" *) 
  (* C_BIDIR_RX_DELAY_FORMAT = "TIME" *) 
  (* C_BIDIR_TX_DELAY_FORMAT = "TIME" *) 
  (* C_BITSLIP_MODE = "SLIP_PER_BIT" *) 
  (* C_BITSLIP_VAL = "8'b00101100" *) 
  (* C_BS0_INFO = "0 {name bg0_pin0_nc loc W8} 1 {name bg0_pin6_nc loc R8} 2 {name bg1_pin0_nc loc L1} 3 {name bg1_pin6_nc loc H4} 4 {name bg2_pin0_nc loc L7} 5 {name bg2_pin6_nc loc P7} 6 {name bg3_pin0_nc loc J5} 7 {name bg3_pin6_nc loc K8}" *) 
  (* C_BSC_CTRL_CLK = "EXTERNAL" *) 
  (* C_BSC_EN_DYN_ODLY_MODE = "FALSE" *) 
  (* C_BSC_IDLY_VT_TRACK = "TRUE" *) 
  (* C_BSC_ODLY_VT_TRACK = "TRUE" *) 
  (* C_BSC_QDLY_VT_TRACK = "TRUE" *) 
  (* C_BSC_READ_IDLE_COUNT = "6'b000000" *) 
  (* C_BSC_REFCLK_SRC = "PLLCLK" *) 
  (* C_BSC_ROUNDING_FACTOR = "16" *) 
  (* C_BSC_RXGATE_EXTEND = "FALSE" *) 
  (* C_BSC_RX_GATING = "DISABLE" *) 
  (* C_BSC_SELF_CALIBRATE = "ENABLE" *) 
  (* C_BSC_SIM_SPEEDUP = "FAST" *) 
  (* C_BS_INIT_VAL = "52'b0000000000000000000000000000000000010000001000101010" *) 
  (* C_CLKIN_DIFF_EN = "0" *) 
  (* C_CLKIN_PERIOD = "8.000000" *) 
  (* C_CLK_FWD = "0" *) 
  (* C_CLK_FWD_BITSLICE_NO = "15" *) 
  (* C_CLK_FWD_ENABLE = "52'b0000000000000000000000000000000000011000000000000000" *) 
  (* C_CLK_FWD_PHASE = "90" *) 
  (* C_CLK_SIG_TYPE = "SINGLE" *) 
  (* C_CLOCK_TRI = "1" *) 
  (* C_DATA_PIN_EN = "5" *) 
  (* C_DATA_TRI = "1" *) 
  (* C_DEVICE = "xczu5ev" *) 
  (* C_DEVICE_FAMILY = "zynquplus" *) 
  (* C_DIFFERENTIAL_IO_STD = "MIPI_DPHY_DCI" *) 
  (* C_DIFFERENTIAL_IO_TERMINATION = "NONE" *) 
  (* C_DIFF_EN = "52'b0000000000000000000000000000000000011000001100111111" *) 
  (* C_DIV_MODE = "DIV4" *) 
  (* C_ENABLE_BITSLIP = "0" *) 
  (* C_ENABLE_DATA_BITSLIP = "0" *) 
  (* C_ENABLE_N_PINS = "1" *) 
  (* C_ENABLE_PLL0_PLLOUT1 = "0" *) 
  (* C_ENABLE_PLL0_PLLOUTFB = "0" *) 
  (* C_ENABLE_RIU_INTERFACE = "0" *) 
  (* C_ENABLE_RIU_SPLIT = "0" *) 
  (* C_ENABLE_TX_TRI = "0" *) 
  (* C_EN_BIDIR = "0" *) 
  (* C_EN_BSC0 = "1" *) 
  (* C_EN_BSC1 = "1" *) 
  (* C_EN_BSC2 = "1" *) 
  (* C_EN_BSC3 = "0" *) 
  (* C_EN_BSC4 = "0" *) 
  (* C_EN_BSC5 = "0" *) 
  (* C_EN_BSC6 = "0" *) 
  (* C_EN_BSC7 = "0" *) 
  (* C_EN_MULTI_INTF_PORTS = "0" *) 
  (* C_EN_RIU_OR0 = "TRUE" *) 
  (* C_EN_RIU_OR1 = "FALSE" *) 
  (* C_EN_RIU_OR2 = "FALSE" *) 
  (* C_EN_RIU_OR3 = "FALSE" *) 
  (* C_EN_RX = "0" *) 
  (* C_EN_TX = "1" *) 
  (* C_EN_VTC = "0" *) 
  (* C_EXDES_BANK = "64_(HP)" *) 
  (* C_EX_CLK_FREQ = "125.000000" *) 
  (* C_EX_INST_GEN = "0" *) 
  (* C_FIFO_SYNC_MODE = "1" *) 
  (* C_GC_LOC = "21 {name IO_L11P_T1U_N8_GC_65 loc K4} 23 {name IO_L12P_T1U_N10_GC_65 loc L3} 28 {name IO_L14P_T2L_N2_GC_65 loc M6}" *) 
  (* C_INCLK_LOC = "NONE" *) 
  (* C_INCLK_PIN = "100" *) 
  (* C_INV_RX_CLK = "8'b00000000" *) 
  (* C_NIB0_BS0_EN = "0" *) 
  (* C_NIB0_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB0_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB0_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB0_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIB1_BS0_EN = "0" *) 
  (* C_NIB1_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB1_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB1_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB1_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIB2_BS0_EN = "0" *) 
  (* C_NIB2_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB2_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB2_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB2_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIB3_BS0_EN = "0" *) 
  (* C_NIB3_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB3_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB3_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB3_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIB4_BS0_EN = "0" *) 
  (* C_NIB4_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB4_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB4_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB4_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIB5_BS0_EN = "0" *) 
  (* C_NIB5_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB5_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB5_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB5_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIB6_BS0_EN = "0" *) 
  (* C_NIB6_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB6_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB6_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB6_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIB7_BS0_EN = "0" *) 
  (* C_NIB7_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
  (* C_NIB7_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
  (* C_NIB7_EN_OTHER_NCLK = "1'b0" *) 
  (* C_NIB7_EN_OTHER_PCLK = "1'b0" *) 
  (* C_NIBBLE0_TRI = "0" *) 
  (* C_NIBBLE1_TRI = "0" *) 
  (* C_NIBBLE2_TRI = "0" *) 
  (* C_NIBBLE3_TRI = "0" *) 
  (* C_NIBBLE4_TRI = "0" *) 
  (* C_NIBBLE5_TRI = "0" *) 
  (* C_NIBBLE6_TRI = "0" *) 
  (* C_NIBBLE7_TRI = "0" *) 
  (* C_PIN_INFO = "0 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp0 loc W8} 1 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn0 loc Y8} 2 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp2 loc U9} 3 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn2 loc V9} 4 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp1 loc U8} 5 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn1 loc V8} 8 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp3 loc R7} 9 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn3 loc T7} 15 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txp loc J1} 16 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txn loc H1}" *) 
  (* C_PLL0_CLK0_PHASE = "0.000000" *) 
  (* C_PLL0_CLK1_PHASE = "0.000000" *) 
  (* C_PLL0_CLKFBOUT_MULT = "8" *) 
  (* C_PLL0_CLKOUT1_DIVIDE = "1" *) 
  (* C_PLL0_CLKOUTPHY_MODE = "VCO" *) 
  (* C_PLL0_CLK_SOURCE = "BUFG_TO_PLL" *) 
  (* C_PLL0_DIVCLK_DIVIDE = "1" *) 
  (* C_PLL0_DIV_FACTOR = "1.000000" *) 
  (* C_PLL0_FIFO_WRITE_CLK_EN = "0" *) 
  (* C_PLL0_MMCM_CLKFBOUT_MULT_F = "12.750000" *) 
  (* C_PLL0_MMCM_CLKOUT0_DIVIDE_F = "12.750000" *) 
  (* C_PLL0_MMCM_DIVCLK_DIVIDE = "1" *) 
  (* C_PLL0_RX_EXTERNAL_CLK_TO_DATA = "5" *) 
  (* C_PLL1_CLK0_PHASE = "0.000000" *) 
  (* C_PLL1_CLK1_PHASE = "0.000000" *) 
  (* C_PLL1_CLKFBOUT_MULT = "8" *) 
  (* C_PLL1_CLKOUTPHY_MODE = "VCO" *) 
  (* C_PLL1_DIVCLK_DIVIDE = "1" *) 
  (* C_PLL1_DIV_FACTOR = "1.000000" *) 
  (* C_PLL_SHARING = "1" *) 
  (* C_PLL_VCOMIN = "750.000000" *) 
  (* C_REC_IN_FREQ = "125.000" *) 
  (* C_RX_BITSLICE0_EN = "8'b00000000" *) 
  (* C_RX_BITSLICE_EN = "52'b0000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_DELAY_CASCADE = "0" *) 
  (* C_RX_DELAY_FORMAT = "TIME" *) 
  (* C_RX_DELAY_TYPE = "2'b00" *) 
  (* C_RX_DELAY_TYPE0 = "2'b00" *) 
  (* C_RX_DELAY_TYPE1 = "2'b00" *) 
  (* C_RX_DELAY_TYPE10 = "2'b00" *) 
  (* C_RX_DELAY_TYPE11 = "2'b00" *) 
  (* C_RX_DELAY_TYPE12 = "2'b00" *) 
  (* C_RX_DELAY_TYPE13 = "2'b00" *) 
  (* C_RX_DELAY_TYPE14 = "2'b00" *) 
  (* C_RX_DELAY_TYPE15 = "2'b00" *) 
  (* C_RX_DELAY_TYPE16 = "2'b00" *) 
  (* C_RX_DELAY_TYPE17 = "2'b00" *) 
  (* C_RX_DELAY_TYPE18 = "2'b00" *) 
  (* C_RX_DELAY_TYPE19 = "2'b00" *) 
  (* C_RX_DELAY_TYPE2 = "2'b00" *) 
  (* C_RX_DELAY_TYPE20 = "2'b00" *) 
  (* C_RX_DELAY_TYPE21 = "2'b00" *) 
  (* C_RX_DELAY_TYPE22 = "2'b00" *) 
  (* C_RX_DELAY_TYPE23 = "2'b00" *) 
  (* C_RX_DELAY_TYPE24 = "2'b00" *) 
  (* C_RX_DELAY_TYPE25 = "2'b00" *) 
  (* C_RX_DELAY_TYPE26 = "2'b00" *) 
  (* C_RX_DELAY_TYPE27 = "2'b00" *) 
  (* C_RX_DELAY_TYPE28 = "2'b00" *) 
  (* C_RX_DELAY_TYPE29 = "2'b00" *) 
  (* C_RX_DELAY_TYPE3 = "2'b00" *) 
  (* C_RX_DELAY_TYPE30 = "2'b00" *) 
  (* C_RX_DELAY_TYPE31 = "2'b00" *) 
  (* C_RX_DELAY_TYPE32 = "2'b00" *) 
  (* C_RX_DELAY_TYPE33 = "2'b00" *) 
  (* C_RX_DELAY_TYPE34 = "2'b00" *) 
  (* C_RX_DELAY_TYPE35 = "2'b00" *) 
  (* C_RX_DELAY_TYPE36 = "2'b00" *) 
  (* C_RX_DELAY_TYPE37 = "2'b00" *) 
  (* C_RX_DELAY_TYPE38 = "2'b00" *) 
  (* C_RX_DELAY_TYPE39 = "2'b00" *) 
  (* C_RX_DELAY_TYPE4 = "2'b00" *) 
  (* C_RX_DELAY_TYPE40 = "2'b00" *) 
  (* C_RX_DELAY_TYPE41 = "2'b00" *) 
  (* C_RX_DELAY_TYPE42 = "2'b00" *) 
  (* C_RX_DELAY_TYPE43 = "2'b00" *) 
  (* C_RX_DELAY_TYPE44 = "2'b00" *) 
  (* C_RX_DELAY_TYPE45 = "2'b00" *) 
  (* C_RX_DELAY_TYPE46 = "2'b00" *) 
  (* C_RX_DELAY_TYPE47 = "2'b00" *) 
  (* C_RX_DELAY_TYPE48 = "2'b00" *) 
  (* C_RX_DELAY_TYPE49 = "2'b00" *) 
  (* C_RX_DELAY_TYPE5 = "2'b00" *) 
  (* C_RX_DELAY_TYPE50 = "2'b00" *) 
  (* C_RX_DELAY_TYPE51 = "2'b00" *) 
  (* C_RX_DELAY_TYPE6 = "2'b00" *) 
  (* C_RX_DELAY_TYPE7 = "2'b00" *) 
  (* C_RX_DELAY_TYPE8 = "2'b00" *) 
  (* C_RX_DELAY_TYPE9 = "2'b00" *) 
  (* C_RX_DELAY_VALUE = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE0 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE1 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE10 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE11 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE12 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE13 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE14 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE15 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE16 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE17 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE18 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE19 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE2 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE20 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE21 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE22 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE23 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE24 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE25 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE26 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE27 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE28 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE29 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE3 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE30 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE31 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE32 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE33 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE34 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE35 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE36 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE37 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE38 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE39 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE4 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE40 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE41 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE42 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE43 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE44 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE45 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE46 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE47 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE48 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE49 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE5 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE50 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE51 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE6 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE7 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE8 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE9 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT0 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT1 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT10 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT11 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT12 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT13 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT14 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT15 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT16 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT17 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT18 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT19 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT2 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT20 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT21 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT22 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT23 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT24 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT25 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT26 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT27 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT28 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT29 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT3 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT30 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT31 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT32 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT33 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT34 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT35 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT36 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT37 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT38 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT39 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT4 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT40 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT41 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT42 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT43 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT44 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT45 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT46 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT47 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT48 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT49 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT5 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT50 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT51 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT6 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT7 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT8 = "12'b000000000000" *) 
  (* C_RX_DELAY_VALUE_EXT9 = "12'b000000000000" *) 
  (* C_RX_EQUALIZATION_D = "NONE" *) 
  (* C_RX_EQUALIZATION_S = "NONE" *) 
  (* C_RX_FIFO_SYNC_MODE = "FALSE" *) 
  (* C_RX_IS_CLK_EXT_INVERTED = "1'b0" *) 
  (* C_RX_IS_CLK_INVERTED = "1'b0" *) 
  (* C_RX_IS_RST_DLY_EXT_INVERTED = "1'b0" *) 
  (* C_RX_IS_RST_DLY_INVERTED = "1'b0" *) 
  (* C_RX_IS_RST_INVERTED = "1'b0" *) 
  (* C_RX_PIN_EN = "52'b0000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_REFCLK_FREQ = "1000" *) 
  (* C_RX_STROBE_EN = "16'b0000000000000000" *) 
  (* C_SERIALIZATION_FACTOR = "8" *) 
  (* C_SERIAL_MODE = "FALSE" *) 
  (* C_SIM_DEVICE = "ULTRASCALE_PLUS_ES1" *) 
  (* C_SIM_VERSION = "2.000000" *) 
  (* C_SINGLE_ENDED_IO_STD = "NONE" *) 
  (* C_SINGLE_ENDED_IO_TERMINATION = "NONE" *) 
  (* C_STRB_INFO = "99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99" *) 
  (* C_TEMPLATE = "1" *) 
  (* C_TX_BITSLICE_EN = "52'b0000000000000000000000000000000000001000000100010101" *) 
  (* C_TX_DATA_PHASE = "0" *) 
  (* C_TX_DELAY_FORMAT = "TIME" *) 
  (* C_TX_DELAY_TYPE = "0" *) 
  (* C_TX_DELAY_TYPE0 = "2'b00" *) 
  (* C_TX_DELAY_TYPE1 = "2'b00" *) 
  (* C_TX_DELAY_TYPE10 = "2'b00" *) 
  (* C_TX_DELAY_TYPE11 = "2'b00" *) 
  (* C_TX_DELAY_TYPE12 = "2'b00" *) 
  (* C_TX_DELAY_TYPE13 = "2'b00" *) 
  (* C_TX_DELAY_TYPE14 = "2'b00" *) 
  (* C_TX_DELAY_TYPE15 = "2'b00" *) 
  (* C_TX_DELAY_TYPE16 = "2'b00" *) 
  (* C_TX_DELAY_TYPE17 = "2'b00" *) 
  (* C_TX_DELAY_TYPE18 = "2'b00" *) 
  (* C_TX_DELAY_TYPE19 = "2'b00" *) 
  (* C_TX_DELAY_TYPE2 = "2'b00" *) 
  (* C_TX_DELAY_TYPE20 = "2'b00" *) 
  (* C_TX_DELAY_TYPE21 = "2'b00" *) 
  (* C_TX_DELAY_TYPE22 = "2'b00" *) 
  (* C_TX_DELAY_TYPE23 = "2'b00" *) 
  (* C_TX_DELAY_TYPE24 = "2'b00" *) 
  (* C_TX_DELAY_TYPE25 = "2'b00" *) 
  (* C_TX_DELAY_TYPE26 = "2'b00" *) 
  (* C_TX_DELAY_TYPE27 = "2'b00" *) 
  (* C_TX_DELAY_TYPE28 = "2'b00" *) 
  (* C_TX_DELAY_TYPE29 = "2'b00" *) 
  (* C_TX_DELAY_TYPE3 = "2'b00" *) 
  (* C_TX_DELAY_TYPE30 = "2'b00" *) 
  (* C_TX_DELAY_TYPE31 = "2'b00" *) 
  (* C_TX_DELAY_TYPE32 = "2'b00" *) 
  (* C_TX_DELAY_TYPE33 = "2'b00" *) 
  (* C_TX_DELAY_TYPE34 = "2'b00" *) 
  (* C_TX_DELAY_TYPE35 = "2'b00" *) 
  (* C_TX_DELAY_TYPE36 = "2'b00" *) 
  (* C_TX_DELAY_TYPE37 = "2'b00" *) 
  (* C_TX_DELAY_TYPE38 = "2'b00" *) 
  (* C_TX_DELAY_TYPE39 = "2'b00" *) 
  (* C_TX_DELAY_TYPE4 = "2'b00" *) 
  (* C_TX_DELAY_TYPE40 = "2'b00" *) 
  (* C_TX_DELAY_TYPE41 = "2'b00" *) 
  (* C_TX_DELAY_TYPE42 = "2'b00" *) 
  (* C_TX_DELAY_TYPE43 = "2'b00" *) 
  (* C_TX_DELAY_TYPE44 = "2'b00" *) 
  (* C_TX_DELAY_TYPE45 = "2'b00" *) 
  (* C_TX_DELAY_TYPE46 = "2'b00" *) 
  (* C_TX_DELAY_TYPE47 = "2'b00" *) 
  (* C_TX_DELAY_TYPE48 = "2'b00" *) 
  (* C_TX_DELAY_TYPE49 = "2'b00" *) 
  (* C_TX_DELAY_TYPE5 = "2'b00" *) 
  (* C_TX_DELAY_TYPE50 = "2'b00" *) 
  (* C_TX_DELAY_TYPE51 = "2'b00" *) 
  (* C_TX_DELAY_TYPE6 = "2'b00" *) 
  (* C_TX_DELAY_TYPE7 = "2'b00" *) 
  (* C_TX_DELAY_TYPE8 = "2'b00" *) 
  (* C_TX_DELAY_TYPE9 = "2'b00" *) 
  (* C_TX_DELAY_VALUE = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE0 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE1 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE10 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE11 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE12 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE13 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE14 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE15 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE16 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE17 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE18 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE19 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE2 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE20 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE21 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE22 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE23 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE24 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE25 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE26 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE27 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE28 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE29 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE3 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE30 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE31 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE32 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE33 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE34 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE35 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE36 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE37 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE38 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE39 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE4 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE40 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE41 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE42 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE43 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE44 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE45 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE46 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE47 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE48 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE49 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE5 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE50 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE51 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE6 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE7 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE8 = "12'b000000000000" *) 
  (* C_TX_DELAY_VALUE9 = "12'b000000000000" *) 
  (* C_TX_DRIVE_D = "" *) 
  (* C_TX_DRIVE_S = "NONE" *) 
  (* C_TX_IS_CLK_INVERTED = "1'b0" *) 
  (* C_TX_IS_RST_DLY_INVERTED = "1'b0" *) 
  (* C_TX_IS_RST_INVERTED = "1'b0" *) 
  (* C_TX_NATIVE_ODELAY_BYPASS = "FALSE" *) 
  (* C_TX_PRE_EMPHASIS_D = "NONE" *) 
  (* C_TX_PRE_EMPHASIS_S = "NONE" *) 
  (* C_TX_REFCLK_FREQ = "1000" *) 
  (* C_TX_SLEW_D = "" *) 
  (* C_TX_SLEW_S = "NONE" *) 
  (* C_TX_TRI_DELAY_FORMAT = "TIME" *) 
  (* C_TX_TRI_INIT = "1'b1" *) 
  (* C_TX_TRI_IS_CLK_INVERTED = "1'b0" *) 
  (* C_TX_TRI_IS_RST_DLY_INVERTED = "1'b0" *) 
  (* C_TX_TRI_IS_RST_INVERTED = "1'b0" *) 
  (* C_TX_TRI_NATIVE_ODELAY_BYPASS = "FALSE" *) 
  (* C_TX_TRI_OUTPUT_PHASE_90 = "FALSE" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* TX_BITSLICE_TRI_EN = "8'b00000000" *) 
  mipi_dphy_0_mipi_dphy_0_hssio_tx65_high_speed_selectio_wiz_v3_5_1 inst
       (.app_clk(1'b0),
        .bg0_pin0_nc(1'b0),
        .bg0_pin6_nc(1'b0),
        .bg1_pin0_nc(1'b0),
        .bg1_pin6_nc(1'b0),
        .bg2_pin0_nc(1'b0),
        .bg2_pin6_nc(1'b0),
        .bg3_pin0_nc(1'b0),
        .bg3_pin6_nc(1'b0),
        .bidir_rx_clk(1'b0),
        .bidir_tx_bs_tri_ce0(1'b0),
        .bidir_tx_bs_tri_ce1(1'b0),
        .bidir_tx_bs_tri_ce2(1'b0),
        .bidir_tx_bs_tri_ce3(1'b0),
        .bidir_tx_bs_tri_ce4(1'b0),
        .bidir_tx_bs_tri_ce5(1'b0),
        .bidir_tx_bs_tri_ce6(1'b0),
        .bidir_tx_bs_tri_ce7(1'b0),
        .bidir_tx_bs_tri_clk(1'b0),
        .bidir_tx_bs_tri_cntvaluein0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvaluein1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvaluein2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvaluein3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvaluein4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvaluein5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvaluein6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvaluein7({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .bidir_tx_bs_tri_cntvalueout0(NLW_inst_bidir_tx_bs_tri_cntvalueout0_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_cntvalueout1(NLW_inst_bidir_tx_bs_tri_cntvalueout1_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_cntvalueout2(NLW_inst_bidir_tx_bs_tri_cntvalueout2_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_cntvalueout3(NLW_inst_bidir_tx_bs_tri_cntvalueout3_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_cntvalueout4(NLW_inst_bidir_tx_bs_tri_cntvalueout4_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_cntvalueout5(NLW_inst_bidir_tx_bs_tri_cntvalueout5_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_cntvalueout6(NLW_inst_bidir_tx_bs_tri_cntvalueout6_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_cntvalueout7(NLW_inst_bidir_tx_bs_tri_cntvalueout7_UNCONNECTED[8:0]),
        .bidir_tx_bs_tri_en_vtc0(1'b0),
        .bidir_tx_bs_tri_en_vtc1(1'b0),
        .bidir_tx_bs_tri_en_vtc2(1'b0),
        .bidir_tx_bs_tri_en_vtc3(1'b0),
        .bidir_tx_bs_tri_en_vtc4(1'b0),
        .bidir_tx_bs_tri_en_vtc5(1'b0),
        .bidir_tx_bs_tri_en_vtc6(1'b0),
        .bidir_tx_bs_tri_en_vtc7(1'b0),
        .bidir_tx_bs_tri_inc0(1'b0),
        .bidir_tx_bs_tri_inc1(1'b0),
        .bidir_tx_bs_tri_inc2(1'b0),
        .bidir_tx_bs_tri_inc3(1'b0),
        .bidir_tx_bs_tri_inc4(1'b0),
        .bidir_tx_bs_tri_inc5(1'b0),
        .bidir_tx_bs_tri_inc6(1'b0),
        .bidir_tx_bs_tri_inc7(1'b0),
        .bidir_tx_bs_tri_load0(1'b0),
        .bidir_tx_bs_tri_load1(1'b0),
        .bidir_tx_bs_tri_load2(1'b0),
        .bidir_tx_bs_tri_load3(1'b0),
        .bidir_tx_bs_tri_load4(1'b0),
        .bidir_tx_bs_tri_load5(1'b0),
        .bidir_tx_bs_tri_load6(1'b0),
        .bidir_tx_bs_tri_load7(1'b0),
        .bidir_tx_clk(1'b0),
        .bitslip_error_0(NLW_inst_bitslip_error_0_UNCONNECTED),
        .bitslip_error_1(NLW_inst_bitslip_error_1_UNCONNECTED),
        .bitslip_error_10(NLW_inst_bitslip_error_10_UNCONNECTED),
        .bitslip_error_11(NLW_inst_bitslip_error_11_UNCONNECTED),
        .bitslip_error_12(NLW_inst_bitslip_error_12_UNCONNECTED),
        .bitslip_error_13(NLW_inst_bitslip_error_13_UNCONNECTED),
        .bitslip_error_14(NLW_inst_bitslip_error_14_UNCONNECTED),
        .bitslip_error_15(NLW_inst_bitslip_error_15_UNCONNECTED),
        .bitslip_error_16(NLW_inst_bitslip_error_16_UNCONNECTED),
        .bitslip_error_17(NLW_inst_bitslip_error_17_UNCONNECTED),
        .bitslip_error_18(NLW_inst_bitslip_error_18_UNCONNECTED),
        .bitslip_error_19(NLW_inst_bitslip_error_19_UNCONNECTED),
        .bitslip_error_2(NLW_inst_bitslip_error_2_UNCONNECTED),
        .bitslip_error_20(NLW_inst_bitslip_error_20_UNCONNECTED),
        .bitslip_error_21(NLW_inst_bitslip_error_21_UNCONNECTED),
        .bitslip_error_22(NLW_inst_bitslip_error_22_UNCONNECTED),
        .bitslip_error_23(NLW_inst_bitslip_error_23_UNCONNECTED),
        .bitslip_error_24(NLW_inst_bitslip_error_24_UNCONNECTED),
        .bitslip_error_25(NLW_inst_bitslip_error_25_UNCONNECTED),
        .bitslip_error_26(NLW_inst_bitslip_error_26_UNCONNECTED),
        .bitslip_error_27(NLW_inst_bitslip_error_27_UNCONNECTED),
        .bitslip_error_28(NLW_inst_bitslip_error_28_UNCONNECTED),
        .bitslip_error_29(NLW_inst_bitslip_error_29_UNCONNECTED),
        .bitslip_error_3(NLW_inst_bitslip_error_3_UNCONNECTED),
        .bitslip_error_30(NLW_inst_bitslip_error_30_UNCONNECTED),
        .bitslip_error_31(NLW_inst_bitslip_error_31_UNCONNECTED),
        .bitslip_error_32(NLW_inst_bitslip_error_32_UNCONNECTED),
        .bitslip_error_33(NLW_inst_bitslip_error_33_UNCONNECTED),
        .bitslip_error_34(NLW_inst_bitslip_error_34_UNCONNECTED),
        .bitslip_error_35(NLW_inst_bitslip_error_35_UNCONNECTED),
        .bitslip_error_36(NLW_inst_bitslip_error_36_UNCONNECTED),
        .bitslip_error_37(NLW_inst_bitslip_error_37_UNCONNECTED),
        .bitslip_error_38(NLW_inst_bitslip_error_38_UNCONNECTED),
        .bitslip_error_39(NLW_inst_bitslip_error_39_UNCONNECTED),
        .bitslip_error_4(NLW_inst_bitslip_error_4_UNCONNECTED),
        .bitslip_error_40(NLW_inst_bitslip_error_40_UNCONNECTED),
        .bitslip_error_41(NLW_inst_bitslip_error_41_UNCONNECTED),
        .bitslip_error_42(NLW_inst_bitslip_error_42_UNCONNECTED),
        .bitslip_error_43(NLW_inst_bitslip_error_43_UNCONNECTED),
        .bitslip_error_44(NLW_inst_bitslip_error_44_UNCONNECTED),
        .bitslip_error_45(NLW_inst_bitslip_error_45_UNCONNECTED),
        .bitslip_error_46(NLW_inst_bitslip_error_46_UNCONNECTED),
        .bitslip_error_47(NLW_inst_bitslip_error_47_UNCONNECTED),
        .bitslip_error_48(NLW_inst_bitslip_error_48_UNCONNECTED),
        .bitslip_error_49(NLW_inst_bitslip_error_49_UNCONNECTED),
        .bitslip_error_5(NLW_inst_bitslip_error_5_UNCONNECTED),
        .bitslip_error_50(NLW_inst_bitslip_error_50_UNCONNECTED),
        .bitslip_error_51(NLW_inst_bitslip_error_51_UNCONNECTED),
        .bitslip_error_6(NLW_inst_bitslip_error_6_UNCONNECTED),
        .bitslip_error_7(NLW_inst_bitslip_error_7_UNCONNECTED),
        .bitslip_error_8(NLW_inst_bitslip_error_8_UNCONNECTED),
        .bitslip_error_9(NLW_inst_bitslip_error_9_UNCONNECTED),
        .bs_rst_dphy_in(bs_rst_dphy_in),
        .clk(1'b0),
        .clk_from_ibuf(NLW_inst_clk_from_ibuf_UNCONNECTED),
        .clk_n(1'b0),
        .clk_p(1'b0),
        .clk_txn(clk_txn),
        .clk_txp(clk_txp),
        .daddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .data_from_fabric_clk_txp(data_from_fabric_clk_txp),
        .data_from_fabric_data_txp0(data_from_fabric_data_txp0),
        .data_from_fabric_data_txp1(data_from_fabric_data_txp1),
        .data_from_fabric_data_txp2(data_from_fabric_data_txp2),
        .data_from_fabric_data_txp3(data_from_fabric_data_txp3),
        .data_txn0(data_txn0),
        .data_txn1(data_txn1),
        .data_txn2(data_txn2),
        .data_txn3(data_txn3),
        .data_txp0(data_txp0),
        .data_txp1(data_txp1),
        .data_txp2(data_txp2),
        .data_txp3(data_txp3),
        .dclk(1'b0),
        .den(1'b0),
        .di({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dly_rdy_bsc0(dly_rdy_bsc0),
        .dly_rdy_bsc1(dly_rdy_bsc1),
        .dly_rdy_bsc2(dly_rdy_bsc2),
        .dly_rdy_bsc3(NLW_inst_dly_rdy_bsc3_UNCONNECTED),
        .dly_rdy_bsc4(NLW_inst_dly_rdy_bsc4_UNCONNECTED),
        .dly_rdy_bsc5(NLW_inst_dly_rdy_bsc5_UNCONNECTED),
        .dly_rdy_bsc6(NLW_inst_dly_rdy_bsc6_UNCONNECTED),
        .dly_rdy_bsc7(NLW_inst_dly_rdy_bsc7_UNCONNECTED),
        .do_out(NLW_inst_do_out_UNCONNECTED[15:0]),
        .drdy(NLW_inst_drdy_UNCONNECTED),
        .dwe(1'b0),
        .en_vtc_bsc0(en_vtc_bsc0),
        .en_vtc_bsc1(en_vtc_bsc1),
        .en_vtc_bsc2(en_vtc_bsc2),
        .en_vtc_bsc3(1'b0),
        .en_vtc_bsc4(1'b0),
        .en_vtc_bsc5(1'b0),
        .en_vtc_bsc6(1'b0),
        .en_vtc_bsc7(1'b0),
        .fifo_empty_0(NLW_inst_fifo_empty_0_UNCONNECTED),
        .fifo_empty_1(NLW_inst_fifo_empty_1_UNCONNECTED),
        .fifo_empty_10(NLW_inst_fifo_empty_10_UNCONNECTED),
        .fifo_empty_11(NLW_inst_fifo_empty_11_UNCONNECTED),
        .fifo_empty_12(NLW_inst_fifo_empty_12_UNCONNECTED),
        .fifo_empty_13(NLW_inst_fifo_empty_13_UNCONNECTED),
        .fifo_empty_14(NLW_inst_fifo_empty_14_UNCONNECTED),
        .fifo_empty_15(NLW_inst_fifo_empty_15_UNCONNECTED),
        .fifo_empty_16(NLW_inst_fifo_empty_16_UNCONNECTED),
        .fifo_empty_17(NLW_inst_fifo_empty_17_UNCONNECTED),
        .fifo_empty_18(NLW_inst_fifo_empty_18_UNCONNECTED),
        .fifo_empty_19(NLW_inst_fifo_empty_19_UNCONNECTED),
        .fifo_empty_2(NLW_inst_fifo_empty_2_UNCONNECTED),
        .fifo_empty_20(NLW_inst_fifo_empty_20_UNCONNECTED),
        .fifo_empty_21(NLW_inst_fifo_empty_21_UNCONNECTED),
        .fifo_empty_22(NLW_inst_fifo_empty_22_UNCONNECTED),
        .fifo_empty_23(NLW_inst_fifo_empty_23_UNCONNECTED),
        .fifo_empty_24(NLW_inst_fifo_empty_24_UNCONNECTED),
        .fifo_empty_25(NLW_inst_fifo_empty_25_UNCONNECTED),
        .fifo_empty_26(NLW_inst_fifo_empty_26_UNCONNECTED),
        .fifo_empty_27(NLW_inst_fifo_empty_27_UNCONNECTED),
        .fifo_empty_28(NLW_inst_fifo_empty_28_UNCONNECTED),
        .fifo_empty_29(NLW_inst_fifo_empty_29_UNCONNECTED),
        .fifo_empty_3(NLW_inst_fifo_empty_3_UNCONNECTED),
        .fifo_empty_30(NLW_inst_fifo_empty_30_UNCONNECTED),
        .fifo_empty_31(NLW_inst_fifo_empty_31_UNCONNECTED),
        .fifo_empty_32(NLW_inst_fifo_empty_32_UNCONNECTED),
        .fifo_empty_33(NLW_inst_fifo_empty_33_UNCONNECTED),
        .fifo_empty_34(NLW_inst_fifo_empty_34_UNCONNECTED),
        .fifo_empty_35(NLW_inst_fifo_empty_35_UNCONNECTED),
        .fifo_empty_36(NLW_inst_fifo_empty_36_UNCONNECTED),
        .fifo_empty_37(NLW_inst_fifo_empty_37_UNCONNECTED),
        .fifo_empty_38(NLW_inst_fifo_empty_38_UNCONNECTED),
        .fifo_empty_39(NLW_inst_fifo_empty_39_UNCONNECTED),
        .fifo_empty_4(NLW_inst_fifo_empty_4_UNCONNECTED),
        .fifo_empty_40(NLW_inst_fifo_empty_40_UNCONNECTED),
        .fifo_empty_41(NLW_inst_fifo_empty_41_UNCONNECTED),
        .fifo_empty_42(NLW_inst_fifo_empty_42_UNCONNECTED),
        .fifo_empty_43(NLW_inst_fifo_empty_43_UNCONNECTED),
        .fifo_empty_44(NLW_inst_fifo_empty_44_UNCONNECTED),
        .fifo_empty_45(NLW_inst_fifo_empty_45_UNCONNECTED),
        .fifo_empty_46(NLW_inst_fifo_empty_46_UNCONNECTED),
        .fifo_empty_47(NLW_inst_fifo_empty_47_UNCONNECTED),
        .fifo_empty_48(NLW_inst_fifo_empty_48_UNCONNECTED),
        .fifo_empty_49(NLW_inst_fifo_empty_49_UNCONNECTED),
        .fifo_empty_5(NLW_inst_fifo_empty_5_UNCONNECTED),
        .fifo_empty_50(NLW_inst_fifo_empty_50_UNCONNECTED),
        .fifo_empty_51(NLW_inst_fifo_empty_51_UNCONNECTED),
        .fifo_empty_6(NLW_inst_fifo_empty_6_UNCONNECTED),
        .fifo_empty_7(NLW_inst_fifo_empty_7_UNCONNECTED),
        .fifo_empty_8(NLW_inst_fifo_empty_8_UNCONNECTED),
        .fifo_empty_9(NLW_inst_fifo_empty_9_UNCONNECTED),
        .fifo_rd_clk_0(1'b0),
        .fifo_rd_clk_1(1'b0),
        .fifo_rd_clk_10(1'b0),
        .fifo_rd_clk_11(1'b0),
        .fifo_rd_clk_12(1'b0),
        .fifo_rd_clk_13(1'b0),
        .fifo_rd_clk_14(1'b0),
        .fifo_rd_clk_15(1'b0),
        .fifo_rd_clk_16(1'b0),
        .fifo_rd_clk_17(1'b0),
        .fifo_rd_clk_18(1'b0),
        .fifo_rd_clk_19(1'b0),
        .fifo_rd_clk_2(1'b0),
        .fifo_rd_clk_20(1'b0),
        .fifo_rd_clk_21(1'b0),
        .fifo_rd_clk_22(1'b0),
        .fifo_rd_clk_23(1'b0),
        .fifo_rd_clk_24(1'b0),
        .fifo_rd_clk_25(1'b0),
        .fifo_rd_clk_26(1'b0),
        .fifo_rd_clk_27(1'b0),
        .fifo_rd_clk_28(1'b0),
        .fifo_rd_clk_29(1'b0),
        .fifo_rd_clk_3(1'b0),
        .fifo_rd_clk_30(1'b0),
        .fifo_rd_clk_31(1'b0),
        .fifo_rd_clk_32(1'b0),
        .fifo_rd_clk_33(1'b0),
        .fifo_rd_clk_34(1'b0),
        .fifo_rd_clk_35(1'b0),
        .fifo_rd_clk_36(1'b0),
        .fifo_rd_clk_37(1'b0),
        .fifo_rd_clk_38(1'b0),
        .fifo_rd_clk_39(1'b0),
        .fifo_rd_clk_4(1'b0),
        .fifo_rd_clk_40(1'b0),
        .fifo_rd_clk_41(1'b0),
        .fifo_rd_clk_42(1'b0),
        .fifo_rd_clk_43(1'b0),
        .fifo_rd_clk_44(1'b0),
        .fifo_rd_clk_45(1'b0),
        .fifo_rd_clk_46(1'b0),
        .fifo_rd_clk_47(1'b0),
        .fifo_rd_clk_48(1'b0),
        .fifo_rd_clk_49(1'b0),
        .fifo_rd_clk_5(1'b0),
        .fifo_rd_clk_50(1'b0),
        .fifo_rd_clk_51(1'b0),
        .fifo_rd_clk_6(1'b0),
        .fifo_rd_clk_7(1'b0),
        .fifo_rd_clk_8(1'b0),
        .fifo_rd_clk_9(1'b0),
        .fifo_rd_data_valid(NLW_inst_fifo_rd_data_valid_UNCONNECTED),
        .fifo_rd_en_0(1'b0),
        .fifo_rd_en_1(1'b0),
        .fifo_rd_en_10(1'b0),
        .fifo_rd_en_11(1'b0),
        .fifo_rd_en_12(1'b0),
        .fifo_rd_en_13(1'b0),
        .fifo_rd_en_14(1'b0),
        .fifo_rd_en_15(1'b0),
        .fifo_rd_en_16(1'b0),
        .fifo_rd_en_17(1'b0),
        .fifo_rd_en_18(1'b0),
        .fifo_rd_en_19(1'b0),
        .fifo_rd_en_2(1'b0),
        .fifo_rd_en_20(1'b0),
        .fifo_rd_en_21(1'b0),
        .fifo_rd_en_22(1'b0),
        .fifo_rd_en_23(1'b0),
        .fifo_rd_en_24(1'b0),
        .fifo_rd_en_25(1'b0),
        .fifo_rd_en_26(1'b0),
        .fifo_rd_en_27(1'b0),
        .fifo_rd_en_28(1'b0),
        .fifo_rd_en_29(1'b0),
        .fifo_rd_en_3(1'b0),
        .fifo_rd_en_30(1'b0),
        .fifo_rd_en_31(1'b0),
        .fifo_rd_en_32(1'b0),
        .fifo_rd_en_33(1'b0),
        .fifo_rd_en_34(1'b0),
        .fifo_rd_en_35(1'b0),
        .fifo_rd_en_36(1'b0),
        .fifo_rd_en_37(1'b0),
        .fifo_rd_en_38(1'b0),
        .fifo_rd_en_39(1'b0),
        .fifo_rd_en_4(1'b0),
        .fifo_rd_en_40(1'b0),
        .fifo_rd_en_41(1'b0),
        .fifo_rd_en_42(1'b0),
        .fifo_rd_en_43(1'b0),
        .fifo_rd_en_44(1'b0),
        .fifo_rd_en_45(1'b0),
        .fifo_rd_en_46(1'b0),
        .fifo_rd_en_47(1'b0),
        .fifo_rd_en_48(1'b0),
        .fifo_rd_en_49(1'b0),
        .fifo_rd_en_5(1'b0),
        .fifo_rd_en_50(1'b0),
        .fifo_rd_en_51(1'b0),
        .fifo_rd_en_6(1'b0),
        .fifo_rd_en_7(1'b0),
        .fifo_rd_en_8(1'b0),
        .fifo_rd_en_9(1'b0),
        .fifo_wr_clk_0(NLW_inst_fifo_wr_clk_0_UNCONNECTED),
        .fifo_wr_clk_13(NLW_inst_fifo_wr_clk_13_UNCONNECTED),
        .fifo_wr_clk_19(NLW_inst_fifo_wr_clk_19_UNCONNECTED),
        .fifo_wr_clk_26(NLW_inst_fifo_wr_clk_26_UNCONNECTED),
        .fifo_wr_clk_32(NLW_inst_fifo_wr_clk_32_UNCONNECTED),
        .fifo_wr_clk_39(NLW_inst_fifo_wr_clk_39_UNCONNECTED),
        .fifo_wr_clk_45(NLW_inst_fifo_wr_clk_45_UNCONNECTED),
        .fifo_wr_clk_6(NLW_inst_fifo_wr_clk_6_UNCONNECTED),
        .hs_rx_disable({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .intf_rdy(NLW_inst_intf_rdy_UNCONNECTED),
        .lp_rx_disable({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .lp_rx_o_n(NLW_inst_lp_rx_o_n_UNCONNECTED[4:0]),
        .lp_rx_o_p(NLW_inst_lp_rx_o_p_UNCONNECTED[4:0]),
        .lptx_i_n(lptx_i_n),
        .lptx_i_p(lptx_i_p),
        .lptx_t(lptx_t),
        .multi_intf_lock_in(1'b0),
        .phy_rden_bsc0({1'b0,1'b0,1'b0,1'b0}),
        .phy_rden_bsc1({1'b0,1'b0,1'b0,1'b0}),
        .phy_rden_bsc2({1'b0,1'b0,1'b0,1'b0}),
        .phy_rden_bsc3({1'b0,1'b0,1'b0,1'b0}),
        .phy_rden_bsc4({1'b0,1'b0,1'b0,1'b0}),
        .phy_rden_bsc5({1'b0,1'b0,1'b0,1'b0}),
        .phy_rden_bsc6({1'b0,1'b0,1'b0,1'b0}),
        .phy_rden_bsc7({1'b0,1'b0,1'b0,1'b0}),
        .pll0_clkout0(NLW_inst_pll0_clkout0_UNCONNECTED),
        .pll0_clkout1(NLW_inst_pll0_clkout1_UNCONNECTED),
        .pll0_locked(NLW_inst_pll0_locked_UNCONNECTED),
        .pll1_clkout0(NLW_inst_pll1_clkout0_UNCONNECTED),
        .pll1_locked(NLW_inst_pll1_locked_UNCONNECTED),
        .riu_addr_bg0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg0_bs0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg0_bs1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg1_bs2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg1_bs3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg2_bs4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg2_bs5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg3_bs6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_addr_bg3_bs7({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_clk(riu_clk),
        .riu_nibble_sel_bg0({1'b0,1'b0}),
        .riu_nibble_sel_bg0_bs0(1'b0),
        .riu_nibble_sel_bg0_bs1(1'b0),
        .riu_nibble_sel_bg1({1'b0,1'b0}),
        .riu_nibble_sel_bg1_bs2(1'b0),
        .riu_nibble_sel_bg1_bs3(1'b0),
        .riu_nibble_sel_bg2({1'b0,1'b0}),
        .riu_nibble_sel_bg2_bs4(1'b0),
        .riu_nibble_sel_bg2_bs5(1'b0),
        .riu_nibble_sel_bg3({1'b0,1'b0}),
        .riu_nibble_sel_bg3_bs6(1'b0),
        .riu_nibble_sel_bg3_bs7(1'b0),
        .riu_rd_data_bg0(NLW_inst_riu_rd_data_bg0_UNCONNECTED[15:0]),
        .riu_rd_data_bg0_bs0(NLW_inst_riu_rd_data_bg0_bs0_UNCONNECTED[15:0]),
        .riu_rd_data_bg0_bs1(NLW_inst_riu_rd_data_bg0_bs1_UNCONNECTED[15:0]),
        .riu_rd_data_bg1(NLW_inst_riu_rd_data_bg1_UNCONNECTED[15:0]),
        .riu_rd_data_bg1_bs2(NLW_inst_riu_rd_data_bg1_bs2_UNCONNECTED[15:0]),
        .riu_rd_data_bg1_bs3(NLW_inst_riu_rd_data_bg1_bs3_UNCONNECTED[15:0]),
        .riu_rd_data_bg2(NLW_inst_riu_rd_data_bg2_UNCONNECTED[15:0]),
        .riu_rd_data_bg2_bs4(NLW_inst_riu_rd_data_bg2_bs4_UNCONNECTED[15:0]),
        .riu_rd_data_bg2_bs5(NLW_inst_riu_rd_data_bg2_bs5_UNCONNECTED[15:0]),
        .riu_rd_data_bg3(NLW_inst_riu_rd_data_bg3_UNCONNECTED[15:0]),
        .riu_rd_data_bg3_bs6(NLW_inst_riu_rd_data_bg3_bs6_UNCONNECTED[15:0]),
        .riu_rd_data_bg3_bs7(NLW_inst_riu_rd_data_bg3_bs7_UNCONNECTED[15:0]),
        .riu_valid_bg0(NLW_inst_riu_valid_bg0_UNCONNECTED),
        .riu_valid_bg0_bs0(NLW_inst_riu_valid_bg0_bs0_UNCONNECTED),
        .riu_valid_bg0_bs1(NLW_inst_riu_valid_bg0_bs1_UNCONNECTED),
        .riu_valid_bg1(NLW_inst_riu_valid_bg1_UNCONNECTED),
        .riu_valid_bg1_bs2(NLW_inst_riu_valid_bg1_bs2_UNCONNECTED),
        .riu_valid_bg1_bs3(NLW_inst_riu_valid_bg1_bs3_UNCONNECTED),
        .riu_valid_bg2(NLW_inst_riu_valid_bg2_UNCONNECTED),
        .riu_valid_bg2_bs4(NLW_inst_riu_valid_bg2_bs4_UNCONNECTED),
        .riu_valid_bg2_bs5(NLW_inst_riu_valid_bg2_bs5_UNCONNECTED),
        .riu_valid_bg3(NLW_inst_riu_valid_bg3_UNCONNECTED),
        .riu_valid_bg3_bs6(NLW_inst_riu_valid_bg3_bs6_UNCONNECTED),
        .riu_valid_bg3_bs7(NLW_inst_riu_valid_bg3_bs7_UNCONNECTED),
        .riu_wr_data_bg0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg0_bs0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg0_bs1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg1_bs2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg1_bs3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg2_bs4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg2_bs5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg3_bs6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_data_bg3_bs7({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_wr_en_bg0(1'b0),
        .riu_wr_en_bg0_bs0(1'b0),
        .riu_wr_en_bg0_bs1(1'b0),
        .riu_wr_en_bg1(1'b0),
        .riu_wr_en_bg1_bs2(1'b0),
        .riu_wr_en_bg1_bs3(1'b0),
        .riu_wr_en_bg2(1'b0),
        .riu_wr_en_bg2_bs4(1'b0),
        .riu_wr_en_bg2_bs5(1'b0),
        .riu_wr_en_bg3(1'b0),
        .riu_wr_en_bg3_bs6(1'b0),
        .riu_wr_en_bg3_bs7(1'b0),
        .rst(rst),
        .rst_seq_done(rst_seq_done),
        .rx_bitslip_sync_done(NLW_inst_rx_bitslip_sync_done_UNCONNECTED),
        .rx_ce_0(1'b0),
        .rx_ce_1(1'b0),
        .rx_ce_10(1'b0),
        .rx_ce_11(1'b0),
        .rx_ce_12(1'b0),
        .rx_ce_13(1'b0),
        .rx_ce_14(1'b0),
        .rx_ce_15(1'b0),
        .rx_ce_16(1'b0),
        .rx_ce_17(1'b0),
        .rx_ce_18(1'b0),
        .rx_ce_19(1'b0),
        .rx_ce_2(1'b0),
        .rx_ce_20(1'b0),
        .rx_ce_21(1'b0),
        .rx_ce_22(1'b0),
        .rx_ce_23(1'b0),
        .rx_ce_24(1'b0),
        .rx_ce_25(1'b0),
        .rx_ce_26(1'b0),
        .rx_ce_27(1'b0),
        .rx_ce_28(1'b0),
        .rx_ce_29(1'b0),
        .rx_ce_3(1'b0),
        .rx_ce_30(1'b0),
        .rx_ce_31(1'b0),
        .rx_ce_32(1'b0),
        .rx_ce_33(1'b0),
        .rx_ce_34(1'b0),
        .rx_ce_35(1'b0),
        .rx_ce_36(1'b0),
        .rx_ce_37(1'b0),
        .rx_ce_38(1'b0),
        .rx_ce_39(1'b0),
        .rx_ce_4(1'b0),
        .rx_ce_40(1'b0),
        .rx_ce_41(1'b0),
        .rx_ce_42(1'b0),
        .rx_ce_43(1'b0),
        .rx_ce_44(1'b0),
        .rx_ce_45(1'b0),
        .rx_ce_46(1'b0),
        .rx_ce_47(1'b0),
        .rx_ce_48(1'b0),
        .rx_ce_49(1'b0),
        .rx_ce_5(1'b0),
        .rx_ce_50(1'b0),
        .rx_ce_51(1'b0),
        .rx_ce_6(1'b0),
        .rx_ce_7(1'b0),
        .rx_ce_8(1'b0),
        .rx_ce_9(1'b0),
        .rx_ce_ext_0(1'b0),
        .rx_ce_ext_1(1'b0),
        .rx_ce_ext_10(1'b0),
        .rx_ce_ext_11(1'b0),
        .rx_ce_ext_12(1'b0),
        .rx_ce_ext_13(1'b0),
        .rx_ce_ext_14(1'b0),
        .rx_ce_ext_15(1'b0),
        .rx_ce_ext_16(1'b0),
        .rx_ce_ext_17(1'b0),
        .rx_ce_ext_18(1'b0),
        .rx_ce_ext_19(1'b0),
        .rx_ce_ext_2(1'b0),
        .rx_ce_ext_20(1'b0),
        .rx_ce_ext_21(1'b0),
        .rx_ce_ext_22(1'b0),
        .rx_ce_ext_23(1'b0),
        .rx_ce_ext_24(1'b0),
        .rx_ce_ext_25(1'b0),
        .rx_ce_ext_26(1'b0),
        .rx_ce_ext_27(1'b0),
        .rx_ce_ext_28(1'b0),
        .rx_ce_ext_29(1'b0),
        .rx_ce_ext_3(1'b0),
        .rx_ce_ext_30(1'b0),
        .rx_ce_ext_31(1'b0),
        .rx_ce_ext_32(1'b0),
        .rx_ce_ext_33(1'b0),
        .rx_ce_ext_34(1'b0),
        .rx_ce_ext_35(1'b0),
        .rx_ce_ext_36(1'b0),
        .rx_ce_ext_37(1'b0),
        .rx_ce_ext_38(1'b0),
        .rx_ce_ext_39(1'b0),
        .rx_ce_ext_4(1'b0),
        .rx_ce_ext_40(1'b0),
        .rx_ce_ext_41(1'b0),
        .rx_ce_ext_42(1'b0),
        .rx_ce_ext_43(1'b0),
        .rx_ce_ext_44(1'b0),
        .rx_ce_ext_45(1'b0),
        .rx_ce_ext_46(1'b0),
        .rx_ce_ext_47(1'b0),
        .rx_ce_ext_48(1'b0),
        .rx_ce_ext_49(1'b0),
        .rx_ce_ext_5(1'b0),
        .rx_ce_ext_50(1'b0),
        .rx_ce_ext_51(1'b0),
        .rx_ce_ext_6(1'b0),
        .rx_ce_ext_7(1'b0),
        .rx_ce_ext_8(1'b0),
        .rx_ce_ext_9(1'b0),
        .rx_clk(1'b0),
        .rx_cntvaluein_0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_10({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_11({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_12({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_13({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_14({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_15({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_16({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_17({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_18({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_19({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_20({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_21({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_22({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_23({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_24({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_25({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_26({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_27({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_28({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_29({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_30({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_31({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_32({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_33({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_34({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_35({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_36({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_37({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_38({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_39({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_40({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_41({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_42({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_43({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_44({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_45({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_46({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_47({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_48({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_49({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_50({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_51({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_7({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_8({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_9({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_10({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_11({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_12({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_13({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_14({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_15({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_16({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_17({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_18({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_19({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_20({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_21({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_22({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_23({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_24({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_25({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_26({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_27({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_28({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_29({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_30({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_31({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_32({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_33({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_34({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_35({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_36({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_37({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_38({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_39({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_40({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_41({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_42({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_43({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_44({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_45({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_46({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_47({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_48({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_49({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_50({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_51({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_7({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_8({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvaluein_ext_9({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cntvalueout_0(NLW_inst_rx_cntvalueout_0_UNCONNECTED[8:0]),
        .rx_cntvalueout_1(NLW_inst_rx_cntvalueout_1_UNCONNECTED[8:0]),
        .rx_cntvalueout_10(NLW_inst_rx_cntvalueout_10_UNCONNECTED[8:0]),
        .rx_cntvalueout_11(NLW_inst_rx_cntvalueout_11_UNCONNECTED[8:0]),
        .rx_cntvalueout_12(NLW_inst_rx_cntvalueout_12_UNCONNECTED[8:0]),
        .rx_cntvalueout_13(NLW_inst_rx_cntvalueout_13_UNCONNECTED[8:0]),
        .rx_cntvalueout_14(NLW_inst_rx_cntvalueout_14_UNCONNECTED[8:0]),
        .rx_cntvalueout_15(NLW_inst_rx_cntvalueout_15_UNCONNECTED[8:0]),
        .rx_cntvalueout_16(NLW_inst_rx_cntvalueout_16_UNCONNECTED[8:0]),
        .rx_cntvalueout_17(NLW_inst_rx_cntvalueout_17_UNCONNECTED[8:0]),
        .rx_cntvalueout_18(NLW_inst_rx_cntvalueout_18_UNCONNECTED[8:0]),
        .rx_cntvalueout_19(NLW_inst_rx_cntvalueout_19_UNCONNECTED[8:0]),
        .rx_cntvalueout_2(NLW_inst_rx_cntvalueout_2_UNCONNECTED[8:0]),
        .rx_cntvalueout_20(NLW_inst_rx_cntvalueout_20_UNCONNECTED[8:0]),
        .rx_cntvalueout_21(NLW_inst_rx_cntvalueout_21_UNCONNECTED[8:0]),
        .rx_cntvalueout_22(NLW_inst_rx_cntvalueout_22_UNCONNECTED[8:0]),
        .rx_cntvalueout_23(NLW_inst_rx_cntvalueout_23_UNCONNECTED[8:0]),
        .rx_cntvalueout_24(NLW_inst_rx_cntvalueout_24_UNCONNECTED[8:0]),
        .rx_cntvalueout_25(NLW_inst_rx_cntvalueout_25_UNCONNECTED[8:0]),
        .rx_cntvalueout_26(NLW_inst_rx_cntvalueout_26_UNCONNECTED[8:0]),
        .rx_cntvalueout_27(NLW_inst_rx_cntvalueout_27_UNCONNECTED[8:0]),
        .rx_cntvalueout_28(NLW_inst_rx_cntvalueout_28_UNCONNECTED[8:0]),
        .rx_cntvalueout_29(NLW_inst_rx_cntvalueout_29_UNCONNECTED[8:0]),
        .rx_cntvalueout_3(NLW_inst_rx_cntvalueout_3_UNCONNECTED[8:0]),
        .rx_cntvalueout_30(NLW_inst_rx_cntvalueout_30_UNCONNECTED[8:0]),
        .rx_cntvalueout_31(NLW_inst_rx_cntvalueout_31_UNCONNECTED[8:0]),
        .rx_cntvalueout_32(NLW_inst_rx_cntvalueout_32_UNCONNECTED[8:0]),
        .rx_cntvalueout_33(NLW_inst_rx_cntvalueout_33_UNCONNECTED[8:0]),
        .rx_cntvalueout_34(NLW_inst_rx_cntvalueout_34_UNCONNECTED[8:0]),
        .rx_cntvalueout_35(NLW_inst_rx_cntvalueout_35_UNCONNECTED[8:0]),
        .rx_cntvalueout_36(NLW_inst_rx_cntvalueout_36_UNCONNECTED[8:0]),
        .rx_cntvalueout_37(NLW_inst_rx_cntvalueout_37_UNCONNECTED[8:0]),
        .rx_cntvalueout_38(NLW_inst_rx_cntvalueout_38_UNCONNECTED[8:0]),
        .rx_cntvalueout_39(NLW_inst_rx_cntvalueout_39_UNCONNECTED[8:0]),
        .rx_cntvalueout_4(NLW_inst_rx_cntvalueout_4_UNCONNECTED[8:0]),
        .rx_cntvalueout_40(NLW_inst_rx_cntvalueout_40_UNCONNECTED[8:0]),
        .rx_cntvalueout_41(NLW_inst_rx_cntvalueout_41_UNCONNECTED[8:0]),
        .rx_cntvalueout_42(NLW_inst_rx_cntvalueout_42_UNCONNECTED[8:0]),
        .rx_cntvalueout_43(NLW_inst_rx_cntvalueout_43_UNCONNECTED[8:0]),
        .rx_cntvalueout_44(NLW_inst_rx_cntvalueout_44_UNCONNECTED[8:0]),
        .rx_cntvalueout_45(NLW_inst_rx_cntvalueout_45_UNCONNECTED[8:0]),
        .rx_cntvalueout_46(NLW_inst_rx_cntvalueout_46_UNCONNECTED[8:0]),
        .rx_cntvalueout_47(NLW_inst_rx_cntvalueout_47_UNCONNECTED[8:0]),
        .rx_cntvalueout_48(NLW_inst_rx_cntvalueout_48_UNCONNECTED[8:0]),
        .rx_cntvalueout_49(NLW_inst_rx_cntvalueout_49_UNCONNECTED[8:0]),
        .rx_cntvalueout_5(NLW_inst_rx_cntvalueout_5_UNCONNECTED[8:0]),
        .rx_cntvalueout_50(NLW_inst_rx_cntvalueout_50_UNCONNECTED[8:0]),
        .rx_cntvalueout_51(NLW_inst_rx_cntvalueout_51_UNCONNECTED[8:0]),
        .rx_cntvalueout_6(NLW_inst_rx_cntvalueout_6_UNCONNECTED[8:0]),
        .rx_cntvalueout_7(NLW_inst_rx_cntvalueout_7_UNCONNECTED[8:0]),
        .rx_cntvalueout_8(NLW_inst_rx_cntvalueout_8_UNCONNECTED[8:0]),
        .rx_cntvalueout_9(NLW_inst_rx_cntvalueout_9_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_0(NLW_inst_rx_cntvalueout_ext_0_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_1(NLW_inst_rx_cntvalueout_ext_1_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_10(NLW_inst_rx_cntvalueout_ext_10_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_11(NLW_inst_rx_cntvalueout_ext_11_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_12(NLW_inst_rx_cntvalueout_ext_12_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_13(NLW_inst_rx_cntvalueout_ext_13_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_14(NLW_inst_rx_cntvalueout_ext_14_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_15(NLW_inst_rx_cntvalueout_ext_15_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_16(NLW_inst_rx_cntvalueout_ext_16_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_17(NLW_inst_rx_cntvalueout_ext_17_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_18(NLW_inst_rx_cntvalueout_ext_18_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_19(NLW_inst_rx_cntvalueout_ext_19_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_2(NLW_inst_rx_cntvalueout_ext_2_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_20(NLW_inst_rx_cntvalueout_ext_20_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_21(NLW_inst_rx_cntvalueout_ext_21_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_22(NLW_inst_rx_cntvalueout_ext_22_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_23(NLW_inst_rx_cntvalueout_ext_23_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_24(NLW_inst_rx_cntvalueout_ext_24_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_25(NLW_inst_rx_cntvalueout_ext_25_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_26(NLW_inst_rx_cntvalueout_ext_26_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_27(NLW_inst_rx_cntvalueout_ext_27_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_28(NLW_inst_rx_cntvalueout_ext_28_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_29(NLW_inst_rx_cntvalueout_ext_29_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_3(NLW_inst_rx_cntvalueout_ext_3_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_30(NLW_inst_rx_cntvalueout_ext_30_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_31(NLW_inst_rx_cntvalueout_ext_31_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_32(NLW_inst_rx_cntvalueout_ext_32_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_33(NLW_inst_rx_cntvalueout_ext_33_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_34(NLW_inst_rx_cntvalueout_ext_34_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_35(NLW_inst_rx_cntvalueout_ext_35_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_36(NLW_inst_rx_cntvalueout_ext_36_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_37(NLW_inst_rx_cntvalueout_ext_37_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_38(NLW_inst_rx_cntvalueout_ext_38_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_39(NLW_inst_rx_cntvalueout_ext_39_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_4(NLW_inst_rx_cntvalueout_ext_4_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_40(NLW_inst_rx_cntvalueout_ext_40_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_41(NLW_inst_rx_cntvalueout_ext_41_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_42(NLW_inst_rx_cntvalueout_ext_42_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_43(NLW_inst_rx_cntvalueout_ext_43_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_44(NLW_inst_rx_cntvalueout_ext_44_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_45(NLW_inst_rx_cntvalueout_ext_45_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_46(NLW_inst_rx_cntvalueout_ext_46_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_47(NLW_inst_rx_cntvalueout_ext_47_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_48(NLW_inst_rx_cntvalueout_ext_48_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_49(NLW_inst_rx_cntvalueout_ext_49_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_5(NLW_inst_rx_cntvalueout_ext_5_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_50(NLW_inst_rx_cntvalueout_ext_50_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_51(NLW_inst_rx_cntvalueout_ext_51_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_6(NLW_inst_rx_cntvalueout_ext_6_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_7(NLW_inst_rx_cntvalueout_ext_7_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_8(NLW_inst_rx_cntvalueout_ext_8_UNCONNECTED[8:0]),
        .rx_cntvalueout_ext_9(NLW_inst_rx_cntvalueout_ext_9_UNCONNECTED[8:0]),
        .rx_en_vtc_0(1'b0),
        .rx_en_vtc_1(1'b0),
        .rx_en_vtc_10(1'b0),
        .rx_en_vtc_11(1'b0),
        .rx_en_vtc_12(1'b0),
        .rx_en_vtc_13(1'b0),
        .rx_en_vtc_14(1'b0),
        .rx_en_vtc_15(1'b0),
        .rx_en_vtc_16(1'b0),
        .rx_en_vtc_17(1'b0),
        .rx_en_vtc_18(1'b0),
        .rx_en_vtc_19(1'b0),
        .rx_en_vtc_2(1'b0),
        .rx_en_vtc_20(1'b0),
        .rx_en_vtc_21(1'b0),
        .rx_en_vtc_22(1'b0),
        .rx_en_vtc_23(1'b0),
        .rx_en_vtc_24(1'b0),
        .rx_en_vtc_25(1'b0),
        .rx_en_vtc_26(1'b0),
        .rx_en_vtc_27(1'b0),
        .rx_en_vtc_28(1'b0),
        .rx_en_vtc_29(1'b0),
        .rx_en_vtc_3(1'b0),
        .rx_en_vtc_30(1'b0),
        .rx_en_vtc_31(1'b0),
        .rx_en_vtc_32(1'b0),
        .rx_en_vtc_33(1'b0),
        .rx_en_vtc_34(1'b0),
        .rx_en_vtc_35(1'b0),
        .rx_en_vtc_36(1'b0),
        .rx_en_vtc_37(1'b0),
        .rx_en_vtc_38(1'b0),
        .rx_en_vtc_39(1'b0),
        .rx_en_vtc_4(1'b0),
        .rx_en_vtc_40(1'b0),
        .rx_en_vtc_41(1'b0),
        .rx_en_vtc_42(1'b0),
        .rx_en_vtc_43(1'b0),
        .rx_en_vtc_44(1'b0),
        .rx_en_vtc_45(1'b0),
        .rx_en_vtc_46(1'b0),
        .rx_en_vtc_47(1'b0),
        .rx_en_vtc_48(1'b0),
        .rx_en_vtc_49(1'b0),
        .rx_en_vtc_5(1'b0),
        .rx_en_vtc_50(1'b0),
        .rx_en_vtc_51(1'b0),
        .rx_en_vtc_6(1'b0),
        .rx_en_vtc_7(1'b0),
        .rx_en_vtc_8(1'b0),
        .rx_en_vtc_9(1'b0),
        .rx_en_vtc_ext_0(1'b0),
        .rx_en_vtc_ext_1(1'b0),
        .rx_en_vtc_ext_10(1'b0),
        .rx_en_vtc_ext_11(1'b0),
        .rx_en_vtc_ext_12(1'b0),
        .rx_en_vtc_ext_13(1'b0),
        .rx_en_vtc_ext_14(1'b0),
        .rx_en_vtc_ext_15(1'b0),
        .rx_en_vtc_ext_16(1'b0),
        .rx_en_vtc_ext_17(1'b0),
        .rx_en_vtc_ext_18(1'b0),
        .rx_en_vtc_ext_19(1'b0),
        .rx_en_vtc_ext_2(1'b0),
        .rx_en_vtc_ext_20(1'b0),
        .rx_en_vtc_ext_21(1'b0),
        .rx_en_vtc_ext_22(1'b0),
        .rx_en_vtc_ext_23(1'b0),
        .rx_en_vtc_ext_24(1'b0),
        .rx_en_vtc_ext_25(1'b0),
        .rx_en_vtc_ext_26(1'b0),
        .rx_en_vtc_ext_27(1'b0),
        .rx_en_vtc_ext_28(1'b0),
        .rx_en_vtc_ext_29(1'b0),
        .rx_en_vtc_ext_3(1'b0),
        .rx_en_vtc_ext_30(1'b0),
        .rx_en_vtc_ext_31(1'b0),
        .rx_en_vtc_ext_32(1'b0),
        .rx_en_vtc_ext_33(1'b0),
        .rx_en_vtc_ext_34(1'b0),
        .rx_en_vtc_ext_35(1'b0),
        .rx_en_vtc_ext_36(1'b0),
        .rx_en_vtc_ext_37(1'b0),
        .rx_en_vtc_ext_38(1'b0),
        .rx_en_vtc_ext_39(1'b0),
        .rx_en_vtc_ext_4(1'b0),
        .rx_en_vtc_ext_40(1'b0),
        .rx_en_vtc_ext_41(1'b0),
        .rx_en_vtc_ext_42(1'b0),
        .rx_en_vtc_ext_43(1'b0),
        .rx_en_vtc_ext_44(1'b0),
        .rx_en_vtc_ext_45(1'b0),
        .rx_en_vtc_ext_46(1'b0),
        .rx_en_vtc_ext_47(1'b0),
        .rx_en_vtc_ext_48(1'b0),
        .rx_en_vtc_ext_49(1'b0),
        .rx_en_vtc_ext_5(1'b0),
        .rx_en_vtc_ext_50(1'b0),
        .rx_en_vtc_ext_51(1'b0),
        .rx_en_vtc_ext_6(1'b0),
        .rx_en_vtc_ext_7(1'b0),
        .rx_en_vtc_ext_8(1'b0),
        .rx_en_vtc_ext_9(1'b0),
        .rx_inc_0(1'b0),
        .rx_inc_1(1'b0),
        .rx_inc_10(1'b0),
        .rx_inc_11(1'b0),
        .rx_inc_12(1'b0),
        .rx_inc_13(1'b0),
        .rx_inc_14(1'b0),
        .rx_inc_15(1'b0),
        .rx_inc_16(1'b0),
        .rx_inc_17(1'b0),
        .rx_inc_18(1'b0),
        .rx_inc_19(1'b0),
        .rx_inc_2(1'b0),
        .rx_inc_20(1'b0),
        .rx_inc_21(1'b0),
        .rx_inc_22(1'b0),
        .rx_inc_23(1'b0),
        .rx_inc_24(1'b0),
        .rx_inc_25(1'b0),
        .rx_inc_26(1'b0),
        .rx_inc_27(1'b0),
        .rx_inc_28(1'b0),
        .rx_inc_29(1'b0),
        .rx_inc_3(1'b0),
        .rx_inc_30(1'b0),
        .rx_inc_31(1'b0),
        .rx_inc_32(1'b0),
        .rx_inc_33(1'b0),
        .rx_inc_34(1'b0),
        .rx_inc_35(1'b0),
        .rx_inc_36(1'b0),
        .rx_inc_37(1'b0),
        .rx_inc_38(1'b0),
        .rx_inc_39(1'b0),
        .rx_inc_4(1'b0),
        .rx_inc_40(1'b0),
        .rx_inc_41(1'b0),
        .rx_inc_42(1'b0),
        .rx_inc_43(1'b0),
        .rx_inc_44(1'b0),
        .rx_inc_45(1'b0),
        .rx_inc_46(1'b0),
        .rx_inc_47(1'b0),
        .rx_inc_48(1'b0),
        .rx_inc_49(1'b0),
        .rx_inc_5(1'b0),
        .rx_inc_50(1'b0),
        .rx_inc_51(1'b0),
        .rx_inc_6(1'b0),
        .rx_inc_7(1'b0),
        .rx_inc_8(1'b0),
        .rx_inc_9(1'b0),
        .rx_inc_ext_0(1'b0),
        .rx_inc_ext_1(1'b0),
        .rx_inc_ext_10(1'b0),
        .rx_inc_ext_11(1'b0),
        .rx_inc_ext_12(1'b0),
        .rx_inc_ext_13(1'b0),
        .rx_inc_ext_14(1'b0),
        .rx_inc_ext_15(1'b0),
        .rx_inc_ext_16(1'b0),
        .rx_inc_ext_17(1'b0),
        .rx_inc_ext_18(1'b0),
        .rx_inc_ext_19(1'b0),
        .rx_inc_ext_2(1'b0),
        .rx_inc_ext_20(1'b0),
        .rx_inc_ext_21(1'b0),
        .rx_inc_ext_22(1'b0),
        .rx_inc_ext_23(1'b0),
        .rx_inc_ext_24(1'b0),
        .rx_inc_ext_25(1'b0),
        .rx_inc_ext_26(1'b0),
        .rx_inc_ext_27(1'b0),
        .rx_inc_ext_28(1'b0),
        .rx_inc_ext_29(1'b0),
        .rx_inc_ext_3(1'b0),
        .rx_inc_ext_30(1'b0),
        .rx_inc_ext_31(1'b0),
        .rx_inc_ext_32(1'b0),
        .rx_inc_ext_33(1'b0),
        .rx_inc_ext_34(1'b0),
        .rx_inc_ext_35(1'b0),
        .rx_inc_ext_36(1'b0),
        .rx_inc_ext_37(1'b0),
        .rx_inc_ext_38(1'b0),
        .rx_inc_ext_39(1'b0),
        .rx_inc_ext_4(1'b0),
        .rx_inc_ext_40(1'b0),
        .rx_inc_ext_41(1'b0),
        .rx_inc_ext_42(1'b0),
        .rx_inc_ext_43(1'b0),
        .rx_inc_ext_44(1'b0),
        .rx_inc_ext_45(1'b0),
        .rx_inc_ext_46(1'b0),
        .rx_inc_ext_47(1'b0),
        .rx_inc_ext_48(1'b0),
        .rx_inc_ext_49(1'b0),
        .rx_inc_ext_5(1'b0),
        .rx_inc_ext_50(1'b0),
        .rx_inc_ext_51(1'b0),
        .rx_inc_ext_6(1'b0),
        .rx_inc_ext_7(1'b0),
        .rx_inc_ext_8(1'b0),
        .rx_inc_ext_9(1'b0),
        .rx_load_0(1'b0),
        .rx_load_1(1'b0),
        .rx_load_10(1'b0),
        .rx_load_11(1'b0),
        .rx_load_12(1'b0),
        .rx_load_13(1'b0),
        .rx_load_14(1'b0),
        .rx_load_15(1'b0),
        .rx_load_16(1'b0),
        .rx_load_17(1'b0),
        .rx_load_18(1'b0),
        .rx_load_19(1'b0),
        .rx_load_2(1'b0),
        .rx_load_20(1'b0),
        .rx_load_21(1'b0),
        .rx_load_22(1'b0),
        .rx_load_23(1'b0),
        .rx_load_24(1'b0),
        .rx_load_25(1'b0),
        .rx_load_26(1'b0),
        .rx_load_27(1'b0),
        .rx_load_28(1'b0),
        .rx_load_29(1'b0),
        .rx_load_3(1'b0),
        .rx_load_30(1'b0),
        .rx_load_31(1'b0),
        .rx_load_32(1'b0),
        .rx_load_33(1'b0),
        .rx_load_34(1'b0),
        .rx_load_35(1'b0),
        .rx_load_36(1'b0),
        .rx_load_37(1'b0),
        .rx_load_38(1'b0),
        .rx_load_39(1'b0),
        .rx_load_4(1'b0),
        .rx_load_40(1'b0),
        .rx_load_41(1'b0),
        .rx_load_42(1'b0),
        .rx_load_43(1'b0),
        .rx_load_44(1'b0),
        .rx_load_45(1'b0),
        .rx_load_46(1'b0),
        .rx_load_47(1'b0),
        .rx_load_48(1'b0),
        .rx_load_49(1'b0),
        .rx_load_5(1'b0),
        .rx_load_50(1'b0),
        .rx_load_51(1'b0),
        .rx_load_6(1'b0),
        .rx_load_7(1'b0),
        .rx_load_8(1'b0),
        .rx_load_9(1'b0),
        .rx_load_ext_0(1'b0),
        .rx_load_ext_1(1'b0),
        .rx_load_ext_10(1'b0),
        .rx_load_ext_11(1'b0),
        .rx_load_ext_12(1'b0),
        .rx_load_ext_13(1'b0),
        .rx_load_ext_14(1'b0),
        .rx_load_ext_15(1'b0),
        .rx_load_ext_16(1'b0),
        .rx_load_ext_17(1'b0),
        .rx_load_ext_18(1'b0),
        .rx_load_ext_19(1'b0),
        .rx_load_ext_2(1'b0),
        .rx_load_ext_20(1'b0),
        .rx_load_ext_21(1'b0),
        .rx_load_ext_22(1'b0),
        .rx_load_ext_23(1'b0),
        .rx_load_ext_24(1'b0),
        .rx_load_ext_25(1'b0),
        .rx_load_ext_26(1'b0),
        .rx_load_ext_27(1'b0),
        .rx_load_ext_28(1'b0),
        .rx_load_ext_29(1'b0),
        .rx_load_ext_3(1'b0),
        .rx_load_ext_30(1'b0),
        .rx_load_ext_31(1'b0),
        .rx_load_ext_32(1'b0),
        .rx_load_ext_33(1'b0),
        .rx_load_ext_34(1'b0),
        .rx_load_ext_35(1'b0),
        .rx_load_ext_36(1'b0),
        .rx_load_ext_37(1'b0),
        .rx_load_ext_38(1'b0),
        .rx_load_ext_39(1'b0),
        .rx_load_ext_4(1'b0),
        .rx_load_ext_40(1'b0),
        .rx_load_ext_41(1'b0),
        .rx_load_ext_42(1'b0),
        .rx_load_ext_43(1'b0),
        .rx_load_ext_44(1'b0),
        .rx_load_ext_45(1'b0),
        .rx_load_ext_46(1'b0),
        .rx_load_ext_47(1'b0),
        .rx_load_ext_48(1'b0),
        .rx_load_ext_49(1'b0),
        .rx_load_ext_5(1'b0),
        .rx_load_ext_50(1'b0),
        .rx_load_ext_51(1'b0),
        .rx_load_ext_6(1'b0),
        .rx_load_ext_7(1'b0),
        .rx_load_ext_8(1'b0),
        .rx_load_ext_9(1'b0),
        .rxtx_bitslip_sync_done(NLW_inst_rxtx_bitslip_sync_done_UNCONNECTED),
        .shared_pll0_clkout0_in(shared_pll0_clkout0_in),
        .shared_pll0_clkoutphy_in(shared_pll0_clkoutphy_in),
        .shared_pll0_clkoutphy_out(NLW_inst_shared_pll0_clkoutphy_out_UNCONNECTED),
        .shared_pll0_locked_in(shared_pll0_locked_in),
        .shared_pll1_clkout0_in(1'b0),
        .shared_pll1_clkoutphy_in(1'b0),
        .shared_pll1_clkoutphy_out(NLW_inst_shared_pll1_clkoutphy_out_UNCONNECTED),
        .shared_pll1_locked_in(1'b0),
        .start_bitslip(1'b0),
        .tri_t_0(tri_t_0),
        .tri_t_1(1'b0),
        .tri_t_10(1'b0),
        .tri_t_11(1'b0),
        .tri_t_12(1'b0),
        .tri_t_13(1'b0),
        .tri_t_14(1'b0),
        .tri_t_15(tri_t_15),
        .tri_t_16(1'b0),
        .tri_t_17(1'b0),
        .tri_t_18(1'b0),
        .tri_t_19(1'b0),
        .tri_t_2(tri_t_2),
        .tri_t_20(1'b0),
        .tri_t_21(1'b0),
        .tri_t_22(1'b0),
        .tri_t_23(1'b0),
        .tri_t_24(1'b0),
        .tri_t_25(1'b0),
        .tri_t_26(1'b0),
        .tri_t_27(1'b0),
        .tri_t_28(1'b0),
        .tri_t_29(1'b0),
        .tri_t_3(1'b0),
        .tri_t_30(1'b0),
        .tri_t_31(1'b0),
        .tri_t_32(1'b0),
        .tri_t_33(1'b0),
        .tri_t_34(1'b0),
        .tri_t_35(1'b0),
        .tri_t_36(1'b0),
        .tri_t_37(1'b0),
        .tri_t_38(1'b0),
        .tri_t_39(1'b0),
        .tri_t_4(tri_t_4),
        .tri_t_40(1'b0),
        .tri_t_41(1'b0),
        .tri_t_42(1'b0),
        .tri_t_43(1'b0),
        .tri_t_44(1'b0),
        .tri_t_45(1'b0),
        .tri_t_46(1'b0),
        .tri_t_47(1'b0),
        .tri_t_48(1'b0),
        .tri_t_49(1'b0),
        .tri_t_5(1'b0),
        .tri_t_50(1'b0),
        .tri_t_51(1'b0),
        .tri_t_6(1'b0),
        .tri_t_7(1'b0),
        .tri_t_8(tri_t_8),
        .tri_t_9(1'b0),
        .tri_tbyte0({1'b0,1'b0,1'b0,1'b0}),
        .tri_tbyte1({1'b0,1'b0,1'b0,1'b0}),
        .tri_tbyte2({1'b0,1'b0,1'b0,1'b0}),
        .tri_tbyte3({1'b0,1'b0,1'b0,1'b0}),
        .tri_tbyte4({1'b0,1'b0,1'b0,1'b0}),
        .tri_tbyte5({1'b0,1'b0,1'b0,1'b0}),
        .tri_tbyte6({1'b0,1'b0,1'b0,1'b0}),
        .tri_tbyte7({1'b0,1'b0,1'b0,1'b0}),
        .tx_ce_0(1'b0),
        .tx_ce_1(1'b0),
        .tx_ce_10(1'b0),
        .tx_ce_11(1'b0),
        .tx_ce_12(1'b0),
        .tx_ce_13(1'b0),
        .tx_ce_14(1'b0),
        .tx_ce_15(1'b0),
        .tx_ce_16(1'b0),
        .tx_ce_17(1'b0),
        .tx_ce_18(1'b0),
        .tx_ce_19(1'b0),
        .tx_ce_2(1'b0),
        .tx_ce_20(1'b0),
        .tx_ce_21(1'b0),
        .tx_ce_22(1'b0),
        .tx_ce_23(1'b0),
        .tx_ce_24(1'b0),
        .tx_ce_25(1'b0),
        .tx_ce_26(1'b0),
        .tx_ce_27(1'b0),
        .tx_ce_28(1'b0),
        .tx_ce_29(1'b0),
        .tx_ce_3(1'b0),
        .tx_ce_30(1'b0),
        .tx_ce_31(1'b0),
        .tx_ce_32(1'b0),
        .tx_ce_33(1'b0),
        .tx_ce_34(1'b0),
        .tx_ce_35(1'b0),
        .tx_ce_36(1'b0),
        .tx_ce_37(1'b0),
        .tx_ce_38(1'b0),
        .tx_ce_39(1'b0),
        .tx_ce_4(1'b0),
        .tx_ce_40(1'b0),
        .tx_ce_41(1'b0),
        .tx_ce_42(1'b0),
        .tx_ce_43(1'b0),
        .tx_ce_44(1'b0),
        .tx_ce_45(1'b0),
        .tx_ce_46(1'b0),
        .tx_ce_47(1'b0),
        .tx_ce_48(1'b0),
        .tx_ce_49(1'b0),
        .tx_ce_5(1'b0),
        .tx_ce_50(1'b0),
        .tx_ce_51(1'b0),
        .tx_ce_6(1'b0),
        .tx_ce_7(1'b0),
        .tx_ce_8(1'b0),
        .tx_ce_9(1'b0),
        .tx_clk(1'b0),
        .tx_cntvaluein_0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_10({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_11({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_12({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_13({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_14({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_15({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_16({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_17({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_18({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_19({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_20({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_21({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_22({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_23({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_24({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_25({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_26({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_27({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_28({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_29({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_30({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_31({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_32({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_33({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_34({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_35({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_36({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_37({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_38({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_39({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_40({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_41({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_42({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_43({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_44({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_45({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_46({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_47({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_48({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_49({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_5({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_50({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_51({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_6({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_7({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_8({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvaluein_9({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_cntvalueout_0(NLW_inst_tx_cntvalueout_0_UNCONNECTED[8:0]),
        .tx_cntvalueout_1(NLW_inst_tx_cntvalueout_1_UNCONNECTED[8:0]),
        .tx_cntvalueout_10(NLW_inst_tx_cntvalueout_10_UNCONNECTED[8:0]),
        .tx_cntvalueout_11(NLW_inst_tx_cntvalueout_11_UNCONNECTED[8:0]),
        .tx_cntvalueout_12(NLW_inst_tx_cntvalueout_12_UNCONNECTED[8:0]),
        .tx_cntvalueout_13(NLW_inst_tx_cntvalueout_13_UNCONNECTED[8:0]),
        .tx_cntvalueout_14(NLW_inst_tx_cntvalueout_14_UNCONNECTED[8:0]),
        .tx_cntvalueout_15(NLW_inst_tx_cntvalueout_15_UNCONNECTED[8:0]),
        .tx_cntvalueout_16(NLW_inst_tx_cntvalueout_16_UNCONNECTED[8:0]),
        .tx_cntvalueout_17(NLW_inst_tx_cntvalueout_17_UNCONNECTED[8:0]),
        .tx_cntvalueout_18(NLW_inst_tx_cntvalueout_18_UNCONNECTED[8:0]),
        .tx_cntvalueout_19(NLW_inst_tx_cntvalueout_19_UNCONNECTED[8:0]),
        .tx_cntvalueout_2(NLW_inst_tx_cntvalueout_2_UNCONNECTED[8:0]),
        .tx_cntvalueout_20(NLW_inst_tx_cntvalueout_20_UNCONNECTED[8:0]),
        .tx_cntvalueout_21(NLW_inst_tx_cntvalueout_21_UNCONNECTED[8:0]),
        .tx_cntvalueout_22(NLW_inst_tx_cntvalueout_22_UNCONNECTED[8:0]),
        .tx_cntvalueout_23(NLW_inst_tx_cntvalueout_23_UNCONNECTED[8:0]),
        .tx_cntvalueout_24(NLW_inst_tx_cntvalueout_24_UNCONNECTED[8:0]),
        .tx_cntvalueout_25(NLW_inst_tx_cntvalueout_25_UNCONNECTED[8:0]),
        .tx_cntvalueout_26(NLW_inst_tx_cntvalueout_26_UNCONNECTED[8:0]),
        .tx_cntvalueout_27(NLW_inst_tx_cntvalueout_27_UNCONNECTED[8:0]),
        .tx_cntvalueout_28(NLW_inst_tx_cntvalueout_28_UNCONNECTED[8:0]),
        .tx_cntvalueout_29(NLW_inst_tx_cntvalueout_29_UNCONNECTED[8:0]),
        .tx_cntvalueout_3(NLW_inst_tx_cntvalueout_3_UNCONNECTED[8:0]),
        .tx_cntvalueout_30(NLW_inst_tx_cntvalueout_30_UNCONNECTED[8:0]),
        .tx_cntvalueout_31(NLW_inst_tx_cntvalueout_31_UNCONNECTED[8:0]),
        .tx_cntvalueout_32(NLW_inst_tx_cntvalueout_32_UNCONNECTED[8:0]),
        .tx_cntvalueout_33(NLW_inst_tx_cntvalueout_33_UNCONNECTED[8:0]),
        .tx_cntvalueout_34(NLW_inst_tx_cntvalueout_34_UNCONNECTED[8:0]),
        .tx_cntvalueout_35(NLW_inst_tx_cntvalueout_35_UNCONNECTED[8:0]),
        .tx_cntvalueout_36(NLW_inst_tx_cntvalueout_36_UNCONNECTED[8:0]),
        .tx_cntvalueout_37(NLW_inst_tx_cntvalueout_37_UNCONNECTED[8:0]),
        .tx_cntvalueout_38(NLW_inst_tx_cntvalueout_38_UNCONNECTED[8:0]),
        .tx_cntvalueout_39(NLW_inst_tx_cntvalueout_39_UNCONNECTED[8:0]),
        .tx_cntvalueout_4(NLW_inst_tx_cntvalueout_4_UNCONNECTED[8:0]),
        .tx_cntvalueout_40(NLW_inst_tx_cntvalueout_40_UNCONNECTED[8:0]),
        .tx_cntvalueout_41(NLW_inst_tx_cntvalueout_41_UNCONNECTED[8:0]),
        .tx_cntvalueout_42(NLW_inst_tx_cntvalueout_42_UNCONNECTED[8:0]),
        .tx_cntvalueout_43(NLW_inst_tx_cntvalueout_43_UNCONNECTED[8:0]),
        .tx_cntvalueout_44(NLW_inst_tx_cntvalueout_44_UNCONNECTED[8:0]),
        .tx_cntvalueout_45(NLW_inst_tx_cntvalueout_45_UNCONNECTED[8:0]),
        .tx_cntvalueout_46(NLW_inst_tx_cntvalueout_46_UNCONNECTED[8:0]),
        .tx_cntvalueout_47(NLW_inst_tx_cntvalueout_47_UNCONNECTED[8:0]),
        .tx_cntvalueout_48(NLW_inst_tx_cntvalueout_48_UNCONNECTED[8:0]),
        .tx_cntvalueout_49(NLW_inst_tx_cntvalueout_49_UNCONNECTED[8:0]),
        .tx_cntvalueout_5(NLW_inst_tx_cntvalueout_5_UNCONNECTED[8:0]),
        .tx_cntvalueout_50(NLW_inst_tx_cntvalueout_50_UNCONNECTED[8:0]),
        .tx_cntvalueout_51(NLW_inst_tx_cntvalueout_51_UNCONNECTED[8:0]),
        .tx_cntvalueout_6(NLW_inst_tx_cntvalueout_6_UNCONNECTED[8:0]),
        .tx_cntvalueout_7(NLW_inst_tx_cntvalueout_7_UNCONNECTED[8:0]),
        .tx_cntvalueout_8(NLW_inst_tx_cntvalueout_8_UNCONNECTED[8:0]),
        .tx_cntvalueout_9(NLW_inst_tx_cntvalueout_9_UNCONNECTED[8:0]),
        .tx_en_vtc_0(1'b0),
        .tx_en_vtc_1(1'b0),
        .tx_en_vtc_10(1'b0),
        .tx_en_vtc_11(1'b0),
        .tx_en_vtc_12(1'b0),
        .tx_en_vtc_13(1'b0),
        .tx_en_vtc_14(1'b0),
        .tx_en_vtc_15(1'b0),
        .tx_en_vtc_16(1'b0),
        .tx_en_vtc_17(1'b0),
        .tx_en_vtc_18(1'b0),
        .tx_en_vtc_19(1'b0),
        .tx_en_vtc_2(1'b0),
        .tx_en_vtc_20(1'b0),
        .tx_en_vtc_21(1'b0),
        .tx_en_vtc_22(1'b0),
        .tx_en_vtc_23(1'b0),
        .tx_en_vtc_24(1'b0),
        .tx_en_vtc_25(1'b0),
        .tx_en_vtc_26(1'b0),
        .tx_en_vtc_27(1'b0),
        .tx_en_vtc_28(1'b0),
        .tx_en_vtc_29(1'b0),
        .tx_en_vtc_3(1'b0),
        .tx_en_vtc_30(1'b0),
        .tx_en_vtc_31(1'b0),
        .tx_en_vtc_32(1'b0),
        .tx_en_vtc_33(1'b0),
        .tx_en_vtc_34(1'b0),
        .tx_en_vtc_35(1'b0),
        .tx_en_vtc_36(1'b0),
        .tx_en_vtc_37(1'b0),
        .tx_en_vtc_38(1'b0),
        .tx_en_vtc_39(1'b0),
        .tx_en_vtc_4(1'b0),
        .tx_en_vtc_40(1'b0),
        .tx_en_vtc_41(1'b0),
        .tx_en_vtc_42(1'b0),
        .tx_en_vtc_43(1'b0),
        .tx_en_vtc_44(1'b0),
        .tx_en_vtc_45(1'b0),
        .tx_en_vtc_46(1'b0),
        .tx_en_vtc_47(1'b0),
        .tx_en_vtc_48(1'b0),
        .tx_en_vtc_49(1'b0),
        .tx_en_vtc_5(1'b0),
        .tx_en_vtc_50(1'b0),
        .tx_en_vtc_51(1'b0),
        .tx_en_vtc_6(1'b0),
        .tx_en_vtc_7(1'b0),
        .tx_en_vtc_8(1'b0),
        .tx_en_vtc_9(1'b0),
        .tx_inc_0(1'b0),
        .tx_inc_1(1'b0),
        .tx_inc_10(1'b0),
        .tx_inc_11(1'b0),
        .tx_inc_12(1'b0),
        .tx_inc_13(1'b0),
        .tx_inc_14(1'b0),
        .tx_inc_15(1'b0),
        .tx_inc_16(1'b0),
        .tx_inc_17(1'b0),
        .tx_inc_18(1'b0),
        .tx_inc_19(1'b0),
        .tx_inc_2(1'b0),
        .tx_inc_20(1'b0),
        .tx_inc_21(1'b0),
        .tx_inc_22(1'b0),
        .tx_inc_23(1'b0),
        .tx_inc_24(1'b0),
        .tx_inc_25(1'b0),
        .tx_inc_26(1'b0),
        .tx_inc_27(1'b0),
        .tx_inc_28(1'b0),
        .tx_inc_29(1'b0),
        .tx_inc_3(1'b0),
        .tx_inc_30(1'b0),
        .tx_inc_31(1'b0),
        .tx_inc_32(1'b0),
        .tx_inc_33(1'b0),
        .tx_inc_34(1'b0),
        .tx_inc_35(1'b0),
        .tx_inc_36(1'b0),
        .tx_inc_37(1'b0),
        .tx_inc_38(1'b0),
        .tx_inc_39(1'b0),
        .tx_inc_4(1'b0),
        .tx_inc_40(1'b0),
        .tx_inc_41(1'b0),
        .tx_inc_42(1'b0),
        .tx_inc_43(1'b0),
        .tx_inc_44(1'b0),
        .tx_inc_45(1'b0),
        .tx_inc_46(1'b0),
        .tx_inc_47(1'b0),
        .tx_inc_48(1'b0),
        .tx_inc_49(1'b0),
        .tx_inc_5(1'b0),
        .tx_inc_50(1'b0),
        .tx_inc_51(1'b0),
        .tx_inc_6(1'b0),
        .tx_inc_7(1'b0),
        .tx_inc_8(1'b0),
        .tx_inc_9(1'b0),
        .tx_load_0(1'b0),
        .tx_load_1(1'b0),
        .tx_load_10(1'b0),
        .tx_load_11(1'b0),
        .tx_load_12(1'b0),
        .tx_load_13(1'b0),
        .tx_load_14(1'b0),
        .tx_load_15(1'b0),
        .tx_load_16(1'b0),
        .tx_load_17(1'b0),
        .tx_load_18(1'b0),
        .tx_load_19(1'b0),
        .tx_load_2(1'b0),
        .tx_load_20(1'b0),
        .tx_load_21(1'b0),
        .tx_load_22(1'b0),
        .tx_load_23(1'b0),
        .tx_load_24(1'b0),
        .tx_load_25(1'b0),
        .tx_load_26(1'b0),
        .tx_load_27(1'b0),
        .tx_load_28(1'b0),
        .tx_load_29(1'b0),
        .tx_load_3(1'b0),
        .tx_load_30(1'b0),
        .tx_load_31(1'b0),
        .tx_load_32(1'b0),
        .tx_load_33(1'b0),
        .tx_load_34(1'b0),
        .tx_load_35(1'b0),
        .tx_load_36(1'b0),
        .tx_load_37(1'b0),
        .tx_load_38(1'b0),
        .tx_load_39(1'b0),
        .tx_load_4(1'b0),
        .tx_load_40(1'b0),
        .tx_load_41(1'b0),
        .tx_load_42(1'b0),
        .tx_load_43(1'b0),
        .tx_load_44(1'b0),
        .tx_load_45(1'b0),
        .tx_load_46(1'b0),
        .tx_load_47(1'b0),
        .tx_load_48(1'b0),
        .tx_load_49(1'b0),
        .tx_load_5(1'b0),
        .tx_load_50(1'b0),
        .tx_load_51(1'b0),
        .tx_load_6(1'b0),
        .tx_load_7(1'b0),
        .tx_load_8(1'b0),
        .tx_load_9(1'b0),
        .vtc_rdy_bsc0(vtc_rdy_bsc0),
        .vtc_rdy_bsc1(vtc_rdy_bsc1),
        .vtc_rdy_bsc2(vtc_rdy_bsc2),
        .vtc_rdy_bsc3(NLW_inst_vtc_rdy_bsc3_UNCONNECTED),
        .vtc_rdy_bsc4(NLW_inst_vtc_rdy_bsc4_UNCONNECTED),
        .vtc_rdy_bsc5(NLW_inst_vtc_rdy_bsc5_UNCONNECTED),
        .vtc_rdy_bsc6(NLW_inst_vtc_rdy_bsc6_UNCONNECTED),
        .vtc_rdy_bsc7(NLW_inst_vtc_rdy_bsc7_UNCONNECTED));
endmodule

(* C_ALL_EN_PIN_INFO = "0 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp0 loc W8} 1 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn0 loc Y8} 2 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp2 loc U9} 3 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn2 loc V9} 4 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp1 loc U8} 5 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn1 loc V8} 8 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp3 loc R7} 9 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn3 loc T7} 15 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txp loc J1} 16 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txn loc H1}" *) (* C_ALL_RX_EN = "52'b0000000000000000000000000000000000000000000000000000" *) (* C_BANK = "65" *) 
(* C_BIDIR_BITSLICE_EN = "52'b0000000000000000000000000000000000000000000000000000" *) (* C_BIDIR_FIFO_SYNC_MODE = "FALSE" *) (* C_BIDIR_IS_RX_CLK_INVERTED = "1'b0" *) 
(* C_BIDIR_IS_RX_RST_DLY_INVERTED = "1'b0" *) (* C_BIDIR_IS_RX_RST_INVERTED = "1'b0" *) (* C_BIDIR_IS_TX_CLK_INVERTED = "1'b0" *) 
(* C_BIDIR_IS_TX_RST_DLY_INVERTED = "1'b0" *) (* C_BIDIR_IS_TX_RST_INVERTED = "1'b0" *) (* C_BIDIR_RX_DELAY_FORMAT = "TIME" *) 
(* C_BIDIR_TX_DELAY_FORMAT = "TIME" *) (* C_BITSLIP_MODE = "SLIP_PER_BIT" *) (* C_BITSLIP_VAL = "8'b00101100" *) 
(* C_BS0_INFO = "0 {name bg0_pin0_nc loc W8} 1 {name bg0_pin6_nc loc R8} 2 {name bg1_pin0_nc loc L1} 3 {name bg1_pin6_nc loc H4} 4 {name bg2_pin0_nc loc L7} 5 {name bg2_pin6_nc loc P7} 6 {name bg3_pin0_nc loc J5} 7 {name bg3_pin6_nc loc K8}" *) (* C_BSC_CTRL_CLK = "EXTERNAL" *) (* C_BSC_EN_DYN_ODLY_MODE = "FALSE" *) 
(* C_BSC_IDLY_VT_TRACK = "TRUE" *) (* C_BSC_ODLY_VT_TRACK = "TRUE" *) (* C_BSC_QDLY_VT_TRACK = "TRUE" *) 
(* C_BSC_READ_IDLE_COUNT = "6'b000000" *) (* C_BSC_REFCLK_SRC = "PLLCLK" *) (* C_BSC_ROUNDING_FACTOR = "16" *) 
(* C_BSC_RXGATE_EXTEND = "FALSE" *) (* C_BSC_RX_GATING = "DISABLE" *) (* C_BSC_SELF_CALIBRATE = "ENABLE" *) 
(* C_BSC_SIM_SPEEDUP = "FAST" *) (* C_BS_INIT_VAL = "52'b0000000000000000000000000000000000010000001000101010" *) (* C_CLKIN_DIFF_EN = "0" *) 
(* C_CLKIN_PERIOD = "8.000000" *) (* C_CLK_FWD = "0" *) (* C_CLK_FWD_BITSLICE_NO = "15" *) 
(* C_CLK_FWD_ENABLE = "52'b0000000000000000000000000000000000011000000000000000" *) (* C_CLK_FWD_PHASE = "90" *) (* C_CLK_SIG_TYPE = "SINGLE" *) 
(* C_CLOCK_TRI = "1" *) (* C_DATA_PIN_EN = "5" *) (* C_DATA_TRI = "1" *) 
(* C_DEVICE = "xczu5ev" *) (* C_DEVICE_FAMILY = "zynquplus" *) (* C_DIFFERENTIAL_IO_STD = "MIPI_DPHY_DCI" *) 
(* C_DIFFERENTIAL_IO_TERMINATION = "NONE" *) (* C_DIFF_EN = "52'b0000000000000000000000000000000000011000001100111111" *) (* C_DIV_MODE = "DIV4" *) 
(* C_ENABLE_BITSLIP = "0" *) (* C_ENABLE_DATA_BITSLIP = "0" *) (* C_ENABLE_N_PINS = "1" *) 
(* C_ENABLE_PLL0_PLLOUT1 = "0" *) (* C_ENABLE_PLL0_PLLOUTFB = "0" *) (* C_ENABLE_RIU_INTERFACE = "0" *) 
(* C_ENABLE_RIU_SPLIT = "0" *) (* C_ENABLE_TX_TRI = "0" *) (* C_EN_BIDIR = "0" *) 
(* C_EN_BSC0 = "1" *) (* C_EN_BSC1 = "1" *) (* C_EN_BSC2 = "1" *) 
(* C_EN_BSC3 = "0" *) (* C_EN_BSC4 = "0" *) (* C_EN_BSC5 = "0" *) 
(* C_EN_BSC6 = "0" *) (* C_EN_BSC7 = "0" *) (* C_EN_MULTI_INTF_PORTS = "0" *) 
(* C_EN_RIU_OR0 = "TRUE" *) (* C_EN_RIU_OR1 = "FALSE" *) (* C_EN_RIU_OR2 = "FALSE" *) 
(* C_EN_RIU_OR3 = "FALSE" *) (* C_EN_RX = "0" *) (* C_EN_TX = "1" *) 
(* C_EN_VTC = "0" *) (* C_EXDES_BANK = "64_(HP)" *) (* C_EX_CLK_FREQ = "125.000000" *) 
(* C_EX_INST_GEN = "0" *) (* C_FIFO_SYNC_MODE = "1" *) (* C_GC_LOC = "21 {name IO_L11P_T1U_N8_GC_65 loc K4} 23 {name IO_L12P_T1U_N10_GC_65 loc L3} 28 {name IO_L14P_T2L_N2_GC_65 loc M6}" *) 
(* C_INCLK_LOC = "NONE" *) (* C_INCLK_PIN = "100" *) (* C_INV_RX_CLK = "8'b00000000" *) 
(* C_NIB0_BS0_EN = "0" *) (* C_NIB0_EN_CLK_TO_EXT_NORTH = "1'b0" *) (* C_NIB0_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
(* C_NIB0_EN_OTHER_NCLK = "1'b0" *) (* C_NIB0_EN_OTHER_PCLK = "1'b0" *) (* C_NIB1_BS0_EN = "0" *) 
(* C_NIB1_EN_CLK_TO_EXT_NORTH = "1'b0" *) (* C_NIB1_EN_CLK_TO_EXT_SOUTH = "1'b0" *) (* C_NIB1_EN_OTHER_NCLK = "1'b0" *) 
(* C_NIB1_EN_OTHER_PCLK = "1'b0" *) (* C_NIB2_BS0_EN = "0" *) (* C_NIB2_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
(* C_NIB2_EN_CLK_TO_EXT_SOUTH = "1'b0" *) (* C_NIB2_EN_OTHER_NCLK = "1'b0" *) (* C_NIB2_EN_OTHER_PCLK = "1'b0" *) 
(* C_NIB3_BS0_EN = "0" *) (* C_NIB3_EN_CLK_TO_EXT_NORTH = "1'b0" *) (* C_NIB3_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
(* C_NIB3_EN_OTHER_NCLK = "1'b0" *) (* C_NIB3_EN_OTHER_PCLK = "1'b0" *) (* C_NIB4_BS0_EN = "0" *) 
(* C_NIB4_EN_CLK_TO_EXT_NORTH = "1'b0" *) (* C_NIB4_EN_CLK_TO_EXT_SOUTH = "1'b0" *) (* C_NIB4_EN_OTHER_NCLK = "1'b0" *) 
(* C_NIB4_EN_OTHER_PCLK = "1'b0" *) (* C_NIB5_BS0_EN = "0" *) (* C_NIB5_EN_CLK_TO_EXT_NORTH = "1'b0" *) 
(* C_NIB5_EN_CLK_TO_EXT_SOUTH = "1'b0" *) (* C_NIB5_EN_OTHER_NCLK = "1'b0" *) (* C_NIB5_EN_OTHER_PCLK = "1'b0" *) 
(* C_NIB6_BS0_EN = "0" *) (* C_NIB6_EN_CLK_TO_EXT_NORTH = "1'b0" *) (* C_NIB6_EN_CLK_TO_EXT_SOUTH = "1'b0" *) 
(* C_NIB6_EN_OTHER_NCLK = "1'b0" *) (* C_NIB6_EN_OTHER_PCLK = "1'b0" *) (* C_NIB7_BS0_EN = "0" *) 
(* C_NIB7_EN_CLK_TO_EXT_NORTH = "1'b0" *) (* C_NIB7_EN_CLK_TO_EXT_SOUTH = "1'b0" *) (* C_NIB7_EN_OTHER_NCLK = "1'b0" *) 
(* C_NIB7_EN_OTHER_PCLK = "1'b0" *) (* C_NIBBLE0_TRI = "0" *) (* C_NIBBLE1_TRI = "0" *) 
(* C_NIBBLE2_TRI = "0" *) (* C_NIBBLE3_TRI = "0" *) (* C_NIBBLE4_TRI = "0" *) 
(* C_NIBBLE5_TRI = "0" *) (* C_NIBBLE6_TRI = "0" *) (* C_NIBBLE7_TRI = "0" *) 
(* C_PIN_INFO = "0 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp0 loc W8} 1 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn0 loc Y8} 2 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp2 loc U9} 3 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn2 loc V9} 4 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp1 loc U8} 5 {nibble 0 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn1 loc V8} 8 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txp3 loc R7} 9 {nibble 1 dir TX sig_type DIFF data_strb Data data_strb_org Data sig_name data_txn3 loc T7} 15 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txp loc J1} 16 {nibble 2 dir TX sig_type DIFF data_strb {Clk Fwd} data_strb_org {Clk Fwd} sig_name clk_txn loc H1}" *) (* C_PLL0_CLK0_PHASE = "0.000000" *) (* C_PLL0_CLK1_PHASE = "0.000000" *) 
(* C_PLL0_CLKFBOUT_MULT = "8" *) (* C_PLL0_CLKOUT1_DIVIDE = "1" *) (* C_PLL0_CLKOUTPHY_MODE = "VCO" *) 
(* C_PLL0_CLK_SOURCE = "BUFG_TO_PLL" *) (* C_PLL0_DIVCLK_DIVIDE = "1" *) (* C_PLL0_DIV_FACTOR = "1.000000" *) 
(* C_PLL0_FIFO_WRITE_CLK_EN = "0" *) (* C_PLL0_MMCM_CLKFBOUT_MULT_F = "12.750000" *) (* C_PLL0_MMCM_CLKOUT0_DIVIDE_F = "12.750000" *) 
(* C_PLL0_MMCM_DIVCLK_DIVIDE = "1" *) (* C_PLL0_RX_EXTERNAL_CLK_TO_DATA = "5" *) (* C_PLL1_CLK0_PHASE = "0.000000" *) 
(* C_PLL1_CLK1_PHASE = "0.000000" *) (* C_PLL1_CLKFBOUT_MULT = "8" *) (* C_PLL1_CLKOUTPHY_MODE = "VCO" *) 
(* C_PLL1_DIVCLK_DIVIDE = "1" *) (* C_PLL1_DIV_FACTOR = "1.000000" *) (* C_PLL_SHARING = "1" *) 
(* C_PLL_VCOMIN = "750.000000" *) (* C_REC_IN_FREQ = "125.000" *) (* C_RX_BITSLICE0_EN = "8'b00000000" *) 
(* C_RX_BITSLICE_EN = "52'b0000000000000000000000000000000000000000000000000000" *) (* C_RX_DELAY_CASCADE = "0" *) (* C_RX_DELAY_FORMAT = "TIME" *) 
(* C_RX_DELAY_TYPE = "2'b00" *) (* C_RX_DELAY_TYPE0 = "2'b00" *) (* C_RX_DELAY_TYPE1 = "2'b00" *) 
(* C_RX_DELAY_TYPE10 = "2'b00" *) (* C_RX_DELAY_TYPE11 = "2'b00" *) (* C_RX_DELAY_TYPE12 = "2'b00" *) 
(* C_RX_DELAY_TYPE13 = "2'b00" *) (* C_RX_DELAY_TYPE14 = "2'b00" *) (* C_RX_DELAY_TYPE15 = "2'b00" *) 
(* C_RX_DELAY_TYPE16 = "2'b00" *) (* C_RX_DELAY_TYPE17 = "2'b00" *) (* C_RX_DELAY_TYPE18 = "2'b00" *) 
(* C_RX_DELAY_TYPE19 = "2'b00" *) (* C_RX_DELAY_TYPE2 = "2'b00" *) (* C_RX_DELAY_TYPE20 = "2'b00" *) 
(* C_RX_DELAY_TYPE21 = "2'b00" *) (* C_RX_DELAY_TYPE22 = "2'b00" *) (* C_RX_DELAY_TYPE23 = "2'b00" *) 
(* C_RX_DELAY_TYPE24 = "2'b00" *) (* C_RX_DELAY_TYPE25 = "2'b00" *) (* C_RX_DELAY_TYPE26 = "2'b00" *) 
(* C_RX_DELAY_TYPE27 = "2'b00" *) (* C_RX_DELAY_TYPE28 = "2'b00" *) (* C_RX_DELAY_TYPE29 = "2'b00" *) 
(* C_RX_DELAY_TYPE3 = "2'b00" *) (* C_RX_DELAY_TYPE30 = "2'b00" *) (* C_RX_DELAY_TYPE31 = "2'b00" *) 
(* C_RX_DELAY_TYPE32 = "2'b00" *) (* C_RX_DELAY_TYPE33 = "2'b00" *) (* C_RX_DELAY_TYPE34 = "2'b00" *) 
(* C_RX_DELAY_TYPE35 = "2'b00" *) (* C_RX_DELAY_TYPE36 = "2'b00" *) (* C_RX_DELAY_TYPE37 = "2'b00" *) 
(* C_RX_DELAY_TYPE38 = "2'b00" *) (* C_RX_DELAY_TYPE39 = "2'b00" *) (* C_RX_DELAY_TYPE4 = "2'b00" *) 
(* C_RX_DELAY_TYPE40 = "2'b00" *) (* C_RX_DELAY_TYPE41 = "2'b00" *) (* C_RX_DELAY_TYPE42 = "2'b00" *) 
(* C_RX_DELAY_TYPE43 = "2'b00" *) (* C_RX_DELAY_TYPE44 = "2'b00" *) (* C_RX_DELAY_TYPE45 = "2'b00" *) 
(* C_RX_DELAY_TYPE46 = "2'b00" *) (* C_RX_DELAY_TYPE47 = "2'b00" *) (* C_RX_DELAY_TYPE48 = "2'b00" *) 
(* C_RX_DELAY_TYPE49 = "2'b00" *) (* C_RX_DELAY_TYPE5 = "2'b00" *) (* C_RX_DELAY_TYPE50 = "2'b00" *) 
(* C_RX_DELAY_TYPE51 = "2'b00" *) (* C_RX_DELAY_TYPE6 = "2'b00" *) (* C_RX_DELAY_TYPE7 = "2'b00" *) 
(* C_RX_DELAY_TYPE8 = "2'b00" *) (* C_RX_DELAY_TYPE9 = "2'b00" *) (* C_RX_DELAY_VALUE = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE0 = "12'b000000000000" *) (* C_RX_DELAY_VALUE1 = "12'b000000000000" *) (* C_RX_DELAY_VALUE10 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE11 = "12'b000000000000" *) (* C_RX_DELAY_VALUE12 = "12'b000000000000" *) (* C_RX_DELAY_VALUE13 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE14 = "12'b000000000000" *) (* C_RX_DELAY_VALUE15 = "12'b000000000000" *) (* C_RX_DELAY_VALUE16 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE17 = "12'b000000000000" *) (* C_RX_DELAY_VALUE18 = "12'b000000000000" *) (* C_RX_DELAY_VALUE19 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE2 = "12'b000000000000" *) (* C_RX_DELAY_VALUE20 = "12'b000000000000" *) (* C_RX_DELAY_VALUE21 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE22 = "12'b000000000000" *) (* C_RX_DELAY_VALUE23 = "12'b000000000000" *) (* C_RX_DELAY_VALUE24 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE25 = "12'b000000000000" *) (* C_RX_DELAY_VALUE26 = "12'b000000000000" *) (* C_RX_DELAY_VALUE27 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE28 = "12'b000000000000" *) (* C_RX_DELAY_VALUE29 = "12'b000000000000" *) (* C_RX_DELAY_VALUE3 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE30 = "12'b000000000000" *) (* C_RX_DELAY_VALUE31 = "12'b000000000000" *) (* C_RX_DELAY_VALUE32 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE33 = "12'b000000000000" *) (* C_RX_DELAY_VALUE34 = "12'b000000000000" *) (* C_RX_DELAY_VALUE35 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE36 = "12'b000000000000" *) (* C_RX_DELAY_VALUE37 = "12'b000000000000" *) (* C_RX_DELAY_VALUE38 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE39 = "12'b000000000000" *) (* C_RX_DELAY_VALUE4 = "12'b000000000000" *) (* C_RX_DELAY_VALUE40 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE41 = "12'b000000000000" *) (* C_RX_DELAY_VALUE42 = "12'b000000000000" *) (* C_RX_DELAY_VALUE43 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE44 = "12'b000000000000" *) (* C_RX_DELAY_VALUE45 = "12'b000000000000" *) (* C_RX_DELAY_VALUE46 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE47 = "12'b000000000000" *) (* C_RX_DELAY_VALUE48 = "12'b000000000000" *) (* C_RX_DELAY_VALUE49 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE5 = "12'b000000000000" *) (* C_RX_DELAY_VALUE50 = "12'b000000000000" *) (* C_RX_DELAY_VALUE51 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE6 = "12'b000000000000" *) (* C_RX_DELAY_VALUE7 = "12'b000000000000" *) (* C_RX_DELAY_VALUE8 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE9 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT0 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT1 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT10 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT11 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT12 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT13 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT14 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT15 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT16 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT17 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT18 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT19 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT2 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT20 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT21 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT22 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT23 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT24 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT25 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT26 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT27 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT28 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT29 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT3 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT30 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT31 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT32 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT33 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT34 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT35 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT36 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT37 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT38 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT39 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT4 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT40 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT41 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT42 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT43 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT44 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT45 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT46 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT47 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT48 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT49 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT5 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT50 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT51 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT6 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT7 = "12'b000000000000" *) 
(* C_RX_DELAY_VALUE_EXT8 = "12'b000000000000" *) (* C_RX_DELAY_VALUE_EXT9 = "12'b000000000000" *) (* C_RX_EQUALIZATION_D = "NONE" *) 
(* C_RX_EQUALIZATION_S = "NONE" *) (* C_RX_FIFO_SYNC_MODE = "FALSE" *) (* C_RX_IS_CLK_EXT_INVERTED = "1'b0" *) 
(* C_RX_IS_CLK_INVERTED = "1'b0" *) (* C_RX_IS_RST_DLY_EXT_INVERTED = "1'b0" *) (* C_RX_IS_RST_DLY_INVERTED = "1'b0" *) 
(* C_RX_IS_RST_INVERTED = "1'b0" *) (* C_RX_PIN_EN = "52'b0000000000000000000000000000000000000000000000000000" *) (* C_RX_REFCLK_FREQ = "1000" *) 
(* C_RX_STROBE_EN = "16'b0000000000000000" *) (* C_SERIALIZATION_FACTOR = "8" *) (* C_SERIAL_MODE = "FALSE" *) 
(* C_SIM_DEVICE = "ULTRASCALE_PLUS_ES1" *) (* C_SIM_VERSION = "2.000000" *) (* C_SINGLE_ENDED_IO_STD = "NONE" *) 
(* C_SINGLE_ENDED_IO_TERMINATION = "NONE" *) (* C_STRB_INFO = "99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99" *) (* C_TEMPLATE = "1" *) 
(* C_TX_BITSLICE_EN = "52'b0000000000000000000000000000000000001000000100010101" *) (* C_TX_DATA_PHASE = "0" *) (* C_TX_DELAY_FORMAT = "TIME" *) 
(* C_TX_DELAY_TYPE = "0" *) (* C_TX_DELAY_TYPE0 = "2'b00" *) (* C_TX_DELAY_TYPE1 = "2'b00" *) 
(* C_TX_DELAY_TYPE10 = "2'b00" *) (* C_TX_DELAY_TYPE11 = "2'b00" *) (* C_TX_DELAY_TYPE12 = "2'b00" *) 
(* C_TX_DELAY_TYPE13 = "2'b00" *) (* C_TX_DELAY_TYPE14 = "2'b00" *) (* C_TX_DELAY_TYPE15 = "2'b00" *) 
(* C_TX_DELAY_TYPE16 = "2'b00" *) (* C_TX_DELAY_TYPE17 = "2'b00" *) (* C_TX_DELAY_TYPE18 = "2'b00" *) 
(* C_TX_DELAY_TYPE19 = "2'b00" *) (* C_TX_DELAY_TYPE2 = "2'b00" *) (* C_TX_DELAY_TYPE20 = "2'b00" *) 
(* C_TX_DELAY_TYPE21 = "2'b00" *) (* C_TX_DELAY_TYPE22 = "2'b00" *) (* C_TX_DELAY_TYPE23 = "2'b00" *) 
(* C_TX_DELAY_TYPE24 = "2'b00" *) (* C_TX_DELAY_TYPE25 = "2'b00" *) (* C_TX_DELAY_TYPE26 = "2'b00" *) 
(* C_TX_DELAY_TYPE27 = "2'b00" *) (* C_TX_DELAY_TYPE28 = "2'b00" *) (* C_TX_DELAY_TYPE29 = "2'b00" *) 
(* C_TX_DELAY_TYPE3 = "2'b00" *) (* C_TX_DELAY_TYPE30 = "2'b00" *) (* C_TX_DELAY_TYPE31 = "2'b00" *) 
(* C_TX_DELAY_TYPE32 = "2'b00" *) (* C_TX_DELAY_TYPE33 = "2'b00" *) (* C_TX_DELAY_TYPE34 = "2'b00" *) 
(* C_TX_DELAY_TYPE35 = "2'b00" *) (* C_TX_DELAY_TYPE36 = "2'b00" *) (* C_TX_DELAY_TYPE37 = "2'b00" *) 
(* C_TX_DELAY_TYPE38 = "2'b00" *) (* C_TX_DELAY_TYPE39 = "2'b00" *) (* C_TX_DELAY_TYPE4 = "2'b00" *) 
(* C_TX_DELAY_TYPE40 = "2'b00" *) (* C_TX_DELAY_TYPE41 = "2'b00" *) (* C_TX_DELAY_TYPE42 = "2'b00" *) 
(* C_TX_DELAY_TYPE43 = "2'b00" *) (* C_TX_DELAY_TYPE44 = "2'b00" *) (* C_TX_DELAY_TYPE45 = "2'b00" *) 
(* C_TX_DELAY_TYPE46 = "2'b00" *) (* C_TX_DELAY_TYPE47 = "2'b00" *) (* C_TX_DELAY_TYPE48 = "2'b00" *) 
(* C_TX_DELAY_TYPE49 = "2'b00" *) (* C_TX_DELAY_TYPE5 = "2'b00" *) (* C_TX_DELAY_TYPE50 = "2'b00" *) 
(* C_TX_DELAY_TYPE51 = "2'b00" *) (* C_TX_DELAY_TYPE6 = "2'b00" *) (* C_TX_DELAY_TYPE7 = "2'b00" *) 
(* C_TX_DELAY_TYPE8 = "2'b00" *) (* C_TX_DELAY_TYPE9 = "2'b00" *) (* C_TX_DELAY_VALUE = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE0 = "12'b000000000000" *) (* C_TX_DELAY_VALUE1 = "12'b000000000000" *) (* C_TX_DELAY_VALUE10 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE11 = "12'b000000000000" *) (* C_TX_DELAY_VALUE12 = "12'b000000000000" *) (* C_TX_DELAY_VALUE13 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE14 = "12'b000000000000" *) (* C_TX_DELAY_VALUE15 = "12'b000000000000" *) (* C_TX_DELAY_VALUE16 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE17 = "12'b000000000000" *) (* C_TX_DELAY_VALUE18 = "12'b000000000000" *) (* C_TX_DELAY_VALUE19 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE2 = "12'b000000000000" *) (* C_TX_DELAY_VALUE20 = "12'b000000000000" *) (* C_TX_DELAY_VALUE21 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE22 = "12'b000000000000" *) (* C_TX_DELAY_VALUE23 = "12'b000000000000" *) (* C_TX_DELAY_VALUE24 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE25 = "12'b000000000000" *) (* C_TX_DELAY_VALUE26 = "12'b000000000000" *) (* C_TX_DELAY_VALUE27 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE28 = "12'b000000000000" *) (* C_TX_DELAY_VALUE29 = "12'b000000000000" *) (* C_TX_DELAY_VALUE3 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE30 = "12'b000000000000" *) (* C_TX_DELAY_VALUE31 = "12'b000000000000" *) (* C_TX_DELAY_VALUE32 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE33 = "12'b000000000000" *) (* C_TX_DELAY_VALUE34 = "12'b000000000000" *) (* C_TX_DELAY_VALUE35 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE36 = "12'b000000000000" *) (* C_TX_DELAY_VALUE37 = "12'b000000000000" *) (* C_TX_DELAY_VALUE38 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE39 = "12'b000000000000" *) (* C_TX_DELAY_VALUE4 = "12'b000000000000" *) (* C_TX_DELAY_VALUE40 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE41 = "12'b000000000000" *) (* C_TX_DELAY_VALUE42 = "12'b000000000000" *) (* C_TX_DELAY_VALUE43 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE44 = "12'b000000000000" *) (* C_TX_DELAY_VALUE45 = "12'b000000000000" *) (* C_TX_DELAY_VALUE46 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE47 = "12'b000000000000" *) (* C_TX_DELAY_VALUE48 = "12'b000000000000" *) (* C_TX_DELAY_VALUE49 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE5 = "12'b000000000000" *) (* C_TX_DELAY_VALUE50 = "12'b000000000000" *) (* C_TX_DELAY_VALUE51 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE6 = "12'b000000000000" *) (* C_TX_DELAY_VALUE7 = "12'b000000000000" *) (* C_TX_DELAY_VALUE8 = "12'b000000000000" *) 
(* C_TX_DELAY_VALUE9 = "12'b000000000000" *) (* C_TX_DRIVE_D = "" *) (* C_TX_DRIVE_S = "NONE" *) 
(* C_TX_IS_CLK_INVERTED = "1'b0" *) (* C_TX_IS_RST_DLY_INVERTED = "1'b0" *) (* C_TX_IS_RST_INVERTED = "1'b0" *) 
(* C_TX_NATIVE_ODELAY_BYPASS = "FALSE" *) (* C_TX_PRE_EMPHASIS_D = "NONE" *) (* C_TX_PRE_EMPHASIS_S = "NONE" *) 
(* C_TX_REFCLK_FREQ = "1000" *) (* C_TX_SLEW_D = "" *) (* C_TX_SLEW_S = "NONE" *) 
(* C_TX_TRI_DELAY_FORMAT = "TIME" *) (* C_TX_TRI_INIT = "1'b1" *) (* C_TX_TRI_IS_CLK_INVERTED = "1'b0" *) 
(* C_TX_TRI_IS_RST_DLY_INVERTED = "1'b0" *) (* C_TX_TRI_IS_RST_INVERTED = "1'b0" *) (* C_TX_TRI_NATIVE_ODELAY_BYPASS = "FALSE" *) 
(* C_TX_TRI_OUTPUT_PHASE_90 = "FALSE" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_0_hssio_tx65_high_speed_selectio_wiz_v3_5_1" *) 
(* TX_BITSLICE_TRI_EN = "8'b00000000" *) 
module mipi_dphy_0_mipi_dphy_0_hssio_tx65_high_speed_selectio_wiz_v3_5_1
   (daddr,
    dclk,
    den,
    di,
    dwe,
    do_out,
    drdy,
    clk_p,
    clk_n,
    clk,
    riu_clk,
    app_clk,
    bs_rst_dphy_in,
    rst_seq_done,
    pll0_clkout0,
    pll0_locked,
    pll0_clkout1,
    pll1_clkout0,
    pll1_locked,
    intf_rdy,
    multi_intf_lock_in,
    shared_pll0_clkout0_in,
    shared_pll1_clkout0_in,
    shared_pll0_clkoutphy_in,
    shared_pll1_clkoutphy_in,
    shared_pll0_locked_in,
    shared_pll1_locked_in,
    shared_pll0_clkoutphy_out,
    shared_pll1_clkoutphy_out,
    clk_from_ibuf,
    lptx_t,
    lptx_i_p,
    lptx_i_n,
    hs_rx_disable,
    lp_rx_disable,
    lp_rx_o_p,
    lp_rx_o_n,
    dly_rdy_bsc0,
    vtc_rdy_bsc0,
    en_vtc_bsc0,
    phy_rden_bsc0,
    dly_rdy_bsc1,
    vtc_rdy_bsc1,
    en_vtc_bsc1,
    phy_rden_bsc1,
    dly_rdy_bsc2,
    vtc_rdy_bsc2,
    en_vtc_bsc2,
    phy_rden_bsc2,
    dly_rdy_bsc3,
    vtc_rdy_bsc3,
    en_vtc_bsc3,
    phy_rden_bsc3,
    dly_rdy_bsc4,
    vtc_rdy_bsc4,
    en_vtc_bsc4,
    phy_rden_bsc4,
    dly_rdy_bsc5,
    vtc_rdy_bsc5,
    en_vtc_bsc5,
    phy_rden_bsc5,
    dly_rdy_bsc6,
    vtc_rdy_bsc6,
    en_vtc_bsc6,
    phy_rden_bsc6,
    dly_rdy_bsc7,
    vtc_rdy_bsc7,
    en_vtc_bsc7,
    phy_rden_bsc7,
    riu_addr_bg0,
    riu_nibble_sel_bg0,
    riu_wr_data_bg0,
    riu_wr_en_bg0,
    riu_rd_data_bg0,
    riu_valid_bg0,
    riu_addr_bg0_bs0,
    riu_nibble_sel_bg0_bs0,
    riu_wr_data_bg0_bs0,
    riu_wr_en_bg0_bs0,
    riu_rd_data_bg0_bs0,
    riu_valid_bg0_bs0,
    riu_addr_bg0_bs1,
    riu_nibble_sel_bg0_bs1,
    riu_wr_data_bg0_bs1,
    riu_wr_en_bg0_bs1,
    riu_rd_data_bg0_bs1,
    riu_valid_bg0_bs1,
    riu_addr_bg1,
    riu_nibble_sel_bg1,
    riu_wr_data_bg1,
    riu_wr_en_bg1,
    riu_rd_data_bg1,
    riu_valid_bg1,
    riu_addr_bg1_bs2,
    riu_nibble_sel_bg1_bs2,
    riu_wr_data_bg1_bs2,
    riu_wr_en_bg1_bs2,
    riu_rd_data_bg1_bs2,
    riu_valid_bg1_bs2,
    riu_addr_bg1_bs3,
    riu_nibble_sel_bg1_bs3,
    riu_wr_data_bg1_bs3,
    riu_wr_en_bg1_bs3,
    riu_rd_data_bg1_bs3,
    riu_valid_bg1_bs3,
    riu_addr_bg2,
    riu_nibble_sel_bg2,
    riu_wr_data_bg2,
    riu_wr_en_bg2,
    riu_rd_data_bg2,
    riu_valid_bg2,
    riu_addr_bg2_bs4,
    riu_nibble_sel_bg2_bs4,
    riu_wr_data_bg2_bs4,
    riu_wr_en_bg2_bs4,
    riu_rd_data_bg2_bs4,
    riu_valid_bg2_bs4,
    riu_addr_bg2_bs5,
    riu_nibble_sel_bg2_bs5,
    riu_wr_data_bg2_bs5,
    riu_wr_en_bg2_bs5,
    riu_rd_data_bg2_bs5,
    riu_valid_bg2_bs5,
    riu_addr_bg3,
    riu_nibble_sel_bg3,
    riu_wr_data_bg3,
    riu_wr_en_bg3,
    riu_rd_data_bg3,
    riu_valid_bg3,
    riu_addr_bg3_bs6,
    riu_nibble_sel_bg3_bs6,
    riu_wr_data_bg3_bs6,
    riu_wr_en_bg3_bs6,
    riu_rd_data_bg3_bs6,
    riu_valid_bg3_bs6,
    riu_addr_bg3_bs7,
    riu_nibble_sel_bg3_bs7,
    riu_wr_data_bg3_bs7,
    riu_wr_en_bg3_bs7,
    riu_rd_data_bg3_bs7,
    riu_valid_bg3_bs7,
    tx_clk,
    rx_clk,
    bidir_tx_clk,
    bidir_rx_clk,
    bidir_tx_bs_tri_clk,
    bg0_pin0_nc,
    bg0_pin6_nc,
    bg1_pin0_nc,
    bg1_pin6_nc,
    bg2_pin0_nc,
    bg2_pin6_nc,
    bg3_pin0_nc,
    bg3_pin6_nc,
    start_bitslip,
    rx_bitslip_sync_done,
    rxtx_bitslip_sync_done,
    data_txp0,
    data_from_fabric_data_txp0,
    tri_t_0,
    tx_cntvaluein_0,
    tx_cntvalueout_0,
    tx_ce_0,
    tx_en_vtc_0,
    tx_inc_0,
    tx_load_0,
    rx_cntvalueout_0,
    rx_cntvaluein_0,
    rx_ce_0,
    rx_en_vtc_0,
    rx_inc_0,
    rx_load_0,
    rx_cntvalueout_ext_0,
    rx_cntvaluein_ext_0,
    rx_ce_ext_0,
    rx_en_vtc_ext_0,
    rx_inc_ext_0,
    rx_load_ext_0,
    fifo_empty_0,
    fifo_rd_clk_0,
    fifo_rd_en_0,
    bitslip_error_0,
    data_txn0,
    tri_t_1,
    tx_cntvaluein_1,
    tx_cntvalueout_1,
    tx_ce_1,
    tx_en_vtc_1,
    tx_inc_1,
    tx_load_1,
    rx_cntvalueout_1,
    rx_cntvaluein_1,
    rx_ce_1,
    rx_en_vtc_1,
    rx_inc_1,
    rx_load_1,
    rx_cntvalueout_ext_1,
    rx_cntvaluein_ext_1,
    rx_ce_ext_1,
    rx_en_vtc_ext_1,
    rx_inc_ext_1,
    rx_load_ext_1,
    fifo_empty_1,
    fifo_rd_clk_1,
    fifo_rd_en_1,
    bitslip_error_1,
    data_txp2,
    data_from_fabric_data_txp2,
    tri_t_2,
    tx_cntvaluein_2,
    tx_cntvalueout_2,
    tx_ce_2,
    tx_en_vtc_2,
    tx_inc_2,
    tx_load_2,
    rx_cntvalueout_2,
    rx_cntvaluein_2,
    rx_ce_2,
    rx_en_vtc_2,
    rx_inc_2,
    rx_load_2,
    rx_cntvalueout_ext_2,
    rx_cntvaluein_ext_2,
    rx_ce_ext_2,
    rx_en_vtc_ext_2,
    rx_inc_ext_2,
    rx_load_ext_2,
    fifo_empty_2,
    fifo_rd_clk_2,
    fifo_rd_en_2,
    bitslip_error_2,
    data_txn2,
    tri_t_3,
    tx_cntvaluein_3,
    tx_cntvalueout_3,
    tx_ce_3,
    tx_en_vtc_3,
    tx_inc_3,
    tx_load_3,
    rx_cntvalueout_3,
    rx_cntvaluein_3,
    rx_ce_3,
    rx_en_vtc_3,
    rx_inc_3,
    rx_load_3,
    rx_cntvalueout_ext_3,
    rx_cntvaluein_ext_3,
    rx_ce_ext_3,
    rx_en_vtc_ext_3,
    rx_inc_ext_3,
    rx_load_ext_3,
    fifo_empty_3,
    fifo_rd_clk_3,
    fifo_rd_en_3,
    bitslip_error_3,
    data_txp1,
    data_from_fabric_data_txp1,
    tri_t_4,
    tx_cntvaluein_4,
    tx_cntvalueout_4,
    tx_ce_4,
    tx_en_vtc_4,
    tx_inc_4,
    tx_load_4,
    rx_cntvalueout_4,
    rx_cntvaluein_4,
    rx_ce_4,
    rx_en_vtc_4,
    rx_inc_4,
    rx_load_4,
    rx_cntvalueout_ext_4,
    rx_cntvaluein_ext_4,
    rx_ce_ext_4,
    rx_en_vtc_ext_4,
    rx_inc_ext_4,
    rx_load_ext_4,
    fifo_empty_4,
    fifo_rd_clk_4,
    fifo_rd_en_4,
    bitslip_error_4,
    data_txn1,
    tri_t_5,
    tx_cntvaluein_5,
    tx_cntvalueout_5,
    tx_ce_5,
    tx_en_vtc_5,
    tx_inc_5,
    tx_load_5,
    rx_cntvalueout_5,
    rx_cntvaluein_5,
    rx_ce_5,
    rx_en_vtc_5,
    rx_inc_5,
    rx_load_5,
    rx_cntvalueout_ext_5,
    rx_cntvaluein_ext_5,
    rx_ce_ext_5,
    rx_en_vtc_ext_5,
    rx_inc_ext_5,
    rx_load_ext_5,
    fifo_empty_5,
    fifo_rd_clk_5,
    fifo_rd_en_5,
    bitslip_error_5,
    data_txp3,
    data_from_fabric_data_txp3,
    tri_t_8,
    tx_cntvaluein_8,
    tx_cntvalueout_8,
    tx_ce_8,
    tx_en_vtc_8,
    tx_inc_8,
    tx_load_8,
    rx_cntvalueout_8,
    rx_cntvaluein_8,
    rx_ce_8,
    rx_en_vtc_8,
    rx_inc_8,
    rx_load_8,
    rx_cntvalueout_ext_8,
    rx_cntvaluein_ext_8,
    rx_ce_ext_8,
    rx_en_vtc_ext_8,
    rx_inc_ext_8,
    rx_load_ext_8,
    fifo_empty_8,
    fifo_rd_clk_8,
    fifo_rd_en_8,
    bitslip_error_8,
    data_txn3,
    tri_t_9,
    tx_cntvaluein_9,
    tx_cntvalueout_9,
    tx_ce_9,
    tx_en_vtc_9,
    tx_inc_9,
    tx_load_9,
    rx_cntvalueout_9,
    rx_cntvaluein_9,
    rx_ce_9,
    rx_en_vtc_9,
    rx_inc_9,
    rx_load_9,
    rx_cntvalueout_ext_9,
    rx_cntvaluein_ext_9,
    rx_ce_ext_9,
    rx_en_vtc_ext_9,
    rx_inc_ext_9,
    rx_load_ext_9,
    fifo_empty_9,
    fifo_rd_clk_9,
    fifo_rd_en_9,
    bitslip_error_9,
    clk_txp,
    data_from_fabric_clk_txp,
    tri_t_15,
    tx_cntvaluein_15,
    tx_cntvalueout_15,
    tx_ce_15,
    tx_en_vtc_15,
    tx_inc_15,
    tx_load_15,
    rx_cntvalueout_15,
    rx_cntvaluein_15,
    rx_ce_15,
    rx_en_vtc_15,
    rx_inc_15,
    rx_load_15,
    rx_cntvalueout_ext_15,
    rx_cntvaluein_ext_15,
    rx_ce_ext_15,
    rx_en_vtc_ext_15,
    rx_inc_ext_15,
    rx_load_ext_15,
    fifo_empty_15,
    fifo_rd_clk_15,
    fifo_rd_en_15,
    bitslip_error_15,
    clk_txn,
    tri_t_16,
    tx_cntvaluein_16,
    tx_cntvalueout_16,
    tx_ce_16,
    tx_en_vtc_16,
    tx_inc_16,
    tx_load_16,
    rx_cntvalueout_16,
    rx_cntvaluein_16,
    rx_ce_16,
    rx_en_vtc_16,
    rx_inc_16,
    rx_load_16,
    rx_cntvalueout_ext_16,
    rx_cntvaluein_ext_16,
    rx_ce_ext_16,
    rx_en_vtc_ext_16,
    rx_inc_ext_16,
    rx_load_ext_16,
    fifo_empty_16,
    fifo_rd_clk_16,
    fifo_rd_en_16,
    bitslip_error_16,
    tri_t_6,
    tx_cntvaluein_6,
    tx_cntvalueout_6,
    tx_ce_6,
    tx_en_vtc_6,
    tx_inc_6,
    tx_load_6,
    rx_cntvalueout_6,
    rx_cntvaluein_6,
    rx_ce_6,
    rx_en_vtc_6,
    rx_inc_6,
    rx_load_6,
    rx_cntvalueout_ext_6,
    rx_cntvaluein_ext_6,
    rx_ce_ext_6,
    rx_en_vtc_ext_6,
    rx_inc_ext_6,
    rx_load_ext_6,
    fifo_empty_6,
    fifo_rd_clk_6,
    fifo_rd_en_6,
    bitslip_error_6,
    tri_t_7,
    tx_cntvaluein_7,
    tx_cntvalueout_7,
    tx_ce_7,
    tx_en_vtc_7,
    tx_inc_7,
    tx_load_7,
    rx_cntvalueout_7,
    rx_cntvaluein_7,
    rx_ce_7,
    rx_en_vtc_7,
    rx_inc_7,
    rx_load_7,
    rx_cntvalueout_ext_7,
    rx_cntvaluein_ext_7,
    rx_ce_ext_7,
    rx_en_vtc_ext_7,
    rx_inc_ext_7,
    rx_load_ext_7,
    fifo_empty_7,
    fifo_rd_clk_7,
    fifo_rd_en_7,
    bitslip_error_7,
    tri_t_10,
    tx_cntvaluein_10,
    tx_cntvalueout_10,
    tx_ce_10,
    tx_en_vtc_10,
    tx_inc_10,
    tx_load_10,
    rx_cntvalueout_10,
    rx_cntvaluein_10,
    rx_ce_10,
    rx_en_vtc_10,
    rx_inc_10,
    rx_load_10,
    rx_cntvalueout_ext_10,
    rx_cntvaluein_ext_10,
    rx_ce_ext_10,
    rx_en_vtc_ext_10,
    rx_inc_ext_10,
    rx_load_ext_10,
    fifo_empty_10,
    fifo_rd_clk_10,
    fifo_rd_en_10,
    bitslip_error_10,
    tri_t_11,
    tx_cntvaluein_11,
    tx_cntvalueout_11,
    tx_ce_11,
    tx_en_vtc_11,
    tx_inc_11,
    tx_load_11,
    rx_cntvalueout_11,
    rx_cntvaluein_11,
    rx_ce_11,
    rx_en_vtc_11,
    rx_inc_11,
    rx_load_11,
    rx_cntvalueout_ext_11,
    rx_cntvaluein_ext_11,
    rx_ce_ext_11,
    rx_en_vtc_ext_11,
    rx_inc_ext_11,
    rx_load_ext_11,
    fifo_empty_11,
    fifo_rd_clk_11,
    fifo_rd_en_11,
    bitslip_error_11,
    tri_t_12,
    tx_cntvaluein_12,
    tx_cntvalueout_12,
    tx_ce_12,
    tx_en_vtc_12,
    tx_inc_12,
    tx_load_12,
    rx_cntvalueout_12,
    rx_cntvaluein_12,
    rx_ce_12,
    rx_en_vtc_12,
    rx_inc_12,
    rx_load_12,
    rx_cntvalueout_ext_12,
    rx_cntvaluein_ext_12,
    rx_ce_ext_12,
    rx_en_vtc_ext_12,
    rx_inc_ext_12,
    rx_load_ext_12,
    fifo_empty_12,
    fifo_rd_clk_12,
    fifo_rd_en_12,
    bitslip_error_12,
    tri_t_13,
    tx_cntvaluein_13,
    tx_cntvalueout_13,
    tx_ce_13,
    tx_en_vtc_13,
    tx_inc_13,
    tx_load_13,
    rx_cntvalueout_13,
    rx_cntvaluein_13,
    rx_ce_13,
    rx_en_vtc_13,
    rx_inc_13,
    rx_load_13,
    rx_cntvalueout_ext_13,
    rx_cntvaluein_ext_13,
    rx_ce_ext_13,
    rx_en_vtc_ext_13,
    rx_inc_ext_13,
    rx_load_ext_13,
    fifo_empty_13,
    fifo_rd_clk_13,
    fifo_rd_en_13,
    bitslip_error_13,
    tri_t_14,
    tx_cntvaluein_14,
    tx_cntvalueout_14,
    tx_ce_14,
    tx_en_vtc_14,
    tx_inc_14,
    tx_load_14,
    rx_cntvalueout_14,
    rx_cntvaluein_14,
    rx_ce_14,
    rx_en_vtc_14,
    rx_inc_14,
    rx_load_14,
    rx_cntvalueout_ext_14,
    rx_cntvaluein_ext_14,
    rx_ce_ext_14,
    rx_en_vtc_ext_14,
    rx_inc_ext_14,
    rx_load_ext_14,
    fifo_empty_14,
    fifo_rd_clk_14,
    fifo_rd_en_14,
    bitslip_error_14,
    tri_t_17,
    tx_cntvaluein_17,
    tx_cntvalueout_17,
    tx_ce_17,
    tx_en_vtc_17,
    tx_inc_17,
    tx_load_17,
    rx_cntvalueout_17,
    rx_cntvaluein_17,
    rx_ce_17,
    rx_en_vtc_17,
    rx_inc_17,
    rx_load_17,
    rx_cntvalueout_ext_17,
    rx_cntvaluein_ext_17,
    rx_ce_ext_17,
    rx_en_vtc_ext_17,
    rx_inc_ext_17,
    rx_load_ext_17,
    fifo_empty_17,
    fifo_rd_clk_17,
    fifo_rd_en_17,
    bitslip_error_17,
    tri_t_18,
    tx_cntvaluein_18,
    tx_cntvalueout_18,
    tx_ce_18,
    tx_en_vtc_18,
    tx_inc_18,
    tx_load_18,
    rx_cntvalueout_18,
    rx_cntvaluein_18,
    rx_ce_18,
    rx_en_vtc_18,
    rx_inc_18,
    rx_load_18,
    rx_cntvalueout_ext_18,
    rx_cntvaluein_ext_18,
    rx_ce_ext_18,
    rx_en_vtc_ext_18,
    rx_inc_ext_18,
    rx_load_ext_18,
    fifo_empty_18,
    fifo_rd_clk_18,
    fifo_rd_en_18,
    bitslip_error_18,
    tri_t_19,
    tx_cntvaluein_19,
    tx_cntvalueout_19,
    tx_ce_19,
    tx_en_vtc_19,
    tx_inc_19,
    tx_load_19,
    rx_cntvalueout_19,
    rx_cntvaluein_19,
    rx_ce_19,
    rx_en_vtc_19,
    rx_inc_19,
    rx_load_19,
    rx_cntvalueout_ext_19,
    rx_cntvaluein_ext_19,
    rx_ce_ext_19,
    rx_en_vtc_ext_19,
    rx_inc_ext_19,
    rx_load_ext_19,
    fifo_empty_19,
    fifo_rd_clk_19,
    fifo_rd_en_19,
    bitslip_error_19,
    tri_t_20,
    tx_cntvaluein_20,
    tx_cntvalueout_20,
    tx_ce_20,
    tx_en_vtc_20,
    tx_inc_20,
    tx_load_20,
    rx_cntvalueout_20,
    rx_cntvaluein_20,
    rx_ce_20,
    rx_en_vtc_20,
    rx_inc_20,
    rx_load_20,
    rx_cntvalueout_ext_20,
    rx_cntvaluein_ext_20,
    rx_ce_ext_20,
    rx_en_vtc_ext_20,
    rx_inc_ext_20,
    rx_load_ext_20,
    fifo_empty_20,
    fifo_rd_clk_20,
    fifo_rd_en_20,
    bitslip_error_20,
    tri_t_21,
    tx_cntvaluein_21,
    tx_cntvalueout_21,
    tx_ce_21,
    tx_en_vtc_21,
    tx_inc_21,
    tx_load_21,
    rx_cntvalueout_21,
    rx_cntvaluein_21,
    rx_ce_21,
    rx_en_vtc_21,
    rx_inc_21,
    rx_load_21,
    rx_cntvalueout_ext_21,
    rx_cntvaluein_ext_21,
    rx_ce_ext_21,
    rx_en_vtc_ext_21,
    rx_inc_ext_21,
    rx_load_ext_21,
    fifo_empty_21,
    fifo_rd_clk_21,
    fifo_rd_en_21,
    bitslip_error_21,
    tri_t_22,
    tx_cntvaluein_22,
    tx_cntvalueout_22,
    tx_ce_22,
    tx_en_vtc_22,
    tx_inc_22,
    tx_load_22,
    rx_cntvalueout_22,
    rx_cntvaluein_22,
    rx_ce_22,
    rx_en_vtc_22,
    rx_inc_22,
    rx_load_22,
    rx_cntvalueout_ext_22,
    rx_cntvaluein_ext_22,
    rx_ce_ext_22,
    rx_en_vtc_ext_22,
    rx_inc_ext_22,
    rx_load_ext_22,
    fifo_empty_22,
    fifo_rd_clk_22,
    fifo_rd_en_22,
    bitslip_error_22,
    tri_t_23,
    tx_cntvaluein_23,
    tx_cntvalueout_23,
    tx_ce_23,
    tx_en_vtc_23,
    tx_inc_23,
    tx_load_23,
    rx_cntvalueout_23,
    rx_cntvaluein_23,
    rx_ce_23,
    rx_en_vtc_23,
    rx_inc_23,
    rx_load_23,
    rx_cntvalueout_ext_23,
    rx_cntvaluein_ext_23,
    rx_ce_ext_23,
    rx_en_vtc_ext_23,
    rx_inc_ext_23,
    rx_load_ext_23,
    fifo_empty_23,
    fifo_rd_clk_23,
    fifo_rd_en_23,
    bitslip_error_23,
    tri_t_24,
    tx_cntvaluein_24,
    tx_cntvalueout_24,
    tx_ce_24,
    tx_en_vtc_24,
    tx_inc_24,
    tx_load_24,
    rx_cntvalueout_24,
    rx_cntvaluein_24,
    rx_ce_24,
    rx_en_vtc_24,
    rx_inc_24,
    rx_load_24,
    rx_cntvalueout_ext_24,
    rx_cntvaluein_ext_24,
    rx_ce_ext_24,
    rx_en_vtc_ext_24,
    rx_inc_ext_24,
    rx_load_ext_24,
    fifo_empty_24,
    fifo_rd_clk_24,
    fifo_rd_en_24,
    bitslip_error_24,
    tri_t_25,
    tx_cntvaluein_25,
    tx_cntvalueout_25,
    tx_ce_25,
    tx_en_vtc_25,
    tx_inc_25,
    tx_load_25,
    rx_cntvalueout_25,
    rx_cntvaluein_25,
    rx_ce_25,
    rx_en_vtc_25,
    rx_inc_25,
    rx_load_25,
    rx_cntvalueout_ext_25,
    rx_cntvaluein_ext_25,
    rx_ce_ext_25,
    rx_en_vtc_ext_25,
    rx_inc_ext_25,
    rx_load_ext_25,
    fifo_empty_25,
    fifo_rd_clk_25,
    fifo_rd_en_25,
    bitslip_error_25,
    tri_t_26,
    tx_cntvaluein_26,
    tx_cntvalueout_26,
    tx_ce_26,
    tx_en_vtc_26,
    tx_inc_26,
    tx_load_26,
    rx_cntvalueout_26,
    rx_cntvaluein_26,
    rx_ce_26,
    rx_en_vtc_26,
    rx_inc_26,
    rx_load_26,
    rx_cntvalueout_ext_26,
    rx_cntvaluein_ext_26,
    rx_ce_ext_26,
    rx_en_vtc_ext_26,
    rx_inc_ext_26,
    rx_load_ext_26,
    fifo_empty_26,
    fifo_rd_clk_26,
    fifo_rd_en_26,
    bitslip_error_26,
    tri_t_27,
    tx_cntvaluein_27,
    tx_cntvalueout_27,
    tx_ce_27,
    tx_en_vtc_27,
    tx_inc_27,
    tx_load_27,
    rx_cntvalueout_27,
    rx_cntvaluein_27,
    rx_ce_27,
    rx_en_vtc_27,
    rx_inc_27,
    rx_load_27,
    rx_cntvalueout_ext_27,
    rx_cntvaluein_ext_27,
    rx_ce_ext_27,
    rx_en_vtc_ext_27,
    rx_inc_ext_27,
    rx_load_ext_27,
    fifo_empty_27,
    fifo_rd_clk_27,
    fifo_rd_en_27,
    bitslip_error_27,
    tri_t_28,
    tx_cntvaluein_28,
    tx_cntvalueout_28,
    tx_ce_28,
    tx_en_vtc_28,
    tx_inc_28,
    tx_load_28,
    rx_cntvalueout_28,
    rx_cntvaluein_28,
    rx_ce_28,
    rx_en_vtc_28,
    rx_inc_28,
    rx_load_28,
    rx_cntvalueout_ext_28,
    rx_cntvaluein_ext_28,
    rx_ce_ext_28,
    rx_en_vtc_ext_28,
    rx_inc_ext_28,
    rx_load_ext_28,
    fifo_empty_28,
    fifo_rd_clk_28,
    fifo_rd_en_28,
    bitslip_error_28,
    tri_t_29,
    tx_cntvaluein_29,
    tx_cntvalueout_29,
    tx_ce_29,
    tx_en_vtc_29,
    tx_inc_29,
    tx_load_29,
    rx_cntvalueout_29,
    rx_cntvaluein_29,
    rx_ce_29,
    rx_en_vtc_29,
    rx_inc_29,
    rx_load_29,
    rx_cntvalueout_ext_29,
    rx_cntvaluein_ext_29,
    rx_ce_ext_29,
    rx_en_vtc_ext_29,
    rx_inc_ext_29,
    rx_load_ext_29,
    fifo_empty_29,
    fifo_rd_clk_29,
    fifo_rd_en_29,
    bitslip_error_29,
    tri_t_30,
    tx_cntvaluein_30,
    tx_cntvalueout_30,
    tx_ce_30,
    tx_en_vtc_30,
    tx_inc_30,
    tx_load_30,
    rx_cntvalueout_30,
    rx_cntvaluein_30,
    rx_ce_30,
    rx_en_vtc_30,
    rx_inc_30,
    rx_load_30,
    rx_cntvalueout_ext_30,
    rx_cntvaluein_ext_30,
    rx_ce_ext_30,
    rx_en_vtc_ext_30,
    rx_inc_ext_30,
    rx_load_ext_30,
    fifo_empty_30,
    fifo_rd_clk_30,
    fifo_rd_en_30,
    bitslip_error_30,
    tri_t_31,
    tx_cntvaluein_31,
    tx_cntvalueout_31,
    tx_ce_31,
    tx_en_vtc_31,
    tx_inc_31,
    tx_load_31,
    rx_cntvalueout_31,
    rx_cntvaluein_31,
    rx_ce_31,
    rx_en_vtc_31,
    rx_inc_31,
    rx_load_31,
    rx_cntvalueout_ext_31,
    rx_cntvaluein_ext_31,
    rx_ce_ext_31,
    rx_en_vtc_ext_31,
    rx_inc_ext_31,
    rx_load_ext_31,
    fifo_empty_31,
    fifo_rd_clk_31,
    fifo_rd_en_31,
    bitslip_error_31,
    tri_t_32,
    tx_cntvaluein_32,
    tx_cntvalueout_32,
    tx_ce_32,
    tx_en_vtc_32,
    tx_inc_32,
    tx_load_32,
    rx_cntvalueout_32,
    rx_cntvaluein_32,
    rx_ce_32,
    rx_en_vtc_32,
    rx_inc_32,
    rx_load_32,
    rx_cntvalueout_ext_32,
    rx_cntvaluein_ext_32,
    rx_ce_ext_32,
    rx_en_vtc_ext_32,
    rx_inc_ext_32,
    rx_load_ext_32,
    fifo_empty_32,
    fifo_rd_clk_32,
    fifo_rd_en_32,
    bitslip_error_32,
    tri_t_33,
    tx_cntvaluein_33,
    tx_cntvalueout_33,
    tx_ce_33,
    tx_en_vtc_33,
    tx_inc_33,
    tx_load_33,
    rx_cntvalueout_33,
    rx_cntvaluein_33,
    rx_ce_33,
    rx_en_vtc_33,
    rx_inc_33,
    rx_load_33,
    rx_cntvalueout_ext_33,
    rx_cntvaluein_ext_33,
    rx_ce_ext_33,
    rx_en_vtc_ext_33,
    rx_inc_ext_33,
    rx_load_ext_33,
    fifo_empty_33,
    fifo_rd_clk_33,
    fifo_rd_en_33,
    bitslip_error_33,
    tri_t_34,
    tx_cntvaluein_34,
    tx_cntvalueout_34,
    tx_ce_34,
    tx_en_vtc_34,
    tx_inc_34,
    tx_load_34,
    rx_cntvalueout_34,
    rx_cntvaluein_34,
    rx_ce_34,
    rx_en_vtc_34,
    rx_inc_34,
    rx_load_34,
    rx_cntvalueout_ext_34,
    rx_cntvaluein_ext_34,
    rx_ce_ext_34,
    rx_en_vtc_ext_34,
    rx_inc_ext_34,
    rx_load_ext_34,
    fifo_empty_34,
    fifo_rd_clk_34,
    fifo_rd_en_34,
    bitslip_error_34,
    tri_t_35,
    tx_cntvaluein_35,
    tx_cntvalueout_35,
    tx_ce_35,
    tx_en_vtc_35,
    tx_inc_35,
    tx_load_35,
    rx_cntvalueout_35,
    rx_cntvaluein_35,
    rx_ce_35,
    rx_en_vtc_35,
    rx_inc_35,
    rx_load_35,
    rx_cntvalueout_ext_35,
    rx_cntvaluein_ext_35,
    rx_ce_ext_35,
    rx_en_vtc_ext_35,
    rx_inc_ext_35,
    rx_load_ext_35,
    fifo_empty_35,
    fifo_rd_clk_35,
    fifo_rd_en_35,
    bitslip_error_35,
    tri_t_36,
    tx_cntvaluein_36,
    tx_cntvalueout_36,
    tx_ce_36,
    tx_en_vtc_36,
    tx_inc_36,
    tx_load_36,
    rx_cntvalueout_36,
    rx_cntvaluein_36,
    rx_ce_36,
    rx_en_vtc_36,
    rx_inc_36,
    rx_load_36,
    rx_cntvalueout_ext_36,
    rx_cntvaluein_ext_36,
    rx_ce_ext_36,
    rx_en_vtc_ext_36,
    rx_inc_ext_36,
    rx_load_ext_36,
    fifo_empty_36,
    fifo_rd_clk_36,
    fifo_rd_en_36,
    bitslip_error_36,
    tri_t_37,
    tx_cntvaluein_37,
    tx_cntvalueout_37,
    tx_ce_37,
    tx_en_vtc_37,
    tx_inc_37,
    tx_load_37,
    rx_cntvalueout_37,
    rx_cntvaluein_37,
    rx_ce_37,
    rx_en_vtc_37,
    rx_inc_37,
    rx_load_37,
    rx_cntvalueout_ext_37,
    rx_cntvaluein_ext_37,
    rx_ce_ext_37,
    rx_en_vtc_ext_37,
    rx_inc_ext_37,
    rx_load_ext_37,
    fifo_empty_37,
    fifo_rd_clk_37,
    fifo_rd_en_37,
    bitslip_error_37,
    tri_t_38,
    tx_cntvaluein_38,
    tx_cntvalueout_38,
    tx_ce_38,
    tx_en_vtc_38,
    tx_inc_38,
    tx_load_38,
    rx_cntvalueout_38,
    rx_cntvaluein_38,
    rx_ce_38,
    rx_en_vtc_38,
    rx_inc_38,
    rx_load_38,
    rx_cntvalueout_ext_38,
    rx_cntvaluein_ext_38,
    rx_ce_ext_38,
    rx_en_vtc_ext_38,
    rx_inc_ext_38,
    rx_load_ext_38,
    fifo_empty_38,
    fifo_rd_clk_38,
    fifo_rd_en_38,
    bitslip_error_38,
    tri_t_39,
    tx_cntvaluein_39,
    tx_cntvalueout_39,
    tx_ce_39,
    tx_en_vtc_39,
    tx_inc_39,
    tx_load_39,
    rx_cntvalueout_39,
    rx_cntvaluein_39,
    rx_ce_39,
    rx_en_vtc_39,
    rx_inc_39,
    rx_load_39,
    rx_cntvalueout_ext_39,
    rx_cntvaluein_ext_39,
    rx_ce_ext_39,
    rx_en_vtc_ext_39,
    rx_inc_ext_39,
    rx_load_ext_39,
    fifo_empty_39,
    fifo_rd_clk_39,
    fifo_rd_en_39,
    bitslip_error_39,
    tri_t_40,
    tx_cntvaluein_40,
    tx_cntvalueout_40,
    tx_ce_40,
    tx_en_vtc_40,
    tx_inc_40,
    tx_load_40,
    rx_cntvalueout_40,
    rx_cntvaluein_40,
    rx_ce_40,
    rx_en_vtc_40,
    rx_inc_40,
    rx_load_40,
    rx_cntvalueout_ext_40,
    rx_cntvaluein_ext_40,
    rx_ce_ext_40,
    rx_en_vtc_ext_40,
    rx_inc_ext_40,
    rx_load_ext_40,
    fifo_empty_40,
    fifo_rd_clk_40,
    fifo_rd_en_40,
    bitslip_error_40,
    tri_t_41,
    tx_cntvaluein_41,
    tx_cntvalueout_41,
    tx_ce_41,
    tx_en_vtc_41,
    tx_inc_41,
    tx_load_41,
    rx_cntvalueout_41,
    rx_cntvaluein_41,
    rx_ce_41,
    rx_en_vtc_41,
    rx_inc_41,
    rx_load_41,
    rx_cntvalueout_ext_41,
    rx_cntvaluein_ext_41,
    rx_ce_ext_41,
    rx_en_vtc_ext_41,
    rx_inc_ext_41,
    rx_load_ext_41,
    fifo_empty_41,
    fifo_rd_clk_41,
    fifo_rd_en_41,
    bitslip_error_41,
    tri_t_42,
    tx_cntvaluein_42,
    tx_cntvalueout_42,
    tx_ce_42,
    tx_en_vtc_42,
    tx_inc_42,
    tx_load_42,
    rx_cntvalueout_42,
    rx_cntvaluein_42,
    rx_ce_42,
    rx_en_vtc_42,
    rx_inc_42,
    rx_load_42,
    rx_cntvalueout_ext_42,
    rx_cntvaluein_ext_42,
    rx_ce_ext_42,
    rx_en_vtc_ext_42,
    rx_inc_ext_42,
    rx_load_ext_42,
    fifo_empty_42,
    fifo_rd_clk_42,
    fifo_rd_en_42,
    bitslip_error_42,
    tri_t_43,
    tx_cntvaluein_43,
    tx_cntvalueout_43,
    tx_ce_43,
    tx_en_vtc_43,
    tx_inc_43,
    tx_load_43,
    rx_cntvalueout_43,
    rx_cntvaluein_43,
    rx_ce_43,
    rx_en_vtc_43,
    rx_inc_43,
    rx_load_43,
    rx_cntvalueout_ext_43,
    rx_cntvaluein_ext_43,
    rx_ce_ext_43,
    rx_en_vtc_ext_43,
    rx_inc_ext_43,
    rx_load_ext_43,
    fifo_empty_43,
    fifo_rd_clk_43,
    fifo_rd_en_43,
    bitslip_error_43,
    tri_t_44,
    tx_cntvaluein_44,
    tx_cntvalueout_44,
    tx_ce_44,
    tx_en_vtc_44,
    tx_inc_44,
    tx_load_44,
    rx_cntvalueout_44,
    rx_cntvaluein_44,
    rx_ce_44,
    rx_en_vtc_44,
    rx_inc_44,
    rx_load_44,
    rx_cntvalueout_ext_44,
    rx_cntvaluein_ext_44,
    rx_ce_ext_44,
    rx_en_vtc_ext_44,
    rx_inc_ext_44,
    rx_load_ext_44,
    fifo_empty_44,
    fifo_rd_clk_44,
    fifo_rd_en_44,
    bitslip_error_44,
    tri_t_45,
    tx_cntvaluein_45,
    tx_cntvalueout_45,
    tx_ce_45,
    tx_en_vtc_45,
    tx_inc_45,
    tx_load_45,
    rx_cntvalueout_45,
    rx_cntvaluein_45,
    rx_ce_45,
    rx_en_vtc_45,
    rx_inc_45,
    rx_load_45,
    rx_cntvalueout_ext_45,
    rx_cntvaluein_ext_45,
    rx_ce_ext_45,
    rx_en_vtc_ext_45,
    rx_inc_ext_45,
    rx_load_ext_45,
    fifo_empty_45,
    fifo_rd_clk_45,
    fifo_rd_en_45,
    bitslip_error_45,
    tri_t_46,
    tx_cntvaluein_46,
    tx_cntvalueout_46,
    tx_ce_46,
    tx_en_vtc_46,
    tx_inc_46,
    tx_load_46,
    rx_cntvalueout_46,
    rx_cntvaluein_46,
    rx_ce_46,
    rx_en_vtc_46,
    rx_inc_46,
    rx_load_46,
    rx_cntvalueout_ext_46,
    rx_cntvaluein_ext_46,
    rx_ce_ext_46,
    rx_en_vtc_ext_46,
    rx_inc_ext_46,
    rx_load_ext_46,
    fifo_empty_46,
    fifo_rd_clk_46,
    fifo_rd_en_46,
    bitslip_error_46,
    tri_t_47,
    tx_cntvaluein_47,
    tx_cntvalueout_47,
    tx_ce_47,
    tx_en_vtc_47,
    tx_inc_47,
    tx_load_47,
    rx_cntvalueout_47,
    rx_cntvaluein_47,
    rx_ce_47,
    rx_en_vtc_47,
    rx_inc_47,
    rx_load_47,
    rx_cntvalueout_ext_47,
    rx_cntvaluein_ext_47,
    rx_ce_ext_47,
    rx_en_vtc_ext_47,
    rx_inc_ext_47,
    rx_load_ext_47,
    fifo_empty_47,
    fifo_rd_clk_47,
    fifo_rd_en_47,
    bitslip_error_47,
    tri_t_48,
    tx_cntvaluein_48,
    tx_cntvalueout_48,
    tx_ce_48,
    tx_en_vtc_48,
    tx_inc_48,
    tx_load_48,
    rx_cntvalueout_48,
    rx_cntvaluein_48,
    rx_ce_48,
    rx_en_vtc_48,
    rx_inc_48,
    rx_load_48,
    rx_cntvalueout_ext_48,
    rx_cntvaluein_ext_48,
    rx_ce_ext_48,
    rx_en_vtc_ext_48,
    rx_inc_ext_48,
    rx_load_ext_48,
    fifo_empty_48,
    fifo_rd_clk_48,
    fifo_rd_en_48,
    bitslip_error_48,
    tri_t_49,
    tx_cntvaluein_49,
    tx_cntvalueout_49,
    tx_ce_49,
    tx_en_vtc_49,
    tx_inc_49,
    tx_load_49,
    rx_cntvalueout_49,
    rx_cntvaluein_49,
    rx_ce_49,
    rx_en_vtc_49,
    rx_inc_49,
    rx_load_49,
    rx_cntvalueout_ext_49,
    rx_cntvaluein_ext_49,
    rx_ce_ext_49,
    rx_en_vtc_ext_49,
    rx_inc_ext_49,
    rx_load_ext_49,
    fifo_empty_49,
    fifo_rd_clk_49,
    fifo_rd_en_49,
    bitslip_error_49,
    tri_t_50,
    tx_cntvaluein_50,
    tx_cntvalueout_50,
    tx_ce_50,
    tx_en_vtc_50,
    tx_inc_50,
    tx_load_50,
    rx_cntvalueout_50,
    rx_cntvaluein_50,
    rx_ce_50,
    rx_en_vtc_50,
    rx_inc_50,
    rx_load_50,
    rx_cntvalueout_ext_50,
    rx_cntvaluein_ext_50,
    rx_ce_ext_50,
    rx_en_vtc_ext_50,
    rx_inc_ext_50,
    rx_load_ext_50,
    fifo_empty_50,
    fifo_rd_clk_50,
    fifo_rd_en_50,
    bitslip_error_50,
    tri_t_51,
    tx_cntvaluein_51,
    tx_cntvalueout_51,
    tx_ce_51,
    tx_en_vtc_51,
    tx_inc_51,
    tx_load_51,
    rx_cntvalueout_51,
    rx_cntvaluein_51,
    rx_ce_51,
    rx_en_vtc_51,
    rx_inc_51,
    rx_load_51,
    rx_cntvalueout_ext_51,
    rx_cntvaluein_ext_51,
    rx_ce_ext_51,
    rx_en_vtc_ext_51,
    rx_inc_ext_51,
    rx_load_ext_51,
    fifo_empty_51,
    fifo_rd_clk_51,
    fifo_rd_en_51,
    bitslip_error_51,
    fifo_wr_clk_0,
    fifo_wr_clk_6,
    fifo_wr_clk_13,
    fifo_wr_clk_19,
    fifo_wr_clk_26,
    fifo_wr_clk_32,
    fifo_wr_clk_39,
    fifo_wr_clk_45,
    tri_tbyte0,
    bidir_tx_bs_tri_cntvalueout0,
    bidir_tx_bs_tri_cntvaluein0,
    bidir_tx_bs_tri_en_vtc0,
    bidir_tx_bs_tri_ce0,
    bidir_tx_bs_tri_inc0,
    bidir_tx_bs_tri_load0,
    tri_tbyte1,
    bidir_tx_bs_tri_cntvalueout1,
    bidir_tx_bs_tri_cntvaluein1,
    bidir_tx_bs_tri_en_vtc1,
    bidir_tx_bs_tri_ce1,
    bidir_tx_bs_tri_inc1,
    bidir_tx_bs_tri_load1,
    tri_tbyte2,
    bidir_tx_bs_tri_cntvalueout2,
    bidir_tx_bs_tri_cntvaluein2,
    bidir_tx_bs_tri_en_vtc2,
    bidir_tx_bs_tri_ce2,
    bidir_tx_bs_tri_inc2,
    bidir_tx_bs_tri_load2,
    tri_tbyte3,
    bidir_tx_bs_tri_cntvalueout3,
    bidir_tx_bs_tri_cntvaluein3,
    bidir_tx_bs_tri_en_vtc3,
    bidir_tx_bs_tri_ce3,
    bidir_tx_bs_tri_inc3,
    bidir_tx_bs_tri_load3,
    tri_tbyte4,
    bidir_tx_bs_tri_cntvalueout4,
    bidir_tx_bs_tri_cntvaluein4,
    bidir_tx_bs_tri_en_vtc4,
    bidir_tx_bs_tri_ce4,
    bidir_tx_bs_tri_inc4,
    bidir_tx_bs_tri_load4,
    tri_tbyte5,
    bidir_tx_bs_tri_cntvalueout5,
    bidir_tx_bs_tri_cntvaluein5,
    bidir_tx_bs_tri_en_vtc5,
    bidir_tx_bs_tri_ce5,
    bidir_tx_bs_tri_inc5,
    bidir_tx_bs_tri_load5,
    tri_tbyte6,
    bidir_tx_bs_tri_cntvalueout6,
    bidir_tx_bs_tri_cntvaluein6,
    bidir_tx_bs_tri_en_vtc6,
    bidir_tx_bs_tri_ce6,
    bidir_tx_bs_tri_inc6,
    bidir_tx_bs_tri_load6,
    tri_tbyte7,
    bidir_tx_bs_tri_cntvalueout7,
    bidir_tx_bs_tri_cntvaluein7,
    bidir_tx_bs_tri_en_vtc7,
    bidir_tx_bs_tri_ce7,
    bidir_tx_bs_tri_inc7,
    bidir_tx_bs_tri_load7,
    fifo_rd_data_valid,
    rst);
  input [6:0]daddr;
  input dclk;
  input den;
  input [15:0]di;
  input dwe;
  output [15:0]do_out;
  output drdy;
  input clk_p;
  input clk_n;
  input clk;
  input riu_clk;
  input app_clk;
  input bs_rst_dphy_in;
  output rst_seq_done;
  output pll0_clkout0;
  output pll0_locked;
  output pll0_clkout1;
  output pll1_clkout0;
  output pll1_locked;
  output intf_rdy;
  input multi_intf_lock_in;
  input shared_pll0_clkout0_in;
  input shared_pll1_clkout0_in;
  input shared_pll0_clkoutphy_in;
  input shared_pll1_clkoutphy_in;
  input shared_pll0_locked_in;
  input shared_pll1_locked_in;
  output shared_pll0_clkoutphy_out;
  output shared_pll1_clkoutphy_out;
  output clk_from_ibuf;
  input [4:0]lptx_t;
  input [4:0]lptx_i_p;
  input [4:0]lptx_i_n;
  input [4:0]hs_rx_disable;
  input [4:0]lp_rx_disable;
  output [4:0]lp_rx_o_p;
  output [4:0]lp_rx_o_n;
  output dly_rdy_bsc0;
  output vtc_rdy_bsc0;
  input en_vtc_bsc0;
  input [3:0]phy_rden_bsc0;
  output dly_rdy_bsc1;
  output vtc_rdy_bsc1;
  input en_vtc_bsc1;
  input [3:0]phy_rden_bsc1;
  output dly_rdy_bsc2;
  output vtc_rdy_bsc2;
  input en_vtc_bsc2;
  input [3:0]phy_rden_bsc2;
  output dly_rdy_bsc3;
  output vtc_rdy_bsc3;
  input en_vtc_bsc3;
  input [3:0]phy_rden_bsc3;
  output dly_rdy_bsc4;
  output vtc_rdy_bsc4;
  input en_vtc_bsc4;
  input [3:0]phy_rden_bsc4;
  output dly_rdy_bsc5;
  output vtc_rdy_bsc5;
  input en_vtc_bsc5;
  input [3:0]phy_rden_bsc5;
  output dly_rdy_bsc6;
  output vtc_rdy_bsc6;
  input en_vtc_bsc6;
  input [3:0]phy_rden_bsc6;
  output dly_rdy_bsc7;
  output vtc_rdy_bsc7;
  input en_vtc_bsc7;
  input [3:0]phy_rden_bsc7;
  input [5:0]riu_addr_bg0;
  input [1:0]riu_nibble_sel_bg0;
  input [15:0]riu_wr_data_bg0;
  input riu_wr_en_bg0;
  output [15:0]riu_rd_data_bg0;
  output riu_valid_bg0;
  input [5:0]riu_addr_bg0_bs0;
  input riu_nibble_sel_bg0_bs0;
  input [15:0]riu_wr_data_bg0_bs0;
  input riu_wr_en_bg0_bs0;
  output [15:0]riu_rd_data_bg0_bs0;
  output riu_valid_bg0_bs0;
  input [5:0]riu_addr_bg0_bs1;
  input riu_nibble_sel_bg0_bs1;
  input [15:0]riu_wr_data_bg0_bs1;
  input riu_wr_en_bg0_bs1;
  output [15:0]riu_rd_data_bg0_bs1;
  output riu_valid_bg0_bs1;
  input [5:0]riu_addr_bg1;
  input [1:0]riu_nibble_sel_bg1;
  input [15:0]riu_wr_data_bg1;
  input riu_wr_en_bg1;
  output [15:0]riu_rd_data_bg1;
  output riu_valid_bg1;
  input [5:0]riu_addr_bg1_bs2;
  input riu_nibble_sel_bg1_bs2;
  input [15:0]riu_wr_data_bg1_bs2;
  input riu_wr_en_bg1_bs2;
  output [15:0]riu_rd_data_bg1_bs2;
  output riu_valid_bg1_bs2;
  input [5:0]riu_addr_bg1_bs3;
  input riu_nibble_sel_bg1_bs3;
  input [15:0]riu_wr_data_bg1_bs3;
  input riu_wr_en_bg1_bs3;
  output [15:0]riu_rd_data_bg1_bs3;
  output riu_valid_bg1_bs3;
  input [5:0]riu_addr_bg2;
  input [1:0]riu_nibble_sel_bg2;
  input [15:0]riu_wr_data_bg2;
  input riu_wr_en_bg2;
  output [15:0]riu_rd_data_bg2;
  output riu_valid_bg2;
  input [5:0]riu_addr_bg2_bs4;
  input riu_nibble_sel_bg2_bs4;
  input [15:0]riu_wr_data_bg2_bs4;
  input riu_wr_en_bg2_bs4;
  output [15:0]riu_rd_data_bg2_bs4;
  output riu_valid_bg2_bs4;
  input [5:0]riu_addr_bg2_bs5;
  input riu_nibble_sel_bg2_bs5;
  input [15:0]riu_wr_data_bg2_bs5;
  input riu_wr_en_bg2_bs5;
  output [15:0]riu_rd_data_bg2_bs5;
  output riu_valid_bg2_bs5;
  input [5:0]riu_addr_bg3;
  input [1:0]riu_nibble_sel_bg3;
  input [15:0]riu_wr_data_bg3;
  input riu_wr_en_bg3;
  output [15:0]riu_rd_data_bg3;
  output riu_valid_bg3;
  input [5:0]riu_addr_bg3_bs6;
  input riu_nibble_sel_bg3_bs6;
  input [15:0]riu_wr_data_bg3_bs6;
  input riu_wr_en_bg3_bs6;
  output [15:0]riu_rd_data_bg3_bs6;
  output riu_valid_bg3_bs6;
  input [5:0]riu_addr_bg3_bs7;
  input riu_nibble_sel_bg3_bs7;
  input [15:0]riu_wr_data_bg3_bs7;
  input riu_wr_en_bg3_bs7;
  output [15:0]riu_rd_data_bg3_bs7;
  output riu_valid_bg3_bs7;
  input tx_clk;
  input rx_clk;
  input bidir_tx_clk;
  input bidir_rx_clk;
  input bidir_tx_bs_tri_clk;
  input bg0_pin0_nc;
  input bg0_pin6_nc;
  input bg1_pin0_nc;
  input bg1_pin6_nc;
  input bg2_pin0_nc;
  input bg2_pin6_nc;
  input bg3_pin0_nc;
  input bg3_pin6_nc;
  input start_bitslip;
  output rx_bitslip_sync_done;
  output rxtx_bitslip_sync_done;
  output data_txp0;
  input [7:0]data_from_fabric_data_txp0;
  input tri_t_0;
  input [8:0]tx_cntvaluein_0;
  output [8:0]tx_cntvalueout_0;
  input tx_ce_0;
  input tx_en_vtc_0;
  input tx_inc_0;
  input tx_load_0;
  output [8:0]rx_cntvalueout_0;
  input [8:0]rx_cntvaluein_0;
  input rx_ce_0;
  input rx_en_vtc_0;
  input rx_inc_0;
  input rx_load_0;
  output [8:0]rx_cntvalueout_ext_0;
  input [8:0]rx_cntvaluein_ext_0;
  input rx_ce_ext_0;
  input rx_en_vtc_ext_0;
  input rx_inc_ext_0;
  input rx_load_ext_0;
  output fifo_empty_0;
  input fifo_rd_clk_0;
  input fifo_rd_en_0;
  output bitslip_error_0;
  output data_txn0;
  input tri_t_1;
  input [8:0]tx_cntvaluein_1;
  output [8:0]tx_cntvalueout_1;
  input tx_ce_1;
  input tx_en_vtc_1;
  input tx_inc_1;
  input tx_load_1;
  output [8:0]rx_cntvalueout_1;
  input [8:0]rx_cntvaluein_1;
  input rx_ce_1;
  input rx_en_vtc_1;
  input rx_inc_1;
  input rx_load_1;
  output [8:0]rx_cntvalueout_ext_1;
  input [8:0]rx_cntvaluein_ext_1;
  input rx_ce_ext_1;
  input rx_en_vtc_ext_1;
  input rx_inc_ext_1;
  input rx_load_ext_1;
  output fifo_empty_1;
  input fifo_rd_clk_1;
  input fifo_rd_en_1;
  output bitslip_error_1;
  output data_txp2;
  input [7:0]data_from_fabric_data_txp2;
  input tri_t_2;
  input [8:0]tx_cntvaluein_2;
  output [8:0]tx_cntvalueout_2;
  input tx_ce_2;
  input tx_en_vtc_2;
  input tx_inc_2;
  input tx_load_2;
  output [8:0]rx_cntvalueout_2;
  input [8:0]rx_cntvaluein_2;
  input rx_ce_2;
  input rx_en_vtc_2;
  input rx_inc_2;
  input rx_load_2;
  output [8:0]rx_cntvalueout_ext_2;
  input [8:0]rx_cntvaluein_ext_2;
  input rx_ce_ext_2;
  input rx_en_vtc_ext_2;
  input rx_inc_ext_2;
  input rx_load_ext_2;
  output fifo_empty_2;
  input fifo_rd_clk_2;
  input fifo_rd_en_2;
  output bitslip_error_2;
  output data_txn2;
  input tri_t_3;
  input [8:0]tx_cntvaluein_3;
  output [8:0]tx_cntvalueout_3;
  input tx_ce_3;
  input tx_en_vtc_3;
  input tx_inc_3;
  input tx_load_3;
  output [8:0]rx_cntvalueout_3;
  input [8:0]rx_cntvaluein_3;
  input rx_ce_3;
  input rx_en_vtc_3;
  input rx_inc_3;
  input rx_load_3;
  output [8:0]rx_cntvalueout_ext_3;
  input [8:0]rx_cntvaluein_ext_3;
  input rx_ce_ext_3;
  input rx_en_vtc_ext_3;
  input rx_inc_ext_3;
  input rx_load_ext_3;
  output fifo_empty_3;
  input fifo_rd_clk_3;
  input fifo_rd_en_3;
  output bitslip_error_3;
  output data_txp1;
  input [7:0]data_from_fabric_data_txp1;
  input tri_t_4;
  input [8:0]tx_cntvaluein_4;
  output [8:0]tx_cntvalueout_4;
  input tx_ce_4;
  input tx_en_vtc_4;
  input tx_inc_4;
  input tx_load_4;
  output [8:0]rx_cntvalueout_4;
  input [8:0]rx_cntvaluein_4;
  input rx_ce_4;
  input rx_en_vtc_4;
  input rx_inc_4;
  input rx_load_4;
  output [8:0]rx_cntvalueout_ext_4;
  input [8:0]rx_cntvaluein_ext_4;
  input rx_ce_ext_4;
  input rx_en_vtc_ext_4;
  input rx_inc_ext_4;
  input rx_load_ext_4;
  output fifo_empty_4;
  input fifo_rd_clk_4;
  input fifo_rd_en_4;
  output bitslip_error_4;
  output data_txn1;
  input tri_t_5;
  input [8:0]tx_cntvaluein_5;
  output [8:0]tx_cntvalueout_5;
  input tx_ce_5;
  input tx_en_vtc_5;
  input tx_inc_5;
  input tx_load_5;
  output [8:0]rx_cntvalueout_5;
  input [8:0]rx_cntvaluein_5;
  input rx_ce_5;
  input rx_en_vtc_5;
  input rx_inc_5;
  input rx_load_5;
  output [8:0]rx_cntvalueout_ext_5;
  input [8:0]rx_cntvaluein_ext_5;
  input rx_ce_ext_5;
  input rx_en_vtc_ext_5;
  input rx_inc_ext_5;
  input rx_load_ext_5;
  output fifo_empty_5;
  input fifo_rd_clk_5;
  input fifo_rd_en_5;
  output bitslip_error_5;
  output data_txp3;
  input [7:0]data_from_fabric_data_txp3;
  input tri_t_8;
  input [8:0]tx_cntvaluein_8;
  output [8:0]tx_cntvalueout_8;
  input tx_ce_8;
  input tx_en_vtc_8;
  input tx_inc_8;
  input tx_load_8;
  output [8:0]rx_cntvalueout_8;
  input [8:0]rx_cntvaluein_8;
  input rx_ce_8;
  input rx_en_vtc_8;
  input rx_inc_8;
  input rx_load_8;
  output [8:0]rx_cntvalueout_ext_8;
  input [8:0]rx_cntvaluein_ext_8;
  input rx_ce_ext_8;
  input rx_en_vtc_ext_8;
  input rx_inc_ext_8;
  input rx_load_ext_8;
  output fifo_empty_8;
  input fifo_rd_clk_8;
  input fifo_rd_en_8;
  output bitslip_error_8;
  output data_txn3;
  input tri_t_9;
  input [8:0]tx_cntvaluein_9;
  output [8:0]tx_cntvalueout_9;
  input tx_ce_9;
  input tx_en_vtc_9;
  input tx_inc_9;
  input tx_load_9;
  output [8:0]rx_cntvalueout_9;
  input [8:0]rx_cntvaluein_9;
  input rx_ce_9;
  input rx_en_vtc_9;
  input rx_inc_9;
  input rx_load_9;
  output [8:0]rx_cntvalueout_ext_9;
  input [8:0]rx_cntvaluein_ext_9;
  input rx_ce_ext_9;
  input rx_en_vtc_ext_9;
  input rx_inc_ext_9;
  input rx_load_ext_9;
  output fifo_empty_9;
  input fifo_rd_clk_9;
  input fifo_rd_en_9;
  output bitslip_error_9;
  output clk_txp;
  input [7:0]data_from_fabric_clk_txp;
  input tri_t_15;
  input [8:0]tx_cntvaluein_15;
  output [8:0]tx_cntvalueout_15;
  input tx_ce_15;
  input tx_en_vtc_15;
  input tx_inc_15;
  input tx_load_15;
  output [8:0]rx_cntvalueout_15;
  input [8:0]rx_cntvaluein_15;
  input rx_ce_15;
  input rx_en_vtc_15;
  input rx_inc_15;
  input rx_load_15;
  output [8:0]rx_cntvalueout_ext_15;
  input [8:0]rx_cntvaluein_ext_15;
  input rx_ce_ext_15;
  input rx_en_vtc_ext_15;
  input rx_inc_ext_15;
  input rx_load_ext_15;
  output fifo_empty_15;
  input fifo_rd_clk_15;
  input fifo_rd_en_15;
  output bitslip_error_15;
  output clk_txn;
  input tri_t_16;
  input [8:0]tx_cntvaluein_16;
  output [8:0]tx_cntvalueout_16;
  input tx_ce_16;
  input tx_en_vtc_16;
  input tx_inc_16;
  input tx_load_16;
  output [8:0]rx_cntvalueout_16;
  input [8:0]rx_cntvaluein_16;
  input rx_ce_16;
  input rx_en_vtc_16;
  input rx_inc_16;
  input rx_load_16;
  output [8:0]rx_cntvalueout_ext_16;
  input [8:0]rx_cntvaluein_ext_16;
  input rx_ce_ext_16;
  input rx_en_vtc_ext_16;
  input rx_inc_ext_16;
  input rx_load_ext_16;
  output fifo_empty_16;
  input fifo_rd_clk_16;
  input fifo_rd_en_16;
  output bitslip_error_16;
  input tri_t_6;
  input [8:0]tx_cntvaluein_6;
  output [8:0]tx_cntvalueout_6;
  input tx_ce_6;
  input tx_en_vtc_6;
  input tx_inc_6;
  input tx_load_6;
  output [8:0]rx_cntvalueout_6;
  input [8:0]rx_cntvaluein_6;
  input rx_ce_6;
  input rx_en_vtc_6;
  input rx_inc_6;
  input rx_load_6;
  output [8:0]rx_cntvalueout_ext_6;
  input [8:0]rx_cntvaluein_ext_6;
  input rx_ce_ext_6;
  input rx_en_vtc_ext_6;
  input rx_inc_ext_6;
  input rx_load_ext_6;
  output fifo_empty_6;
  input fifo_rd_clk_6;
  input fifo_rd_en_6;
  output bitslip_error_6;
  input tri_t_7;
  input [8:0]tx_cntvaluein_7;
  output [8:0]tx_cntvalueout_7;
  input tx_ce_7;
  input tx_en_vtc_7;
  input tx_inc_7;
  input tx_load_7;
  output [8:0]rx_cntvalueout_7;
  input [8:0]rx_cntvaluein_7;
  input rx_ce_7;
  input rx_en_vtc_7;
  input rx_inc_7;
  input rx_load_7;
  output [8:0]rx_cntvalueout_ext_7;
  input [8:0]rx_cntvaluein_ext_7;
  input rx_ce_ext_7;
  input rx_en_vtc_ext_7;
  input rx_inc_ext_7;
  input rx_load_ext_7;
  output fifo_empty_7;
  input fifo_rd_clk_7;
  input fifo_rd_en_7;
  output bitslip_error_7;
  input tri_t_10;
  input [8:0]tx_cntvaluein_10;
  output [8:0]tx_cntvalueout_10;
  input tx_ce_10;
  input tx_en_vtc_10;
  input tx_inc_10;
  input tx_load_10;
  output [8:0]rx_cntvalueout_10;
  input [8:0]rx_cntvaluein_10;
  input rx_ce_10;
  input rx_en_vtc_10;
  input rx_inc_10;
  input rx_load_10;
  output [8:0]rx_cntvalueout_ext_10;
  input [8:0]rx_cntvaluein_ext_10;
  input rx_ce_ext_10;
  input rx_en_vtc_ext_10;
  input rx_inc_ext_10;
  input rx_load_ext_10;
  output fifo_empty_10;
  input fifo_rd_clk_10;
  input fifo_rd_en_10;
  output bitslip_error_10;
  input tri_t_11;
  input [8:0]tx_cntvaluein_11;
  output [8:0]tx_cntvalueout_11;
  input tx_ce_11;
  input tx_en_vtc_11;
  input tx_inc_11;
  input tx_load_11;
  output [8:0]rx_cntvalueout_11;
  input [8:0]rx_cntvaluein_11;
  input rx_ce_11;
  input rx_en_vtc_11;
  input rx_inc_11;
  input rx_load_11;
  output [8:0]rx_cntvalueout_ext_11;
  input [8:0]rx_cntvaluein_ext_11;
  input rx_ce_ext_11;
  input rx_en_vtc_ext_11;
  input rx_inc_ext_11;
  input rx_load_ext_11;
  output fifo_empty_11;
  input fifo_rd_clk_11;
  input fifo_rd_en_11;
  output bitslip_error_11;
  input tri_t_12;
  input [8:0]tx_cntvaluein_12;
  output [8:0]tx_cntvalueout_12;
  input tx_ce_12;
  input tx_en_vtc_12;
  input tx_inc_12;
  input tx_load_12;
  output [8:0]rx_cntvalueout_12;
  input [8:0]rx_cntvaluein_12;
  input rx_ce_12;
  input rx_en_vtc_12;
  input rx_inc_12;
  input rx_load_12;
  output [8:0]rx_cntvalueout_ext_12;
  input [8:0]rx_cntvaluein_ext_12;
  input rx_ce_ext_12;
  input rx_en_vtc_ext_12;
  input rx_inc_ext_12;
  input rx_load_ext_12;
  output fifo_empty_12;
  input fifo_rd_clk_12;
  input fifo_rd_en_12;
  output bitslip_error_12;
  input tri_t_13;
  input [8:0]tx_cntvaluein_13;
  output [8:0]tx_cntvalueout_13;
  input tx_ce_13;
  input tx_en_vtc_13;
  input tx_inc_13;
  input tx_load_13;
  output [8:0]rx_cntvalueout_13;
  input [8:0]rx_cntvaluein_13;
  input rx_ce_13;
  input rx_en_vtc_13;
  input rx_inc_13;
  input rx_load_13;
  output [8:0]rx_cntvalueout_ext_13;
  input [8:0]rx_cntvaluein_ext_13;
  input rx_ce_ext_13;
  input rx_en_vtc_ext_13;
  input rx_inc_ext_13;
  input rx_load_ext_13;
  output fifo_empty_13;
  input fifo_rd_clk_13;
  input fifo_rd_en_13;
  output bitslip_error_13;
  input tri_t_14;
  input [8:0]tx_cntvaluein_14;
  output [8:0]tx_cntvalueout_14;
  input tx_ce_14;
  input tx_en_vtc_14;
  input tx_inc_14;
  input tx_load_14;
  output [8:0]rx_cntvalueout_14;
  input [8:0]rx_cntvaluein_14;
  input rx_ce_14;
  input rx_en_vtc_14;
  input rx_inc_14;
  input rx_load_14;
  output [8:0]rx_cntvalueout_ext_14;
  input [8:0]rx_cntvaluein_ext_14;
  input rx_ce_ext_14;
  input rx_en_vtc_ext_14;
  input rx_inc_ext_14;
  input rx_load_ext_14;
  output fifo_empty_14;
  input fifo_rd_clk_14;
  input fifo_rd_en_14;
  output bitslip_error_14;
  input tri_t_17;
  input [8:0]tx_cntvaluein_17;
  output [8:0]tx_cntvalueout_17;
  input tx_ce_17;
  input tx_en_vtc_17;
  input tx_inc_17;
  input tx_load_17;
  output [8:0]rx_cntvalueout_17;
  input [8:0]rx_cntvaluein_17;
  input rx_ce_17;
  input rx_en_vtc_17;
  input rx_inc_17;
  input rx_load_17;
  output [8:0]rx_cntvalueout_ext_17;
  input [8:0]rx_cntvaluein_ext_17;
  input rx_ce_ext_17;
  input rx_en_vtc_ext_17;
  input rx_inc_ext_17;
  input rx_load_ext_17;
  output fifo_empty_17;
  input fifo_rd_clk_17;
  input fifo_rd_en_17;
  output bitslip_error_17;
  input tri_t_18;
  input [8:0]tx_cntvaluein_18;
  output [8:0]tx_cntvalueout_18;
  input tx_ce_18;
  input tx_en_vtc_18;
  input tx_inc_18;
  input tx_load_18;
  output [8:0]rx_cntvalueout_18;
  input [8:0]rx_cntvaluein_18;
  input rx_ce_18;
  input rx_en_vtc_18;
  input rx_inc_18;
  input rx_load_18;
  output [8:0]rx_cntvalueout_ext_18;
  input [8:0]rx_cntvaluein_ext_18;
  input rx_ce_ext_18;
  input rx_en_vtc_ext_18;
  input rx_inc_ext_18;
  input rx_load_ext_18;
  output fifo_empty_18;
  input fifo_rd_clk_18;
  input fifo_rd_en_18;
  output bitslip_error_18;
  input tri_t_19;
  input [8:0]tx_cntvaluein_19;
  output [8:0]tx_cntvalueout_19;
  input tx_ce_19;
  input tx_en_vtc_19;
  input tx_inc_19;
  input tx_load_19;
  output [8:0]rx_cntvalueout_19;
  input [8:0]rx_cntvaluein_19;
  input rx_ce_19;
  input rx_en_vtc_19;
  input rx_inc_19;
  input rx_load_19;
  output [8:0]rx_cntvalueout_ext_19;
  input [8:0]rx_cntvaluein_ext_19;
  input rx_ce_ext_19;
  input rx_en_vtc_ext_19;
  input rx_inc_ext_19;
  input rx_load_ext_19;
  output fifo_empty_19;
  input fifo_rd_clk_19;
  input fifo_rd_en_19;
  output bitslip_error_19;
  input tri_t_20;
  input [8:0]tx_cntvaluein_20;
  output [8:0]tx_cntvalueout_20;
  input tx_ce_20;
  input tx_en_vtc_20;
  input tx_inc_20;
  input tx_load_20;
  output [8:0]rx_cntvalueout_20;
  input [8:0]rx_cntvaluein_20;
  input rx_ce_20;
  input rx_en_vtc_20;
  input rx_inc_20;
  input rx_load_20;
  output [8:0]rx_cntvalueout_ext_20;
  input [8:0]rx_cntvaluein_ext_20;
  input rx_ce_ext_20;
  input rx_en_vtc_ext_20;
  input rx_inc_ext_20;
  input rx_load_ext_20;
  output fifo_empty_20;
  input fifo_rd_clk_20;
  input fifo_rd_en_20;
  output bitslip_error_20;
  input tri_t_21;
  input [8:0]tx_cntvaluein_21;
  output [8:0]tx_cntvalueout_21;
  input tx_ce_21;
  input tx_en_vtc_21;
  input tx_inc_21;
  input tx_load_21;
  output [8:0]rx_cntvalueout_21;
  input [8:0]rx_cntvaluein_21;
  input rx_ce_21;
  input rx_en_vtc_21;
  input rx_inc_21;
  input rx_load_21;
  output [8:0]rx_cntvalueout_ext_21;
  input [8:0]rx_cntvaluein_ext_21;
  input rx_ce_ext_21;
  input rx_en_vtc_ext_21;
  input rx_inc_ext_21;
  input rx_load_ext_21;
  output fifo_empty_21;
  input fifo_rd_clk_21;
  input fifo_rd_en_21;
  output bitslip_error_21;
  input tri_t_22;
  input [8:0]tx_cntvaluein_22;
  output [8:0]tx_cntvalueout_22;
  input tx_ce_22;
  input tx_en_vtc_22;
  input tx_inc_22;
  input tx_load_22;
  output [8:0]rx_cntvalueout_22;
  input [8:0]rx_cntvaluein_22;
  input rx_ce_22;
  input rx_en_vtc_22;
  input rx_inc_22;
  input rx_load_22;
  output [8:0]rx_cntvalueout_ext_22;
  input [8:0]rx_cntvaluein_ext_22;
  input rx_ce_ext_22;
  input rx_en_vtc_ext_22;
  input rx_inc_ext_22;
  input rx_load_ext_22;
  output fifo_empty_22;
  input fifo_rd_clk_22;
  input fifo_rd_en_22;
  output bitslip_error_22;
  input tri_t_23;
  input [8:0]tx_cntvaluein_23;
  output [8:0]tx_cntvalueout_23;
  input tx_ce_23;
  input tx_en_vtc_23;
  input tx_inc_23;
  input tx_load_23;
  output [8:0]rx_cntvalueout_23;
  input [8:0]rx_cntvaluein_23;
  input rx_ce_23;
  input rx_en_vtc_23;
  input rx_inc_23;
  input rx_load_23;
  output [8:0]rx_cntvalueout_ext_23;
  input [8:0]rx_cntvaluein_ext_23;
  input rx_ce_ext_23;
  input rx_en_vtc_ext_23;
  input rx_inc_ext_23;
  input rx_load_ext_23;
  output fifo_empty_23;
  input fifo_rd_clk_23;
  input fifo_rd_en_23;
  output bitslip_error_23;
  input tri_t_24;
  input [8:0]tx_cntvaluein_24;
  output [8:0]tx_cntvalueout_24;
  input tx_ce_24;
  input tx_en_vtc_24;
  input tx_inc_24;
  input tx_load_24;
  output [8:0]rx_cntvalueout_24;
  input [8:0]rx_cntvaluein_24;
  input rx_ce_24;
  input rx_en_vtc_24;
  input rx_inc_24;
  input rx_load_24;
  output [8:0]rx_cntvalueout_ext_24;
  input [8:0]rx_cntvaluein_ext_24;
  input rx_ce_ext_24;
  input rx_en_vtc_ext_24;
  input rx_inc_ext_24;
  input rx_load_ext_24;
  output fifo_empty_24;
  input fifo_rd_clk_24;
  input fifo_rd_en_24;
  output bitslip_error_24;
  input tri_t_25;
  input [8:0]tx_cntvaluein_25;
  output [8:0]tx_cntvalueout_25;
  input tx_ce_25;
  input tx_en_vtc_25;
  input tx_inc_25;
  input tx_load_25;
  output [8:0]rx_cntvalueout_25;
  input [8:0]rx_cntvaluein_25;
  input rx_ce_25;
  input rx_en_vtc_25;
  input rx_inc_25;
  input rx_load_25;
  output [8:0]rx_cntvalueout_ext_25;
  input [8:0]rx_cntvaluein_ext_25;
  input rx_ce_ext_25;
  input rx_en_vtc_ext_25;
  input rx_inc_ext_25;
  input rx_load_ext_25;
  output fifo_empty_25;
  input fifo_rd_clk_25;
  input fifo_rd_en_25;
  output bitslip_error_25;
  input tri_t_26;
  input [8:0]tx_cntvaluein_26;
  output [8:0]tx_cntvalueout_26;
  input tx_ce_26;
  input tx_en_vtc_26;
  input tx_inc_26;
  input tx_load_26;
  output [8:0]rx_cntvalueout_26;
  input [8:0]rx_cntvaluein_26;
  input rx_ce_26;
  input rx_en_vtc_26;
  input rx_inc_26;
  input rx_load_26;
  output [8:0]rx_cntvalueout_ext_26;
  input [8:0]rx_cntvaluein_ext_26;
  input rx_ce_ext_26;
  input rx_en_vtc_ext_26;
  input rx_inc_ext_26;
  input rx_load_ext_26;
  output fifo_empty_26;
  input fifo_rd_clk_26;
  input fifo_rd_en_26;
  output bitslip_error_26;
  input tri_t_27;
  input [8:0]tx_cntvaluein_27;
  output [8:0]tx_cntvalueout_27;
  input tx_ce_27;
  input tx_en_vtc_27;
  input tx_inc_27;
  input tx_load_27;
  output [8:0]rx_cntvalueout_27;
  input [8:0]rx_cntvaluein_27;
  input rx_ce_27;
  input rx_en_vtc_27;
  input rx_inc_27;
  input rx_load_27;
  output [8:0]rx_cntvalueout_ext_27;
  input [8:0]rx_cntvaluein_ext_27;
  input rx_ce_ext_27;
  input rx_en_vtc_ext_27;
  input rx_inc_ext_27;
  input rx_load_ext_27;
  output fifo_empty_27;
  input fifo_rd_clk_27;
  input fifo_rd_en_27;
  output bitslip_error_27;
  input tri_t_28;
  input [8:0]tx_cntvaluein_28;
  output [8:0]tx_cntvalueout_28;
  input tx_ce_28;
  input tx_en_vtc_28;
  input tx_inc_28;
  input tx_load_28;
  output [8:0]rx_cntvalueout_28;
  input [8:0]rx_cntvaluein_28;
  input rx_ce_28;
  input rx_en_vtc_28;
  input rx_inc_28;
  input rx_load_28;
  output [8:0]rx_cntvalueout_ext_28;
  input [8:0]rx_cntvaluein_ext_28;
  input rx_ce_ext_28;
  input rx_en_vtc_ext_28;
  input rx_inc_ext_28;
  input rx_load_ext_28;
  output fifo_empty_28;
  input fifo_rd_clk_28;
  input fifo_rd_en_28;
  output bitslip_error_28;
  input tri_t_29;
  input [8:0]tx_cntvaluein_29;
  output [8:0]tx_cntvalueout_29;
  input tx_ce_29;
  input tx_en_vtc_29;
  input tx_inc_29;
  input tx_load_29;
  output [8:0]rx_cntvalueout_29;
  input [8:0]rx_cntvaluein_29;
  input rx_ce_29;
  input rx_en_vtc_29;
  input rx_inc_29;
  input rx_load_29;
  output [8:0]rx_cntvalueout_ext_29;
  input [8:0]rx_cntvaluein_ext_29;
  input rx_ce_ext_29;
  input rx_en_vtc_ext_29;
  input rx_inc_ext_29;
  input rx_load_ext_29;
  output fifo_empty_29;
  input fifo_rd_clk_29;
  input fifo_rd_en_29;
  output bitslip_error_29;
  input tri_t_30;
  input [8:0]tx_cntvaluein_30;
  output [8:0]tx_cntvalueout_30;
  input tx_ce_30;
  input tx_en_vtc_30;
  input tx_inc_30;
  input tx_load_30;
  output [8:0]rx_cntvalueout_30;
  input [8:0]rx_cntvaluein_30;
  input rx_ce_30;
  input rx_en_vtc_30;
  input rx_inc_30;
  input rx_load_30;
  output [8:0]rx_cntvalueout_ext_30;
  input [8:0]rx_cntvaluein_ext_30;
  input rx_ce_ext_30;
  input rx_en_vtc_ext_30;
  input rx_inc_ext_30;
  input rx_load_ext_30;
  output fifo_empty_30;
  input fifo_rd_clk_30;
  input fifo_rd_en_30;
  output bitslip_error_30;
  input tri_t_31;
  input [8:0]tx_cntvaluein_31;
  output [8:0]tx_cntvalueout_31;
  input tx_ce_31;
  input tx_en_vtc_31;
  input tx_inc_31;
  input tx_load_31;
  output [8:0]rx_cntvalueout_31;
  input [8:0]rx_cntvaluein_31;
  input rx_ce_31;
  input rx_en_vtc_31;
  input rx_inc_31;
  input rx_load_31;
  output [8:0]rx_cntvalueout_ext_31;
  input [8:0]rx_cntvaluein_ext_31;
  input rx_ce_ext_31;
  input rx_en_vtc_ext_31;
  input rx_inc_ext_31;
  input rx_load_ext_31;
  output fifo_empty_31;
  input fifo_rd_clk_31;
  input fifo_rd_en_31;
  output bitslip_error_31;
  input tri_t_32;
  input [8:0]tx_cntvaluein_32;
  output [8:0]tx_cntvalueout_32;
  input tx_ce_32;
  input tx_en_vtc_32;
  input tx_inc_32;
  input tx_load_32;
  output [8:0]rx_cntvalueout_32;
  input [8:0]rx_cntvaluein_32;
  input rx_ce_32;
  input rx_en_vtc_32;
  input rx_inc_32;
  input rx_load_32;
  output [8:0]rx_cntvalueout_ext_32;
  input [8:0]rx_cntvaluein_ext_32;
  input rx_ce_ext_32;
  input rx_en_vtc_ext_32;
  input rx_inc_ext_32;
  input rx_load_ext_32;
  output fifo_empty_32;
  input fifo_rd_clk_32;
  input fifo_rd_en_32;
  output bitslip_error_32;
  input tri_t_33;
  input [8:0]tx_cntvaluein_33;
  output [8:0]tx_cntvalueout_33;
  input tx_ce_33;
  input tx_en_vtc_33;
  input tx_inc_33;
  input tx_load_33;
  output [8:0]rx_cntvalueout_33;
  input [8:0]rx_cntvaluein_33;
  input rx_ce_33;
  input rx_en_vtc_33;
  input rx_inc_33;
  input rx_load_33;
  output [8:0]rx_cntvalueout_ext_33;
  input [8:0]rx_cntvaluein_ext_33;
  input rx_ce_ext_33;
  input rx_en_vtc_ext_33;
  input rx_inc_ext_33;
  input rx_load_ext_33;
  output fifo_empty_33;
  input fifo_rd_clk_33;
  input fifo_rd_en_33;
  output bitslip_error_33;
  input tri_t_34;
  input [8:0]tx_cntvaluein_34;
  output [8:0]tx_cntvalueout_34;
  input tx_ce_34;
  input tx_en_vtc_34;
  input tx_inc_34;
  input tx_load_34;
  output [8:0]rx_cntvalueout_34;
  input [8:0]rx_cntvaluein_34;
  input rx_ce_34;
  input rx_en_vtc_34;
  input rx_inc_34;
  input rx_load_34;
  output [8:0]rx_cntvalueout_ext_34;
  input [8:0]rx_cntvaluein_ext_34;
  input rx_ce_ext_34;
  input rx_en_vtc_ext_34;
  input rx_inc_ext_34;
  input rx_load_ext_34;
  output fifo_empty_34;
  input fifo_rd_clk_34;
  input fifo_rd_en_34;
  output bitslip_error_34;
  input tri_t_35;
  input [8:0]tx_cntvaluein_35;
  output [8:0]tx_cntvalueout_35;
  input tx_ce_35;
  input tx_en_vtc_35;
  input tx_inc_35;
  input tx_load_35;
  output [8:0]rx_cntvalueout_35;
  input [8:0]rx_cntvaluein_35;
  input rx_ce_35;
  input rx_en_vtc_35;
  input rx_inc_35;
  input rx_load_35;
  output [8:0]rx_cntvalueout_ext_35;
  input [8:0]rx_cntvaluein_ext_35;
  input rx_ce_ext_35;
  input rx_en_vtc_ext_35;
  input rx_inc_ext_35;
  input rx_load_ext_35;
  output fifo_empty_35;
  input fifo_rd_clk_35;
  input fifo_rd_en_35;
  output bitslip_error_35;
  input tri_t_36;
  input [8:0]tx_cntvaluein_36;
  output [8:0]tx_cntvalueout_36;
  input tx_ce_36;
  input tx_en_vtc_36;
  input tx_inc_36;
  input tx_load_36;
  output [8:0]rx_cntvalueout_36;
  input [8:0]rx_cntvaluein_36;
  input rx_ce_36;
  input rx_en_vtc_36;
  input rx_inc_36;
  input rx_load_36;
  output [8:0]rx_cntvalueout_ext_36;
  input [8:0]rx_cntvaluein_ext_36;
  input rx_ce_ext_36;
  input rx_en_vtc_ext_36;
  input rx_inc_ext_36;
  input rx_load_ext_36;
  output fifo_empty_36;
  input fifo_rd_clk_36;
  input fifo_rd_en_36;
  output bitslip_error_36;
  input tri_t_37;
  input [8:0]tx_cntvaluein_37;
  output [8:0]tx_cntvalueout_37;
  input tx_ce_37;
  input tx_en_vtc_37;
  input tx_inc_37;
  input tx_load_37;
  output [8:0]rx_cntvalueout_37;
  input [8:0]rx_cntvaluein_37;
  input rx_ce_37;
  input rx_en_vtc_37;
  input rx_inc_37;
  input rx_load_37;
  output [8:0]rx_cntvalueout_ext_37;
  input [8:0]rx_cntvaluein_ext_37;
  input rx_ce_ext_37;
  input rx_en_vtc_ext_37;
  input rx_inc_ext_37;
  input rx_load_ext_37;
  output fifo_empty_37;
  input fifo_rd_clk_37;
  input fifo_rd_en_37;
  output bitslip_error_37;
  input tri_t_38;
  input [8:0]tx_cntvaluein_38;
  output [8:0]tx_cntvalueout_38;
  input tx_ce_38;
  input tx_en_vtc_38;
  input tx_inc_38;
  input tx_load_38;
  output [8:0]rx_cntvalueout_38;
  input [8:0]rx_cntvaluein_38;
  input rx_ce_38;
  input rx_en_vtc_38;
  input rx_inc_38;
  input rx_load_38;
  output [8:0]rx_cntvalueout_ext_38;
  input [8:0]rx_cntvaluein_ext_38;
  input rx_ce_ext_38;
  input rx_en_vtc_ext_38;
  input rx_inc_ext_38;
  input rx_load_ext_38;
  output fifo_empty_38;
  input fifo_rd_clk_38;
  input fifo_rd_en_38;
  output bitslip_error_38;
  input tri_t_39;
  input [8:0]tx_cntvaluein_39;
  output [8:0]tx_cntvalueout_39;
  input tx_ce_39;
  input tx_en_vtc_39;
  input tx_inc_39;
  input tx_load_39;
  output [8:0]rx_cntvalueout_39;
  input [8:0]rx_cntvaluein_39;
  input rx_ce_39;
  input rx_en_vtc_39;
  input rx_inc_39;
  input rx_load_39;
  output [8:0]rx_cntvalueout_ext_39;
  input [8:0]rx_cntvaluein_ext_39;
  input rx_ce_ext_39;
  input rx_en_vtc_ext_39;
  input rx_inc_ext_39;
  input rx_load_ext_39;
  output fifo_empty_39;
  input fifo_rd_clk_39;
  input fifo_rd_en_39;
  output bitslip_error_39;
  input tri_t_40;
  input [8:0]tx_cntvaluein_40;
  output [8:0]tx_cntvalueout_40;
  input tx_ce_40;
  input tx_en_vtc_40;
  input tx_inc_40;
  input tx_load_40;
  output [8:0]rx_cntvalueout_40;
  input [8:0]rx_cntvaluein_40;
  input rx_ce_40;
  input rx_en_vtc_40;
  input rx_inc_40;
  input rx_load_40;
  output [8:0]rx_cntvalueout_ext_40;
  input [8:0]rx_cntvaluein_ext_40;
  input rx_ce_ext_40;
  input rx_en_vtc_ext_40;
  input rx_inc_ext_40;
  input rx_load_ext_40;
  output fifo_empty_40;
  input fifo_rd_clk_40;
  input fifo_rd_en_40;
  output bitslip_error_40;
  input tri_t_41;
  input [8:0]tx_cntvaluein_41;
  output [8:0]tx_cntvalueout_41;
  input tx_ce_41;
  input tx_en_vtc_41;
  input tx_inc_41;
  input tx_load_41;
  output [8:0]rx_cntvalueout_41;
  input [8:0]rx_cntvaluein_41;
  input rx_ce_41;
  input rx_en_vtc_41;
  input rx_inc_41;
  input rx_load_41;
  output [8:0]rx_cntvalueout_ext_41;
  input [8:0]rx_cntvaluein_ext_41;
  input rx_ce_ext_41;
  input rx_en_vtc_ext_41;
  input rx_inc_ext_41;
  input rx_load_ext_41;
  output fifo_empty_41;
  input fifo_rd_clk_41;
  input fifo_rd_en_41;
  output bitslip_error_41;
  input tri_t_42;
  input [8:0]tx_cntvaluein_42;
  output [8:0]tx_cntvalueout_42;
  input tx_ce_42;
  input tx_en_vtc_42;
  input tx_inc_42;
  input tx_load_42;
  output [8:0]rx_cntvalueout_42;
  input [8:0]rx_cntvaluein_42;
  input rx_ce_42;
  input rx_en_vtc_42;
  input rx_inc_42;
  input rx_load_42;
  output [8:0]rx_cntvalueout_ext_42;
  input [8:0]rx_cntvaluein_ext_42;
  input rx_ce_ext_42;
  input rx_en_vtc_ext_42;
  input rx_inc_ext_42;
  input rx_load_ext_42;
  output fifo_empty_42;
  input fifo_rd_clk_42;
  input fifo_rd_en_42;
  output bitslip_error_42;
  input tri_t_43;
  input [8:0]tx_cntvaluein_43;
  output [8:0]tx_cntvalueout_43;
  input tx_ce_43;
  input tx_en_vtc_43;
  input tx_inc_43;
  input tx_load_43;
  output [8:0]rx_cntvalueout_43;
  input [8:0]rx_cntvaluein_43;
  input rx_ce_43;
  input rx_en_vtc_43;
  input rx_inc_43;
  input rx_load_43;
  output [8:0]rx_cntvalueout_ext_43;
  input [8:0]rx_cntvaluein_ext_43;
  input rx_ce_ext_43;
  input rx_en_vtc_ext_43;
  input rx_inc_ext_43;
  input rx_load_ext_43;
  output fifo_empty_43;
  input fifo_rd_clk_43;
  input fifo_rd_en_43;
  output bitslip_error_43;
  input tri_t_44;
  input [8:0]tx_cntvaluein_44;
  output [8:0]tx_cntvalueout_44;
  input tx_ce_44;
  input tx_en_vtc_44;
  input tx_inc_44;
  input tx_load_44;
  output [8:0]rx_cntvalueout_44;
  input [8:0]rx_cntvaluein_44;
  input rx_ce_44;
  input rx_en_vtc_44;
  input rx_inc_44;
  input rx_load_44;
  output [8:0]rx_cntvalueout_ext_44;
  input [8:0]rx_cntvaluein_ext_44;
  input rx_ce_ext_44;
  input rx_en_vtc_ext_44;
  input rx_inc_ext_44;
  input rx_load_ext_44;
  output fifo_empty_44;
  input fifo_rd_clk_44;
  input fifo_rd_en_44;
  output bitslip_error_44;
  input tri_t_45;
  input [8:0]tx_cntvaluein_45;
  output [8:0]tx_cntvalueout_45;
  input tx_ce_45;
  input tx_en_vtc_45;
  input tx_inc_45;
  input tx_load_45;
  output [8:0]rx_cntvalueout_45;
  input [8:0]rx_cntvaluein_45;
  input rx_ce_45;
  input rx_en_vtc_45;
  input rx_inc_45;
  input rx_load_45;
  output [8:0]rx_cntvalueout_ext_45;
  input [8:0]rx_cntvaluein_ext_45;
  input rx_ce_ext_45;
  input rx_en_vtc_ext_45;
  input rx_inc_ext_45;
  input rx_load_ext_45;
  output fifo_empty_45;
  input fifo_rd_clk_45;
  input fifo_rd_en_45;
  output bitslip_error_45;
  input tri_t_46;
  input [8:0]tx_cntvaluein_46;
  output [8:0]tx_cntvalueout_46;
  input tx_ce_46;
  input tx_en_vtc_46;
  input tx_inc_46;
  input tx_load_46;
  output [8:0]rx_cntvalueout_46;
  input [8:0]rx_cntvaluein_46;
  input rx_ce_46;
  input rx_en_vtc_46;
  input rx_inc_46;
  input rx_load_46;
  output [8:0]rx_cntvalueout_ext_46;
  input [8:0]rx_cntvaluein_ext_46;
  input rx_ce_ext_46;
  input rx_en_vtc_ext_46;
  input rx_inc_ext_46;
  input rx_load_ext_46;
  output fifo_empty_46;
  input fifo_rd_clk_46;
  input fifo_rd_en_46;
  output bitslip_error_46;
  input tri_t_47;
  input [8:0]tx_cntvaluein_47;
  output [8:0]tx_cntvalueout_47;
  input tx_ce_47;
  input tx_en_vtc_47;
  input tx_inc_47;
  input tx_load_47;
  output [8:0]rx_cntvalueout_47;
  input [8:0]rx_cntvaluein_47;
  input rx_ce_47;
  input rx_en_vtc_47;
  input rx_inc_47;
  input rx_load_47;
  output [8:0]rx_cntvalueout_ext_47;
  input [8:0]rx_cntvaluein_ext_47;
  input rx_ce_ext_47;
  input rx_en_vtc_ext_47;
  input rx_inc_ext_47;
  input rx_load_ext_47;
  output fifo_empty_47;
  input fifo_rd_clk_47;
  input fifo_rd_en_47;
  output bitslip_error_47;
  input tri_t_48;
  input [8:0]tx_cntvaluein_48;
  output [8:0]tx_cntvalueout_48;
  input tx_ce_48;
  input tx_en_vtc_48;
  input tx_inc_48;
  input tx_load_48;
  output [8:0]rx_cntvalueout_48;
  input [8:0]rx_cntvaluein_48;
  input rx_ce_48;
  input rx_en_vtc_48;
  input rx_inc_48;
  input rx_load_48;
  output [8:0]rx_cntvalueout_ext_48;
  input [8:0]rx_cntvaluein_ext_48;
  input rx_ce_ext_48;
  input rx_en_vtc_ext_48;
  input rx_inc_ext_48;
  input rx_load_ext_48;
  output fifo_empty_48;
  input fifo_rd_clk_48;
  input fifo_rd_en_48;
  output bitslip_error_48;
  input tri_t_49;
  input [8:0]tx_cntvaluein_49;
  output [8:0]tx_cntvalueout_49;
  input tx_ce_49;
  input tx_en_vtc_49;
  input tx_inc_49;
  input tx_load_49;
  output [8:0]rx_cntvalueout_49;
  input [8:0]rx_cntvaluein_49;
  input rx_ce_49;
  input rx_en_vtc_49;
  input rx_inc_49;
  input rx_load_49;
  output [8:0]rx_cntvalueout_ext_49;
  input [8:0]rx_cntvaluein_ext_49;
  input rx_ce_ext_49;
  input rx_en_vtc_ext_49;
  input rx_inc_ext_49;
  input rx_load_ext_49;
  output fifo_empty_49;
  input fifo_rd_clk_49;
  input fifo_rd_en_49;
  output bitslip_error_49;
  input tri_t_50;
  input [8:0]tx_cntvaluein_50;
  output [8:0]tx_cntvalueout_50;
  input tx_ce_50;
  input tx_en_vtc_50;
  input tx_inc_50;
  input tx_load_50;
  output [8:0]rx_cntvalueout_50;
  input [8:0]rx_cntvaluein_50;
  input rx_ce_50;
  input rx_en_vtc_50;
  input rx_inc_50;
  input rx_load_50;
  output [8:0]rx_cntvalueout_ext_50;
  input [8:0]rx_cntvaluein_ext_50;
  input rx_ce_ext_50;
  input rx_en_vtc_ext_50;
  input rx_inc_ext_50;
  input rx_load_ext_50;
  output fifo_empty_50;
  input fifo_rd_clk_50;
  input fifo_rd_en_50;
  output bitslip_error_50;
  input tri_t_51;
  input [8:0]tx_cntvaluein_51;
  output [8:0]tx_cntvalueout_51;
  input tx_ce_51;
  input tx_en_vtc_51;
  input tx_inc_51;
  input tx_load_51;
  output [8:0]rx_cntvalueout_51;
  input [8:0]rx_cntvaluein_51;
  input rx_ce_51;
  input rx_en_vtc_51;
  input rx_inc_51;
  input rx_load_51;
  output [8:0]rx_cntvalueout_ext_51;
  input [8:0]rx_cntvaluein_ext_51;
  input rx_ce_ext_51;
  input rx_en_vtc_ext_51;
  input rx_inc_ext_51;
  input rx_load_ext_51;
  output fifo_empty_51;
  input fifo_rd_clk_51;
  input fifo_rd_en_51;
  output bitslip_error_51;
  output fifo_wr_clk_0;
  output fifo_wr_clk_6;
  output fifo_wr_clk_13;
  output fifo_wr_clk_19;
  output fifo_wr_clk_26;
  output fifo_wr_clk_32;
  output fifo_wr_clk_39;
  output fifo_wr_clk_45;
  input [3:0]tri_tbyte0;
  output [8:0]bidir_tx_bs_tri_cntvalueout0;
  input [8:0]bidir_tx_bs_tri_cntvaluein0;
  input bidir_tx_bs_tri_en_vtc0;
  input bidir_tx_bs_tri_ce0;
  input bidir_tx_bs_tri_inc0;
  input bidir_tx_bs_tri_load0;
  input [3:0]tri_tbyte1;
  output [8:0]bidir_tx_bs_tri_cntvalueout1;
  input [8:0]bidir_tx_bs_tri_cntvaluein1;
  input bidir_tx_bs_tri_en_vtc1;
  input bidir_tx_bs_tri_ce1;
  input bidir_tx_bs_tri_inc1;
  input bidir_tx_bs_tri_load1;
  input [3:0]tri_tbyte2;
  output [8:0]bidir_tx_bs_tri_cntvalueout2;
  input [8:0]bidir_tx_bs_tri_cntvaluein2;
  input bidir_tx_bs_tri_en_vtc2;
  input bidir_tx_bs_tri_ce2;
  input bidir_tx_bs_tri_inc2;
  input bidir_tx_bs_tri_load2;
  input [3:0]tri_tbyte3;
  output [8:0]bidir_tx_bs_tri_cntvalueout3;
  input [8:0]bidir_tx_bs_tri_cntvaluein3;
  input bidir_tx_bs_tri_en_vtc3;
  input bidir_tx_bs_tri_ce3;
  input bidir_tx_bs_tri_inc3;
  input bidir_tx_bs_tri_load3;
  input [3:0]tri_tbyte4;
  output [8:0]bidir_tx_bs_tri_cntvalueout4;
  input [8:0]bidir_tx_bs_tri_cntvaluein4;
  input bidir_tx_bs_tri_en_vtc4;
  input bidir_tx_bs_tri_ce4;
  input bidir_tx_bs_tri_inc4;
  input bidir_tx_bs_tri_load4;
  input [3:0]tri_tbyte5;
  output [8:0]bidir_tx_bs_tri_cntvalueout5;
  input [8:0]bidir_tx_bs_tri_cntvaluein5;
  input bidir_tx_bs_tri_en_vtc5;
  input bidir_tx_bs_tri_ce5;
  input bidir_tx_bs_tri_inc5;
  input bidir_tx_bs_tri_load5;
  input [3:0]tri_tbyte6;
  output [8:0]bidir_tx_bs_tri_cntvalueout6;
  input [8:0]bidir_tx_bs_tri_cntvaluein6;
  input bidir_tx_bs_tri_en_vtc6;
  input bidir_tx_bs_tri_ce6;
  input bidir_tx_bs_tri_inc6;
  input bidir_tx_bs_tri_load6;
  input [3:0]tri_tbyte7;
  output [8:0]bidir_tx_bs_tri_cntvalueout7;
  input [8:0]bidir_tx_bs_tri_cntvaluein7;
  input bidir_tx_bs_tri_en_vtc7;
  input bidir_tx_bs_tri_ce7;
  input bidir_tx_bs_tri_inc7;
  input bidir_tx_bs_tri_load7;
  output fifo_rd_data_valid;
  input rst;

  wire \<const0> ;
  wire \<const1> ;
  wire bs_rst_dphy_in;
  wire clk_txn;
  wire clk_txp;
  wire [7:0]data_from_fabric_clk_txp;
  wire [7:0]data_from_fabric_data_txp0;
  wire [7:0]data_from_fabric_data_txp1;
  wire [7:0]data_from_fabric_data_txp2;
  wire [7:0]data_from_fabric_data_txp3;
  wire data_txn0;
  wire data_txn1;
  wire data_txn2;
  wire data_txn3;
  wire data_txp0;
  wire data_txp1;
  wire data_txp2;
  wire data_txp3;
  wire dly_rdy_bsc0;
  wire dly_rdy_bsc1;
  wire dly_rdy_bsc2;
  wire en_vtc_bsc0;
  wire en_vtc_bsc1;
  wire en_vtc_bsc2;
  wire [4:0]lptx_i_n;
  wire [4:0]lptx_i_p;
  wire [4:0]lptx_t;
  wire multi_intf_lock_in;
  wire [5:0]riu_addr_bg0;
  wire [5:0]riu_addr_bg1;
  wire riu_clk;
  wire [1:0]riu_nibble_sel_bg0;
  wire [1:0]riu_nibble_sel_bg1;
  wire [15:0]riu_rd_data_bg0;
  wire [15:0]riu_rd_data_bg0_bs0;
  wire [15:0]riu_rd_data_bg0_bs1;
  wire [15:0]riu_rd_data_bg1_bs2;
  wire riu_valid_bg0;
  wire riu_valid_bg0_bs0;
  wire riu_valid_bg0_bs1;
  wire riu_valid_bg1_bs2;
  wire [15:0]riu_wr_data_bg0;
  wire [15:0]riu_wr_data_bg1;
  wire riu_wr_en_bg0;
  wire riu_wr_en_bg1;
  wire rst;
  wire rst_seq_done;
  wire shared_pll0_clkout0_in;
  wire shared_pll0_clkoutphy_in;
  wire shared_pll0_locked_in;
  wire tri_t_0;
  wire tri_t_15;
  wire tri_t_2;
  wire tri_t_4;
  wire tri_t_8;
  wire [3:0]tri_tbyte3;
  wire [3:0]tri_tbyte4;
  wire [3:0]tri_tbyte5;
  wire [3:0]tri_tbyte6;
  wire [3:0]tri_tbyte7;
  wire vtc_rdy_bsc0;
  wire vtc_rdy_bsc1;
  wire vtc_rdy_bsc2;

  assign bidir_tx_bs_tri_cntvalueout0[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout0[0] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout1[0] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout2[0] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout3[0] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout4[0] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout5[0] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout6[0] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[8] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[7] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[6] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[5] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[4] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[3] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[2] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[1] = \<const0> ;
  assign bidir_tx_bs_tri_cntvalueout7[0] = \<const0> ;
  assign bitslip_error_0 = \<const0> ;
  assign bitslip_error_1 = \<const0> ;
  assign bitslip_error_10 = \<const0> ;
  assign bitslip_error_11 = \<const0> ;
  assign bitslip_error_12 = \<const0> ;
  assign bitslip_error_13 = \<const0> ;
  assign bitslip_error_14 = \<const0> ;
  assign bitslip_error_15 = \<const0> ;
  assign bitslip_error_16 = \<const0> ;
  assign bitslip_error_17 = \<const0> ;
  assign bitslip_error_18 = \<const0> ;
  assign bitslip_error_19 = \<const0> ;
  assign bitslip_error_2 = \<const0> ;
  assign bitslip_error_20 = \<const0> ;
  assign bitslip_error_21 = \<const0> ;
  assign bitslip_error_22 = \<const0> ;
  assign bitslip_error_23 = \<const0> ;
  assign bitslip_error_24 = \<const0> ;
  assign bitslip_error_25 = \<const0> ;
  assign bitslip_error_26 = \<const0> ;
  assign bitslip_error_27 = \<const0> ;
  assign bitslip_error_28 = \<const0> ;
  assign bitslip_error_29 = \<const0> ;
  assign bitslip_error_3 = \<const0> ;
  assign bitslip_error_30 = \<const0> ;
  assign bitslip_error_31 = \<const0> ;
  assign bitslip_error_32 = \<const0> ;
  assign bitslip_error_33 = \<const0> ;
  assign bitslip_error_34 = \<const0> ;
  assign bitslip_error_35 = \<const0> ;
  assign bitslip_error_36 = \<const0> ;
  assign bitslip_error_37 = \<const0> ;
  assign bitslip_error_38 = \<const0> ;
  assign bitslip_error_39 = \<const0> ;
  assign bitslip_error_4 = \<const0> ;
  assign bitslip_error_40 = \<const0> ;
  assign bitslip_error_41 = \<const0> ;
  assign bitslip_error_42 = \<const0> ;
  assign bitslip_error_43 = \<const0> ;
  assign bitslip_error_44 = \<const0> ;
  assign bitslip_error_45 = \<const0> ;
  assign bitslip_error_46 = \<const0> ;
  assign bitslip_error_47 = \<const0> ;
  assign bitslip_error_48 = \<const0> ;
  assign bitslip_error_49 = \<const0> ;
  assign bitslip_error_5 = \<const0> ;
  assign bitslip_error_50 = \<const0> ;
  assign bitslip_error_51 = \<const0> ;
  assign bitslip_error_6 = \<const0> ;
  assign bitslip_error_7 = \<const0> ;
  assign bitslip_error_8 = \<const0> ;
  assign bitslip_error_9 = \<const0> ;
  assign clk_from_ibuf = \<const0> ;
  assign dly_rdy_bsc3 = \<const0> ;
  assign dly_rdy_bsc4 = \<const0> ;
  assign dly_rdy_bsc5 = \<const0> ;
  assign dly_rdy_bsc6 = \<const0> ;
  assign dly_rdy_bsc7 = \<const0> ;
  assign do_out[15] = \<const0> ;
  assign do_out[14] = \<const0> ;
  assign do_out[13] = \<const0> ;
  assign do_out[12] = \<const0> ;
  assign do_out[11] = \<const0> ;
  assign do_out[10] = \<const0> ;
  assign do_out[9] = \<const0> ;
  assign do_out[8] = \<const0> ;
  assign do_out[7] = \<const0> ;
  assign do_out[6] = \<const0> ;
  assign do_out[5] = \<const0> ;
  assign do_out[4] = \<const0> ;
  assign do_out[3] = \<const0> ;
  assign do_out[2] = \<const0> ;
  assign do_out[1] = \<const0> ;
  assign do_out[0] = \<const0> ;
  assign drdy = \<const0> ;
  assign fifo_empty_0 = \<const0> ;
  assign fifo_empty_1 = \<const0> ;
  assign fifo_empty_10 = \<const0> ;
  assign fifo_empty_11 = \<const0> ;
  assign fifo_empty_12 = \<const0> ;
  assign fifo_empty_13 = \<const0> ;
  assign fifo_empty_14 = \<const0> ;
  assign fifo_empty_15 = \<const0> ;
  assign fifo_empty_16 = \<const0> ;
  assign fifo_empty_17 = \<const0> ;
  assign fifo_empty_18 = \<const0> ;
  assign fifo_empty_19 = \<const0> ;
  assign fifo_empty_2 = \<const0> ;
  assign fifo_empty_20 = \<const0> ;
  assign fifo_empty_21 = \<const0> ;
  assign fifo_empty_22 = \<const0> ;
  assign fifo_empty_23 = \<const0> ;
  assign fifo_empty_24 = \<const0> ;
  assign fifo_empty_25 = \<const0> ;
  assign fifo_empty_26 = \<const0> ;
  assign fifo_empty_27 = \<const0> ;
  assign fifo_empty_28 = \<const0> ;
  assign fifo_empty_29 = \<const0> ;
  assign fifo_empty_3 = \<const0> ;
  assign fifo_empty_30 = \<const0> ;
  assign fifo_empty_31 = \<const0> ;
  assign fifo_empty_32 = \<const0> ;
  assign fifo_empty_33 = \<const0> ;
  assign fifo_empty_34 = \<const0> ;
  assign fifo_empty_35 = \<const0> ;
  assign fifo_empty_36 = \<const0> ;
  assign fifo_empty_37 = \<const0> ;
  assign fifo_empty_38 = \<const0> ;
  assign fifo_empty_39 = \<const0> ;
  assign fifo_empty_4 = \<const0> ;
  assign fifo_empty_40 = \<const0> ;
  assign fifo_empty_41 = \<const0> ;
  assign fifo_empty_42 = \<const0> ;
  assign fifo_empty_43 = \<const0> ;
  assign fifo_empty_44 = \<const0> ;
  assign fifo_empty_45 = \<const0> ;
  assign fifo_empty_46 = \<const0> ;
  assign fifo_empty_47 = \<const0> ;
  assign fifo_empty_48 = \<const0> ;
  assign fifo_empty_49 = \<const0> ;
  assign fifo_empty_5 = \<const0> ;
  assign fifo_empty_50 = \<const0> ;
  assign fifo_empty_51 = \<const0> ;
  assign fifo_empty_6 = \<const0> ;
  assign fifo_empty_7 = \<const0> ;
  assign fifo_empty_8 = \<const0> ;
  assign fifo_empty_9 = \<const0> ;
  assign fifo_rd_data_valid = \<const0> ;
  assign fifo_wr_clk_0 = \<const0> ;
  assign fifo_wr_clk_13 = \<const0> ;
  assign fifo_wr_clk_19 = \<const0> ;
  assign fifo_wr_clk_26 = \<const0> ;
  assign fifo_wr_clk_32 = \<const0> ;
  assign fifo_wr_clk_39 = \<const0> ;
  assign fifo_wr_clk_45 = \<const0> ;
  assign fifo_wr_clk_6 = \<const0> ;
  assign intf_rdy = \<const0> ;
  assign lp_rx_o_n[4] = \<const0> ;
  assign lp_rx_o_n[3] = \<const0> ;
  assign lp_rx_o_n[2] = \<const0> ;
  assign lp_rx_o_n[1] = \<const0> ;
  assign lp_rx_o_n[0] = \<const0> ;
  assign lp_rx_o_p[4] = \<const0> ;
  assign lp_rx_o_p[3] = \<const0> ;
  assign lp_rx_o_p[2] = \<const0> ;
  assign lp_rx_o_p[1] = \<const0> ;
  assign lp_rx_o_p[0] = \<const0> ;
  assign pll0_clkout0 = \<const0> ;
  assign pll0_clkout1 = \<const0> ;
  assign pll0_locked = \<const0> ;
  assign pll1_clkout0 = \<const0> ;
  assign pll1_locked = \<const0> ;
  assign riu_rd_data_bg1[15:0] = riu_rd_data_bg1_bs2;
  assign riu_rd_data_bg1_bs3[15] = \<const0> ;
  assign riu_rd_data_bg1_bs3[14] = \<const0> ;
  assign riu_rd_data_bg1_bs3[13] = \<const0> ;
  assign riu_rd_data_bg1_bs3[12] = \<const0> ;
  assign riu_rd_data_bg1_bs3[11] = \<const0> ;
  assign riu_rd_data_bg1_bs3[10] = \<const0> ;
  assign riu_rd_data_bg1_bs3[9] = \<const0> ;
  assign riu_rd_data_bg1_bs3[8] = \<const0> ;
  assign riu_rd_data_bg1_bs3[7] = \<const0> ;
  assign riu_rd_data_bg1_bs3[6] = \<const0> ;
  assign riu_rd_data_bg1_bs3[5] = \<const0> ;
  assign riu_rd_data_bg1_bs3[4] = \<const0> ;
  assign riu_rd_data_bg1_bs3[3] = \<const0> ;
  assign riu_rd_data_bg1_bs3[2] = \<const0> ;
  assign riu_rd_data_bg1_bs3[1] = \<const0> ;
  assign riu_rd_data_bg1_bs3[0] = \<const0> ;
  assign riu_rd_data_bg2[15] = \<const0> ;
  assign riu_rd_data_bg2[14] = \<const0> ;
  assign riu_rd_data_bg2[13] = \<const0> ;
  assign riu_rd_data_bg2[12] = \<const0> ;
  assign riu_rd_data_bg2[11] = \<const0> ;
  assign riu_rd_data_bg2[10] = \<const0> ;
  assign riu_rd_data_bg2[9] = \<const0> ;
  assign riu_rd_data_bg2[8] = \<const0> ;
  assign riu_rd_data_bg2[7] = \<const0> ;
  assign riu_rd_data_bg2[6] = \<const0> ;
  assign riu_rd_data_bg2[5] = \<const0> ;
  assign riu_rd_data_bg2[4] = \<const0> ;
  assign riu_rd_data_bg2[3] = \<const0> ;
  assign riu_rd_data_bg2[2] = \<const0> ;
  assign riu_rd_data_bg2[1] = \<const0> ;
  assign riu_rd_data_bg2[0] = \<const0> ;
  assign riu_rd_data_bg2_bs4[15] = \<const0> ;
  assign riu_rd_data_bg2_bs4[14] = \<const0> ;
  assign riu_rd_data_bg2_bs4[13] = \<const0> ;
  assign riu_rd_data_bg2_bs4[12] = \<const0> ;
  assign riu_rd_data_bg2_bs4[11] = \<const0> ;
  assign riu_rd_data_bg2_bs4[10] = \<const0> ;
  assign riu_rd_data_bg2_bs4[9] = \<const0> ;
  assign riu_rd_data_bg2_bs4[8] = \<const0> ;
  assign riu_rd_data_bg2_bs4[7] = \<const0> ;
  assign riu_rd_data_bg2_bs4[6] = \<const0> ;
  assign riu_rd_data_bg2_bs4[5] = \<const0> ;
  assign riu_rd_data_bg2_bs4[4] = \<const0> ;
  assign riu_rd_data_bg2_bs4[3] = \<const0> ;
  assign riu_rd_data_bg2_bs4[2] = \<const0> ;
  assign riu_rd_data_bg2_bs4[1] = \<const0> ;
  assign riu_rd_data_bg2_bs4[0] = \<const0> ;
  assign riu_rd_data_bg2_bs5[15] = \<const0> ;
  assign riu_rd_data_bg2_bs5[14] = \<const0> ;
  assign riu_rd_data_bg2_bs5[13] = \<const0> ;
  assign riu_rd_data_bg2_bs5[12] = \<const0> ;
  assign riu_rd_data_bg2_bs5[11] = \<const0> ;
  assign riu_rd_data_bg2_bs5[10] = \<const0> ;
  assign riu_rd_data_bg2_bs5[9] = \<const0> ;
  assign riu_rd_data_bg2_bs5[8] = \<const0> ;
  assign riu_rd_data_bg2_bs5[7] = \<const0> ;
  assign riu_rd_data_bg2_bs5[6] = \<const0> ;
  assign riu_rd_data_bg2_bs5[5] = \<const0> ;
  assign riu_rd_data_bg2_bs5[4] = \<const0> ;
  assign riu_rd_data_bg2_bs5[3] = \<const0> ;
  assign riu_rd_data_bg2_bs5[2] = \<const0> ;
  assign riu_rd_data_bg2_bs5[1] = \<const0> ;
  assign riu_rd_data_bg2_bs5[0] = \<const0> ;
  assign riu_rd_data_bg3[15] = \<const0> ;
  assign riu_rd_data_bg3[14] = \<const0> ;
  assign riu_rd_data_bg3[13] = \<const0> ;
  assign riu_rd_data_bg3[12] = \<const0> ;
  assign riu_rd_data_bg3[11] = \<const0> ;
  assign riu_rd_data_bg3[10] = \<const0> ;
  assign riu_rd_data_bg3[9] = \<const0> ;
  assign riu_rd_data_bg3[8] = \<const0> ;
  assign riu_rd_data_bg3[7] = \<const0> ;
  assign riu_rd_data_bg3[6] = \<const0> ;
  assign riu_rd_data_bg3[5] = \<const0> ;
  assign riu_rd_data_bg3[4] = \<const0> ;
  assign riu_rd_data_bg3[3] = \<const0> ;
  assign riu_rd_data_bg3[2] = \<const0> ;
  assign riu_rd_data_bg3[1] = \<const0> ;
  assign riu_rd_data_bg3[0] = \<const0> ;
  assign riu_rd_data_bg3_bs6[15] = \<const0> ;
  assign riu_rd_data_bg3_bs6[14] = \<const0> ;
  assign riu_rd_data_bg3_bs6[13] = \<const0> ;
  assign riu_rd_data_bg3_bs6[12] = \<const0> ;
  assign riu_rd_data_bg3_bs6[11] = \<const0> ;
  assign riu_rd_data_bg3_bs6[10] = \<const0> ;
  assign riu_rd_data_bg3_bs6[9] = \<const0> ;
  assign riu_rd_data_bg3_bs6[8] = \<const0> ;
  assign riu_rd_data_bg3_bs6[7] = \<const0> ;
  assign riu_rd_data_bg3_bs6[6] = \<const0> ;
  assign riu_rd_data_bg3_bs6[5] = \<const0> ;
  assign riu_rd_data_bg3_bs6[4] = \<const0> ;
  assign riu_rd_data_bg3_bs6[3] = \<const0> ;
  assign riu_rd_data_bg3_bs6[2] = \<const0> ;
  assign riu_rd_data_bg3_bs6[1] = \<const0> ;
  assign riu_rd_data_bg3_bs6[0] = \<const0> ;
  assign riu_rd_data_bg3_bs7[15] = \<const0> ;
  assign riu_rd_data_bg3_bs7[14] = \<const0> ;
  assign riu_rd_data_bg3_bs7[13] = \<const0> ;
  assign riu_rd_data_bg3_bs7[12] = \<const0> ;
  assign riu_rd_data_bg3_bs7[11] = \<const0> ;
  assign riu_rd_data_bg3_bs7[10] = \<const0> ;
  assign riu_rd_data_bg3_bs7[9] = \<const0> ;
  assign riu_rd_data_bg3_bs7[8] = \<const0> ;
  assign riu_rd_data_bg3_bs7[7] = \<const0> ;
  assign riu_rd_data_bg3_bs7[6] = \<const0> ;
  assign riu_rd_data_bg3_bs7[5] = \<const0> ;
  assign riu_rd_data_bg3_bs7[4] = \<const0> ;
  assign riu_rd_data_bg3_bs7[3] = \<const0> ;
  assign riu_rd_data_bg3_bs7[2] = \<const0> ;
  assign riu_rd_data_bg3_bs7[1] = \<const0> ;
  assign riu_rd_data_bg3_bs7[0] = \<const0> ;
  assign riu_valid_bg1 = riu_valid_bg1_bs2;
  assign riu_valid_bg1_bs3 = \<const0> ;
  assign riu_valid_bg2 = \<const0> ;
  assign riu_valid_bg2_bs4 = \<const0> ;
  assign riu_valid_bg2_bs5 = \<const0> ;
  assign riu_valid_bg3 = \<const0> ;
  assign riu_valid_bg3_bs6 = \<const0> ;
  assign riu_valid_bg3_bs7 = \<const0> ;
  assign rx_bitslip_sync_done = \<const1> ;
  assign rx_cntvalueout_0[8] = \<const0> ;
  assign rx_cntvalueout_0[7] = \<const0> ;
  assign rx_cntvalueout_0[6] = \<const0> ;
  assign rx_cntvalueout_0[5] = \<const0> ;
  assign rx_cntvalueout_0[4] = \<const0> ;
  assign rx_cntvalueout_0[3] = \<const0> ;
  assign rx_cntvalueout_0[2] = \<const0> ;
  assign rx_cntvalueout_0[1] = \<const0> ;
  assign rx_cntvalueout_0[0] = \<const0> ;
  assign rx_cntvalueout_1[8] = \<const0> ;
  assign rx_cntvalueout_1[7] = \<const0> ;
  assign rx_cntvalueout_1[6] = \<const0> ;
  assign rx_cntvalueout_1[5] = \<const0> ;
  assign rx_cntvalueout_1[4] = \<const0> ;
  assign rx_cntvalueout_1[3] = \<const0> ;
  assign rx_cntvalueout_1[2] = \<const0> ;
  assign rx_cntvalueout_1[1] = \<const0> ;
  assign rx_cntvalueout_1[0] = \<const0> ;
  assign rx_cntvalueout_10[8] = \<const0> ;
  assign rx_cntvalueout_10[7] = \<const0> ;
  assign rx_cntvalueout_10[6] = \<const0> ;
  assign rx_cntvalueout_10[5] = \<const0> ;
  assign rx_cntvalueout_10[4] = \<const0> ;
  assign rx_cntvalueout_10[3] = \<const0> ;
  assign rx_cntvalueout_10[2] = \<const0> ;
  assign rx_cntvalueout_10[1] = \<const0> ;
  assign rx_cntvalueout_10[0] = \<const0> ;
  assign rx_cntvalueout_11[8] = \<const0> ;
  assign rx_cntvalueout_11[7] = \<const0> ;
  assign rx_cntvalueout_11[6] = \<const0> ;
  assign rx_cntvalueout_11[5] = \<const0> ;
  assign rx_cntvalueout_11[4] = \<const0> ;
  assign rx_cntvalueout_11[3] = \<const0> ;
  assign rx_cntvalueout_11[2] = \<const0> ;
  assign rx_cntvalueout_11[1] = \<const0> ;
  assign rx_cntvalueout_11[0] = \<const0> ;
  assign rx_cntvalueout_12[8] = \<const0> ;
  assign rx_cntvalueout_12[7] = \<const0> ;
  assign rx_cntvalueout_12[6] = \<const0> ;
  assign rx_cntvalueout_12[5] = \<const0> ;
  assign rx_cntvalueout_12[4] = \<const0> ;
  assign rx_cntvalueout_12[3] = \<const0> ;
  assign rx_cntvalueout_12[2] = \<const0> ;
  assign rx_cntvalueout_12[1] = \<const0> ;
  assign rx_cntvalueout_12[0] = \<const0> ;
  assign rx_cntvalueout_13[8] = \<const0> ;
  assign rx_cntvalueout_13[7] = \<const0> ;
  assign rx_cntvalueout_13[6] = \<const0> ;
  assign rx_cntvalueout_13[5] = \<const0> ;
  assign rx_cntvalueout_13[4] = \<const0> ;
  assign rx_cntvalueout_13[3] = \<const0> ;
  assign rx_cntvalueout_13[2] = \<const0> ;
  assign rx_cntvalueout_13[1] = \<const0> ;
  assign rx_cntvalueout_13[0] = \<const0> ;
  assign rx_cntvalueout_14[8] = \<const0> ;
  assign rx_cntvalueout_14[7] = \<const0> ;
  assign rx_cntvalueout_14[6] = \<const0> ;
  assign rx_cntvalueout_14[5] = \<const0> ;
  assign rx_cntvalueout_14[4] = \<const0> ;
  assign rx_cntvalueout_14[3] = \<const0> ;
  assign rx_cntvalueout_14[2] = \<const0> ;
  assign rx_cntvalueout_14[1] = \<const0> ;
  assign rx_cntvalueout_14[0] = \<const0> ;
  assign rx_cntvalueout_15[8] = \<const0> ;
  assign rx_cntvalueout_15[7] = \<const0> ;
  assign rx_cntvalueout_15[6] = \<const0> ;
  assign rx_cntvalueout_15[5] = \<const0> ;
  assign rx_cntvalueout_15[4] = \<const0> ;
  assign rx_cntvalueout_15[3] = \<const0> ;
  assign rx_cntvalueout_15[2] = \<const0> ;
  assign rx_cntvalueout_15[1] = \<const0> ;
  assign rx_cntvalueout_15[0] = \<const0> ;
  assign rx_cntvalueout_16[8] = \<const0> ;
  assign rx_cntvalueout_16[7] = \<const0> ;
  assign rx_cntvalueout_16[6] = \<const0> ;
  assign rx_cntvalueout_16[5] = \<const0> ;
  assign rx_cntvalueout_16[4] = \<const0> ;
  assign rx_cntvalueout_16[3] = \<const0> ;
  assign rx_cntvalueout_16[2] = \<const0> ;
  assign rx_cntvalueout_16[1] = \<const0> ;
  assign rx_cntvalueout_16[0] = \<const0> ;
  assign rx_cntvalueout_17[8] = \<const0> ;
  assign rx_cntvalueout_17[7] = \<const0> ;
  assign rx_cntvalueout_17[6] = \<const0> ;
  assign rx_cntvalueout_17[5] = \<const0> ;
  assign rx_cntvalueout_17[4] = \<const0> ;
  assign rx_cntvalueout_17[3] = \<const0> ;
  assign rx_cntvalueout_17[2] = \<const0> ;
  assign rx_cntvalueout_17[1] = \<const0> ;
  assign rx_cntvalueout_17[0] = \<const0> ;
  assign rx_cntvalueout_18[8] = \<const0> ;
  assign rx_cntvalueout_18[7] = \<const0> ;
  assign rx_cntvalueout_18[6] = \<const0> ;
  assign rx_cntvalueout_18[5] = \<const0> ;
  assign rx_cntvalueout_18[4] = \<const0> ;
  assign rx_cntvalueout_18[3] = \<const0> ;
  assign rx_cntvalueout_18[2] = \<const0> ;
  assign rx_cntvalueout_18[1] = \<const0> ;
  assign rx_cntvalueout_18[0] = \<const0> ;
  assign rx_cntvalueout_19[8] = \<const0> ;
  assign rx_cntvalueout_19[7] = \<const0> ;
  assign rx_cntvalueout_19[6] = \<const0> ;
  assign rx_cntvalueout_19[5] = \<const0> ;
  assign rx_cntvalueout_19[4] = \<const0> ;
  assign rx_cntvalueout_19[3] = \<const0> ;
  assign rx_cntvalueout_19[2] = \<const0> ;
  assign rx_cntvalueout_19[1] = \<const0> ;
  assign rx_cntvalueout_19[0] = \<const0> ;
  assign rx_cntvalueout_2[8] = \<const0> ;
  assign rx_cntvalueout_2[7] = \<const0> ;
  assign rx_cntvalueout_2[6] = \<const0> ;
  assign rx_cntvalueout_2[5] = \<const0> ;
  assign rx_cntvalueout_2[4] = \<const0> ;
  assign rx_cntvalueout_2[3] = \<const0> ;
  assign rx_cntvalueout_2[2] = \<const0> ;
  assign rx_cntvalueout_2[1] = \<const0> ;
  assign rx_cntvalueout_2[0] = \<const0> ;
  assign rx_cntvalueout_20[8] = \<const0> ;
  assign rx_cntvalueout_20[7] = \<const0> ;
  assign rx_cntvalueout_20[6] = \<const0> ;
  assign rx_cntvalueout_20[5] = \<const0> ;
  assign rx_cntvalueout_20[4] = \<const0> ;
  assign rx_cntvalueout_20[3] = \<const0> ;
  assign rx_cntvalueout_20[2] = \<const0> ;
  assign rx_cntvalueout_20[1] = \<const0> ;
  assign rx_cntvalueout_20[0] = \<const0> ;
  assign rx_cntvalueout_21[8] = \<const0> ;
  assign rx_cntvalueout_21[7] = \<const0> ;
  assign rx_cntvalueout_21[6] = \<const0> ;
  assign rx_cntvalueout_21[5] = \<const0> ;
  assign rx_cntvalueout_21[4] = \<const0> ;
  assign rx_cntvalueout_21[3] = \<const0> ;
  assign rx_cntvalueout_21[2] = \<const0> ;
  assign rx_cntvalueout_21[1] = \<const0> ;
  assign rx_cntvalueout_21[0] = \<const0> ;
  assign rx_cntvalueout_22[8] = \<const0> ;
  assign rx_cntvalueout_22[7] = \<const0> ;
  assign rx_cntvalueout_22[6] = \<const0> ;
  assign rx_cntvalueout_22[5] = \<const0> ;
  assign rx_cntvalueout_22[4] = \<const0> ;
  assign rx_cntvalueout_22[3] = \<const0> ;
  assign rx_cntvalueout_22[2] = \<const0> ;
  assign rx_cntvalueout_22[1] = \<const0> ;
  assign rx_cntvalueout_22[0] = \<const0> ;
  assign rx_cntvalueout_23[8] = \<const0> ;
  assign rx_cntvalueout_23[7] = \<const0> ;
  assign rx_cntvalueout_23[6] = \<const0> ;
  assign rx_cntvalueout_23[5] = \<const0> ;
  assign rx_cntvalueout_23[4] = \<const0> ;
  assign rx_cntvalueout_23[3] = \<const0> ;
  assign rx_cntvalueout_23[2] = \<const0> ;
  assign rx_cntvalueout_23[1] = \<const0> ;
  assign rx_cntvalueout_23[0] = \<const0> ;
  assign rx_cntvalueout_24[8] = \<const0> ;
  assign rx_cntvalueout_24[7] = \<const0> ;
  assign rx_cntvalueout_24[6] = \<const0> ;
  assign rx_cntvalueout_24[5] = \<const0> ;
  assign rx_cntvalueout_24[4] = \<const0> ;
  assign rx_cntvalueout_24[3] = \<const0> ;
  assign rx_cntvalueout_24[2] = \<const0> ;
  assign rx_cntvalueout_24[1] = \<const0> ;
  assign rx_cntvalueout_24[0] = \<const0> ;
  assign rx_cntvalueout_25[8] = \<const0> ;
  assign rx_cntvalueout_25[7] = \<const0> ;
  assign rx_cntvalueout_25[6] = \<const0> ;
  assign rx_cntvalueout_25[5] = \<const0> ;
  assign rx_cntvalueout_25[4] = \<const0> ;
  assign rx_cntvalueout_25[3] = \<const0> ;
  assign rx_cntvalueout_25[2] = \<const0> ;
  assign rx_cntvalueout_25[1] = \<const0> ;
  assign rx_cntvalueout_25[0] = \<const0> ;
  assign rx_cntvalueout_26[8] = \<const0> ;
  assign rx_cntvalueout_26[7] = \<const0> ;
  assign rx_cntvalueout_26[6] = \<const0> ;
  assign rx_cntvalueout_26[5] = \<const0> ;
  assign rx_cntvalueout_26[4] = \<const0> ;
  assign rx_cntvalueout_26[3] = \<const0> ;
  assign rx_cntvalueout_26[2] = \<const0> ;
  assign rx_cntvalueout_26[1] = \<const0> ;
  assign rx_cntvalueout_26[0] = \<const0> ;
  assign rx_cntvalueout_27[8] = \<const0> ;
  assign rx_cntvalueout_27[7] = \<const0> ;
  assign rx_cntvalueout_27[6] = \<const0> ;
  assign rx_cntvalueout_27[5] = \<const0> ;
  assign rx_cntvalueout_27[4] = \<const0> ;
  assign rx_cntvalueout_27[3] = \<const0> ;
  assign rx_cntvalueout_27[2] = \<const0> ;
  assign rx_cntvalueout_27[1] = \<const0> ;
  assign rx_cntvalueout_27[0] = \<const0> ;
  assign rx_cntvalueout_28[8] = \<const0> ;
  assign rx_cntvalueout_28[7] = \<const0> ;
  assign rx_cntvalueout_28[6] = \<const0> ;
  assign rx_cntvalueout_28[5] = \<const0> ;
  assign rx_cntvalueout_28[4] = \<const0> ;
  assign rx_cntvalueout_28[3] = \<const0> ;
  assign rx_cntvalueout_28[2] = \<const0> ;
  assign rx_cntvalueout_28[1] = \<const0> ;
  assign rx_cntvalueout_28[0] = \<const0> ;
  assign rx_cntvalueout_29[8] = \<const0> ;
  assign rx_cntvalueout_29[7] = \<const0> ;
  assign rx_cntvalueout_29[6] = \<const0> ;
  assign rx_cntvalueout_29[5] = \<const0> ;
  assign rx_cntvalueout_29[4] = \<const0> ;
  assign rx_cntvalueout_29[3] = \<const0> ;
  assign rx_cntvalueout_29[2] = \<const0> ;
  assign rx_cntvalueout_29[1] = \<const0> ;
  assign rx_cntvalueout_29[0] = \<const0> ;
  assign rx_cntvalueout_3[8] = \<const0> ;
  assign rx_cntvalueout_3[7] = \<const0> ;
  assign rx_cntvalueout_3[6] = \<const0> ;
  assign rx_cntvalueout_3[5] = \<const0> ;
  assign rx_cntvalueout_3[4] = \<const0> ;
  assign rx_cntvalueout_3[3] = \<const0> ;
  assign rx_cntvalueout_3[2] = \<const0> ;
  assign rx_cntvalueout_3[1] = \<const0> ;
  assign rx_cntvalueout_3[0] = \<const0> ;
  assign rx_cntvalueout_30[8] = \<const0> ;
  assign rx_cntvalueout_30[7] = \<const0> ;
  assign rx_cntvalueout_30[6] = \<const0> ;
  assign rx_cntvalueout_30[5] = \<const0> ;
  assign rx_cntvalueout_30[4] = \<const0> ;
  assign rx_cntvalueout_30[3] = \<const0> ;
  assign rx_cntvalueout_30[2] = \<const0> ;
  assign rx_cntvalueout_30[1] = \<const0> ;
  assign rx_cntvalueout_30[0] = \<const0> ;
  assign rx_cntvalueout_31[8] = \<const0> ;
  assign rx_cntvalueout_31[7] = \<const0> ;
  assign rx_cntvalueout_31[6] = \<const0> ;
  assign rx_cntvalueout_31[5] = \<const0> ;
  assign rx_cntvalueout_31[4] = \<const0> ;
  assign rx_cntvalueout_31[3] = \<const0> ;
  assign rx_cntvalueout_31[2] = \<const0> ;
  assign rx_cntvalueout_31[1] = \<const0> ;
  assign rx_cntvalueout_31[0] = \<const0> ;
  assign rx_cntvalueout_32[8] = \<const0> ;
  assign rx_cntvalueout_32[7] = \<const0> ;
  assign rx_cntvalueout_32[6] = \<const0> ;
  assign rx_cntvalueout_32[5] = \<const0> ;
  assign rx_cntvalueout_32[4] = \<const0> ;
  assign rx_cntvalueout_32[3] = \<const0> ;
  assign rx_cntvalueout_32[2] = \<const0> ;
  assign rx_cntvalueout_32[1] = \<const0> ;
  assign rx_cntvalueout_32[0] = \<const0> ;
  assign rx_cntvalueout_33[8] = \<const0> ;
  assign rx_cntvalueout_33[7] = \<const0> ;
  assign rx_cntvalueout_33[6] = \<const0> ;
  assign rx_cntvalueout_33[5] = \<const0> ;
  assign rx_cntvalueout_33[4] = \<const0> ;
  assign rx_cntvalueout_33[3] = \<const0> ;
  assign rx_cntvalueout_33[2] = \<const0> ;
  assign rx_cntvalueout_33[1] = \<const0> ;
  assign rx_cntvalueout_33[0] = \<const0> ;
  assign rx_cntvalueout_34[8] = \<const0> ;
  assign rx_cntvalueout_34[7] = \<const0> ;
  assign rx_cntvalueout_34[6] = \<const0> ;
  assign rx_cntvalueout_34[5] = \<const0> ;
  assign rx_cntvalueout_34[4] = \<const0> ;
  assign rx_cntvalueout_34[3] = \<const0> ;
  assign rx_cntvalueout_34[2] = \<const0> ;
  assign rx_cntvalueout_34[1] = \<const0> ;
  assign rx_cntvalueout_34[0] = \<const0> ;
  assign rx_cntvalueout_35[8] = \<const0> ;
  assign rx_cntvalueout_35[7] = \<const0> ;
  assign rx_cntvalueout_35[6] = \<const0> ;
  assign rx_cntvalueout_35[5] = \<const0> ;
  assign rx_cntvalueout_35[4] = \<const0> ;
  assign rx_cntvalueout_35[3] = \<const0> ;
  assign rx_cntvalueout_35[2] = \<const0> ;
  assign rx_cntvalueout_35[1] = \<const0> ;
  assign rx_cntvalueout_35[0] = \<const0> ;
  assign rx_cntvalueout_36[8] = \<const0> ;
  assign rx_cntvalueout_36[7] = \<const0> ;
  assign rx_cntvalueout_36[6] = \<const0> ;
  assign rx_cntvalueout_36[5] = \<const0> ;
  assign rx_cntvalueout_36[4] = \<const0> ;
  assign rx_cntvalueout_36[3] = \<const0> ;
  assign rx_cntvalueout_36[2] = \<const0> ;
  assign rx_cntvalueout_36[1] = \<const0> ;
  assign rx_cntvalueout_36[0] = \<const0> ;
  assign rx_cntvalueout_37[8] = \<const0> ;
  assign rx_cntvalueout_37[7] = \<const0> ;
  assign rx_cntvalueout_37[6] = \<const0> ;
  assign rx_cntvalueout_37[5] = \<const0> ;
  assign rx_cntvalueout_37[4] = \<const0> ;
  assign rx_cntvalueout_37[3] = \<const0> ;
  assign rx_cntvalueout_37[2] = \<const0> ;
  assign rx_cntvalueout_37[1] = \<const0> ;
  assign rx_cntvalueout_37[0] = \<const0> ;
  assign rx_cntvalueout_38[8] = \<const0> ;
  assign rx_cntvalueout_38[7] = \<const0> ;
  assign rx_cntvalueout_38[6] = \<const0> ;
  assign rx_cntvalueout_38[5] = \<const0> ;
  assign rx_cntvalueout_38[4] = \<const0> ;
  assign rx_cntvalueout_38[3] = \<const0> ;
  assign rx_cntvalueout_38[2] = \<const0> ;
  assign rx_cntvalueout_38[1] = \<const0> ;
  assign rx_cntvalueout_38[0] = \<const0> ;
  assign rx_cntvalueout_39[8] = \<const0> ;
  assign rx_cntvalueout_39[7] = \<const0> ;
  assign rx_cntvalueout_39[6] = \<const0> ;
  assign rx_cntvalueout_39[5] = \<const0> ;
  assign rx_cntvalueout_39[4] = \<const0> ;
  assign rx_cntvalueout_39[3] = \<const0> ;
  assign rx_cntvalueout_39[2] = \<const0> ;
  assign rx_cntvalueout_39[1] = \<const0> ;
  assign rx_cntvalueout_39[0] = \<const0> ;
  assign rx_cntvalueout_4[8] = \<const0> ;
  assign rx_cntvalueout_4[7] = \<const0> ;
  assign rx_cntvalueout_4[6] = \<const0> ;
  assign rx_cntvalueout_4[5] = \<const0> ;
  assign rx_cntvalueout_4[4] = \<const0> ;
  assign rx_cntvalueout_4[3] = \<const0> ;
  assign rx_cntvalueout_4[2] = \<const0> ;
  assign rx_cntvalueout_4[1] = \<const0> ;
  assign rx_cntvalueout_4[0] = \<const0> ;
  assign rx_cntvalueout_40[8] = \<const0> ;
  assign rx_cntvalueout_40[7] = \<const0> ;
  assign rx_cntvalueout_40[6] = \<const0> ;
  assign rx_cntvalueout_40[5] = \<const0> ;
  assign rx_cntvalueout_40[4] = \<const0> ;
  assign rx_cntvalueout_40[3] = \<const0> ;
  assign rx_cntvalueout_40[2] = \<const0> ;
  assign rx_cntvalueout_40[1] = \<const0> ;
  assign rx_cntvalueout_40[0] = \<const0> ;
  assign rx_cntvalueout_41[8] = \<const0> ;
  assign rx_cntvalueout_41[7] = \<const0> ;
  assign rx_cntvalueout_41[6] = \<const0> ;
  assign rx_cntvalueout_41[5] = \<const0> ;
  assign rx_cntvalueout_41[4] = \<const0> ;
  assign rx_cntvalueout_41[3] = \<const0> ;
  assign rx_cntvalueout_41[2] = \<const0> ;
  assign rx_cntvalueout_41[1] = \<const0> ;
  assign rx_cntvalueout_41[0] = \<const0> ;
  assign rx_cntvalueout_42[8] = \<const0> ;
  assign rx_cntvalueout_42[7] = \<const0> ;
  assign rx_cntvalueout_42[6] = \<const0> ;
  assign rx_cntvalueout_42[5] = \<const0> ;
  assign rx_cntvalueout_42[4] = \<const0> ;
  assign rx_cntvalueout_42[3] = \<const0> ;
  assign rx_cntvalueout_42[2] = \<const0> ;
  assign rx_cntvalueout_42[1] = \<const0> ;
  assign rx_cntvalueout_42[0] = \<const0> ;
  assign rx_cntvalueout_43[8] = \<const0> ;
  assign rx_cntvalueout_43[7] = \<const0> ;
  assign rx_cntvalueout_43[6] = \<const0> ;
  assign rx_cntvalueout_43[5] = \<const0> ;
  assign rx_cntvalueout_43[4] = \<const0> ;
  assign rx_cntvalueout_43[3] = \<const0> ;
  assign rx_cntvalueout_43[2] = \<const0> ;
  assign rx_cntvalueout_43[1] = \<const0> ;
  assign rx_cntvalueout_43[0] = \<const0> ;
  assign rx_cntvalueout_44[8] = \<const0> ;
  assign rx_cntvalueout_44[7] = \<const0> ;
  assign rx_cntvalueout_44[6] = \<const0> ;
  assign rx_cntvalueout_44[5] = \<const0> ;
  assign rx_cntvalueout_44[4] = \<const0> ;
  assign rx_cntvalueout_44[3] = \<const0> ;
  assign rx_cntvalueout_44[2] = \<const0> ;
  assign rx_cntvalueout_44[1] = \<const0> ;
  assign rx_cntvalueout_44[0] = \<const0> ;
  assign rx_cntvalueout_45[8] = \<const0> ;
  assign rx_cntvalueout_45[7] = \<const0> ;
  assign rx_cntvalueout_45[6] = \<const0> ;
  assign rx_cntvalueout_45[5] = \<const0> ;
  assign rx_cntvalueout_45[4] = \<const0> ;
  assign rx_cntvalueout_45[3] = \<const0> ;
  assign rx_cntvalueout_45[2] = \<const0> ;
  assign rx_cntvalueout_45[1] = \<const0> ;
  assign rx_cntvalueout_45[0] = \<const0> ;
  assign rx_cntvalueout_46[8] = \<const0> ;
  assign rx_cntvalueout_46[7] = \<const0> ;
  assign rx_cntvalueout_46[6] = \<const0> ;
  assign rx_cntvalueout_46[5] = \<const0> ;
  assign rx_cntvalueout_46[4] = \<const0> ;
  assign rx_cntvalueout_46[3] = \<const0> ;
  assign rx_cntvalueout_46[2] = \<const0> ;
  assign rx_cntvalueout_46[1] = \<const0> ;
  assign rx_cntvalueout_46[0] = \<const0> ;
  assign rx_cntvalueout_47[8] = \<const0> ;
  assign rx_cntvalueout_47[7] = \<const0> ;
  assign rx_cntvalueout_47[6] = \<const0> ;
  assign rx_cntvalueout_47[5] = \<const0> ;
  assign rx_cntvalueout_47[4] = \<const0> ;
  assign rx_cntvalueout_47[3] = \<const0> ;
  assign rx_cntvalueout_47[2] = \<const0> ;
  assign rx_cntvalueout_47[1] = \<const0> ;
  assign rx_cntvalueout_47[0] = \<const0> ;
  assign rx_cntvalueout_48[8] = \<const0> ;
  assign rx_cntvalueout_48[7] = \<const0> ;
  assign rx_cntvalueout_48[6] = \<const0> ;
  assign rx_cntvalueout_48[5] = \<const0> ;
  assign rx_cntvalueout_48[4] = \<const0> ;
  assign rx_cntvalueout_48[3] = \<const0> ;
  assign rx_cntvalueout_48[2] = \<const0> ;
  assign rx_cntvalueout_48[1] = \<const0> ;
  assign rx_cntvalueout_48[0] = \<const0> ;
  assign rx_cntvalueout_49[8] = \<const0> ;
  assign rx_cntvalueout_49[7] = \<const0> ;
  assign rx_cntvalueout_49[6] = \<const0> ;
  assign rx_cntvalueout_49[5] = \<const0> ;
  assign rx_cntvalueout_49[4] = \<const0> ;
  assign rx_cntvalueout_49[3] = \<const0> ;
  assign rx_cntvalueout_49[2] = \<const0> ;
  assign rx_cntvalueout_49[1] = \<const0> ;
  assign rx_cntvalueout_49[0] = \<const0> ;
  assign rx_cntvalueout_5[8] = \<const0> ;
  assign rx_cntvalueout_5[7] = \<const0> ;
  assign rx_cntvalueout_5[6] = \<const0> ;
  assign rx_cntvalueout_5[5] = \<const0> ;
  assign rx_cntvalueout_5[4] = \<const0> ;
  assign rx_cntvalueout_5[3] = \<const0> ;
  assign rx_cntvalueout_5[2] = \<const0> ;
  assign rx_cntvalueout_5[1] = \<const0> ;
  assign rx_cntvalueout_5[0] = \<const0> ;
  assign rx_cntvalueout_50[8] = \<const0> ;
  assign rx_cntvalueout_50[7] = \<const0> ;
  assign rx_cntvalueout_50[6] = \<const0> ;
  assign rx_cntvalueout_50[5] = \<const0> ;
  assign rx_cntvalueout_50[4] = \<const0> ;
  assign rx_cntvalueout_50[3] = \<const0> ;
  assign rx_cntvalueout_50[2] = \<const0> ;
  assign rx_cntvalueout_50[1] = \<const0> ;
  assign rx_cntvalueout_50[0] = \<const0> ;
  assign rx_cntvalueout_51[8] = \<const0> ;
  assign rx_cntvalueout_51[7] = \<const0> ;
  assign rx_cntvalueout_51[6] = \<const0> ;
  assign rx_cntvalueout_51[5] = \<const0> ;
  assign rx_cntvalueout_51[4] = \<const0> ;
  assign rx_cntvalueout_51[3] = \<const0> ;
  assign rx_cntvalueout_51[2] = \<const0> ;
  assign rx_cntvalueout_51[1] = \<const0> ;
  assign rx_cntvalueout_51[0] = \<const0> ;
  assign rx_cntvalueout_6[8] = \<const0> ;
  assign rx_cntvalueout_6[7] = \<const0> ;
  assign rx_cntvalueout_6[6] = \<const0> ;
  assign rx_cntvalueout_6[5] = \<const0> ;
  assign rx_cntvalueout_6[4] = \<const0> ;
  assign rx_cntvalueout_6[3] = \<const0> ;
  assign rx_cntvalueout_6[2] = \<const0> ;
  assign rx_cntvalueout_6[1] = \<const0> ;
  assign rx_cntvalueout_6[0] = \<const0> ;
  assign rx_cntvalueout_7[8] = \<const0> ;
  assign rx_cntvalueout_7[7] = \<const0> ;
  assign rx_cntvalueout_7[6] = \<const0> ;
  assign rx_cntvalueout_7[5] = \<const0> ;
  assign rx_cntvalueout_7[4] = \<const0> ;
  assign rx_cntvalueout_7[3] = \<const0> ;
  assign rx_cntvalueout_7[2] = \<const0> ;
  assign rx_cntvalueout_7[1] = \<const0> ;
  assign rx_cntvalueout_7[0] = \<const0> ;
  assign rx_cntvalueout_8[8] = \<const0> ;
  assign rx_cntvalueout_8[7] = \<const0> ;
  assign rx_cntvalueout_8[6] = \<const0> ;
  assign rx_cntvalueout_8[5] = \<const0> ;
  assign rx_cntvalueout_8[4] = \<const0> ;
  assign rx_cntvalueout_8[3] = \<const0> ;
  assign rx_cntvalueout_8[2] = \<const0> ;
  assign rx_cntvalueout_8[1] = \<const0> ;
  assign rx_cntvalueout_8[0] = \<const0> ;
  assign rx_cntvalueout_9[8] = \<const0> ;
  assign rx_cntvalueout_9[7] = \<const0> ;
  assign rx_cntvalueout_9[6] = \<const0> ;
  assign rx_cntvalueout_9[5] = \<const0> ;
  assign rx_cntvalueout_9[4] = \<const0> ;
  assign rx_cntvalueout_9[3] = \<const0> ;
  assign rx_cntvalueout_9[2] = \<const0> ;
  assign rx_cntvalueout_9[1] = \<const0> ;
  assign rx_cntvalueout_9[0] = \<const0> ;
  assign rx_cntvalueout_ext_0[8] = \<const0> ;
  assign rx_cntvalueout_ext_0[7] = \<const0> ;
  assign rx_cntvalueout_ext_0[6] = \<const0> ;
  assign rx_cntvalueout_ext_0[5] = \<const0> ;
  assign rx_cntvalueout_ext_0[4] = \<const0> ;
  assign rx_cntvalueout_ext_0[3] = \<const0> ;
  assign rx_cntvalueout_ext_0[2] = \<const0> ;
  assign rx_cntvalueout_ext_0[1] = \<const0> ;
  assign rx_cntvalueout_ext_0[0] = \<const0> ;
  assign rx_cntvalueout_ext_1[8] = \<const0> ;
  assign rx_cntvalueout_ext_1[7] = \<const0> ;
  assign rx_cntvalueout_ext_1[6] = \<const0> ;
  assign rx_cntvalueout_ext_1[5] = \<const0> ;
  assign rx_cntvalueout_ext_1[4] = \<const0> ;
  assign rx_cntvalueout_ext_1[3] = \<const0> ;
  assign rx_cntvalueout_ext_1[2] = \<const0> ;
  assign rx_cntvalueout_ext_1[1] = \<const0> ;
  assign rx_cntvalueout_ext_1[0] = \<const0> ;
  assign rx_cntvalueout_ext_10[8] = \<const0> ;
  assign rx_cntvalueout_ext_10[7] = \<const0> ;
  assign rx_cntvalueout_ext_10[6] = \<const0> ;
  assign rx_cntvalueout_ext_10[5] = \<const0> ;
  assign rx_cntvalueout_ext_10[4] = \<const0> ;
  assign rx_cntvalueout_ext_10[3] = \<const0> ;
  assign rx_cntvalueout_ext_10[2] = \<const0> ;
  assign rx_cntvalueout_ext_10[1] = \<const0> ;
  assign rx_cntvalueout_ext_10[0] = \<const0> ;
  assign rx_cntvalueout_ext_11[8] = \<const0> ;
  assign rx_cntvalueout_ext_11[7] = \<const0> ;
  assign rx_cntvalueout_ext_11[6] = \<const0> ;
  assign rx_cntvalueout_ext_11[5] = \<const0> ;
  assign rx_cntvalueout_ext_11[4] = \<const0> ;
  assign rx_cntvalueout_ext_11[3] = \<const0> ;
  assign rx_cntvalueout_ext_11[2] = \<const0> ;
  assign rx_cntvalueout_ext_11[1] = \<const0> ;
  assign rx_cntvalueout_ext_11[0] = \<const0> ;
  assign rx_cntvalueout_ext_12[8] = \<const0> ;
  assign rx_cntvalueout_ext_12[7] = \<const0> ;
  assign rx_cntvalueout_ext_12[6] = \<const0> ;
  assign rx_cntvalueout_ext_12[5] = \<const0> ;
  assign rx_cntvalueout_ext_12[4] = \<const0> ;
  assign rx_cntvalueout_ext_12[3] = \<const0> ;
  assign rx_cntvalueout_ext_12[2] = \<const0> ;
  assign rx_cntvalueout_ext_12[1] = \<const0> ;
  assign rx_cntvalueout_ext_12[0] = \<const0> ;
  assign rx_cntvalueout_ext_13[8] = \<const0> ;
  assign rx_cntvalueout_ext_13[7] = \<const0> ;
  assign rx_cntvalueout_ext_13[6] = \<const0> ;
  assign rx_cntvalueout_ext_13[5] = \<const0> ;
  assign rx_cntvalueout_ext_13[4] = \<const0> ;
  assign rx_cntvalueout_ext_13[3] = \<const0> ;
  assign rx_cntvalueout_ext_13[2] = \<const0> ;
  assign rx_cntvalueout_ext_13[1] = \<const0> ;
  assign rx_cntvalueout_ext_13[0] = \<const0> ;
  assign rx_cntvalueout_ext_14[8] = \<const0> ;
  assign rx_cntvalueout_ext_14[7] = \<const0> ;
  assign rx_cntvalueout_ext_14[6] = \<const0> ;
  assign rx_cntvalueout_ext_14[5] = \<const0> ;
  assign rx_cntvalueout_ext_14[4] = \<const0> ;
  assign rx_cntvalueout_ext_14[3] = \<const0> ;
  assign rx_cntvalueout_ext_14[2] = \<const0> ;
  assign rx_cntvalueout_ext_14[1] = \<const0> ;
  assign rx_cntvalueout_ext_14[0] = \<const0> ;
  assign rx_cntvalueout_ext_15[8] = \<const0> ;
  assign rx_cntvalueout_ext_15[7] = \<const0> ;
  assign rx_cntvalueout_ext_15[6] = \<const0> ;
  assign rx_cntvalueout_ext_15[5] = \<const0> ;
  assign rx_cntvalueout_ext_15[4] = \<const0> ;
  assign rx_cntvalueout_ext_15[3] = \<const0> ;
  assign rx_cntvalueout_ext_15[2] = \<const0> ;
  assign rx_cntvalueout_ext_15[1] = \<const0> ;
  assign rx_cntvalueout_ext_15[0] = \<const0> ;
  assign rx_cntvalueout_ext_16[8] = \<const0> ;
  assign rx_cntvalueout_ext_16[7] = \<const0> ;
  assign rx_cntvalueout_ext_16[6] = \<const0> ;
  assign rx_cntvalueout_ext_16[5] = \<const0> ;
  assign rx_cntvalueout_ext_16[4] = \<const0> ;
  assign rx_cntvalueout_ext_16[3] = \<const0> ;
  assign rx_cntvalueout_ext_16[2] = \<const0> ;
  assign rx_cntvalueout_ext_16[1] = \<const0> ;
  assign rx_cntvalueout_ext_16[0] = \<const0> ;
  assign rx_cntvalueout_ext_17[8] = \<const0> ;
  assign rx_cntvalueout_ext_17[7] = \<const0> ;
  assign rx_cntvalueout_ext_17[6] = \<const0> ;
  assign rx_cntvalueout_ext_17[5] = \<const0> ;
  assign rx_cntvalueout_ext_17[4] = \<const0> ;
  assign rx_cntvalueout_ext_17[3] = \<const0> ;
  assign rx_cntvalueout_ext_17[2] = \<const0> ;
  assign rx_cntvalueout_ext_17[1] = \<const0> ;
  assign rx_cntvalueout_ext_17[0] = \<const0> ;
  assign rx_cntvalueout_ext_18[8] = \<const0> ;
  assign rx_cntvalueout_ext_18[7] = \<const0> ;
  assign rx_cntvalueout_ext_18[6] = \<const0> ;
  assign rx_cntvalueout_ext_18[5] = \<const0> ;
  assign rx_cntvalueout_ext_18[4] = \<const0> ;
  assign rx_cntvalueout_ext_18[3] = \<const0> ;
  assign rx_cntvalueout_ext_18[2] = \<const0> ;
  assign rx_cntvalueout_ext_18[1] = \<const0> ;
  assign rx_cntvalueout_ext_18[0] = \<const0> ;
  assign rx_cntvalueout_ext_19[8] = \<const0> ;
  assign rx_cntvalueout_ext_19[7] = \<const0> ;
  assign rx_cntvalueout_ext_19[6] = \<const0> ;
  assign rx_cntvalueout_ext_19[5] = \<const0> ;
  assign rx_cntvalueout_ext_19[4] = \<const0> ;
  assign rx_cntvalueout_ext_19[3] = \<const0> ;
  assign rx_cntvalueout_ext_19[2] = \<const0> ;
  assign rx_cntvalueout_ext_19[1] = \<const0> ;
  assign rx_cntvalueout_ext_19[0] = \<const0> ;
  assign rx_cntvalueout_ext_2[8] = \<const0> ;
  assign rx_cntvalueout_ext_2[7] = \<const0> ;
  assign rx_cntvalueout_ext_2[6] = \<const0> ;
  assign rx_cntvalueout_ext_2[5] = \<const0> ;
  assign rx_cntvalueout_ext_2[4] = \<const0> ;
  assign rx_cntvalueout_ext_2[3] = \<const0> ;
  assign rx_cntvalueout_ext_2[2] = \<const0> ;
  assign rx_cntvalueout_ext_2[1] = \<const0> ;
  assign rx_cntvalueout_ext_2[0] = \<const0> ;
  assign rx_cntvalueout_ext_20[8] = \<const0> ;
  assign rx_cntvalueout_ext_20[7] = \<const0> ;
  assign rx_cntvalueout_ext_20[6] = \<const0> ;
  assign rx_cntvalueout_ext_20[5] = \<const0> ;
  assign rx_cntvalueout_ext_20[4] = \<const0> ;
  assign rx_cntvalueout_ext_20[3] = \<const0> ;
  assign rx_cntvalueout_ext_20[2] = \<const0> ;
  assign rx_cntvalueout_ext_20[1] = \<const0> ;
  assign rx_cntvalueout_ext_20[0] = \<const0> ;
  assign rx_cntvalueout_ext_21[8] = \<const0> ;
  assign rx_cntvalueout_ext_21[7] = \<const0> ;
  assign rx_cntvalueout_ext_21[6] = \<const0> ;
  assign rx_cntvalueout_ext_21[5] = \<const0> ;
  assign rx_cntvalueout_ext_21[4] = \<const0> ;
  assign rx_cntvalueout_ext_21[3] = \<const0> ;
  assign rx_cntvalueout_ext_21[2] = \<const0> ;
  assign rx_cntvalueout_ext_21[1] = \<const0> ;
  assign rx_cntvalueout_ext_21[0] = \<const0> ;
  assign rx_cntvalueout_ext_22[8] = \<const0> ;
  assign rx_cntvalueout_ext_22[7] = \<const0> ;
  assign rx_cntvalueout_ext_22[6] = \<const0> ;
  assign rx_cntvalueout_ext_22[5] = \<const0> ;
  assign rx_cntvalueout_ext_22[4] = \<const0> ;
  assign rx_cntvalueout_ext_22[3] = \<const0> ;
  assign rx_cntvalueout_ext_22[2] = \<const0> ;
  assign rx_cntvalueout_ext_22[1] = \<const0> ;
  assign rx_cntvalueout_ext_22[0] = \<const0> ;
  assign rx_cntvalueout_ext_23[8] = \<const0> ;
  assign rx_cntvalueout_ext_23[7] = \<const0> ;
  assign rx_cntvalueout_ext_23[6] = \<const0> ;
  assign rx_cntvalueout_ext_23[5] = \<const0> ;
  assign rx_cntvalueout_ext_23[4] = \<const0> ;
  assign rx_cntvalueout_ext_23[3] = \<const0> ;
  assign rx_cntvalueout_ext_23[2] = \<const0> ;
  assign rx_cntvalueout_ext_23[1] = \<const0> ;
  assign rx_cntvalueout_ext_23[0] = \<const0> ;
  assign rx_cntvalueout_ext_24[8] = \<const0> ;
  assign rx_cntvalueout_ext_24[7] = \<const0> ;
  assign rx_cntvalueout_ext_24[6] = \<const0> ;
  assign rx_cntvalueout_ext_24[5] = \<const0> ;
  assign rx_cntvalueout_ext_24[4] = \<const0> ;
  assign rx_cntvalueout_ext_24[3] = \<const0> ;
  assign rx_cntvalueout_ext_24[2] = \<const0> ;
  assign rx_cntvalueout_ext_24[1] = \<const0> ;
  assign rx_cntvalueout_ext_24[0] = \<const0> ;
  assign rx_cntvalueout_ext_25[8] = \<const0> ;
  assign rx_cntvalueout_ext_25[7] = \<const0> ;
  assign rx_cntvalueout_ext_25[6] = \<const0> ;
  assign rx_cntvalueout_ext_25[5] = \<const0> ;
  assign rx_cntvalueout_ext_25[4] = \<const0> ;
  assign rx_cntvalueout_ext_25[3] = \<const0> ;
  assign rx_cntvalueout_ext_25[2] = \<const0> ;
  assign rx_cntvalueout_ext_25[1] = \<const0> ;
  assign rx_cntvalueout_ext_25[0] = \<const0> ;
  assign rx_cntvalueout_ext_26[8] = \<const0> ;
  assign rx_cntvalueout_ext_26[7] = \<const0> ;
  assign rx_cntvalueout_ext_26[6] = \<const0> ;
  assign rx_cntvalueout_ext_26[5] = \<const0> ;
  assign rx_cntvalueout_ext_26[4] = \<const0> ;
  assign rx_cntvalueout_ext_26[3] = \<const0> ;
  assign rx_cntvalueout_ext_26[2] = \<const0> ;
  assign rx_cntvalueout_ext_26[1] = \<const0> ;
  assign rx_cntvalueout_ext_26[0] = \<const0> ;
  assign rx_cntvalueout_ext_27[8] = \<const0> ;
  assign rx_cntvalueout_ext_27[7] = \<const0> ;
  assign rx_cntvalueout_ext_27[6] = \<const0> ;
  assign rx_cntvalueout_ext_27[5] = \<const0> ;
  assign rx_cntvalueout_ext_27[4] = \<const0> ;
  assign rx_cntvalueout_ext_27[3] = \<const0> ;
  assign rx_cntvalueout_ext_27[2] = \<const0> ;
  assign rx_cntvalueout_ext_27[1] = \<const0> ;
  assign rx_cntvalueout_ext_27[0] = \<const0> ;
  assign rx_cntvalueout_ext_28[8] = \<const0> ;
  assign rx_cntvalueout_ext_28[7] = \<const0> ;
  assign rx_cntvalueout_ext_28[6] = \<const0> ;
  assign rx_cntvalueout_ext_28[5] = \<const0> ;
  assign rx_cntvalueout_ext_28[4] = \<const0> ;
  assign rx_cntvalueout_ext_28[3] = \<const0> ;
  assign rx_cntvalueout_ext_28[2] = \<const0> ;
  assign rx_cntvalueout_ext_28[1] = \<const0> ;
  assign rx_cntvalueout_ext_28[0] = \<const0> ;
  assign rx_cntvalueout_ext_29[8] = \<const0> ;
  assign rx_cntvalueout_ext_29[7] = \<const0> ;
  assign rx_cntvalueout_ext_29[6] = \<const0> ;
  assign rx_cntvalueout_ext_29[5] = \<const0> ;
  assign rx_cntvalueout_ext_29[4] = \<const0> ;
  assign rx_cntvalueout_ext_29[3] = \<const0> ;
  assign rx_cntvalueout_ext_29[2] = \<const0> ;
  assign rx_cntvalueout_ext_29[1] = \<const0> ;
  assign rx_cntvalueout_ext_29[0] = \<const0> ;
  assign rx_cntvalueout_ext_3[8] = \<const0> ;
  assign rx_cntvalueout_ext_3[7] = \<const0> ;
  assign rx_cntvalueout_ext_3[6] = \<const0> ;
  assign rx_cntvalueout_ext_3[5] = \<const0> ;
  assign rx_cntvalueout_ext_3[4] = \<const0> ;
  assign rx_cntvalueout_ext_3[3] = \<const0> ;
  assign rx_cntvalueout_ext_3[2] = \<const0> ;
  assign rx_cntvalueout_ext_3[1] = \<const0> ;
  assign rx_cntvalueout_ext_3[0] = \<const0> ;
  assign rx_cntvalueout_ext_30[8] = \<const0> ;
  assign rx_cntvalueout_ext_30[7] = \<const0> ;
  assign rx_cntvalueout_ext_30[6] = \<const0> ;
  assign rx_cntvalueout_ext_30[5] = \<const0> ;
  assign rx_cntvalueout_ext_30[4] = \<const0> ;
  assign rx_cntvalueout_ext_30[3] = \<const0> ;
  assign rx_cntvalueout_ext_30[2] = \<const0> ;
  assign rx_cntvalueout_ext_30[1] = \<const0> ;
  assign rx_cntvalueout_ext_30[0] = \<const0> ;
  assign rx_cntvalueout_ext_31[8] = \<const0> ;
  assign rx_cntvalueout_ext_31[7] = \<const0> ;
  assign rx_cntvalueout_ext_31[6] = \<const0> ;
  assign rx_cntvalueout_ext_31[5] = \<const0> ;
  assign rx_cntvalueout_ext_31[4] = \<const0> ;
  assign rx_cntvalueout_ext_31[3] = \<const0> ;
  assign rx_cntvalueout_ext_31[2] = \<const0> ;
  assign rx_cntvalueout_ext_31[1] = \<const0> ;
  assign rx_cntvalueout_ext_31[0] = \<const0> ;
  assign rx_cntvalueout_ext_32[8] = \<const0> ;
  assign rx_cntvalueout_ext_32[7] = \<const0> ;
  assign rx_cntvalueout_ext_32[6] = \<const0> ;
  assign rx_cntvalueout_ext_32[5] = \<const0> ;
  assign rx_cntvalueout_ext_32[4] = \<const0> ;
  assign rx_cntvalueout_ext_32[3] = \<const0> ;
  assign rx_cntvalueout_ext_32[2] = \<const0> ;
  assign rx_cntvalueout_ext_32[1] = \<const0> ;
  assign rx_cntvalueout_ext_32[0] = \<const0> ;
  assign rx_cntvalueout_ext_33[8] = \<const0> ;
  assign rx_cntvalueout_ext_33[7] = \<const0> ;
  assign rx_cntvalueout_ext_33[6] = \<const0> ;
  assign rx_cntvalueout_ext_33[5] = \<const0> ;
  assign rx_cntvalueout_ext_33[4] = \<const0> ;
  assign rx_cntvalueout_ext_33[3] = \<const0> ;
  assign rx_cntvalueout_ext_33[2] = \<const0> ;
  assign rx_cntvalueout_ext_33[1] = \<const0> ;
  assign rx_cntvalueout_ext_33[0] = \<const0> ;
  assign rx_cntvalueout_ext_34[8] = \<const0> ;
  assign rx_cntvalueout_ext_34[7] = \<const0> ;
  assign rx_cntvalueout_ext_34[6] = \<const0> ;
  assign rx_cntvalueout_ext_34[5] = \<const0> ;
  assign rx_cntvalueout_ext_34[4] = \<const0> ;
  assign rx_cntvalueout_ext_34[3] = \<const0> ;
  assign rx_cntvalueout_ext_34[2] = \<const0> ;
  assign rx_cntvalueout_ext_34[1] = \<const0> ;
  assign rx_cntvalueout_ext_34[0] = \<const0> ;
  assign rx_cntvalueout_ext_35[8] = \<const0> ;
  assign rx_cntvalueout_ext_35[7] = \<const0> ;
  assign rx_cntvalueout_ext_35[6] = \<const0> ;
  assign rx_cntvalueout_ext_35[5] = \<const0> ;
  assign rx_cntvalueout_ext_35[4] = \<const0> ;
  assign rx_cntvalueout_ext_35[3] = \<const0> ;
  assign rx_cntvalueout_ext_35[2] = \<const0> ;
  assign rx_cntvalueout_ext_35[1] = \<const0> ;
  assign rx_cntvalueout_ext_35[0] = \<const0> ;
  assign rx_cntvalueout_ext_36[8] = \<const0> ;
  assign rx_cntvalueout_ext_36[7] = \<const0> ;
  assign rx_cntvalueout_ext_36[6] = \<const0> ;
  assign rx_cntvalueout_ext_36[5] = \<const0> ;
  assign rx_cntvalueout_ext_36[4] = \<const0> ;
  assign rx_cntvalueout_ext_36[3] = \<const0> ;
  assign rx_cntvalueout_ext_36[2] = \<const0> ;
  assign rx_cntvalueout_ext_36[1] = \<const0> ;
  assign rx_cntvalueout_ext_36[0] = \<const0> ;
  assign rx_cntvalueout_ext_37[8] = \<const0> ;
  assign rx_cntvalueout_ext_37[7] = \<const0> ;
  assign rx_cntvalueout_ext_37[6] = \<const0> ;
  assign rx_cntvalueout_ext_37[5] = \<const0> ;
  assign rx_cntvalueout_ext_37[4] = \<const0> ;
  assign rx_cntvalueout_ext_37[3] = \<const0> ;
  assign rx_cntvalueout_ext_37[2] = \<const0> ;
  assign rx_cntvalueout_ext_37[1] = \<const0> ;
  assign rx_cntvalueout_ext_37[0] = \<const0> ;
  assign rx_cntvalueout_ext_38[8] = \<const0> ;
  assign rx_cntvalueout_ext_38[7] = \<const0> ;
  assign rx_cntvalueout_ext_38[6] = \<const0> ;
  assign rx_cntvalueout_ext_38[5] = \<const0> ;
  assign rx_cntvalueout_ext_38[4] = \<const0> ;
  assign rx_cntvalueout_ext_38[3] = \<const0> ;
  assign rx_cntvalueout_ext_38[2] = \<const0> ;
  assign rx_cntvalueout_ext_38[1] = \<const0> ;
  assign rx_cntvalueout_ext_38[0] = \<const0> ;
  assign rx_cntvalueout_ext_39[8] = \<const0> ;
  assign rx_cntvalueout_ext_39[7] = \<const0> ;
  assign rx_cntvalueout_ext_39[6] = \<const0> ;
  assign rx_cntvalueout_ext_39[5] = \<const0> ;
  assign rx_cntvalueout_ext_39[4] = \<const0> ;
  assign rx_cntvalueout_ext_39[3] = \<const0> ;
  assign rx_cntvalueout_ext_39[2] = \<const0> ;
  assign rx_cntvalueout_ext_39[1] = \<const0> ;
  assign rx_cntvalueout_ext_39[0] = \<const0> ;
  assign rx_cntvalueout_ext_4[8] = \<const0> ;
  assign rx_cntvalueout_ext_4[7] = \<const0> ;
  assign rx_cntvalueout_ext_4[6] = \<const0> ;
  assign rx_cntvalueout_ext_4[5] = \<const0> ;
  assign rx_cntvalueout_ext_4[4] = \<const0> ;
  assign rx_cntvalueout_ext_4[3] = \<const0> ;
  assign rx_cntvalueout_ext_4[2] = \<const0> ;
  assign rx_cntvalueout_ext_4[1] = \<const0> ;
  assign rx_cntvalueout_ext_4[0] = \<const0> ;
  assign rx_cntvalueout_ext_40[8] = \<const0> ;
  assign rx_cntvalueout_ext_40[7] = \<const0> ;
  assign rx_cntvalueout_ext_40[6] = \<const0> ;
  assign rx_cntvalueout_ext_40[5] = \<const0> ;
  assign rx_cntvalueout_ext_40[4] = \<const0> ;
  assign rx_cntvalueout_ext_40[3] = \<const0> ;
  assign rx_cntvalueout_ext_40[2] = \<const0> ;
  assign rx_cntvalueout_ext_40[1] = \<const0> ;
  assign rx_cntvalueout_ext_40[0] = \<const0> ;
  assign rx_cntvalueout_ext_41[8] = \<const0> ;
  assign rx_cntvalueout_ext_41[7] = \<const0> ;
  assign rx_cntvalueout_ext_41[6] = \<const0> ;
  assign rx_cntvalueout_ext_41[5] = \<const0> ;
  assign rx_cntvalueout_ext_41[4] = \<const0> ;
  assign rx_cntvalueout_ext_41[3] = \<const0> ;
  assign rx_cntvalueout_ext_41[2] = \<const0> ;
  assign rx_cntvalueout_ext_41[1] = \<const0> ;
  assign rx_cntvalueout_ext_41[0] = \<const0> ;
  assign rx_cntvalueout_ext_42[8] = \<const0> ;
  assign rx_cntvalueout_ext_42[7] = \<const0> ;
  assign rx_cntvalueout_ext_42[6] = \<const0> ;
  assign rx_cntvalueout_ext_42[5] = \<const0> ;
  assign rx_cntvalueout_ext_42[4] = \<const0> ;
  assign rx_cntvalueout_ext_42[3] = \<const0> ;
  assign rx_cntvalueout_ext_42[2] = \<const0> ;
  assign rx_cntvalueout_ext_42[1] = \<const0> ;
  assign rx_cntvalueout_ext_42[0] = \<const0> ;
  assign rx_cntvalueout_ext_43[8] = \<const0> ;
  assign rx_cntvalueout_ext_43[7] = \<const0> ;
  assign rx_cntvalueout_ext_43[6] = \<const0> ;
  assign rx_cntvalueout_ext_43[5] = \<const0> ;
  assign rx_cntvalueout_ext_43[4] = \<const0> ;
  assign rx_cntvalueout_ext_43[3] = \<const0> ;
  assign rx_cntvalueout_ext_43[2] = \<const0> ;
  assign rx_cntvalueout_ext_43[1] = \<const0> ;
  assign rx_cntvalueout_ext_43[0] = \<const0> ;
  assign rx_cntvalueout_ext_44[8] = \<const0> ;
  assign rx_cntvalueout_ext_44[7] = \<const0> ;
  assign rx_cntvalueout_ext_44[6] = \<const0> ;
  assign rx_cntvalueout_ext_44[5] = \<const0> ;
  assign rx_cntvalueout_ext_44[4] = \<const0> ;
  assign rx_cntvalueout_ext_44[3] = \<const0> ;
  assign rx_cntvalueout_ext_44[2] = \<const0> ;
  assign rx_cntvalueout_ext_44[1] = \<const0> ;
  assign rx_cntvalueout_ext_44[0] = \<const0> ;
  assign rx_cntvalueout_ext_45[8] = \<const0> ;
  assign rx_cntvalueout_ext_45[7] = \<const0> ;
  assign rx_cntvalueout_ext_45[6] = \<const0> ;
  assign rx_cntvalueout_ext_45[5] = \<const0> ;
  assign rx_cntvalueout_ext_45[4] = \<const0> ;
  assign rx_cntvalueout_ext_45[3] = \<const0> ;
  assign rx_cntvalueout_ext_45[2] = \<const0> ;
  assign rx_cntvalueout_ext_45[1] = \<const0> ;
  assign rx_cntvalueout_ext_45[0] = \<const0> ;
  assign rx_cntvalueout_ext_46[8] = \<const0> ;
  assign rx_cntvalueout_ext_46[7] = \<const0> ;
  assign rx_cntvalueout_ext_46[6] = \<const0> ;
  assign rx_cntvalueout_ext_46[5] = \<const0> ;
  assign rx_cntvalueout_ext_46[4] = \<const0> ;
  assign rx_cntvalueout_ext_46[3] = \<const0> ;
  assign rx_cntvalueout_ext_46[2] = \<const0> ;
  assign rx_cntvalueout_ext_46[1] = \<const0> ;
  assign rx_cntvalueout_ext_46[0] = \<const0> ;
  assign rx_cntvalueout_ext_47[8] = \<const0> ;
  assign rx_cntvalueout_ext_47[7] = \<const0> ;
  assign rx_cntvalueout_ext_47[6] = \<const0> ;
  assign rx_cntvalueout_ext_47[5] = \<const0> ;
  assign rx_cntvalueout_ext_47[4] = \<const0> ;
  assign rx_cntvalueout_ext_47[3] = \<const0> ;
  assign rx_cntvalueout_ext_47[2] = \<const0> ;
  assign rx_cntvalueout_ext_47[1] = \<const0> ;
  assign rx_cntvalueout_ext_47[0] = \<const0> ;
  assign rx_cntvalueout_ext_48[8] = \<const0> ;
  assign rx_cntvalueout_ext_48[7] = \<const0> ;
  assign rx_cntvalueout_ext_48[6] = \<const0> ;
  assign rx_cntvalueout_ext_48[5] = \<const0> ;
  assign rx_cntvalueout_ext_48[4] = \<const0> ;
  assign rx_cntvalueout_ext_48[3] = \<const0> ;
  assign rx_cntvalueout_ext_48[2] = \<const0> ;
  assign rx_cntvalueout_ext_48[1] = \<const0> ;
  assign rx_cntvalueout_ext_48[0] = \<const0> ;
  assign rx_cntvalueout_ext_49[8] = \<const0> ;
  assign rx_cntvalueout_ext_49[7] = \<const0> ;
  assign rx_cntvalueout_ext_49[6] = \<const0> ;
  assign rx_cntvalueout_ext_49[5] = \<const0> ;
  assign rx_cntvalueout_ext_49[4] = \<const0> ;
  assign rx_cntvalueout_ext_49[3] = \<const0> ;
  assign rx_cntvalueout_ext_49[2] = \<const0> ;
  assign rx_cntvalueout_ext_49[1] = \<const0> ;
  assign rx_cntvalueout_ext_49[0] = \<const0> ;
  assign rx_cntvalueout_ext_5[8] = \<const0> ;
  assign rx_cntvalueout_ext_5[7] = \<const0> ;
  assign rx_cntvalueout_ext_5[6] = \<const0> ;
  assign rx_cntvalueout_ext_5[5] = \<const0> ;
  assign rx_cntvalueout_ext_5[4] = \<const0> ;
  assign rx_cntvalueout_ext_5[3] = \<const0> ;
  assign rx_cntvalueout_ext_5[2] = \<const0> ;
  assign rx_cntvalueout_ext_5[1] = \<const0> ;
  assign rx_cntvalueout_ext_5[0] = \<const0> ;
  assign rx_cntvalueout_ext_50[8] = \<const0> ;
  assign rx_cntvalueout_ext_50[7] = \<const0> ;
  assign rx_cntvalueout_ext_50[6] = \<const0> ;
  assign rx_cntvalueout_ext_50[5] = \<const0> ;
  assign rx_cntvalueout_ext_50[4] = \<const0> ;
  assign rx_cntvalueout_ext_50[3] = \<const0> ;
  assign rx_cntvalueout_ext_50[2] = \<const0> ;
  assign rx_cntvalueout_ext_50[1] = \<const0> ;
  assign rx_cntvalueout_ext_50[0] = \<const0> ;
  assign rx_cntvalueout_ext_51[8] = \<const0> ;
  assign rx_cntvalueout_ext_51[7] = \<const0> ;
  assign rx_cntvalueout_ext_51[6] = \<const0> ;
  assign rx_cntvalueout_ext_51[5] = \<const0> ;
  assign rx_cntvalueout_ext_51[4] = \<const0> ;
  assign rx_cntvalueout_ext_51[3] = \<const0> ;
  assign rx_cntvalueout_ext_51[2] = \<const0> ;
  assign rx_cntvalueout_ext_51[1] = \<const0> ;
  assign rx_cntvalueout_ext_51[0] = \<const0> ;
  assign rx_cntvalueout_ext_6[8] = \<const0> ;
  assign rx_cntvalueout_ext_6[7] = \<const0> ;
  assign rx_cntvalueout_ext_6[6] = \<const0> ;
  assign rx_cntvalueout_ext_6[5] = \<const0> ;
  assign rx_cntvalueout_ext_6[4] = \<const0> ;
  assign rx_cntvalueout_ext_6[3] = \<const0> ;
  assign rx_cntvalueout_ext_6[2] = \<const0> ;
  assign rx_cntvalueout_ext_6[1] = \<const0> ;
  assign rx_cntvalueout_ext_6[0] = \<const0> ;
  assign rx_cntvalueout_ext_7[8] = \<const0> ;
  assign rx_cntvalueout_ext_7[7] = \<const0> ;
  assign rx_cntvalueout_ext_7[6] = \<const0> ;
  assign rx_cntvalueout_ext_7[5] = \<const0> ;
  assign rx_cntvalueout_ext_7[4] = \<const0> ;
  assign rx_cntvalueout_ext_7[3] = \<const0> ;
  assign rx_cntvalueout_ext_7[2] = \<const0> ;
  assign rx_cntvalueout_ext_7[1] = \<const0> ;
  assign rx_cntvalueout_ext_7[0] = \<const0> ;
  assign rx_cntvalueout_ext_8[8] = \<const0> ;
  assign rx_cntvalueout_ext_8[7] = \<const0> ;
  assign rx_cntvalueout_ext_8[6] = \<const0> ;
  assign rx_cntvalueout_ext_8[5] = \<const0> ;
  assign rx_cntvalueout_ext_8[4] = \<const0> ;
  assign rx_cntvalueout_ext_8[3] = \<const0> ;
  assign rx_cntvalueout_ext_8[2] = \<const0> ;
  assign rx_cntvalueout_ext_8[1] = \<const0> ;
  assign rx_cntvalueout_ext_8[0] = \<const0> ;
  assign rx_cntvalueout_ext_9[8] = \<const0> ;
  assign rx_cntvalueout_ext_9[7] = \<const0> ;
  assign rx_cntvalueout_ext_9[6] = \<const0> ;
  assign rx_cntvalueout_ext_9[5] = \<const0> ;
  assign rx_cntvalueout_ext_9[4] = \<const0> ;
  assign rx_cntvalueout_ext_9[3] = \<const0> ;
  assign rx_cntvalueout_ext_9[2] = \<const0> ;
  assign rx_cntvalueout_ext_9[1] = \<const0> ;
  assign rx_cntvalueout_ext_9[0] = \<const0> ;
  assign rxtx_bitslip_sync_done = \<const1> ;
  assign shared_pll0_clkoutphy_out = \<const0> ;
  assign shared_pll1_clkoutphy_out = \<const0> ;
  assign tx_cntvalueout_0[8] = \<const0> ;
  assign tx_cntvalueout_0[7] = \<const0> ;
  assign tx_cntvalueout_0[6] = \<const0> ;
  assign tx_cntvalueout_0[5] = \<const0> ;
  assign tx_cntvalueout_0[4] = \<const0> ;
  assign tx_cntvalueout_0[3] = \<const0> ;
  assign tx_cntvalueout_0[2] = \<const0> ;
  assign tx_cntvalueout_0[1] = \<const0> ;
  assign tx_cntvalueout_0[0] = \<const0> ;
  assign tx_cntvalueout_1[8] = \<const0> ;
  assign tx_cntvalueout_1[7] = \<const0> ;
  assign tx_cntvalueout_1[6] = \<const0> ;
  assign tx_cntvalueout_1[5] = \<const0> ;
  assign tx_cntvalueout_1[4] = \<const0> ;
  assign tx_cntvalueout_1[3] = \<const0> ;
  assign tx_cntvalueout_1[2] = \<const0> ;
  assign tx_cntvalueout_1[1] = \<const0> ;
  assign tx_cntvalueout_1[0] = \<const0> ;
  assign tx_cntvalueout_10[8] = \<const0> ;
  assign tx_cntvalueout_10[7] = \<const0> ;
  assign tx_cntvalueout_10[6] = \<const0> ;
  assign tx_cntvalueout_10[5] = \<const0> ;
  assign tx_cntvalueout_10[4] = \<const0> ;
  assign tx_cntvalueout_10[3] = \<const0> ;
  assign tx_cntvalueout_10[2] = \<const0> ;
  assign tx_cntvalueout_10[1] = \<const0> ;
  assign tx_cntvalueout_10[0] = \<const0> ;
  assign tx_cntvalueout_11[8] = \<const0> ;
  assign tx_cntvalueout_11[7] = \<const0> ;
  assign tx_cntvalueout_11[6] = \<const0> ;
  assign tx_cntvalueout_11[5] = \<const0> ;
  assign tx_cntvalueout_11[4] = \<const0> ;
  assign tx_cntvalueout_11[3] = \<const0> ;
  assign tx_cntvalueout_11[2] = \<const0> ;
  assign tx_cntvalueout_11[1] = \<const0> ;
  assign tx_cntvalueout_11[0] = \<const0> ;
  assign tx_cntvalueout_12[8] = \<const0> ;
  assign tx_cntvalueout_12[7] = \<const0> ;
  assign tx_cntvalueout_12[6] = \<const0> ;
  assign tx_cntvalueout_12[5] = \<const0> ;
  assign tx_cntvalueout_12[4] = \<const0> ;
  assign tx_cntvalueout_12[3] = \<const0> ;
  assign tx_cntvalueout_12[2] = \<const0> ;
  assign tx_cntvalueout_12[1] = \<const0> ;
  assign tx_cntvalueout_12[0] = \<const0> ;
  assign tx_cntvalueout_13[8] = \<const0> ;
  assign tx_cntvalueout_13[7] = \<const0> ;
  assign tx_cntvalueout_13[6] = \<const0> ;
  assign tx_cntvalueout_13[5] = \<const0> ;
  assign tx_cntvalueout_13[4] = \<const0> ;
  assign tx_cntvalueout_13[3] = \<const0> ;
  assign tx_cntvalueout_13[2] = \<const0> ;
  assign tx_cntvalueout_13[1] = \<const0> ;
  assign tx_cntvalueout_13[0] = \<const0> ;
  assign tx_cntvalueout_14[8] = \<const0> ;
  assign tx_cntvalueout_14[7] = \<const0> ;
  assign tx_cntvalueout_14[6] = \<const0> ;
  assign tx_cntvalueout_14[5] = \<const0> ;
  assign tx_cntvalueout_14[4] = \<const0> ;
  assign tx_cntvalueout_14[3] = \<const0> ;
  assign tx_cntvalueout_14[2] = \<const0> ;
  assign tx_cntvalueout_14[1] = \<const0> ;
  assign tx_cntvalueout_14[0] = \<const0> ;
  assign tx_cntvalueout_15[8] = \<const0> ;
  assign tx_cntvalueout_15[7] = \<const0> ;
  assign tx_cntvalueout_15[6] = \<const0> ;
  assign tx_cntvalueout_15[5] = \<const0> ;
  assign tx_cntvalueout_15[4] = \<const0> ;
  assign tx_cntvalueout_15[3] = \<const0> ;
  assign tx_cntvalueout_15[2] = \<const0> ;
  assign tx_cntvalueout_15[1] = \<const0> ;
  assign tx_cntvalueout_15[0] = \<const0> ;
  assign tx_cntvalueout_16[8] = \<const0> ;
  assign tx_cntvalueout_16[7] = \<const0> ;
  assign tx_cntvalueout_16[6] = \<const0> ;
  assign tx_cntvalueout_16[5] = \<const0> ;
  assign tx_cntvalueout_16[4] = \<const0> ;
  assign tx_cntvalueout_16[3] = \<const0> ;
  assign tx_cntvalueout_16[2] = \<const0> ;
  assign tx_cntvalueout_16[1] = \<const0> ;
  assign tx_cntvalueout_16[0] = \<const0> ;
  assign tx_cntvalueout_17[8] = \<const0> ;
  assign tx_cntvalueout_17[7] = \<const0> ;
  assign tx_cntvalueout_17[6] = \<const0> ;
  assign tx_cntvalueout_17[5] = \<const0> ;
  assign tx_cntvalueout_17[4] = \<const0> ;
  assign tx_cntvalueout_17[3] = \<const0> ;
  assign tx_cntvalueout_17[2] = \<const0> ;
  assign tx_cntvalueout_17[1] = \<const0> ;
  assign tx_cntvalueout_17[0] = \<const0> ;
  assign tx_cntvalueout_18[8] = \<const0> ;
  assign tx_cntvalueout_18[7] = \<const0> ;
  assign tx_cntvalueout_18[6] = \<const0> ;
  assign tx_cntvalueout_18[5] = \<const0> ;
  assign tx_cntvalueout_18[4] = \<const0> ;
  assign tx_cntvalueout_18[3] = \<const0> ;
  assign tx_cntvalueout_18[2] = \<const0> ;
  assign tx_cntvalueout_18[1] = \<const0> ;
  assign tx_cntvalueout_18[0] = \<const0> ;
  assign tx_cntvalueout_19[8] = \<const0> ;
  assign tx_cntvalueout_19[7] = \<const0> ;
  assign tx_cntvalueout_19[6] = \<const0> ;
  assign tx_cntvalueout_19[5] = \<const0> ;
  assign tx_cntvalueout_19[4] = \<const0> ;
  assign tx_cntvalueout_19[3] = \<const0> ;
  assign tx_cntvalueout_19[2] = \<const0> ;
  assign tx_cntvalueout_19[1] = \<const0> ;
  assign tx_cntvalueout_19[0] = \<const0> ;
  assign tx_cntvalueout_2[8] = \<const0> ;
  assign tx_cntvalueout_2[7] = \<const0> ;
  assign tx_cntvalueout_2[6] = \<const0> ;
  assign tx_cntvalueout_2[5] = \<const0> ;
  assign tx_cntvalueout_2[4] = \<const0> ;
  assign tx_cntvalueout_2[3] = \<const0> ;
  assign tx_cntvalueout_2[2] = \<const0> ;
  assign tx_cntvalueout_2[1] = \<const0> ;
  assign tx_cntvalueout_2[0] = \<const0> ;
  assign tx_cntvalueout_20[8] = \<const0> ;
  assign tx_cntvalueout_20[7] = \<const0> ;
  assign tx_cntvalueout_20[6] = \<const0> ;
  assign tx_cntvalueout_20[5] = \<const0> ;
  assign tx_cntvalueout_20[4] = \<const0> ;
  assign tx_cntvalueout_20[3] = \<const0> ;
  assign tx_cntvalueout_20[2] = \<const0> ;
  assign tx_cntvalueout_20[1] = \<const0> ;
  assign tx_cntvalueout_20[0] = \<const0> ;
  assign tx_cntvalueout_21[8] = \<const0> ;
  assign tx_cntvalueout_21[7] = \<const0> ;
  assign tx_cntvalueout_21[6] = \<const0> ;
  assign tx_cntvalueout_21[5] = \<const0> ;
  assign tx_cntvalueout_21[4] = \<const0> ;
  assign tx_cntvalueout_21[3] = \<const0> ;
  assign tx_cntvalueout_21[2] = \<const0> ;
  assign tx_cntvalueout_21[1] = \<const0> ;
  assign tx_cntvalueout_21[0] = \<const0> ;
  assign tx_cntvalueout_22[8] = \<const0> ;
  assign tx_cntvalueout_22[7] = \<const0> ;
  assign tx_cntvalueout_22[6] = \<const0> ;
  assign tx_cntvalueout_22[5] = \<const0> ;
  assign tx_cntvalueout_22[4] = \<const0> ;
  assign tx_cntvalueout_22[3] = \<const0> ;
  assign tx_cntvalueout_22[2] = \<const0> ;
  assign tx_cntvalueout_22[1] = \<const0> ;
  assign tx_cntvalueout_22[0] = \<const0> ;
  assign tx_cntvalueout_23[8] = \<const0> ;
  assign tx_cntvalueout_23[7] = \<const0> ;
  assign tx_cntvalueout_23[6] = \<const0> ;
  assign tx_cntvalueout_23[5] = \<const0> ;
  assign tx_cntvalueout_23[4] = \<const0> ;
  assign tx_cntvalueout_23[3] = \<const0> ;
  assign tx_cntvalueout_23[2] = \<const0> ;
  assign tx_cntvalueout_23[1] = \<const0> ;
  assign tx_cntvalueout_23[0] = \<const0> ;
  assign tx_cntvalueout_24[8] = \<const0> ;
  assign tx_cntvalueout_24[7] = \<const0> ;
  assign tx_cntvalueout_24[6] = \<const0> ;
  assign tx_cntvalueout_24[5] = \<const0> ;
  assign tx_cntvalueout_24[4] = \<const0> ;
  assign tx_cntvalueout_24[3] = \<const0> ;
  assign tx_cntvalueout_24[2] = \<const0> ;
  assign tx_cntvalueout_24[1] = \<const0> ;
  assign tx_cntvalueout_24[0] = \<const0> ;
  assign tx_cntvalueout_25[8] = \<const0> ;
  assign tx_cntvalueout_25[7] = \<const0> ;
  assign tx_cntvalueout_25[6] = \<const0> ;
  assign tx_cntvalueout_25[5] = \<const0> ;
  assign tx_cntvalueout_25[4] = \<const0> ;
  assign tx_cntvalueout_25[3] = \<const0> ;
  assign tx_cntvalueout_25[2] = \<const0> ;
  assign tx_cntvalueout_25[1] = \<const0> ;
  assign tx_cntvalueout_25[0] = \<const0> ;
  assign tx_cntvalueout_26[8] = \<const0> ;
  assign tx_cntvalueout_26[7] = \<const0> ;
  assign tx_cntvalueout_26[6] = \<const0> ;
  assign tx_cntvalueout_26[5] = \<const0> ;
  assign tx_cntvalueout_26[4] = \<const0> ;
  assign tx_cntvalueout_26[3] = \<const0> ;
  assign tx_cntvalueout_26[2] = \<const0> ;
  assign tx_cntvalueout_26[1] = \<const0> ;
  assign tx_cntvalueout_26[0] = \<const0> ;
  assign tx_cntvalueout_27[8] = \<const0> ;
  assign tx_cntvalueout_27[7] = \<const0> ;
  assign tx_cntvalueout_27[6] = \<const0> ;
  assign tx_cntvalueout_27[5] = \<const0> ;
  assign tx_cntvalueout_27[4] = \<const0> ;
  assign tx_cntvalueout_27[3] = \<const0> ;
  assign tx_cntvalueout_27[2] = \<const0> ;
  assign tx_cntvalueout_27[1] = \<const0> ;
  assign tx_cntvalueout_27[0] = \<const0> ;
  assign tx_cntvalueout_28[8] = \<const0> ;
  assign tx_cntvalueout_28[7] = \<const0> ;
  assign tx_cntvalueout_28[6] = \<const0> ;
  assign tx_cntvalueout_28[5] = \<const0> ;
  assign tx_cntvalueout_28[4] = \<const0> ;
  assign tx_cntvalueout_28[3] = \<const0> ;
  assign tx_cntvalueout_28[2] = \<const0> ;
  assign tx_cntvalueout_28[1] = \<const0> ;
  assign tx_cntvalueout_28[0] = \<const0> ;
  assign tx_cntvalueout_29[8] = \<const0> ;
  assign tx_cntvalueout_29[7] = \<const0> ;
  assign tx_cntvalueout_29[6] = \<const0> ;
  assign tx_cntvalueout_29[5] = \<const0> ;
  assign tx_cntvalueout_29[4] = \<const0> ;
  assign tx_cntvalueout_29[3] = \<const0> ;
  assign tx_cntvalueout_29[2] = \<const0> ;
  assign tx_cntvalueout_29[1] = \<const0> ;
  assign tx_cntvalueout_29[0] = \<const0> ;
  assign tx_cntvalueout_3[8] = \<const0> ;
  assign tx_cntvalueout_3[7] = \<const0> ;
  assign tx_cntvalueout_3[6] = \<const0> ;
  assign tx_cntvalueout_3[5] = \<const0> ;
  assign tx_cntvalueout_3[4] = \<const0> ;
  assign tx_cntvalueout_3[3] = \<const0> ;
  assign tx_cntvalueout_3[2] = \<const0> ;
  assign tx_cntvalueout_3[1] = \<const0> ;
  assign tx_cntvalueout_3[0] = \<const0> ;
  assign tx_cntvalueout_30[8] = \<const0> ;
  assign tx_cntvalueout_30[7] = \<const0> ;
  assign tx_cntvalueout_30[6] = \<const0> ;
  assign tx_cntvalueout_30[5] = \<const0> ;
  assign tx_cntvalueout_30[4] = \<const0> ;
  assign tx_cntvalueout_30[3] = \<const0> ;
  assign tx_cntvalueout_30[2] = \<const0> ;
  assign tx_cntvalueout_30[1] = \<const0> ;
  assign tx_cntvalueout_30[0] = \<const0> ;
  assign tx_cntvalueout_31[8] = \<const0> ;
  assign tx_cntvalueout_31[7] = \<const0> ;
  assign tx_cntvalueout_31[6] = \<const0> ;
  assign tx_cntvalueout_31[5] = \<const0> ;
  assign tx_cntvalueout_31[4] = \<const0> ;
  assign tx_cntvalueout_31[3] = \<const0> ;
  assign tx_cntvalueout_31[2] = \<const0> ;
  assign tx_cntvalueout_31[1] = \<const0> ;
  assign tx_cntvalueout_31[0] = \<const0> ;
  assign tx_cntvalueout_32[8] = \<const0> ;
  assign tx_cntvalueout_32[7] = \<const0> ;
  assign tx_cntvalueout_32[6] = \<const0> ;
  assign tx_cntvalueout_32[5] = \<const0> ;
  assign tx_cntvalueout_32[4] = \<const0> ;
  assign tx_cntvalueout_32[3] = \<const0> ;
  assign tx_cntvalueout_32[2] = \<const0> ;
  assign tx_cntvalueout_32[1] = \<const0> ;
  assign tx_cntvalueout_32[0] = \<const0> ;
  assign tx_cntvalueout_33[8] = \<const0> ;
  assign tx_cntvalueout_33[7] = \<const0> ;
  assign tx_cntvalueout_33[6] = \<const0> ;
  assign tx_cntvalueout_33[5] = \<const0> ;
  assign tx_cntvalueout_33[4] = \<const0> ;
  assign tx_cntvalueout_33[3] = \<const0> ;
  assign tx_cntvalueout_33[2] = \<const0> ;
  assign tx_cntvalueout_33[1] = \<const0> ;
  assign tx_cntvalueout_33[0] = \<const0> ;
  assign tx_cntvalueout_34[8] = \<const0> ;
  assign tx_cntvalueout_34[7] = \<const0> ;
  assign tx_cntvalueout_34[6] = \<const0> ;
  assign tx_cntvalueout_34[5] = \<const0> ;
  assign tx_cntvalueout_34[4] = \<const0> ;
  assign tx_cntvalueout_34[3] = \<const0> ;
  assign tx_cntvalueout_34[2] = \<const0> ;
  assign tx_cntvalueout_34[1] = \<const0> ;
  assign tx_cntvalueout_34[0] = \<const0> ;
  assign tx_cntvalueout_35[8] = \<const0> ;
  assign tx_cntvalueout_35[7] = \<const0> ;
  assign tx_cntvalueout_35[6] = \<const0> ;
  assign tx_cntvalueout_35[5] = \<const0> ;
  assign tx_cntvalueout_35[4] = \<const0> ;
  assign tx_cntvalueout_35[3] = \<const0> ;
  assign tx_cntvalueout_35[2] = \<const0> ;
  assign tx_cntvalueout_35[1] = \<const0> ;
  assign tx_cntvalueout_35[0] = \<const0> ;
  assign tx_cntvalueout_36[8] = \<const0> ;
  assign tx_cntvalueout_36[7] = \<const0> ;
  assign tx_cntvalueout_36[6] = \<const0> ;
  assign tx_cntvalueout_36[5] = \<const0> ;
  assign tx_cntvalueout_36[4] = \<const0> ;
  assign tx_cntvalueout_36[3] = \<const0> ;
  assign tx_cntvalueout_36[2] = \<const0> ;
  assign tx_cntvalueout_36[1] = \<const0> ;
  assign tx_cntvalueout_36[0] = \<const0> ;
  assign tx_cntvalueout_37[8] = \<const0> ;
  assign tx_cntvalueout_37[7] = \<const0> ;
  assign tx_cntvalueout_37[6] = \<const0> ;
  assign tx_cntvalueout_37[5] = \<const0> ;
  assign tx_cntvalueout_37[4] = \<const0> ;
  assign tx_cntvalueout_37[3] = \<const0> ;
  assign tx_cntvalueout_37[2] = \<const0> ;
  assign tx_cntvalueout_37[1] = \<const0> ;
  assign tx_cntvalueout_37[0] = \<const0> ;
  assign tx_cntvalueout_38[8] = \<const0> ;
  assign tx_cntvalueout_38[7] = \<const0> ;
  assign tx_cntvalueout_38[6] = \<const0> ;
  assign tx_cntvalueout_38[5] = \<const0> ;
  assign tx_cntvalueout_38[4] = \<const0> ;
  assign tx_cntvalueout_38[3] = \<const0> ;
  assign tx_cntvalueout_38[2] = \<const0> ;
  assign tx_cntvalueout_38[1] = \<const0> ;
  assign tx_cntvalueout_38[0] = \<const0> ;
  assign tx_cntvalueout_39[8] = \<const0> ;
  assign tx_cntvalueout_39[7] = \<const0> ;
  assign tx_cntvalueout_39[6] = \<const0> ;
  assign tx_cntvalueout_39[5] = \<const0> ;
  assign tx_cntvalueout_39[4] = \<const0> ;
  assign tx_cntvalueout_39[3] = \<const0> ;
  assign tx_cntvalueout_39[2] = \<const0> ;
  assign tx_cntvalueout_39[1] = \<const0> ;
  assign tx_cntvalueout_39[0] = \<const0> ;
  assign tx_cntvalueout_4[8] = \<const0> ;
  assign tx_cntvalueout_4[7] = \<const0> ;
  assign tx_cntvalueout_4[6] = \<const0> ;
  assign tx_cntvalueout_4[5] = \<const0> ;
  assign tx_cntvalueout_4[4] = \<const0> ;
  assign tx_cntvalueout_4[3] = \<const0> ;
  assign tx_cntvalueout_4[2] = \<const0> ;
  assign tx_cntvalueout_4[1] = \<const0> ;
  assign tx_cntvalueout_4[0] = \<const0> ;
  assign tx_cntvalueout_40[8] = \<const0> ;
  assign tx_cntvalueout_40[7] = \<const0> ;
  assign tx_cntvalueout_40[6] = \<const0> ;
  assign tx_cntvalueout_40[5] = \<const0> ;
  assign tx_cntvalueout_40[4] = \<const0> ;
  assign tx_cntvalueout_40[3] = \<const0> ;
  assign tx_cntvalueout_40[2] = \<const0> ;
  assign tx_cntvalueout_40[1] = \<const0> ;
  assign tx_cntvalueout_40[0] = \<const0> ;
  assign tx_cntvalueout_41[8] = \<const0> ;
  assign tx_cntvalueout_41[7] = \<const0> ;
  assign tx_cntvalueout_41[6] = \<const0> ;
  assign tx_cntvalueout_41[5] = \<const0> ;
  assign tx_cntvalueout_41[4] = \<const0> ;
  assign tx_cntvalueout_41[3] = \<const0> ;
  assign tx_cntvalueout_41[2] = \<const0> ;
  assign tx_cntvalueout_41[1] = \<const0> ;
  assign tx_cntvalueout_41[0] = \<const0> ;
  assign tx_cntvalueout_42[8] = \<const0> ;
  assign tx_cntvalueout_42[7] = \<const0> ;
  assign tx_cntvalueout_42[6] = \<const0> ;
  assign tx_cntvalueout_42[5] = \<const0> ;
  assign tx_cntvalueout_42[4] = \<const0> ;
  assign tx_cntvalueout_42[3] = \<const0> ;
  assign tx_cntvalueout_42[2] = \<const0> ;
  assign tx_cntvalueout_42[1] = \<const0> ;
  assign tx_cntvalueout_42[0] = \<const0> ;
  assign tx_cntvalueout_43[8] = \<const0> ;
  assign tx_cntvalueout_43[7] = \<const0> ;
  assign tx_cntvalueout_43[6] = \<const0> ;
  assign tx_cntvalueout_43[5] = \<const0> ;
  assign tx_cntvalueout_43[4] = \<const0> ;
  assign tx_cntvalueout_43[3] = \<const0> ;
  assign tx_cntvalueout_43[2] = \<const0> ;
  assign tx_cntvalueout_43[1] = \<const0> ;
  assign tx_cntvalueout_43[0] = \<const0> ;
  assign tx_cntvalueout_44[8] = \<const0> ;
  assign tx_cntvalueout_44[7] = \<const0> ;
  assign tx_cntvalueout_44[6] = \<const0> ;
  assign tx_cntvalueout_44[5] = \<const0> ;
  assign tx_cntvalueout_44[4] = \<const0> ;
  assign tx_cntvalueout_44[3] = \<const0> ;
  assign tx_cntvalueout_44[2] = \<const0> ;
  assign tx_cntvalueout_44[1] = \<const0> ;
  assign tx_cntvalueout_44[0] = \<const0> ;
  assign tx_cntvalueout_45[8] = \<const0> ;
  assign tx_cntvalueout_45[7] = \<const0> ;
  assign tx_cntvalueout_45[6] = \<const0> ;
  assign tx_cntvalueout_45[5] = \<const0> ;
  assign tx_cntvalueout_45[4] = \<const0> ;
  assign tx_cntvalueout_45[3] = \<const0> ;
  assign tx_cntvalueout_45[2] = \<const0> ;
  assign tx_cntvalueout_45[1] = \<const0> ;
  assign tx_cntvalueout_45[0] = \<const0> ;
  assign tx_cntvalueout_46[8] = \<const0> ;
  assign tx_cntvalueout_46[7] = \<const0> ;
  assign tx_cntvalueout_46[6] = \<const0> ;
  assign tx_cntvalueout_46[5] = \<const0> ;
  assign tx_cntvalueout_46[4] = \<const0> ;
  assign tx_cntvalueout_46[3] = \<const0> ;
  assign tx_cntvalueout_46[2] = \<const0> ;
  assign tx_cntvalueout_46[1] = \<const0> ;
  assign tx_cntvalueout_46[0] = \<const0> ;
  assign tx_cntvalueout_47[8] = \<const0> ;
  assign tx_cntvalueout_47[7] = \<const0> ;
  assign tx_cntvalueout_47[6] = \<const0> ;
  assign tx_cntvalueout_47[5] = \<const0> ;
  assign tx_cntvalueout_47[4] = \<const0> ;
  assign tx_cntvalueout_47[3] = \<const0> ;
  assign tx_cntvalueout_47[2] = \<const0> ;
  assign tx_cntvalueout_47[1] = \<const0> ;
  assign tx_cntvalueout_47[0] = \<const0> ;
  assign tx_cntvalueout_48[8] = \<const0> ;
  assign tx_cntvalueout_48[7] = \<const0> ;
  assign tx_cntvalueout_48[6] = \<const0> ;
  assign tx_cntvalueout_48[5] = \<const0> ;
  assign tx_cntvalueout_48[4] = \<const0> ;
  assign tx_cntvalueout_48[3] = \<const0> ;
  assign tx_cntvalueout_48[2] = \<const0> ;
  assign tx_cntvalueout_48[1] = \<const0> ;
  assign tx_cntvalueout_48[0] = \<const0> ;
  assign tx_cntvalueout_49[8] = \<const0> ;
  assign tx_cntvalueout_49[7] = \<const0> ;
  assign tx_cntvalueout_49[6] = \<const0> ;
  assign tx_cntvalueout_49[5] = \<const0> ;
  assign tx_cntvalueout_49[4] = \<const0> ;
  assign tx_cntvalueout_49[3] = \<const0> ;
  assign tx_cntvalueout_49[2] = \<const0> ;
  assign tx_cntvalueout_49[1] = \<const0> ;
  assign tx_cntvalueout_49[0] = \<const0> ;
  assign tx_cntvalueout_5[8] = \<const0> ;
  assign tx_cntvalueout_5[7] = \<const0> ;
  assign tx_cntvalueout_5[6] = \<const0> ;
  assign tx_cntvalueout_5[5] = \<const0> ;
  assign tx_cntvalueout_5[4] = \<const0> ;
  assign tx_cntvalueout_5[3] = \<const0> ;
  assign tx_cntvalueout_5[2] = \<const0> ;
  assign tx_cntvalueout_5[1] = \<const0> ;
  assign tx_cntvalueout_5[0] = \<const0> ;
  assign tx_cntvalueout_50[8] = \<const0> ;
  assign tx_cntvalueout_50[7] = \<const0> ;
  assign tx_cntvalueout_50[6] = \<const0> ;
  assign tx_cntvalueout_50[5] = \<const0> ;
  assign tx_cntvalueout_50[4] = \<const0> ;
  assign tx_cntvalueout_50[3] = \<const0> ;
  assign tx_cntvalueout_50[2] = \<const0> ;
  assign tx_cntvalueout_50[1] = \<const0> ;
  assign tx_cntvalueout_50[0] = \<const0> ;
  assign tx_cntvalueout_51[8] = \<const0> ;
  assign tx_cntvalueout_51[7] = \<const0> ;
  assign tx_cntvalueout_51[6] = \<const0> ;
  assign tx_cntvalueout_51[5] = \<const0> ;
  assign tx_cntvalueout_51[4] = \<const0> ;
  assign tx_cntvalueout_51[3] = \<const0> ;
  assign tx_cntvalueout_51[2] = \<const0> ;
  assign tx_cntvalueout_51[1] = \<const0> ;
  assign tx_cntvalueout_51[0] = \<const0> ;
  assign tx_cntvalueout_6[8] = \<const0> ;
  assign tx_cntvalueout_6[7] = \<const0> ;
  assign tx_cntvalueout_6[6] = \<const0> ;
  assign tx_cntvalueout_6[5] = \<const0> ;
  assign tx_cntvalueout_6[4] = \<const0> ;
  assign tx_cntvalueout_6[3] = \<const0> ;
  assign tx_cntvalueout_6[2] = \<const0> ;
  assign tx_cntvalueout_6[1] = \<const0> ;
  assign tx_cntvalueout_6[0] = \<const0> ;
  assign tx_cntvalueout_7[8] = \<const0> ;
  assign tx_cntvalueout_7[7] = \<const0> ;
  assign tx_cntvalueout_7[6] = \<const0> ;
  assign tx_cntvalueout_7[5] = \<const0> ;
  assign tx_cntvalueout_7[4] = \<const0> ;
  assign tx_cntvalueout_7[3] = \<const0> ;
  assign tx_cntvalueout_7[2] = \<const0> ;
  assign tx_cntvalueout_7[1] = \<const0> ;
  assign tx_cntvalueout_7[0] = \<const0> ;
  assign tx_cntvalueout_8[8] = \<const0> ;
  assign tx_cntvalueout_8[7] = \<const0> ;
  assign tx_cntvalueout_8[6] = \<const0> ;
  assign tx_cntvalueout_8[5] = \<const0> ;
  assign tx_cntvalueout_8[4] = \<const0> ;
  assign tx_cntvalueout_8[3] = \<const0> ;
  assign tx_cntvalueout_8[2] = \<const0> ;
  assign tx_cntvalueout_8[1] = \<const0> ;
  assign tx_cntvalueout_8[0] = \<const0> ;
  assign tx_cntvalueout_9[8] = \<const0> ;
  assign tx_cntvalueout_9[7] = \<const0> ;
  assign tx_cntvalueout_9[6] = \<const0> ;
  assign tx_cntvalueout_9[5] = \<const0> ;
  assign tx_cntvalueout_9[4] = \<const0> ;
  assign tx_cntvalueout_9[3] = \<const0> ;
  assign tx_cntvalueout_9[2] = \<const0> ;
  assign tx_cntvalueout_9[1] = \<const0> ;
  assign tx_cntvalueout_9[0] = \<const0> ;
  assign vtc_rdy_bsc3 = \<const0> ;
  assign vtc_rdy_bsc4 = \<const0> ;
  assign vtc_rdy_bsc5 = \<const0> ;
  assign vtc_rdy_bsc6 = \<const0> ;
  assign vtc_rdy_bsc7 = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  mipi_dphy_0_mipi_dphy_0_hssio_tx65_hssio_wiz_top top_inst
       (.\GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg (rst_seq_done),
        .bs_rst_dphy_in(bs_rst_dphy_in),
        .clk_txn(clk_txn),
        .clk_txp(clk_txp),
        .data_from_fabric_clk_txp(data_from_fabric_clk_txp),
        .data_from_fabric_data_txp0(data_from_fabric_data_txp0),
        .data_from_fabric_data_txp1(data_from_fabric_data_txp1),
        .data_from_fabric_data_txp2(data_from_fabric_data_txp2),
        .data_from_fabric_data_txp3(data_from_fabric_data_txp3),
        .data_txn0(data_txn0),
        .data_txn1(data_txn1),
        .data_txn2(data_txn2),
        .data_txn3(data_txn3),
        .data_txp0(data_txp0),
        .data_txp1(data_txp1),
        .data_txp2(data_txp2),
        .data_txp3(data_txp3),
        .dly_rdy_bsc0(dly_rdy_bsc0),
        .dly_rdy_bsc1(dly_rdy_bsc1),
        .dly_rdy_bsc2(dly_rdy_bsc2),
        .en_vtc_bsc0(en_vtc_bsc0),
        .en_vtc_bsc1(en_vtc_bsc1),
        .en_vtc_bsc2(en_vtc_bsc2),
        .lptx_i_n(lptx_i_n),
        .lptx_i_p(lptx_i_p),
        .lptx_t(lptx_t),
        .multi_intf_lock_in(multi_intf_lock_in),
        .n0_vtc_rdy_out(vtc_rdy_bsc0),
        .n1_vtc_rdy_out(vtc_rdy_bsc1),
        .n2_vtc_rdy_out(vtc_rdy_bsc2),
        .riu_addr_bg0(riu_addr_bg0),
        .riu_addr_bg1(riu_addr_bg1),
        .riu_clk(riu_clk),
        .riu_nibble_sel_bg0(riu_nibble_sel_bg0),
        .riu_nibble_sel_bg1(riu_nibble_sel_bg1[0]),
        .riu_rd_data_bg0(riu_rd_data_bg0),
        .riu_rd_data_bg0_bs0(riu_rd_data_bg0_bs0),
        .riu_rd_data_bg0_bs1(riu_rd_data_bg0_bs1),
        .riu_rd_data_bg1_bs2(riu_rd_data_bg1_bs2),
        .riu_valid_bg0(riu_valid_bg0),
        .riu_valid_bg0_bs0(riu_valid_bg0_bs0),
        .riu_valid_bg0_bs1(riu_valid_bg0_bs1),
        .riu_valid_bg1_bs2(riu_valid_bg1_bs2),
        .riu_wr_data_bg0(riu_wr_data_bg0),
        .riu_wr_data_bg1(riu_wr_data_bg1),
        .riu_wr_en_bg0(riu_wr_en_bg0),
        .riu_wr_en_bg1(riu_wr_en_bg1),
        .rst(rst),
        .shared_pll0_clkout0_in(shared_pll0_clkout0_in),
        .shared_pll0_clkoutphy_in(shared_pll0_clkoutphy_in),
        .shared_pll0_locked_in(shared_pll0_locked_in),
        .tri_t_0(tri_t_0),
        .tri_t_15(tri_t_15),
        .tri_t_2(tri_t_2),
        .tri_t_4(tri_t_4),
        .tri_t_8(tri_t_8),
        .tri_tbyte3(tri_tbyte3),
        .tri_tbyte4(tri_tbyte4),
        .tri_tbyte5(tri_tbyte5),
        .tri_tbyte6(tri_tbyte6),
        .tri_tbyte7(tri_tbyte7));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_0_hssio_tx65_hssio_wiz_top" *) 
module mipi_dphy_0_mipi_dphy_0_hssio_tx65_hssio_wiz_top
   (data_txp0,
    data_txn0,
    data_txp2,
    data_txn2,
    data_txp1,
    data_txn1,
    data_txp3,
    data_txn3,
    clk_txp,
    clk_txn,
    dly_rdy_bsc0,
    riu_valid_bg0_bs0,
    n0_vtc_rdy_out,
    riu_rd_data_bg0_bs0,
    dly_rdy_bsc1,
    riu_valid_bg0_bs1,
    n1_vtc_rdy_out,
    riu_rd_data_bg0_bs1,
    dly_rdy_bsc2,
    riu_valid_bg1_bs2,
    n2_vtc_rdy_out,
    riu_rd_data_bg1_bs2,
    riu_valid_bg0,
    riu_rd_data_bg0,
    \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg ,
    lptx_i_n,
    lptx_i_p,
    lptx_t,
    tri_t_0,
    data_from_fabric_data_txp0,
    tri_t_2,
    data_from_fabric_data_txp2,
    tri_t_4,
    data_from_fabric_data_txp1,
    tri_t_8,
    data_from_fabric_data_txp3,
    tri_t_15,
    data_from_fabric_clk_txp,
    shared_pll0_clkoutphy_in,
    riu_clk,
    riu_nibble_sel_bg0,
    riu_wr_en_bg0,
    riu_wr_data_bg0,
    riu_addr_bg0,
    riu_nibble_sel_bg1,
    riu_wr_en_bg1,
    riu_wr_data_bg1,
    riu_addr_bg1,
    shared_pll0_locked_in,
    rst,
    bs_rst_dphy_in,
    multi_intf_lock_in,
    shared_pll0_clkout0_in,
    tri_tbyte3,
    tri_tbyte4,
    tri_tbyte5,
    tri_tbyte6,
    tri_tbyte7,
    en_vtc_bsc0,
    en_vtc_bsc1,
    en_vtc_bsc2);
  output data_txp0;
  output data_txn0;
  output data_txp2;
  output data_txn2;
  output data_txp1;
  output data_txn1;
  output data_txp3;
  output data_txn3;
  output clk_txp;
  output clk_txn;
  output dly_rdy_bsc0;
  output riu_valid_bg0_bs0;
  output n0_vtc_rdy_out;
  output [15:0]riu_rd_data_bg0_bs0;
  output dly_rdy_bsc1;
  output riu_valid_bg0_bs1;
  output n1_vtc_rdy_out;
  output [15:0]riu_rd_data_bg0_bs1;
  output dly_rdy_bsc2;
  output riu_valid_bg1_bs2;
  output n2_vtc_rdy_out;
  output [15:0]riu_rd_data_bg1_bs2;
  output riu_valid_bg0;
  output [15:0]riu_rd_data_bg0;
  output \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg ;
  input [4:0]lptx_i_n;
  input [4:0]lptx_i_p;
  input [4:0]lptx_t;
  input tri_t_0;
  input [7:0]data_from_fabric_data_txp0;
  input tri_t_2;
  input [7:0]data_from_fabric_data_txp2;
  input tri_t_4;
  input [7:0]data_from_fabric_data_txp1;
  input tri_t_8;
  input [7:0]data_from_fabric_data_txp3;
  input tri_t_15;
  input [7:0]data_from_fabric_clk_txp;
  input shared_pll0_clkoutphy_in;
  input riu_clk;
  input [1:0]riu_nibble_sel_bg0;
  input riu_wr_en_bg0;
  input [15:0]riu_wr_data_bg0;
  input [5:0]riu_addr_bg0;
  input [0:0]riu_nibble_sel_bg1;
  input riu_wr_en_bg1;
  input [15:0]riu_wr_data_bg1;
  input [5:0]riu_addr_bg1;
  input shared_pll0_locked_in;
  input rst;
  input bs_rst_dphy_in;
  input multi_intf_lock_in;
  input shared_pll0_clkout0_in;
  input [3:0]tri_tbyte3;
  input [3:0]tri_tbyte4;
  input [3:0]tri_tbyte5;
  input [3:0]tri_tbyte6;
  input [3:0]tri_tbyte7;
  input en_vtc_bsc0;
  input en_vtc_bsc1;
  input en_vtc_bsc2;

  wire all_bsc_dly_rdy_in;
  wire bs_ctrl_top_inst_n_0;
  wire bs_ctrl_top_inst_n_4;
  wire bs_ctrl_top_inst_n_9;
  wire [15:0]bs_rst;
  wire bs_rst_dphy_in;
  wire [15:0]bs_to_buf_data;
  wire [15:0]bs_to_buf_t;
  wire bsctrl_rst;
  wire clk_txn;
  wire clk_txp;
  wire core_rdy;
  (* RTL_KEEP = "true" *) wire [51:0]core_rdy_r;
  wire [7:0]data_from_fabric_clk_txp;
  wire [7:0]data_from_fabric_data_txp0;
  wire [7:0]data_from_fabric_data_txp1;
  wire [7:0]data_from_fabric_data_txp2;
  wire [7:0]data_from_fabric_data_txp3;
  wire data_txn0;
  wire data_txn1;
  wire data_txn2;
  wire data_txn3;
  wire data_txp0;
  wire data_txp1;
  wire data_txp2;
  wire data_txp3;
  wire dly_rdy_bsc0;
  wire dly_rdy_bsc1;
  wire dly_rdy_bsc2;
  wire en_vtc_bsc0;
  wire en_vtc_bsc1;
  wire en_vtc_bsc2;
  wire [4:0]lptx_i_n;
  wire [4:0]lptx_i_p;
  wire [4:0]lptx_t;
  wire multi_intf_lock_in;
  wire n0_en_vtc;
  wire [39:0]n0_rx_bit_ctrl_in0;
  wire [39:0]n0_rx_bit_ctrl_in2;
  wire [39:0]n0_rx_bit_ctrl_in4;
  wire [39:0]n0_rx_bit_ctrl_out0;
  wire [39:0]n0_rx_bit_ctrl_out2;
  wire [39:0]n0_rx_bit_ctrl_out4;
  (* RTL_KEEP = "true" *) wire [3:0]n0_tbyte_d;
  wire [39:0]n0_tx_bit_ctrl_in0;
  wire [39:0]n0_tx_bit_ctrl_in2;
  wire [39:0]n0_tx_bit_ctrl_in4;
  wire [39:0]n0_tx_bit_ctrl_out0;
  wire [39:0]n0_tx_bit_ctrl_out2;
  wire [39:0]n0_tx_bit_ctrl_out4;
  wire n0_vtc_rdy_out;
  wire n1_en_vtc;
  wire [39:0]n1_rx_bit_ctrl_in2;
  wire [39:0]n1_rx_bit_ctrl_out2;
  (* RTL_KEEP = "true" *) wire [3:0]n1_tbyte_d;
  wire [39:0]n1_tx_bit_ctrl_in2;
  wire [39:0]n1_tx_bit_ctrl_out2;
  wire n1_vtc_rdy_out;
  wire n2_en_vtc;
  wire [39:0]n2_rx_bit_ctrl_in2;
  wire [39:0]n2_rx_bit_ctrl_out2;
  (* RTL_KEEP = "true" *) wire [3:0]n2_tbyte_d;
  wire [39:0]n2_tx_bit_ctrl_in2;
  wire [39:0]n2_tx_bit_ctrl_out2;
  wire n2_vtc_rdy_out;
  (* RTL_KEEP = "true" *) wire [3:0]n3_tbyte_d;
  (* RTL_KEEP = "true" *) wire [3:0]n4_tbyte_d;
  (* RTL_KEEP = "true" *) wire [3:0]n5_tbyte_d;
  (* RTL_KEEP = "true" *) wire [3:0]n6_tbyte_d;
  (* RTL_KEEP = "true" *) wire [3:0]n7_tbyte_d;
  wire [5:0]riu_addr_bg0;
  wire [5:0]riu_addr_bg1;
  wire riu_clk;
  wire [1:0]riu_nibble_sel_bg0;
  wire [0:0]riu_nibble_sel_bg1;
  wire [15:0]riu_rd_data_bg0;
  wire [15:0]riu_rd_data_bg0_bs0;
  wire [15:0]riu_rd_data_bg0_bs1;
  wire [15:0]riu_rd_data_bg1_bs2;
  wire riu_valid_bg0;
  wire riu_valid_bg0_bs0;
  wire riu_valid_bg0_bs1;
  wire riu_valid_bg1_bs2;
  wire [15:0]riu_wr_data_bg0;
  wire [15:0]riu_wr_data_bg1;
  wire riu_wr_en_bg0;
  wire riu_wr_en_bg1;
  wire rst;
  wire [15:0]rst_dly;
  wire [7:7]\rst_scheme_inst/hssio_state ;
  (* RTL_KEEP = "true" *) wire rst_seq_done1;
  (* RTL_KEEP = "true" *) wire rst_seq_done2;
  (* RTL_KEEP = "true" *) wire rst_seq_done3;
  wire shared_pll0_clkout0_in;
  wire shared_pll0_clkoutphy_in;
  wire shared_pll0_locked_in;
  wire sync_cell_rst_seq_pll0_inst_n_0;
  wire tri_t_0;
  wire tri_t_15;
  wire tri_t_2;
  wire tri_t_4;
  wire tri_t_8;
  wire [3:0]tri_tbyte3;
  wire [3:0]tri_tbyte4;
  wire [3:0]tri_tbyte5;
  wire [3:0]tri_tbyte6;
  wire [3:0]tri_tbyte7;

  assign \GEN_RIU_NOT_FROM_PLL.rst_seq_done_reg  = rst_seq_done3;
  FDRE \CORE_RDY_GEN[0].core_rdy_r_reg[0] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[10].core_rdy_r_reg[10] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[10]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[11].core_rdy_r_reg[11] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[11]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[12].core_rdy_r_reg[12] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[12]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[13].core_rdy_r_reg[13] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[13]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[14].core_rdy_r_reg[14] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[14]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[15].core_rdy_r_reg[15] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[15]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[16].core_rdy_r_reg[16] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[16]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[17].core_rdy_r_reg[17] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[17]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[18].core_rdy_r_reg[18] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[18]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[19].core_rdy_r_reg[19] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[19]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[1].core_rdy_r_reg[1] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[20].core_rdy_r_reg[20] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[20]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[21].core_rdy_r_reg[21] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[21]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[22].core_rdy_r_reg[22] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[22]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[23].core_rdy_r_reg[23] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[23]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[24].core_rdy_r_reg[24] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[24]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[25].core_rdy_r_reg[25] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[25]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[26].core_rdy_r_reg[26] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[26]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[27].core_rdy_r_reg[27] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[27]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[28].core_rdy_r_reg[28] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[28]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[29].core_rdy_r_reg[29] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[29]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[2].core_rdy_r_reg[2] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[2]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[30].core_rdy_r_reg[30] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[30]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[31].core_rdy_r_reg[31] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[31]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[32].core_rdy_r_reg[32] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[32]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[33].core_rdy_r_reg[33] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[33]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[34].core_rdy_r_reg[34] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[34]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[35].core_rdy_r_reg[35] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[35]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[36].core_rdy_r_reg[36] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[36]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[37].core_rdy_r_reg[37] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[37]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[38].core_rdy_r_reg[38] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[38]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[39].core_rdy_r_reg[39] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[39]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[3].core_rdy_r_reg[3] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[3]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[40].core_rdy_r_reg[40] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[40]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[41].core_rdy_r_reg[41] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[41]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[42].core_rdy_r_reg[42] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[42]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[43].core_rdy_r_reg[43] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[43]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[44].core_rdy_r_reg[44] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[44]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[45].core_rdy_r_reg[45] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[45]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[46].core_rdy_r_reg[46] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[46]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[47].core_rdy_r_reg[47] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[47]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[48].core_rdy_r_reg[48] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[48]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[49].core_rdy_r_reg[49] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[49]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[4].core_rdy_r_reg[4] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[4]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[50].core_rdy_r_reg[50] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[50]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[51].core_rdy_r_reg[51] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[51]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[5].core_rdy_r_reg[5] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[5]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[6].core_rdy_r_reg[6] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[6]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[7].core_rdy_r_reg[7] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[7]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[8].core_rdy_r_reg[8] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[8]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE \CORE_RDY_GEN[9].core_rdy_r_reg[9] 
       (.C(riu_clk),
        .CE(1'b1),
        .D(core_rdy),
        .Q(core_rdy_r[9]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB0_TBYTE.n0_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n0_tbyte_d[0]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB0_TBYTE.n0_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n0_tbyte_d[1]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB0_TBYTE.n0_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n0_tbyte_d[2]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB0_TBYTE.n0_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n0_tbyte_d[3]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB1_TBYTE.n1_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n1_tbyte_d[0]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB1_TBYTE.n1_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n1_tbyte_d[1]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB1_TBYTE.n1_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n1_tbyte_d[2]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB1_TBYTE.n1_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n1_tbyte_d[3]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB2_TBYTE.n2_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n2_tbyte_d[0]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB2_TBYTE.n2_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n2_tbyte_d[1]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB2_TBYTE.n2_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n2_tbyte_d[2]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB2_TBYTE.n2_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(1'b1),
        .Q(n2_tbyte_d[3]),
        .R(sync_cell_rst_seq_pll0_inst_n_0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB3_TBYTE.n3_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte3[0]),
        .Q(n3_tbyte_d[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB3_TBYTE.n3_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte3[1]),
        .Q(n3_tbyte_d[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB3_TBYTE.n3_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte3[2]),
        .Q(n3_tbyte_d[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB3_TBYTE.n3_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte3[3]),
        .Q(n3_tbyte_d[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB4_TBYTE.n4_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte4[0]),
        .Q(n4_tbyte_d[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB4_TBYTE.n4_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte4[1]),
        .Q(n4_tbyte_d[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB4_TBYTE.n4_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte4[2]),
        .Q(n4_tbyte_d[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB4_TBYTE.n4_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte4[3]),
        .Q(n4_tbyte_d[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB5_TBYTE.n5_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte5[0]),
        .Q(n5_tbyte_d[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB5_TBYTE.n5_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte5[1]),
        .Q(n5_tbyte_d[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB5_TBYTE.n5_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte5[2]),
        .Q(n5_tbyte_d[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB5_TBYTE.n5_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte5[3]),
        .Q(n5_tbyte_d[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB6_TBYTE.n6_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte6[0]),
        .Q(n6_tbyte_d[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB6_TBYTE.n6_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte6[1]),
        .Q(n6_tbyte_d[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB6_TBYTE.n6_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte6[2]),
        .Q(n6_tbyte_d[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB6_TBYTE.n6_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte6[3]),
        .Q(n6_tbyte_d[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB7_TBYTE.n7_tbyte_d_reg[0] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte7[0]),
        .Q(n7_tbyte_d[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB7_TBYTE.n7_tbyte_d_reg[1] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte7[1]),
        .Q(n7_tbyte_d[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB7_TBYTE.n7_tbyte_d_reg[2] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte7[2]),
        .Q(n7_tbyte_d[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \GEN_NIB7_TBYTE.n7_tbyte_d_reg[3] 
       (.C(shared_pll0_clkout0_in),
        .CE(1'b1),
        .D(tri_tbyte7[3]),
        .Q(n7_tbyte_d[3]),
        .R(1'b0));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_bs_ctrl_top bs_ctrl_top_inst
       (.\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7] (bs_ctrl_top_inst_n_0),
        .\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[7]_0 (bs_ctrl_top_inst_n_4),
        .Q(\rst_scheme_inst/hssio_state ),
        .bsctrl_rst(bsctrl_rst),
        .clkoutphy_in(bs_ctrl_top_inst_n_9),
        .core_rdy(core_rdy),
        .dly_rdy_bsc0(dly_rdy_bsc0),
        .dly_rdy_bsc1(dly_rdy_bsc1),
        .dly_rdy_bsc2(dly_rdy_bsc2),
        .in0(all_bsc_dly_rdy_in),
        .n0_en_vtc_in(n0_en_vtc),
        .n0_rx_bit_ctrl_out0(n0_rx_bit_ctrl_out0),
        .n0_rx_bit_ctrl_out2(n0_rx_bit_ctrl_out2),
        .n0_rx_bit_ctrl_out4(n0_rx_bit_ctrl_out4),
        .n0_tbyte_in(n0_tbyte_d),
        .n0_tx_bit_ctrl_out0(n0_tx_bit_ctrl_out0),
        .n0_tx_bit_ctrl_out2(n0_tx_bit_ctrl_out2),
        .n0_tx_bit_ctrl_out4(n0_tx_bit_ctrl_out4),
        .n0_vtc_rdy_out(n0_vtc_rdy_out),
        .n1_en_vtc_in(n1_en_vtc),
        .n1_rx_bit_ctrl_out2(n1_rx_bit_ctrl_out2),
        .n1_tbyte_in(n1_tbyte_d),
        .n1_tx_bit_ctrl_out2(n1_tx_bit_ctrl_out2),
        .n1_vtc_rdy_out(n1_vtc_rdy_out),
        .n2_en_vtc_in(n2_en_vtc),
        .n2_rx_bit_ctrl_out2(n2_rx_bit_ctrl_out2),
        .n2_tbyte_in(n2_tbyte_d),
        .n2_tx_bit_ctrl_out2(n2_tx_bit_ctrl_out2),
        .n2_vtc_rdy_out(n2_vtc_rdy_out),
        .riu_addr_bg0(riu_addr_bg0),
        .riu_addr_bg1(riu_addr_bg1),
        .riu_clk(riu_clk),
        .riu_nibble_sel_bg0(riu_nibble_sel_bg0),
        .riu_nibble_sel_bg1(riu_nibble_sel_bg1),
        .riu_rd_data_bg0(riu_rd_data_bg0),
        .riu_rd_data_bg0_bs0(riu_rd_data_bg0_bs0),
        .riu_rd_data_bg0_bs1(riu_rd_data_bg0_bs1),
        .riu_rd_data_bg1_bs2(riu_rd_data_bg1_bs2),
        .riu_valid_bg0(riu_valid_bg0),
        .riu_valid_bg0_bs0(riu_valid_bg0_bs0),
        .riu_valid_bg0_bs1(riu_valid_bg0_bs1),
        .riu_valid_bg1_bs2(riu_valid_bg1_bs2),
        .riu_wr_data_bg0(riu_wr_data_bg0),
        .riu_wr_data_bg1(riu_wr_data_bg1),
        .riu_wr_en_bg0(riu_wr_en_bg0),
        .riu_wr_en_bg1(riu_wr_en_bg1),
        .shared_pll0_clkoutphy_in(shared_pll0_clkoutphy_in),
        .tx_bs0_rx_bit_ctrl_out(n0_rx_bit_ctrl_in0),
        .tx_bs0_tx_bit_ctrl_out(n0_tx_bit_ctrl_in0),
        .tx_bs15_rx_bit_ctrl_out(n2_rx_bit_ctrl_in2),
        .tx_bs15_tx_bit_ctrl_out(n2_tx_bit_ctrl_in2),
        .tx_bs2_rx_bit_ctrl_out(n0_rx_bit_ctrl_in2),
        .tx_bs2_tx_bit_ctrl_out(n0_tx_bit_ctrl_in2),
        .tx_bs4_rx_bit_ctrl_out(n0_rx_bit_ctrl_in4),
        .tx_bs4_tx_bit_ctrl_out(n0_tx_bit_ctrl_in4),
        .tx_bs8_rx_bit_ctrl_out(n1_rx_bit_ctrl_in2),
        .tx_bs8_tx_bit_ctrl_out(n1_tx_bit_ctrl_in2));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_bs_top bs_top_inst
       (.bs_to_buf_data_in({bs_to_buf_data[15],bs_to_buf_data[8],bs_to_buf_data[4],bs_to_buf_data[2],bs_to_buf_data[0]}),
        .data_from_fabric_clk_txp(data_from_fabric_clk_txp),
        .data_from_fabric_data_txp0(data_from_fabric_data_txp0),
        .data_from_fabric_data_txp1(data_from_fabric_data_txp1),
        .data_from_fabric_data_txp2(data_from_fabric_data_txp2),
        .data_from_fabric_data_txp3(data_from_fabric_data_txp3),
        .hs_tx_t({bs_to_buf_t[15],bs_to_buf_t[8],bs_to_buf_t[4],bs_to_buf_t[2],bs_to_buf_t[0]}),
        .tri_t_0(tri_t_0),
        .tri_t_15(tri_t_15),
        .tri_t_2(tri_t_2),
        .tri_t_4(tri_t_4),
        .tri_t_8(tri_t_8),
        .tx_bs0_rx_bit_ctrl_in(n0_rx_bit_ctrl_out0),
        .tx_bs0_rx_bit_ctrl_out(n0_rx_bit_ctrl_in0),
        .tx_bs0_tx_bit_ctrl_in(n0_tx_bit_ctrl_out0),
        .tx_bs0_tx_bit_ctrl_out(n0_tx_bit_ctrl_in0),
        .tx_bs15_rx_bit_ctrl_in(n2_rx_bit_ctrl_out2),
        .tx_bs15_rx_bit_ctrl_out(n2_rx_bit_ctrl_in2),
        .tx_bs15_tx_bit_ctrl_in(n2_tx_bit_ctrl_out2),
        .tx_bs15_tx_bit_ctrl_out(n2_tx_bit_ctrl_in2),
        .tx_bs2_rx_bit_ctrl_in(n0_rx_bit_ctrl_out2),
        .tx_bs2_rx_bit_ctrl_out(n0_rx_bit_ctrl_in2),
        .tx_bs2_tx_bit_ctrl_in(n0_tx_bit_ctrl_out2),
        .tx_bs2_tx_bit_ctrl_out(n0_tx_bit_ctrl_in2),
        .tx_bs4_rx_bit_ctrl_in(n0_rx_bit_ctrl_out4),
        .tx_bs4_rx_bit_ctrl_out(n0_rx_bit_ctrl_in4),
        .tx_bs4_tx_bit_ctrl_in(n0_tx_bit_ctrl_out4),
        .tx_bs4_tx_bit_ctrl_out(n0_tx_bit_ctrl_in4),
        .tx_bs8_rx_bit_ctrl_in(n1_rx_bit_ctrl_out2),
        .tx_bs8_rx_bit_ctrl_out(n1_rx_bit_ctrl_in2),
        .tx_bs8_tx_bit_ctrl_in(n1_tx_bit_ctrl_out2),
        .tx_bs8_tx_bit_ctrl_out(n1_tx_bit_ctrl_in2),
        .tx_bs_rst_dly_in({rst_dly[15],rst_dly[8],rst_dly[4],rst_dly[2],rst_dly[0]}),
        .tx_bs_rst_in({bs_rst[15],bs_rst[8],bs_rst[4],bs_rst[2],bs_rst[0]}));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_clk_rst_top clk_rst_top_inst
       (.\GEN_RIU_NOT_FROM_PLL.hssio_state_reg[8] (bs_ctrl_top_inst_n_9),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg (bs_ctrl_top_inst_n_0),
        .\GEN_RIU_NOT_FROM_PLL.timeout_cntr_rst_reg_0 (bs_ctrl_top_inst_n_4),
        .Q(\rst_scheme_inst/hssio_state ),
        .bs_rst_dphy_in(bs_rst_dphy_in),
        .\bs_rst_int_r_reg[15] ({bs_rst[15],bs_rst[8],bs_rst[4],bs_rst[2],bs_rst[0]}),
        .bsctrl_rst(bsctrl_rst),
        .en_vtc_bsc0(en_vtc_bsc0),
        .en_vtc_bsc1(en_vtc_bsc1),
        .en_vtc_bsc2(en_vtc_bsc2),
        .in0(all_bsc_dly_rdy_in),
        .multi_intf_lock_in(multi_intf_lock_in),
        .n0_en_vtc_in(n0_en_vtc),
        .n0_vtc_rdy_out(n0_vtc_rdy_out),
        .n1_en_vtc_in(n1_en_vtc),
        .n1_vtc_rdy_out(n1_vtc_rdy_out),
        .n2_en_vtc_in(n2_en_vtc),
        .n2_vtc_rdy_out(n2_vtc_rdy_out),
        .out({rst_dly[15],rst_dly[8],rst_dly[4],rst_dly[2],rst_dly[0]}),
        .riu_clk(riu_clk),
        .rst(rst),
        .rst_seq_done1(rst_seq_done3),
        .shared_pll0_clkout0_in(shared_pll0_clkout0_in),
        .shared_pll0_locked_in(shared_pll0_locked_in));
  mipi_dphy_0_mipi_dphy_0_hssio_tx65_mipi_iobuf_tx iobuf_top_inst
       (.bs_to_buf_data_in({bs_to_buf_data[15],bs_to_buf_data[8],bs_to_buf_data[4],bs_to_buf_data[2],bs_to_buf_data[0]}),
        .data_to_pins({clk_txn,clk_txp,data_txn3,data_txp3,data_txn1,data_txp1,data_txn2,data_txp2,data_txn0,data_txp0}),
        .hs_tx_t({bs_to_buf_t[15],bs_to_buf_t[8],bs_to_buf_t[4],bs_to_buf_t[2],bs_to_buf_t[0]}),
        .lptx_i_n(lptx_i_n),
        .lptx_i_p(lptx_i_p),
        .lptx_t(lptx_t));
  LUT1 #(
    .INIT(2'h2)) 
    rst_seq_done1_inst
       (.I0(rst_seq_done3),
        .O(rst_seq_done1));
  LUT1 #(
    .INIT(2'h2)) 
    rst_seq_done2_inst
       (.I0(rst_seq_done3),
        .O(rst_seq_done2));
  mipi_dphy_0_high_speed_selectio_wiz_v3_5_1_sync_cell sync_cell_rst_seq_pll0_inst
       (.SR(sync_cell_rst_seq_pll0_inst_n_0),
        .out(rst_seq_done1),
        .shared_pll0_clkout0_in(shared_pll0_clkout0_in));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_0_hssio_tx65_mipi_iobuf_tx" *) 
module mipi_dphy_0_mipi_dphy_0_hssio_tx65_mipi_iobuf_tx
   (data_to_pins,
    bs_to_buf_data_in,
    hs_tx_t,
    lptx_i_n,
    lptx_i_p,
    lptx_t);
  output [9:0]data_to_pins;
  input [4:0]bs_to_buf_data_in;
  input [4:0]hs_tx_t;
  input [4:0]lptx_i_n;
  input [4:0]lptx_i_p;
  input [4:0]lptx_t;

  wire [4:0]bs_to_buf_data_in;
  wire [9:0]data_to_pins;
  wire [4:0]hs_tx_t;
  wire [4:0]lptx_i_n;
  wire [4:0]lptx_i_p;
  wire [4:0]lptx_t;

  (* BOX_TYPE = "PRIMITIVE" *) 
  OBUFDS_DPHY \io_gen[0].obufds_inst 
       (.HSTX_I(bs_to_buf_data_in[0]),
        .HSTX_T(hs_tx_t[0]),
        .LPTX_I_N(lptx_i_n[0]),
        .LPTX_I_P(lptx_i_p[0]),
        .LPTX_T(lptx_t[0]),
        .O(data_to_pins[0]),
        .OB(data_to_pins[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OBUFDS_DPHY \io_gen[15].obufds_inst 
       (.HSTX_I(bs_to_buf_data_in[4]),
        .HSTX_T(hs_tx_t[4]),
        .LPTX_I_N(lptx_i_n[4]),
        .LPTX_I_P(lptx_i_p[4]),
        .LPTX_T(lptx_t[4]),
        .O(data_to_pins[8]),
        .OB(data_to_pins[9]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OBUFDS_DPHY \io_gen[2].obufds_inst 
       (.HSTX_I(bs_to_buf_data_in[1]),
        .HSTX_T(hs_tx_t[1]),
        .LPTX_I_N(lptx_i_n[1]),
        .LPTX_I_P(lptx_i_p[1]),
        .LPTX_T(lptx_t[1]),
        .O(data_to_pins[2]),
        .OB(data_to_pins[3]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OBUFDS_DPHY \io_gen[4].obufds_inst 
       (.HSTX_I(bs_to_buf_data_in[2]),
        .HSTX_T(hs_tx_t[2]),
        .LPTX_I_N(lptx_i_n[2]),
        .LPTX_I_P(lptx_i_p[2]),
        .LPTX_T(lptx_t[2]),
        .O(data_to_pins[4]),
        .OB(data_to_pins[5]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OBUFDS_DPHY \io_gen[8].obufds_inst 
       (.HSTX_I(bs_to_buf_data_in[3]),
        .HSTX_T(hs_tx_t[3]),
        .LPTX_I_N(lptx_i_n[3]),
        .LPTX_I_P(lptx_i_p[3]),
        .LPTX_T(lptx_t[3]),
        .O(data_to_pins[6]),
        .OB(data_to_pins[7]));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_clk_lane" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_clk_lane
   (out,
    s_level_out_d3_reg,
    s_level_out_d2_reg,
    tx_cl_en_lp_tst,
    s_level_out_d3_reg_0,
    cl_txclkactivehs,
    cl_stopstate,
    tx_cl_lp_cp,
    tx_cl_lp_cn,
    cl_init_done_coreclk_i,
    cl_txclkactivehs_i,
    cl_ulpsactivenot,
    tx_hs_clk_p,
    \cl_tx_state_reg[1]_0 ,
    tx_cl_en_hs_tst,
    cl_txclkactivehs_reg_0,
    core_rst,
    cl_enable,
    core_clk,
    cl_txrequesths,
    cl_txulpsclk,
    cl_txulpsexit,
    start_clkzero_byteclk_sync_r_reg_0,
    tx_div4_clk,
    \cl_tx_state_reg[3]_0 ,
    \post_count_reg[31]_0 ,
    system_rst,
    \cl_tx_state_reg[0]_0 ,
    start_clkpost_r_reg_0,
    start_clkpost_r_reg_1,
    hs_active_all,
    start_clkpost_r_reg_2,
    dl_hs_exit_done_i);
  output out;
  output s_level_out_d3_reg;
  output s_level_out_d2_reg;
  output tx_cl_en_lp_tst;
  output s_level_out_d3_reg_0;
  output cl_txclkactivehs;
  output cl_stopstate;
  output tx_cl_lp_cp;
  output tx_cl_lp_cn;
  output cl_init_done_coreclk_i;
  output cl_txclkactivehs_i;
  output cl_ulpsactivenot;
  output [0:0]tx_hs_clk_p;
  output \cl_tx_state_reg[1]_0 ;
  output tx_cl_en_hs_tst;
  output cl_txclkactivehs_reg_0;
  input core_rst;
  input cl_enable;
  input core_clk;
  input cl_txrequesths;
  input cl_txulpsclk;
  input cl_txulpsexit;
  input start_clkzero_byteclk_sync_r_reg_0;
  input tx_div4_clk;
  input \cl_tx_state_reg[3]_0 ;
  input \post_count_reg[31]_0 ;
  input system_rst;
  input \cl_tx_state_reg[0]_0 ;
  input start_clkpost_r_reg_0;
  input start_clkpost_r_reg_1;
  input hs_active_all;
  input start_clkpost_r_reg_2;
  input [3:0]dl_hs_exit_done_i;

  wire \CLK_GEN_BLK4.tx_cl_hs_cp[6]_i_1_n_0 ;
  wire cl_enable;
  wire cl_enable_sync_i_n_1;
  wire cl_init_done_coreclk_i;
  (* DONT_TOUCH *) wire cl_status_reg_bit_1;
  wire cl_status_reg_bit_1_i_1_n_0;
  (* DONT_TOUCH *) wire cl_status_reg_bit_2;
  (* DONT_TOUCH *) wire cl_status_reg_bit_4;
  wire cl_stopstate;
  wire cl_stopstate_i_3_n_0;
  wire cl_stopstate_i_4_n_0;
  wire cl_stopstate_i_8_n_0;
  wire cl_tx_state;
  wire cl_tx_state1;
  wire \cl_tx_state[0]_i_5_n_0 ;
  wire \cl_tx_state[3]_i_14_n_0 ;
  wire \cl_tx_state[3]_i_6_n_0 ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg[1]_0 ;
  wire \cl_tx_state_reg[3]_0 ;
  wire \cl_tx_state_reg_n_0_[0] ;
  wire \cl_tx_state_reg_n_0_[1] ;
  wire \cl_tx_state_reg_n_0_[2] ;
  wire \cl_tx_state_reg_n_0_[3] ;
  wire cl_txclkactivehs;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg_0;
  wire cl_txrequesths;
  wire cl_txrequesths_coreclk_sync;
  wire cl_txrequesths_coreclk_sync_i_n_1;
  wire cl_txrequesths_coreclk_sync_i_n_10;
  wire cl_txrequesths_coreclk_sync_i_n_11;
  wire cl_txrequesths_coreclk_sync_i_n_12;
  wire cl_txrequesths_coreclk_sync_i_n_13;
  wire cl_txrequesths_coreclk_sync_i_n_14;
  wire cl_txrequesths_coreclk_sync_i_n_15;
  wire cl_txrequesths_coreclk_sync_i_n_16;
  wire cl_txrequesths_coreclk_sync_i_n_2;
  wire cl_txrequesths_coreclk_sync_i_n_3;
  wire cl_txrequesths_coreclk_sync_i_n_4;
  wire cl_txrequesths_coreclk_sync_i_n_6;
  wire cl_txrequesths_coreclk_sync_i_n_7;
  wire cl_txrequesths_coreclk_sync_i_n_8;
  wire cl_txrequesths_coreclk_sync_i_n_9;
  wire cl_txrequesths_negedge_r;
  wire cl_txrequesths_negedge_sync_i_n_1;
  wire cl_txrequesths_negedge_sync_i_n_2;
  wire cl_txrequesths_negedge_sync_i_n_3;
  wire cl_txrequesths_negedge_sync_i_n_4;
  wire cl_txrequesths_negedge_sync_i_n_5;
  wire cl_txrequesths_r;
  wire cl_txulpsclk;
  wire cl_txulpsclk_sync;
  wire cl_txulpsclk_sync_i_n_1;
  wire cl_txulpsclk_sync_i_n_2;
  wire cl_txulpsclk_sync_i_n_3;
  wire cl_txulpsclk_sync_i_n_4;
  wire cl_txulpsclk_sync_i_n_5;
  wire cl_txulpsclk_sync_i_n_6;
  wire cl_txulpsclk_sync_i_n_7;
  wire cl_txulpsclk_sync_i_n_8;
  wire cl_txulpsclk_sync_i_n_9;
  wire cl_txulpsexit;
  wire cl_txulpsexit_sync;
  wire cl_txulpsexit_sync_i_n_1;
  wire cl_txulpsexit_sync_i_n_2;
  wire cl_txulpsexit_sync_i_n_3;
  wire cl_ulpsactivenot;
  wire cl_ulpsactivenot_i_4_n_0;
  wire clk_pre_cnt;
  wire \clk_pre_cnt[0]_i_10_n_0 ;
  wire \clk_pre_cnt[0]_i_11_n_0 ;
  wire \clk_pre_cnt[0]_i_12_n_0 ;
  wire \clk_pre_cnt[0]_i_1_n_0 ;
  wire \clk_pre_cnt[0]_i_4_n_0 ;
  wire \clk_pre_cnt[0]_i_5_n_0 ;
  wire \clk_pre_cnt[0]_i_6_n_0 ;
  wire \clk_pre_cnt[0]_i_7_n_0 ;
  wire \clk_pre_cnt[0]_i_8_n_0 ;
  wire \clk_pre_cnt[0]_i_9_n_0 ;
  wire [31:0]clk_pre_cnt_reg;
  wire \clk_pre_cnt_reg[0]_i_3_n_0 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_1 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_10 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_11 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_12 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_13 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_14 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_15 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_2 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_3 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_4 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_5 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_6 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_7 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_8 ;
  wire \clk_pre_cnt_reg[0]_i_3_n_9 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_10 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_11 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_12 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_13 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_14 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_15 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_8 ;
  wire \clk_pre_cnt_reg[16]_i_1_n_9 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_10 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_11 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_12 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_13 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_14 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_15 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_8 ;
  wire \clk_pre_cnt_reg[24]_i_1_n_9 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_0 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_1 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_10 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_11 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_12 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_13 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_14 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_15 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_2 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_3 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_4 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_5 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_6 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_7 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_8 ;
  wire \clk_pre_cnt_reg[8]_i_1_n_9 ;
  wire core_clk;
  wire core_rst;
  wire [3:0]dl_hs_exit_done_i;
  wire en_cal_seq_xmit_byteclk_sync;
  wire en_cal_seq_xmit_byteclk_sync_i_n_1;
  wire en_lp_01_cnt_reg_n_0;
  wire en_lp_10_cnt_reg_n_0;
  wire en_lp_11_cnt_i_2_n_0;
  wire en_lp_11_cnt_reg_n_0;
  wire hs_active_all;
  wire hs_clk_state_byteclk_sync_i_n_0;
  wire hs_clk_state_r_i_6_n_0;
  wire hs_clk_state_r_reg_n_0;
  wire \init_count[0]_i_1_n_0 ;
  wire \init_count[0]_i_2_n_0 ;
  wire \init_count[0]_i_4_n_0 ;
  wire [20:0]init_count_reg;
  wire \init_count_reg[0]_i_3_n_0 ;
  wire \init_count_reg[0]_i_3_n_1 ;
  wire \init_count_reg[0]_i_3_n_10 ;
  wire \init_count_reg[0]_i_3_n_11 ;
  wire \init_count_reg[0]_i_3_n_12 ;
  wire \init_count_reg[0]_i_3_n_13 ;
  wire \init_count_reg[0]_i_3_n_14 ;
  wire \init_count_reg[0]_i_3_n_15 ;
  wire \init_count_reg[0]_i_3_n_2 ;
  wire \init_count_reg[0]_i_3_n_3 ;
  wire \init_count_reg[0]_i_3_n_4 ;
  wire \init_count_reg[0]_i_3_n_5 ;
  wire \init_count_reg[0]_i_3_n_6 ;
  wire \init_count_reg[0]_i_3_n_7 ;
  wire \init_count_reg[0]_i_3_n_8 ;
  wire \init_count_reg[0]_i_3_n_9 ;
  wire \init_count_reg[16]_i_1_n_11 ;
  wire \init_count_reg[16]_i_1_n_12 ;
  wire \init_count_reg[16]_i_1_n_13 ;
  wire \init_count_reg[16]_i_1_n_14 ;
  wire \init_count_reg[16]_i_1_n_15 ;
  wire \init_count_reg[16]_i_1_n_4 ;
  wire \init_count_reg[16]_i_1_n_5 ;
  wire \init_count_reg[16]_i_1_n_6 ;
  wire \init_count_reg[16]_i_1_n_7 ;
  wire \init_count_reg[8]_i_1_n_0 ;
  wire \init_count_reg[8]_i_1_n_1 ;
  wire \init_count_reg[8]_i_1_n_10 ;
  wire \init_count_reg[8]_i_1_n_11 ;
  wire \init_count_reg[8]_i_1_n_12 ;
  wire \init_count_reg[8]_i_1_n_13 ;
  wire \init_count_reg[8]_i_1_n_14 ;
  wire \init_count_reg[8]_i_1_n_15 ;
  wire \init_count_reg[8]_i_1_n_2 ;
  wire \init_count_reg[8]_i_1_n_3 ;
  wire \init_count_reg[8]_i_1_n_4 ;
  wire \init_count_reg[8]_i_1_n_5 ;
  wire \init_count_reg[8]_i_1_n_6 ;
  wire \init_count_reg[8]_i_1_n_7 ;
  wire \init_count_reg[8]_i_1_n_8 ;
  wire \init_count_reg[8]_i_1_n_9 ;
  wire init_done_byteclk_pos_r;
  wire init_done_byteclk_pos_r0;
  wire init_done_byteclk_r;
  wire init_done_i_1_n_0;
  wire init_done_i_2_n_0;
  wire init_done_i_3_n_0;
  wire init_done_i_4_n_0;
  wire init_done_i_5_n_0;
  wire init_done_i_6_n_0;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire lp_10_r;
  wire lp_10_r_reg_n_0;
  wire lp_11_r;
  wire lp_11_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2_n_0 ;
  wire \lp_st01_cnt[3]_i_2_n_0 ;
  wire \lp_st01_cnt[5]_i_2_n_0 ;
  wire \lp_st01_cnt[6]_i_2_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  wire [6:0]lp_st10_cnt;
  wire \lp_st10_cnt[1]_i_2_n_0 ;
  wire \lp_st10_cnt[3]_i_2_n_0 ;
  wire \lp_st10_cnt[5]_i_2_n_0 ;
  wire \lp_st10_cnt[6]_i_2_n_0 ;
  wire \lp_st10_cnt_reg_n_0_[0] ;
  wire \lp_st10_cnt_reg_n_0_[1] ;
  wire \lp_st10_cnt_reg_n_0_[2] ;
  wire \lp_st10_cnt_reg_n_0_[3] ;
  wire \lp_st10_cnt_reg_n_0_[4] ;
  wire \lp_st10_cnt_reg_n_0_[5] ;
  wire \lp_st10_cnt_reg_n_0_[6] ;
  wire [6:0]lp_st11_cnt;
  wire \lp_st11_cnt[1]_i_2_n_0 ;
  wire \lp_st11_cnt[3]_i_2_n_0 ;
  wire \lp_st11_cnt[5]_i_2_n_0 ;
  wire \lp_st11_cnt[6]_i_2_n_0 ;
  wire \lp_st11_cnt_reg_n_0_[0] ;
  wire \lp_st11_cnt_reg_n_0_[1] ;
  wire \lp_st11_cnt_reg_n_0_[2] ;
  wire \lp_st11_cnt_reg_n_0_[3] ;
  wire \lp_st11_cnt_reg_n_0_[4] ;
  wire \lp_st11_cnt_reg_n_0_[5] ;
  wire \lp_st11_cnt_reg_n_0_[6] ;
  wire out;
  wire [13:0]p_0_in;
  wire [31:1]p_1_in__0;
  wire post_count;
  wire \post_count[0]_i_10_n_0 ;
  wire \post_count[0]_i_11_n_0 ;
  wire \post_count[0]_i_12_n_0 ;
  wire \post_count[0]_i_4_n_0 ;
  wire \post_count[0]_i_5_n_0 ;
  wire \post_count[0]_i_6_n_0 ;
  wire \post_count[0]_i_7_n_0 ;
  wire \post_count[0]_i_8_n_0 ;
  wire \post_count[0]_i_9_n_0 ;
  wire [31:0]post_count_reg;
  wire \post_count_reg[0]_i_3_n_0 ;
  wire \post_count_reg[0]_i_3_n_1 ;
  wire \post_count_reg[0]_i_3_n_10 ;
  wire \post_count_reg[0]_i_3_n_11 ;
  wire \post_count_reg[0]_i_3_n_12 ;
  wire \post_count_reg[0]_i_3_n_13 ;
  wire \post_count_reg[0]_i_3_n_14 ;
  wire \post_count_reg[0]_i_3_n_15 ;
  wire \post_count_reg[0]_i_3_n_2 ;
  wire \post_count_reg[0]_i_3_n_3 ;
  wire \post_count_reg[0]_i_3_n_4 ;
  wire \post_count_reg[0]_i_3_n_5 ;
  wire \post_count_reg[0]_i_3_n_6 ;
  wire \post_count_reg[0]_i_3_n_7 ;
  wire \post_count_reg[0]_i_3_n_8 ;
  wire \post_count_reg[0]_i_3_n_9 ;
  wire \post_count_reg[16]_i_1_n_0 ;
  wire \post_count_reg[16]_i_1_n_1 ;
  wire \post_count_reg[16]_i_1_n_10 ;
  wire \post_count_reg[16]_i_1_n_11 ;
  wire \post_count_reg[16]_i_1_n_12 ;
  wire \post_count_reg[16]_i_1_n_13 ;
  wire \post_count_reg[16]_i_1_n_14 ;
  wire \post_count_reg[16]_i_1_n_15 ;
  wire \post_count_reg[16]_i_1_n_2 ;
  wire \post_count_reg[16]_i_1_n_3 ;
  wire \post_count_reg[16]_i_1_n_4 ;
  wire \post_count_reg[16]_i_1_n_5 ;
  wire \post_count_reg[16]_i_1_n_6 ;
  wire \post_count_reg[16]_i_1_n_7 ;
  wire \post_count_reg[16]_i_1_n_8 ;
  wire \post_count_reg[16]_i_1_n_9 ;
  wire \post_count_reg[24]_i_1_n_1 ;
  wire \post_count_reg[24]_i_1_n_10 ;
  wire \post_count_reg[24]_i_1_n_11 ;
  wire \post_count_reg[24]_i_1_n_12 ;
  wire \post_count_reg[24]_i_1_n_13 ;
  wire \post_count_reg[24]_i_1_n_14 ;
  wire \post_count_reg[24]_i_1_n_15 ;
  wire \post_count_reg[24]_i_1_n_2 ;
  wire \post_count_reg[24]_i_1_n_3 ;
  wire \post_count_reg[24]_i_1_n_4 ;
  wire \post_count_reg[24]_i_1_n_5 ;
  wire \post_count_reg[24]_i_1_n_6 ;
  wire \post_count_reg[24]_i_1_n_7 ;
  wire \post_count_reg[24]_i_1_n_8 ;
  wire \post_count_reg[24]_i_1_n_9 ;
  wire \post_count_reg[31]_0 ;
  wire \post_count_reg[8]_i_1_n_0 ;
  wire \post_count_reg[8]_i_1_n_1 ;
  wire \post_count_reg[8]_i_1_n_10 ;
  wire \post_count_reg[8]_i_1_n_11 ;
  wire \post_count_reg[8]_i_1_n_12 ;
  wire \post_count_reg[8]_i_1_n_13 ;
  wire \post_count_reg[8]_i_1_n_14 ;
  wire \post_count_reg[8]_i_1_n_15 ;
  wire \post_count_reg[8]_i_1_n_2 ;
  wire \post_count_reg[8]_i_1_n_3 ;
  wire \post_count_reg[8]_i_1_n_4 ;
  wire \post_count_reg[8]_i_1_n_5 ;
  wire \post_count_reg[8]_i_1_n_6 ;
  wire \post_count_reg[8]_i_1_n_7 ;
  wire \post_count_reg[8]_i_1_n_8 ;
  wire \post_count_reg[8]_i_1_n_9 ;
  wire \prepare_zero_cnt[0]_i_4_n_0 ;
  wire [31:0]prepare_zero_cnt_reg;
  wire \prepare_zero_cnt_reg[0]_i_3_n_0 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_1 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_10 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_11 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_12 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_13 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_14 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_15 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_2 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_3 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_4 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_5 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_6 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_7 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_8 ;
  wire \prepare_zero_cnt_reg[0]_i_3_n_9 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_10 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_11 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_12 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_13 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_14 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_15 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_8 ;
  wire \prepare_zero_cnt_reg[16]_i_1_n_9 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_10 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_11 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_12 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_13 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_14 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_15 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_8 ;
  wire \prepare_zero_cnt_reg[24]_i_1_n_9 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_0 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_1 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_10 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_11 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_12 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_13 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_14 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_15 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_2 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_3 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_4 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_5 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_6 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_7 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_8 ;
  wire \prepare_zero_cnt_reg[8]_i_1_n_9 ;
  wire reset_timer_r_i_7_n_0;
  wire reset_timer_r_reg_n_0;
  wire s_level_out_d2_reg;
  wire s_level_out_d3_reg;
  wire s_level_out_d3_reg_0;
  wire start_clkpost_byteclk_sync_i_n_1;
  wire start_clkpost_r_reg_0;
  wire start_clkpost_r_reg_1;
  wire start_clkpost_r_reg_2;
  wire start_clkpost_r_reg_n_0;
  wire start_clkzero_byteclk_sync;
  wire start_clkzero_byteclk_sync_i_n_2;
  wire start_clkzero_byteclk_sync_r;
  wire start_clkzero_byteclk_sync_r_reg_0;
  wire start_clkzero_r_i_1_n_0;
  wire start_clkzero_r_reg_n_0;
  wire system_rst;
  wire \time_out_counter[10]_i_1_n_0 ;
  wire \time_out_counter[11]_i_1_n_0 ;
  wire \time_out_counter[11]_i_2_n_0 ;
  wire \time_out_counter[12]_i_1_n_0 ;
  wire \time_out_counter[13]_i_1_n_0 ;
  wire \time_out_counter[13]_i_3_n_0 ;
  wire \time_out_counter[13]_i_4_n_0 ;
  wire \time_out_counter[13]_i_5_n_0 ;
  wire \time_out_counter[13]_i_6_n_0 ;
  wire \time_out_counter[13]_i_7_n_0 ;
  wire \time_out_counter[2]_i_1_n_0 ;
  wire \time_out_counter[3]_i_1_n_0 ;
  wire \time_out_counter[4]_i_1_n_0 ;
  wire \time_out_counter[5]_i_1_n_0 ;
  wire \time_out_counter[6]_i_1_n_0 ;
  wire \time_out_counter[6]_i_2_n_0 ;
  wire \time_out_counter[7]_i_1_n_0 ;
  wire \time_out_counter[8]_i_1_n_0 ;
  wire \time_out_counter[9]_i_1_n_0 ;
  wire \time_out_counter[9]_i_2_n_0 ;
  wire [13:0]time_out_counter_reg;
  wire time_out_hsexit_i_1_n_0;
  wire time_out_hsexit_reg_n_0;
  wire time_out_post;
  wire time_out_post_coreclk_sync;
  wire time_out_post_coreclk_sync_i_n_1;
  wire time_out_post_coreclk_sync_i_n_10;
  wire time_out_post_coreclk_sync_i_n_11;
  wire time_out_post_coreclk_sync_i_n_12;
  wire time_out_post_coreclk_sync_i_n_13;
  wire time_out_post_coreclk_sync_i_n_14;
  wire time_out_post_coreclk_sync_i_n_15;
  wire time_out_post_coreclk_sync_i_n_16;
  wire time_out_post_coreclk_sync_i_n_17;
  wire time_out_post_coreclk_sync_i_n_18;
  wire time_out_post_coreclk_sync_i_n_19;
  wire time_out_post_coreclk_sync_i_n_2;
  wire time_out_post_coreclk_sync_i_n_20;
  wire time_out_post_coreclk_sync_i_n_21;
  wire time_out_post_coreclk_sync_i_n_22;
  wire time_out_post_coreclk_sync_i_n_23;
  wire time_out_post_coreclk_sync_i_n_24;
  wire time_out_post_coreclk_sync_i_n_25;
  wire time_out_post_coreclk_sync_i_n_26;
  wire time_out_post_coreclk_sync_i_n_27;
  wire time_out_post_coreclk_sync_i_n_28;
  wire time_out_post_coreclk_sync_i_n_29;
  wire time_out_post_coreclk_sync_i_n_3;
  wire time_out_post_coreclk_sync_i_n_30;
  wire time_out_post_coreclk_sync_i_n_31;
  wire time_out_post_coreclk_sync_i_n_32;
  wire time_out_post_coreclk_sync_i_n_33;
  wire time_out_post_coreclk_sync_i_n_34;
  wire time_out_post_coreclk_sync_i_n_35;
  wire time_out_post_coreclk_sync_i_n_36;
  wire time_out_post_coreclk_sync_i_n_37;
  wire time_out_post_coreclk_sync_i_n_4;
  wire time_out_post_coreclk_sync_i_n_5;
  wire time_out_post_coreclk_sync_i_n_6;
  wire time_out_post_coreclk_sync_i_n_7;
  wire time_out_post_coreclk_sync_i_n_8;
  wire time_out_post_coreclk_sync_i_n_9;
  wire time_out_prepare_i_1_n_0;
  wire time_out_prepare_i_2_n_0;
  wire time_out_prepare_i_3_n_0;
  wire time_out_prepare_i_4_n_0;
  wire time_out_prepare_reg_n_0;
  wire time_out_trail;
  wire time_out_zero;
  wire time_out_zero_i_1_n_0;
  wire \trail_count[0]_i_13_n_0 ;
  wire \trail_count[0]_i_14_n_0 ;
  wire \trail_count[0]_i_15_n_0 ;
  wire \trail_count[0]_i_16_n_0 ;
  wire \trail_count[0]_i_17_n_0 ;
  wire \trail_count[0]_i_18_n_0 ;
  wire \trail_count[0]_i_19_n_0 ;
  wire \trail_count[0]_i_20_n_0 ;
  wire \trail_count[0]_i_3_n_0 ;
  wire [31:0]trail_count_reg;
  wire tx_cl_en_hs_tst;
  wire tx_cl_en_lp_tst;
  wire tx_cl_en_lp_tst_coreclk_i_5_n_0;
  wire tx_cl_en_lp_tst_coreclk_reg_n_0;
  wire tx_cl_lp_cn;
  wire tx_cl_lp_cn_i_3_n_0;
  wire tx_cl_lp_cp;
  wire tx_div4_clk;
  wire [0:0]tx_hs_clk_p;
  wire xmit_clk_pre_coreclk_sync;
  wire xmit_clk_pre_coreclk_sync_i_n_1;
  wire xmit_clk_pre_coreclk_sync_i_n_2;
  wire xmit_clk_pre_r;
  wire xmit_clk_pre_r_i_1_n_0;
  wire xmit_clk_r0;
  wire xmit_clk_r_i_10_n_0;
  wire xmit_clk_r_i_2_n_0;
  wire xmit_clk_r_i_3_n_0;
  wire xmit_clk_r_i_4_n_0;
  wire xmit_clk_r_i_5_n_0;
  wire xmit_clk_r_i_6_n_0;
  wire xmit_clk_r_i_7_n_0;
  wire xmit_clk_r_i_8_n_0;
  wire xmit_clk_r_i_9_n_0;
  wire xmit_clk_r_reg_n_0;
  wire [31:1]zero_count0;
  wire \zero_count[0]_i_1__3_n_0 ;
  wire \zero_count[31]_i_10_n_0 ;
  wire \zero_count[31]_i_11_n_0 ;
  wire \zero_count[31]_i_12_n_0 ;
  wire \zero_count[31]_i_1_n_0 ;
  wire \zero_count[31]_i_3_n_0 ;
  wire \zero_count[31]_i_5_n_0 ;
  wire \zero_count[31]_i_6_n_0 ;
  wire \zero_count[31]_i_7_n_0 ;
  wire \zero_count[31]_i_8_n_0 ;
  wire \zero_count[31]_i_9_n_0 ;
  wire \zero_count_reg[16]_i_2_n_0 ;
  wire \zero_count_reg[16]_i_2_n_1 ;
  wire \zero_count_reg[16]_i_2_n_2 ;
  wire \zero_count_reg[16]_i_2_n_3 ;
  wire \zero_count_reg[16]_i_2_n_4 ;
  wire \zero_count_reg[16]_i_2_n_5 ;
  wire \zero_count_reg[16]_i_2_n_6 ;
  wire \zero_count_reg[16]_i_2_n_7 ;
  wire \zero_count_reg[24]_i_2_n_0 ;
  wire \zero_count_reg[24]_i_2_n_1 ;
  wire \zero_count_reg[24]_i_2_n_2 ;
  wire \zero_count_reg[24]_i_2_n_3 ;
  wire \zero_count_reg[24]_i_2_n_4 ;
  wire \zero_count_reg[24]_i_2_n_5 ;
  wire \zero_count_reg[24]_i_2_n_6 ;
  wire \zero_count_reg[24]_i_2_n_7 ;
  wire \zero_count_reg[31]_i_4_n_2 ;
  wire \zero_count_reg[31]_i_4_n_3 ;
  wire \zero_count_reg[31]_i_4_n_4 ;
  wire \zero_count_reg[31]_i_4_n_5 ;
  wire \zero_count_reg[31]_i_4_n_6 ;
  wire \zero_count_reg[31]_i_4_n_7 ;
  wire \zero_count_reg[8]_i_2_n_0 ;
  wire \zero_count_reg[8]_i_2_n_1 ;
  wire \zero_count_reg[8]_i_2_n_2 ;
  wire \zero_count_reg[8]_i_2_n_3 ;
  wire \zero_count_reg[8]_i_2_n_4 ;
  wire \zero_count_reg[8]_i_2_n_5 ;
  wire \zero_count_reg[8]_i_2_n_6 ;
  wire \zero_count_reg[8]_i_2_n_7 ;
  wire \zero_count_reg_n_0_[0] ;
  wire \zero_count_reg_n_0_[10] ;
  wire \zero_count_reg_n_0_[11] ;
  wire \zero_count_reg_n_0_[12] ;
  wire \zero_count_reg_n_0_[13] ;
  wire \zero_count_reg_n_0_[14] ;
  wire \zero_count_reg_n_0_[15] ;
  wire \zero_count_reg_n_0_[16] ;
  wire \zero_count_reg_n_0_[17] ;
  wire \zero_count_reg_n_0_[18] ;
  wire \zero_count_reg_n_0_[19] ;
  wire \zero_count_reg_n_0_[1] ;
  wire \zero_count_reg_n_0_[20] ;
  wire \zero_count_reg_n_0_[21] ;
  wire \zero_count_reg_n_0_[22] ;
  wire \zero_count_reg_n_0_[23] ;
  wire \zero_count_reg_n_0_[24] ;
  wire \zero_count_reg_n_0_[25] ;
  wire \zero_count_reg_n_0_[26] ;
  wire \zero_count_reg_n_0_[27] ;
  wire \zero_count_reg_n_0_[28] ;
  wire \zero_count_reg_n_0_[29] ;
  wire \zero_count_reg_n_0_[2] ;
  wire \zero_count_reg_n_0_[30] ;
  wire \zero_count_reg_n_0_[31] ;
  wire \zero_count_reg_n_0_[3] ;
  wire \zero_count_reg_n_0_[4] ;
  wire \zero_count_reg_n_0_[5] ;
  wire \zero_count_reg_n_0_[6] ;
  wire \zero_count_reg_n_0_[7] ;
  wire \zero_count_reg_n_0_[8] ;
  wire \zero_count_reg_n_0_[9] ;
  wire [7:7]\NLW_clk_pre_cnt_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:4]\NLW_init_count_reg[16]_i_1_CO_UNCONNECTED ;
  wire [7:5]\NLW_init_count_reg[16]_i_1_O_UNCONNECTED ;
  wire [7:7]\NLW_post_count_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:7]\NLW_prepare_zero_cnt_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:6]\NLW_zero_count_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:7]\NLW_zero_count_reg[31]_i_4_O_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h02)) 
    \CLK_GEN_BLK4.tx_cl_hs_cp[6]_i_1 
       (.I0(xmit_clk_r_reg_n_0),
        .I1(time_out_post),
        .I2(start_clkzero_byteclk_sync_r_reg_0),
        .O(\CLK_GEN_BLK4.tx_cl_hs_cp[6]_i_1_n_0 ));
  FDRE \CLK_GEN_BLK4.tx_cl_hs_cp_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\CLK_GEN_BLK4.tx_cl_hs_cp[6]_i_1_n_0 ),
        .Q(tx_hs_clk_p),
        .R(1'b0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0 cl_enable_sync_i
       (.cl_enable(cl_enable),
        .cl_tx_state1(cl_tx_state1),
        .\cl_tx_state_reg[1] (cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .init_done_reg(cl_enable_sync_i_n_1),
        .out(out),
        .system_rst(system_rst));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    cl_status_reg_bit_1_i_1
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(\cl_tx_state_reg_n_0_[0] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .O(cl_status_reg_bit_1_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE cl_status_reg_bit_1_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_status_reg_bit_1_i_1_n_0),
        .Q(cl_status_reg_bit_1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE cl_status_reg_bit_2_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_status_reg_bit_1_i_1_n_0),
        .Q(cl_status_reg_bit_2));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE cl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_stopstate),
        .Q(cl_status_reg_bit_4));
  LUT6 #(
    .INIT(64'h0000A0F00FFF00C0)) 
    cl_stopstate_i_3
       (.I0(time_out_hsexit_reg_n_0),
        .I1(cl_init_done_coreclk_i),
        .I2(\cl_tx_state_reg_n_0_[0] ),
        .I3(\cl_tx_state_reg_n_0_[3] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .I5(\cl_tx_state_reg_n_0_[1] ),
        .O(cl_stopstate_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    cl_stopstate_i_4
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(lp_11_r_reg_n_0),
        .I3(\cl_tx_state_reg_n_0_[3] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .O(cl_stopstate_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    cl_stopstate_i_8
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[1] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(time_out_hsexit_reg_n_0),
        .O(cl_stopstate_i_8_n_0));
  FDRE cl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_16),
        .Q(cl_stopstate),
        .R(cl_tx_state1));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \cl_tx_state[0]_i_5 
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .O(\cl_tx_state[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \cl_tx_state[3]_i_12 
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .O(\cl_tx_state_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h0B)) 
    \cl_tx_state[3]_i_14 
       (.I0(cl_init_done_coreclk_i),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[1] ),
        .O(\cl_tx_state[3]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cl_tx_state[3]_i_6 
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .O(\cl_tx_state[3]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[0] 
       (.C(core_clk),
        .CE(cl_tx_state),
        .D(cl_txrequesths_coreclk_sync_i_n_2),
        .Q(\cl_tx_state_reg_n_0_[0] ),
        .R(\cl_tx_state_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_15),
        .Q(\cl_tx_state_reg_n_0_[1] ),
        .R(cl_tx_state1));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[2] 
       (.C(core_clk),
        .CE(cl_tx_state),
        .D(cl_txrequesths_negedge_sync_i_n_2),
        .Q(\cl_tx_state_reg_n_0_[2] ),
        .R(\cl_tx_state_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cl_tx_state_reg[3] 
       (.C(core_clk),
        .CE(cl_tx_state),
        .D(cl_txrequesths_negedge_sync_i_n_1),
        .Q(\cl_tx_state_reg_n_0_[3] ),
        .R(\cl_tx_state_reg[3]_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_15 cl_txclkactivehs_byteclk_sync_i
       (.cl_txclkactivehs(cl_txclkactivehs),
        .s_level_out_d1_cdc_to_reg_0(cl_txclkactivehs_i),
        .tx_div4_clk(tx_div4_clk));
  FDRE cl_txclkactivehs_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_12),
        .Q(cl_txclkactivehs_i),
        .R(\cl_tx_state_reg[3]_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_16 cl_txrequesths_coreclk_sync_i
       (.cl_stopstate(cl_stopstate),
        .cl_stopstate_reg(cl_txrequesths_coreclk_sync_i_n_16),
        .cl_stopstate_reg_0(cl_stopstate_i_4_n_0),
        .cl_stopstate_reg_1(cl_stopstate_i_8_n_0),
        .cl_stopstate_reg_2(cl_txulpsclk_sync_i_n_6),
        .cl_stopstate_reg_3(cl_stopstate_i_3_n_0),
        .cl_stopstate_reg_4(cl_txulpsclk_sync_i_n_7),
        .cl_stopstate_reg_5(cl_enable_sync_i_n_1),
        .cl_tx_state(cl_tx_state),
        .\cl_tx_state_reg[0] (cl_txrequesths_coreclk_sync_i_n_10),
        .\cl_tx_state_reg[0]_0 (\cl_tx_state_reg_n_0_[2] ),
        .\cl_tx_state_reg[0]_1 (\cl_tx_state[0]_i_5_n_0 ),
        .\cl_tx_state_reg[0]_10 (s_level_out_d3_reg_0),
        .\cl_tx_state_reg[0]_2 (lp_10_r_reg_n_0),
        .\cl_tx_state_reg[0]_3 (cl_txulpsclk_sync),
        .\cl_tx_state_reg[0]_4 (\cl_tx_state_reg[0]_0 ),
        .\cl_tx_state_reg[0]_5 (\cl_tx_state[3]_i_6_n_0 ),
        .\cl_tx_state_reg[0]_6 (cl_txulpsclk_sync_i_n_2),
        .\cl_tx_state_reg[0]_7 (start_clkpost_r_reg_1),
        .\cl_tx_state_reg[0]_8 (\cl_tx_state[3]_i_14_n_0 ),
        .\cl_tx_state_reg[0]_9 (time_out_prepare_reg_n_0),
        .\cl_tx_state_reg[1] (cl_txrequesths_coreclk_sync_i_n_12),
        .\cl_tx_state_reg[1]_0 (\cl_tx_state_reg_n_0_[1] ),
        .\cl_tx_state_reg[1]_1 (cl_txrequesths_negedge_sync_i_n_4),
        .\cl_tx_state_reg[1]_2 (cl_init_done_coreclk_i),
        .\cl_tx_state_reg[1]_3 (out),
        .\cl_tx_state_reg[3] (cl_txrequesths_coreclk_sync_i_n_1),
        .\cl_tx_state_reg[3]_0 (cl_txrequesths_coreclk_sync_i_n_2),
        .\cl_tx_state_reg[3]_1 (cl_txrequesths_coreclk_sync_i_n_4),
        .\cl_tx_state_reg[3]_2 (cl_txrequesths_coreclk_sync_i_n_6),
        .\cl_tx_state_reg[3]_3 (cl_txrequesths_coreclk_sync_i_n_14),
        .cl_txclkactivehs_reg(\cl_tx_state_reg_n_0_[3] ),
        .cl_txclkactivehs_reg_0(xmit_clk_pre_coreclk_sync),
        .cl_txclkactivehs_reg_1(cl_txclkactivehs_i),
        .cl_txrequesths(cl_txrequesths),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .en_lp_01_cnt_reg(lp_01_r_reg_n_0),
        .en_lp_01_cnt_reg_0(tx_cl_lp_cn_i_3_n_0),
        .en_lp_01_cnt_reg_1(en_lp_01_cnt_reg_n_0),
        .hs_clk_state_r_reg(\cl_tx_state_reg_n_0_[0] ),
        .hs_clk_state_r_reg_0(xmit_clk_pre_coreclk_sync_i_n_1),
        .hs_clk_state_r_reg_1(hs_clk_state_r_reg_n_0),
        .init_done_reg(cl_txrequesths_coreclk_sync_i_n_8),
        .lp_01_r_reg(cl_txrequesths_coreclk_sync_i_n_13),
        .out(cl_txrequesths_coreclk_sync),
        .reset_timer_r_reg(reset_timer_r_i_7_n_0),
        .reset_timer_r_reg_0(time_out_post_coreclk_sync_i_n_1),
        .reset_timer_r_reg_1(cl_txrequesths_negedge_sync_i_n_3),
        .reset_timer_r_reg_2(time_out_post_coreclk_sync_i_n_2),
        .reset_timer_r_reg_3(cl_txulpsexit_sync_i_n_2),
        .reset_timer_r_reg_4(reset_timer_r_reg_n_0),
        .s_level_out_d2_reg_0(cl_txrequesths_coreclk_sync_i_n_15),
        .s_level_out_d3_reg_0(cl_txrequesths_coreclk_sync_i_n_3),
        .s_level_out_d3_reg_1(cl_txrequesths_coreclk_sync_i_n_7),
        .s_level_out_d3_reg_2(cl_txrequesths_coreclk_sync_i_n_9),
        .start_clkpost_r_reg(start_clkpost_r_reg_0),
        .start_clkpost_r_reg_0(time_out_post_coreclk_sync),
        .system_rst(system_rst),
        .time_out_zero(time_out_zero),
        .tx_cl_en_lp_tst_coreclk_reg(cl_txrequesths_coreclk_sync_i_n_11),
        .tx_cl_en_lp_tst_coreclk_reg_0(cl_txulpsclk_sync_i_n_5),
        .tx_cl_en_lp_tst_coreclk_reg_1(tx_cl_en_lp_tst_coreclk_reg_n_0),
        .tx_cl_lp_cn_reg(cl_txulpsclk_sync_i_n_1));
  FDRE cl_txrequesths_negedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_clk_state_byteclk_sync_i_n_0),
        .Q(cl_txrequesths_negedge_r),
        .R(start_clkzero_byteclk_sync_r_reg_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_17 cl_txrequesths_negedge_sync_i
       (.\cl_tx_state[1]_i_2 (time_out_prepare_reg_n_0),
        .\cl_tx_state_reg[0] (cl_txrequesths_negedge_sync_i_n_3),
        .\cl_tx_state_reg[1] (cl_txrequesths_negedge_sync_i_n_2),
        .\cl_tx_state_reg[1]_0 (cl_txrequesths_negedge_sync_i_n_5),
        .\cl_tx_state_reg[2] (xmit_clk_pre_coreclk_sync_i_n_2),
        .\cl_tx_state_reg[2]_0 (cl_txrequesths_coreclk_sync_i_n_6),
        .\cl_tx_state_reg[3] (cl_txrequesths_negedge_sync_i_n_1),
        .\cl_tx_state_reg[3]_0 (cl_txrequesths_coreclk_sync_i_n_3),
        .\cl_tx_state_reg[3]_1 (\cl_tx_state_reg_n_0_[0] ),
        .\cl_tx_state_reg[3]_2 (cl_txrequesths_coreclk_sync),
        .cl_txrequesths_negedge_r(cl_txrequesths_negedge_r),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .hs_active_all(hs_active_all),
        .out(s_level_out_d3_reg_0),
        .s_level_out_d3_reg_0(cl_txrequesths_negedge_sync_i_n_4),
        .start_clkpost_r_reg(\cl_tx_state_reg_n_0_[3] ),
        .start_clkpost_r_reg_0(\cl_tx_state_reg_n_0_[1] ),
        .start_clkpost_r_reg_1(\cl_tx_state_reg_n_0_[2] ),
        .start_clkpost_r_reg_2(start_clkpost_r_reg_1),
        .start_clkpost_r_reg_3(start_clkpost_r_reg_2),
        .start_clkpost_r_reg_4(cl_txrequesths_coreclk_sync_i_n_7),
        .start_clkpost_r_reg_5(start_clkpost_r_reg_n_0));
  FDRE cl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(cl_txrequesths),
        .Q(cl_txrequesths_r),
        .R(start_clkzero_byteclk_sync_r_reg_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_18 cl_txulpsclk_sync_i
       (.\cl_tx_state_reg[0] (time_out_post_coreclk_sync_i_n_3),
        .\cl_tx_state_reg[0]_0 (\cl_tx_state[0]_i_5_n_0 ),
        .\cl_tx_state_reg[0]_1 (cl_txrequesths_coreclk_sync_i_n_9),
        .\cl_tx_state_reg[1] (cl_txulpsclk_sync_i_n_3),
        .\cl_tx_state_reg[1]_0 (cl_txulpsclk_sync_i_n_7),
        .\cl_tx_state_reg[2] (cl_txulpsclk_sync_i_n_4),
        .\cl_tx_state_reg[3] (cl_txulpsclk_sync_i_n_2),
        .cl_txulpsclk(cl_txulpsclk),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .en_lp_10_cnt_reg(\cl_tx_state_reg_n_0_[2] ),
        .en_lp_10_cnt_reg_0(\cl_tx_state_reg_n_0_[1] ),
        .en_lp_10_cnt_reg_1(lp_10_r_reg_n_0),
        .en_lp_10_cnt_reg_2(en_lp_10_cnt_reg_n_0),
        .en_lp_11_cnt_i_3_0(lp_11_r_reg_n_0),
        .en_lp_11_cnt_reg(\cl_tx_state_reg_n_0_[3] ),
        .en_lp_11_cnt_reg_0(\cl_tx_state_reg[1]_0 ),
        .en_lp_11_cnt_reg_1(time_out_hsexit_reg_n_0),
        .en_lp_11_cnt_reg_2(cl_txrequesths_coreclk_sync_i_n_1),
        .en_lp_11_cnt_reg_3(\cl_tx_state_reg_n_0_[0] ),
        .en_lp_11_cnt_reg_4(en_lp_11_cnt_i_2_n_0),
        .en_lp_11_cnt_reg_5(en_lp_11_cnt_reg_n_0),
        .out(cl_txulpsclk_sync),
        .s_level_out_d3_reg_0(cl_txulpsclk_sync_i_n_6),
        .s_level_out_d3_reg_1(cl_txulpsclk_sync_i_n_8),
        .time_out_hsexit_reg(cl_txulpsclk_sync_i_n_9),
        .time_out_prepare_reg(cl_txulpsclk_sync_i_n_5),
        .time_out_trail(time_out_trail),
        .time_out_trail_reg(cl_txulpsclk_sync_i_n_1),
        .tx_cl_en_lp_tst_coreclk_reg(time_out_prepare_reg_n_0),
        .tx_cl_en_lp_tst_coreclk_reg_0(tx_cl_en_lp_tst_coreclk_i_5_n_0),
        .tx_cl_lp_cn_reg(tx_cl_lp_cn_i_3_n_0),
        .tx_cl_lp_cn_reg_0(cl_init_done_coreclk_i),
        .tx_cl_lp_cn_reg_1(cl_txrequesths_coreclk_sync),
        .tx_cl_lp_cn_reg_2(lp_01_r_reg_n_0),
        .tx_cl_lp_cp_i_3_0(cl_txulpsexit_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_19 cl_txulpsexit_sync_i
       (.\cl_tx_state_reg[0] (cl_txulpsexit_sync_i_n_1),
        .\cl_tx_state_reg[3] (cl_txulpsexit_sync_i_n_3),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .cl_ulpsactivenot_reg(cl_txulpsclk_sync),
        .cl_ulpsactivenot_reg_0(\cl_tx_state_reg_n_0_[0] ),
        .cl_ulpsactivenot_reg_1(lp_10_r_reg_n_0),
        .cl_ulpsactivenot_reg_2(\cl_tx_state_reg_n_0_[3] ),
        .cl_ulpsactivenot_reg_3(cl_ulpsactivenot_i_4_n_0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .lp_10_r_reg(cl_txulpsexit_sync_i_n_2),
        .out(cl_txulpsexit_sync),
        .reset_timer_r_reg(\cl_tx_state_reg_n_0_[1] ),
        .tx_cl_lp_cp_reg(\cl_tx_state_reg_n_0_[2] ),
        .tx_cl_lp_cp_reg_0(cl_txulpsclk_sync_i_n_4),
        .tx_cl_lp_cp_reg_1(cl_txrequesths_coreclk_sync_i_n_8));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    cl_ulpsactivenot_i_4
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .O(cl_ulpsactivenot_i_4_n_0));
  FDSE cl_ulpsactivenot_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsexit_sync_i_n_3),
        .Q(cl_ulpsactivenot),
        .S(\cl_tx_state_reg[3]_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \clk_pre_cnt[0]_i_1 
       (.I0(init_done_byteclk_pos_r),
        .I1(start_clkzero_byteclk_sync_r_reg_0),
        .I2(time_out_post),
        .I3(xmit_clk_r_reg_n_0),
        .O(\clk_pre_cnt[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \clk_pre_cnt[0]_i_10 
       (.I0(clk_pre_cnt_reg[1]),
        .I1(clk_pre_cnt_reg[6]),
        .I2(clk_pre_cnt_reg[16]),
        .I3(clk_pre_cnt_reg[12]),
        .O(\clk_pre_cnt[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \clk_pre_cnt[0]_i_11 
       (.I0(clk_pre_cnt_reg[27]),
        .I1(clk_pre_cnt_reg[0]),
        .I2(clk_pre_cnt_reg[19]),
        .I3(clk_pre_cnt_reg[15]),
        .O(\clk_pre_cnt[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \clk_pre_cnt[0]_i_12 
       (.I0(clk_pre_cnt_reg[28]),
        .I1(clk_pre_cnt_reg[24]),
        .I2(clk_pre_cnt_reg[22]),
        .I3(clk_pre_cnt_reg[10]),
        .O(\clk_pre_cnt[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \clk_pre_cnt[0]_i_2 
       (.I0(\clk_pre_cnt[0]_i_4_n_0 ),
        .I1(\clk_pre_cnt[0]_i_5_n_0 ),
        .I2(\clk_pre_cnt[0]_i_6_n_0 ),
        .I3(\clk_pre_cnt[0]_i_7_n_0 ),
        .O(clk_pre_cnt));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \clk_pre_cnt[0]_i_4 
       (.I0(clk_pre_cnt_reg[13]),
        .I1(clk_pre_cnt_reg[17]),
        .I2(clk_pre_cnt_reg[2]),
        .I3(clk_pre_cnt_reg[7]),
        .I4(\clk_pre_cnt[0]_i_9_n_0 ),
        .O(\clk_pre_cnt[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \clk_pre_cnt[0]_i_5 
       (.I0(clk_pre_cnt_reg[8]),
        .I1(clk_pre_cnt_reg[20]),
        .I2(clk_pre_cnt_reg[26]),
        .I3(clk_pre_cnt_reg[29]),
        .I4(\clk_pre_cnt[0]_i_10_n_0 ),
        .O(\clk_pre_cnt[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \clk_pre_cnt[0]_i_6 
       (.I0(clk_pre_cnt_reg[11]),
        .I1(clk_pre_cnt_reg[23]),
        .I2(clk_pre_cnt_reg[25]),
        .I3(clk_pre_cnt_reg[30]),
        .I4(\clk_pre_cnt[0]_i_11_n_0 ),
        .O(\clk_pre_cnt[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \clk_pre_cnt[0]_i_7 
       (.I0(clk_pre_cnt_reg[14]),
        .I1(clk_pre_cnt_reg[18]),
        .I2(clk_pre_cnt_reg[4]),
        .I3(clk_pre_cnt_reg[31]),
        .I4(\clk_pre_cnt[0]_i_12_n_0 ),
        .O(\clk_pre_cnt[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \clk_pre_cnt[0]_i_8 
       (.I0(clk_pre_cnt_reg[0]),
        .O(\clk_pre_cnt[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \clk_pre_cnt[0]_i_9 
       (.I0(clk_pre_cnt_reg[5]),
        .I1(clk_pre_cnt_reg[3]),
        .I2(clk_pre_cnt_reg[21]),
        .I3(clk_pre_cnt_reg[9]),
        .O(\clk_pre_cnt[0]_i_9_n_0 ));
  FDRE \clk_pre_cnt_reg[0] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_15 ),
        .Q(clk_pre_cnt_reg[0]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY8 \clk_pre_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\clk_pre_cnt_reg[0]_i_3_n_0 ,\clk_pre_cnt_reg[0]_i_3_n_1 ,\clk_pre_cnt_reg[0]_i_3_n_2 ,\clk_pre_cnt_reg[0]_i_3_n_3 ,\clk_pre_cnt_reg[0]_i_3_n_4 ,\clk_pre_cnt_reg[0]_i_3_n_5 ,\clk_pre_cnt_reg[0]_i_3_n_6 ,\clk_pre_cnt_reg[0]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\clk_pre_cnt_reg[0]_i_3_n_8 ,\clk_pre_cnt_reg[0]_i_3_n_9 ,\clk_pre_cnt_reg[0]_i_3_n_10 ,\clk_pre_cnt_reg[0]_i_3_n_11 ,\clk_pre_cnt_reg[0]_i_3_n_12 ,\clk_pre_cnt_reg[0]_i_3_n_13 ,\clk_pre_cnt_reg[0]_i_3_n_14 ,\clk_pre_cnt_reg[0]_i_3_n_15 }),
        .S({clk_pre_cnt_reg[7:1],\clk_pre_cnt[0]_i_8_n_0 }));
  FDRE \clk_pre_cnt_reg[10] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_13 ),
        .Q(clk_pre_cnt_reg[10]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[11] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_12 ),
        .Q(clk_pre_cnt_reg[11]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[12] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_11 ),
        .Q(clk_pre_cnt_reg[12]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[13] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_10 ),
        .Q(clk_pre_cnt_reg[13]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[14] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_9 ),
        .Q(clk_pre_cnt_reg[14]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[15] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_8 ),
        .Q(clk_pre_cnt_reg[15]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[16] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_15 ),
        .Q(clk_pre_cnt_reg[16]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY8 \clk_pre_cnt_reg[16]_i_1 
       (.CI(\clk_pre_cnt_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\clk_pre_cnt_reg[16]_i_1_n_0 ,\clk_pre_cnt_reg[16]_i_1_n_1 ,\clk_pre_cnt_reg[16]_i_1_n_2 ,\clk_pre_cnt_reg[16]_i_1_n_3 ,\clk_pre_cnt_reg[16]_i_1_n_4 ,\clk_pre_cnt_reg[16]_i_1_n_5 ,\clk_pre_cnt_reg[16]_i_1_n_6 ,\clk_pre_cnt_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[16]_i_1_n_8 ,\clk_pre_cnt_reg[16]_i_1_n_9 ,\clk_pre_cnt_reg[16]_i_1_n_10 ,\clk_pre_cnt_reg[16]_i_1_n_11 ,\clk_pre_cnt_reg[16]_i_1_n_12 ,\clk_pre_cnt_reg[16]_i_1_n_13 ,\clk_pre_cnt_reg[16]_i_1_n_14 ,\clk_pre_cnt_reg[16]_i_1_n_15 }),
        .S(clk_pre_cnt_reg[23:16]));
  FDRE \clk_pre_cnt_reg[17] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_14 ),
        .Q(clk_pre_cnt_reg[17]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[18] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_13 ),
        .Q(clk_pre_cnt_reg[18]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[19] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_12 ),
        .Q(clk_pre_cnt_reg[19]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[1] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_14 ),
        .Q(clk_pre_cnt_reg[1]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[20] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_11 ),
        .Q(clk_pre_cnt_reg[20]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[21] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_10 ),
        .Q(clk_pre_cnt_reg[21]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[22] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_9 ),
        .Q(clk_pre_cnt_reg[22]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[23] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[16]_i_1_n_8 ),
        .Q(clk_pre_cnt_reg[23]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[24] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_15 ),
        .Q(clk_pre_cnt_reg[24]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY8 \clk_pre_cnt_reg[24]_i_1 
       (.CI(\clk_pre_cnt_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_clk_pre_cnt_reg[24]_i_1_CO_UNCONNECTED [7],\clk_pre_cnt_reg[24]_i_1_n_1 ,\clk_pre_cnt_reg[24]_i_1_n_2 ,\clk_pre_cnt_reg[24]_i_1_n_3 ,\clk_pre_cnt_reg[24]_i_1_n_4 ,\clk_pre_cnt_reg[24]_i_1_n_5 ,\clk_pre_cnt_reg[24]_i_1_n_6 ,\clk_pre_cnt_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[24]_i_1_n_8 ,\clk_pre_cnt_reg[24]_i_1_n_9 ,\clk_pre_cnt_reg[24]_i_1_n_10 ,\clk_pre_cnt_reg[24]_i_1_n_11 ,\clk_pre_cnt_reg[24]_i_1_n_12 ,\clk_pre_cnt_reg[24]_i_1_n_13 ,\clk_pre_cnt_reg[24]_i_1_n_14 ,\clk_pre_cnt_reg[24]_i_1_n_15 }),
        .S(clk_pre_cnt_reg[31:24]));
  FDRE \clk_pre_cnt_reg[25] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_14 ),
        .Q(clk_pre_cnt_reg[25]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[26] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_13 ),
        .Q(clk_pre_cnt_reg[26]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[27] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_12 ),
        .Q(clk_pre_cnt_reg[27]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[28] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_11 ),
        .Q(clk_pre_cnt_reg[28]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[29] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_10 ),
        .Q(clk_pre_cnt_reg[29]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[2] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_13 ),
        .Q(clk_pre_cnt_reg[2]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[30] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_9 ),
        .Q(clk_pre_cnt_reg[30]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[31] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[24]_i_1_n_8 ),
        .Q(clk_pre_cnt_reg[31]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[3] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_12 ),
        .Q(clk_pre_cnt_reg[3]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[4] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_11 ),
        .Q(clk_pre_cnt_reg[4]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[5] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_10 ),
        .Q(clk_pre_cnt_reg[5]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[6] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_9 ),
        .Q(clk_pre_cnt_reg[6]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[7] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[0]_i_3_n_8 ),
        .Q(clk_pre_cnt_reg[7]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  FDRE \clk_pre_cnt_reg[8] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_15 ),
        .Q(clk_pre_cnt_reg[8]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  CARRY8 \clk_pre_cnt_reg[8]_i_1 
       (.CI(\clk_pre_cnt_reg[0]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\clk_pre_cnt_reg[8]_i_1_n_0 ,\clk_pre_cnt_reg[8]_i_1_n_1 ,\clk_pre_cnt_reg[8]_i_1_n_2 ,\clk_pre_cnt_reg[8]_i_1_n_3 ,\clk_pre_cnt_reg[8]_i_1_n_4 ,\clk_pre_cnt_reg[8]_i_1_n_5 ,\clk_pre_cnt_reg[8]_i_1_n_6 ,\clk_pre_cnt_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\clk_pre_cnt_reg[8]_i_1_n_8 ,\clk_pre_cnt_reg[8]_i_1_n_9 ,\clk_pre_cnt_reg[8]_i_1_n_10 ,\clk_pre_cnt_reg[8]_i_1_n_11 ,\clk_pre_cnt_reg[8]_i_1_n_12 ,\clk_pre_cnt_reg[8]_i_1_n_13 ,\clk_pre_cnt_reg[8]_i_1_n_14 ,\clk_pre_cnt_reg[8]_i_1_n_15 }),
        .S(clk_pre_cnt_reg[15:8]));
  FDRE \clk_pre_cnt_reg[9] 
       (.C(tx_div4_clk),
        .CE(clk_pre_cnt),
        .D(\clk_pre_cnt_reg[8]_i_1_n_14 ),
        .Q(clk_pre_cnt_reg[9]),
        .R(\clk_pre_cnt[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    en_cal_hs_datapath_i_4__2
       (.I0(cl_txclkactivehs_i),
        .I1(dl_hs_exit_done_i[2]),
        .I2(dl_hs_exit_done_i[3]),
        .I3(dl_hs_exit_done_i[0]),
        .I4(dl_hs_exit_done_i[1]),
        .O(cl_txclkactivehs_reg_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_20 en_cal_seq_xmit_byteclk_sync_i
       (.cl_txrequesths(cl_txrequesths),
        .cl_txrequesths_0(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .out(en_cal_seq_xmit_byteclk_sync),
        .\prepare_zero_cnt_reg[0] (start_clkzero_byteclk_sync),
        .\prepare_zero_cnt_reg[0]_0 (xmit_clk_r_i_2_n_0),
        .tx_div4_clk(tx_div4_clk));
  FDRE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_13),
        .Q(en_lp_01_cnt_reg_n_0),
        .R(\cl_tx_state_reg[3]_0 ));
  FDRE en_lp_10_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsclk_sync_i_n_8),
        .Q(en_lp_10_cnt_reg_n_0),
        .R(\cl_tx_state_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h7)) 
    en_lp_11_cnt_i_2
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .O(en_lp_11_cnt_i_2_n_0));
  FDRE en_lp_11_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsclk_sync_i_n_9),
        .Q(en_lp_11_cnt_reg_n_0),
        .R(\cl_tx_state_reg[3]_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_21 hs_clk_state_byteclk_sync_i
       (.cl_txrequesths(cl_txrequesths),
        .cl_txrequesths_0(hs_clk_state_byteclk_sync_i_n_0),
        .cl_txrequesths_negedge_r(cl_txrequesths_negedge_r),
        .cl_txrequesths_r(cl_txrequesths_r),
        .out(s_level_out_d3_reg),
        .s_level_out_d1_cdc_to_reg_0(hs_clk_state_r_reg_n_0),
        .tx_div4_clk(tx_div4_clk));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h2)) 
    hs_clk_state_r_i_6
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[1] ),
        .O(hs_clk_state_r_i_6_n_0));
  FDRE hs_clk_state_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_10),
        .Q(hs_clk_state_r_reg_n_0),
        .R(\cl_tx_state_reg[3]_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \init_count[0]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[3] ),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(\cl_tx_state_reg_n_0_[0] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .O(\init_count[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \init_count[0]_i_2 
       (.I0(init_done_i_2_n_0),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(\cl_tx_state_reg_n_0_[1] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[3] ),
        .O(\init_count[0]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \init_count[0]_i_4 
       (.I0(init_count_reg[0]),
        .O(\init_count[0]_i_4_n_0 ));
  FDRE \init_count_reg[0] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_15 ),
        .Q(init_count_reg[0]),
        .R(\init_count[0]_i_1_n_0 ));
  CARRY8 \init_count_reg[0]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\init_count_reg[0]_i_3_n_0 ,\init_count_reg[0]_i_3_n_1 ,\init_count_reg[0]_i_3_n_2 ,\init_count_reg[0]_i_3_n_3 ,\init_count_reg[0]_i_3_n_4 ,\init_count_reg[0]_i_3_n_5 ,\init_count_reg[0]_i_3_n_6 ,\init_count_reg[0]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\init_count_reg[0]_i_3_n_8 ,\init_count_reg[0]_i_3_n_9 ,\init_count_reg[0]_i_3_n_10 ,\init_count_reg[0]_i_3_n_11 ,\init_count_reg[0]_i_3_n_12 ,\init_count_reg[0]_i_3_n_13 ,\init_count_reg[0]_i_3_n_14 ,\init_count_reg[0]_i_3_n_15 }),
        .S({init_count_reg[7:1],\init_count[0]_i_4_n_0 }));
  FDRE \init_count_reg[10] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_13 ),
        .Q(init_count_reg[10]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[11] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_12 ),
        .Q(init_count_reg[11]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[12] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_11 ),
        .Q(init_count_reg[12]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[13] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_10 ),
        .Q(init_count_reg[13]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[14] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_9 ),
        .Q(init_count_reg[14]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[15] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_8 ),
        .Q(init_count_reg[15]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[16] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[16]_i_1_n_15 ),
        .Q(init_count_reg[16]),
        .R(\init_count[0]_i_1_n_0 ));
  CARRY8 \init_count_reg[16]_i_1 
       (.CI(\init_count_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_init_count_reg[16]_i_1_CO_UNCONNECTED [7:4],\init_count_reg[16]_i_1_n_4 ,\init_count_reg[16]_i_1_n_5 ,\init_count_reg[16]_i_1_n_6 ,\init_count_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_init_count_reg[16]_i_1_O_UNCONNECTED [7:5],\init_count_reg[16]_i_1_n_11 ,\init_count_reg[16]_i_1_n_12 ,\init_count_reg[16]_i_1_n_13 ,\init_count_reg[16]_i_1_n_14 ,\init_count_reg[16]_i_1_n_15 }),
        .S({1'b0,1'b0,1'b0,init_count_reg[20:16]}));
  FDRE \init_count_reg[17] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[16]_i_1_n_14 ),
        .Q(init_count_reg[17]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[18] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[16]_i_1_n_13 ),
        .Q(init_count_reg[18]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[19] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[16]_i_1_n_12 ),
        .Q(init_count_reg[19]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[1] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_14 ),
        .Q(init_count_reg[1]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[20] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[16]_i_1_n_11 ),
        .Q(init_count_reg[20]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[2] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_13 ),
        .Q(init_count_reg[2]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[3] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_12 ),
        .Q(init_count_reg[3]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[4] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_11 ),
        .Q(init_count_reg[4]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[5] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_10 ),
        .Q(init_count_reg[5]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[6] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_9 ),
        .Q(init_count_reg[6]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[7] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[0]_i_3_n_8 ),
        .Q(init_count_reg[7]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE \init_count_reg[8] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_15 ),
        .Q(init_count_reg[8]),
        .R(\init_count[0]_i_1_n_0 ));
  CARRY8 \init_count_reg[8]_i_1 
       (.CI(\init_count_reg[0]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\init_count_reg[8]_i_1_n_0 ,\init_count_reg[8]_i_1_n_1 ,\init_count_reg[8]_i_1_n_2 ,\init_count_reg[8]_i_1_n_3 ,\init_count_reg[8]_i_1_n_4 ,\init_count_reg[8]_i_1_n_5 ,\init_count_reg[8]_i_1_n_6 ,\init_count_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\init_count_reg[8]_i_1_n_8 ,\init_count_reg[8]_i_1_n_9 ,\init_count_reg[8]_i_1_n_10 ,\init_count_reg[8]_i_1_n_11 ,\init_count_reg[8]_i_1_n_12 ,\init_count_reg[8]_i_1_n_13 ,\init_count_reg[8]_i_1_n_14 ,\init_count_reg[8]_i_1_n_15 }),
        .S(init_count_reg[15:8]));
  FDRE \init_count_reg[9] 
       (.C(core_clk),
        .CE(\init_count[0]_i_2_n_0 ),
        .D(\init_count_reg[8]_i_1_n_14 ),
        .Q(init_count_reg[9]),
        .R(\init_count[0]_i_1_n_0 ));
  FDRE init_done_byteclk_pos_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(init_done_byteclk_pos_r0),
        .Q(init_done_byteclk_pos_r),
        .R(1'b0));
  FDRE init_done_byteclk_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2_reg),
        .Q(init_done_byteclk_r),
        .R(1'b0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_22 init_done_byteclk_sync_i
       (.init_done_byteclk_pos_r0(init_done_byteclk_pos_r0),
        .init_done_byteclk_r(init_done_byteclk_r),
        .out(s_level_out_d2_reg),
        .s_level_out_d1_cdc_to_reg_0(cl_init_done_coreclk_i),
        .tx_div4_clk(tx_div4_clk));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEA0)) 
    init_done_i_1
       (.I0(cl_init_done_coreclk_i),
        .I1(init_done_i_2_n_0),
        .I2(\cl_tx_state_reg_n_0_[1] ),
        .I3(\cl_tx_state_reg_n_0_[0] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .I5(\cl_tx_state_reg_n_0_[3] ),
        .O(init_done_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    init_done_i_2
       (.I0(init_done_i_3_n_0),
        .I1(init_count_reg[9]),
        .I2(init_count_reg[16]),
        .I3(init_count_reg[7]),
        .I4(init_done_i_4_n_0),
        .I5(init_done_i_5_n_0),
        .O(init_done_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    init_done_i_3
       (.I0(init_count_reg[2]),
        .I1(init_count_reg[11]),
        .I2(init_count_reg[3]),
        .I3(init_count_reg[15]),
        .I4(init_count_reg[14]),
        .I5(init_count_reg[10]),
        .O(init_done_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    init_done_i_4
       (.I0(init_count_reg[20]),
        .I1(init_count_reg[12]),
        .I2(init_count_reg[1]),
        .I3(init_count_reg[4]),
        .O(init_done_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFF7)) 
    init_done_i_5
       (.I0(init_count_reg[17]),
        .I1(init_count_reg[6]),
        .I2(init_count_reg[18]),
        .I3(init_count_reg[5]),
        .I4(init_done_i_6_n_0),
        .O(init_done_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    init_done_i_6
       (.I0(init_count_reg[8]),
        .I1(init_count_reg[13]),
        .I2(init_count_reg[19]),
        .I3(init_count_reg[0]),
        .O(init_done_i_6_n_0));
  FDRE init_done_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(init_done_i_1_n_0),
        .Q(cl_init_done_coreclk_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_10_r_i_1
       (.I0(\lp_st10_cnt_reg_n_0_[1] ),
        .I1(\lp_st10_cnt_reg_n_0_[0] ),
        .I2(\lp_st10_cnt[1]_i_2_n_0 ),
        .O(lp_10_r));
  FDCE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_10_r),
        .Q(lp_10_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_11_r_i_1
       (.I0(\lp_st11_cnt_reg_n_0_[1] ),
        .I1(\lp_st11_cnt_reg_n_0_[0] ),
        .I2(\lp_st11_cnt[1]_i_2_n_0 ),
        .O(lp_11_r));
  FDCE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_11_r),
        .Q(lp_11_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1 
       (.I0(\lp_st01_cnt[1]_i_2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1 
       (.I0(\lp_st01_cnt[5]_i_2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1 
       (.I0(\lp_st01_cnt[6]_i_2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st10_cnt[0]_i_1 
       (.I0(en_lp_10_cnt_reg_n_0),
        .I1(\lp_st10_cnt_reg_n_0_[0] ),
        .O(lp_st10_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st10_cnt[1]_i_1 
       (.I0(\lp_st10_cnt[1]_i_2_n_0 ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(en_lp_10_cnt_reg_n_0),
        .I3(\lp_st10_cnt_reg_n_0_[0] ),
        .O(lp_st10_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st10_cnt[1]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[3] ),
        .I1(\lp_st10_cnt_reg_n_0_[2] ),
        .I2(\lp_st10_cnt_reg_n_0_[4] ),
        .I3(\lp_st10_cnt_reg_n_0_[5] ),
        .I4(\lp_st10_cnt_reg_n_0_[6] ),
        .O(\lp_st10_cnt[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st10_cnt[2]_i_1 
       (.I0(\lp_st10_cnt_reg_n_0_[0] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(en_lp_10_cnt_reg_n_0),
        .I3(\lp_st10_cnt_reg_n_0_[2] ),
        .O(lp_st10_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st10_cnt[3]_i_1 
       (.I0(\lp_st10_cnt_reg_n_0_[2] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(\lp_st10_cnt[3]_i_2_n_0 ),
        .I3(\lp_st10_cnt_reg_n_0_[0] ),
        .I4(en_lp_10_cnt_reg_n_0),
        .I5(\lp_st10_cnt_reg_n_0_[3] ),
        .O(lp_st10_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st10_cnt[3]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[6] ),
        .I1(\lp_st10_cnt_reg_n_0_[5] ),
        .I2(\lp_st10_cnt_reg_n_0_[4] ),
        .O(\lp_st10_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st10_cnt[4]_i_1 
       (.I0(\lp_st10_cnt_reg_n_0_[3] ),
        .I1(\lp_st10_cnt_reg_n_0_[2] ),
        .I2(\lp_st10_cnt_reg_n_0_[1] ),
        .I3(\lp_st10_cnt_reg_n_0_[0] ),
        .I4(en_lp_10_cnt_reg_n_0),
        .I5(\lp_st10_cnt_reg_n_0_[4] ),
        .O(lp_st10_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st10_cnt[5]_i_1 
       (.I0(\lp_st10_cnt[5]_i_2_n_0 ),
        .I1(\lp_st10_cnt_reg_n_0_[2] ),
        .I2(\lp_st10_cnt_reg_n_0_[3] ),
        .I3(\lp_st10_cnt_reg_n_0_[4] ),
        .I4(en_lp_10_cnt_reg_n_0),
        .I5(\lp_st10_cnt_reg_n_0_[5] ),
        .O(lp_st10_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st10_cnt[5]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[0] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .O(\lp_st10_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st10_cnt[6]_i_1 
       (.I0(\lp_st10_cnt[6]_i_2_n_0 ),
        .I1(\lp_st10_cnt_reg_n_0_[5] ),
        .I2(en_lp_10_cnt_reg_n_0),
        .I3(\lp_st10_cnt_reg_n_0_[6] ),
        .O(lp_st10_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st10_cnt[6]_i_2 
       (.I0(\lp_st10_cnt_reg_n_0_[0] ),
        .I1(\lp_st10_cnt_reg_n_0_[1] ),
        .I2(\lp_st10_cnt_reg_n_0_[2] ),
        .I3(\lp_st10_cnt_reg_n_0_[3] ),
        .I4(\lp_st10_cnt_reg_n_0_[4] ),
        .O(\lp_st10_cnt[6]_i_2_n_0 ));
  FDCE \lp_st10_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[0]),
        .Q(\lp_st10_cnt_reg_n_0_[0] ));
  FDCE \lp_st10_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[1]),
        .Q(\lp_st10_cnt_reg_n_0_[1] ));
  FDCE \lp_st10_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[2]),
        .Q(\lp_st10_cnt_reg_n_0_[2] ));
  FDCE \lp_st10_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[3]),
        .Q(\lp_st10_cnt_reg_n_0_[3] ));
  FDCE \lp_st10_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[4]),
        .Q(\lp_st10_cnt_reg_n_0_[4] ));
  FDCE \lp_st10_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[5]),
        .Q(\lp_st10_cnt_reg_n_0_[5] ));
  FDCE \lp_st10_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st10_cnt[6]),
        .Q(\lp_st10_cnt_reg_n_0_[6] ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st11_cnt[0]_i_1 
       (.I0(en_lp_11_cnt_reg_n_0),
        .I1(\lp_st11_cnt_reg_n_0_[0] ),
        .O(lp_st11_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st11_cnt[1]_i_1 
       (.I0(\lp_st11_cnt[1]_i_2_n_0 ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(en_lp_11_cnt_reg_n_0),
        .I3(\lp_st11_cnt_reg_n_0_[0] ),
        .O(lp_st11_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st11_cnt[1]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[3] ),
        .I1(\lp_st11_cnt_reg_n_0_[2] ),
        .I2(\lp_st11_cnt_reg_n_0_[4] ),
        .I3(\lp_st11_cnt_reg_n_0_[5] ),
        .I4(\lp_st11_cnt_reg_n_0_[6] ),
        .O(\lp_st11_cnt[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st11_cnt[2]_i_1 
       (.I0(\lp_st11_cnt_reg_n_0_[0] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(en_lp_11_cnt_reg_n_0),
        .I3(\lp_st11_cnt_reg_n_0_[2] ),
        .O(lp_st11_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st11_cnt[3]_i_1 
       (.I0(\lp_st11_cnt_reg_n_0_[2] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(\lp_st11_cnt[3]_i_2_n_0 ),
        .I3(\lp_st11_cnt_reg_n_0_[0] ),
        .I4(en_lp_11_cnt_reg_n_0),
        .I5(\lp_st11_cnt_reg_n_0_[3] ),
        .O(lp_st11_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st11_cnt[3]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[6] ),
        .I1(\lp_st11_cnt_reg_n_0_[5] ),
        .I2(\lp_st11_cnt_reg_n_0_[4] ),
        .O(\lp_st11_cnt[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st11_cnt[4]_i_1 
       (.I0(\lp_st11_cnt_reg_n_0_[3] ),
        .I1(\lp_st11_cnt_reg_n_0_[2] ),
        .I2(\lp_st11_cnt_reg_n_0_[1] ),
        .I3(\lp_st11_cnt_reg_n_0_[0] ),
        .I4(en_lp_11_cnt_reg_n_0),
        .I5(\lp_st11_cnt_reg_n_0_[4] ),
        .O(lp_st11_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st11_cnt[5]_i_1 
       (.I0(\lp_st11_cnt[5]_i_2_n_0 ),
        .I1(\lp_st11_cnt_reg_n_0_[2] ),
        .I2(\lp_st11_cnt_reg_n_0_[3] ),
        .I3(\lp_st11_cnt_reg_n_0_[4] ),
        .I4(en_lp_11_cnt_reg_n_0),
        .I5(\lp_st11_cnt_reg_n_0_[5] ),
        .O(lp_st11_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st11_cnt[5]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[0] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .O(\lp_st11_cnt[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st11_cnt[6]_i_1 
       (.I0(\lp_st11_cnt[6]_i_2_n_0 ),
        .I1(\lp_st11_cnt_reg_n_0_[5] ),
        .I2(en_lp_11_cnt_reg_n_0),
        .I3(\lp_st11_cnt_reg_n_0_[6] ),
        .O(lp_st11_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st11_cnt[6]_i_2 
       (.I0(\lp_st11_cnt_reg_n_0_[0] ),
        .I1(\lp_st11_cnt_reg_n_0_[1] ),
        .I2(\lp_st11_cnt_reg_n_0_[2] ),
        .I3(\lp_st11_cnt_reg_n_0_[3] ),
        .I4(\lp_st11_cnt_reg_n_0_[4] ),
        .O(\lp_st11_cnt[6]_i_2_n_0 ));
  FDCE \lp_st11_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[0]),
        .Q(\lp_st11_cnt_reg_n_0_[0] ));
  FDCE \lp_st11_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[1]),
        .Q(\lp_st11_cnt_reg_n_0_[1] ));
  FDCE \lp_st11_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[2]),
        .Q(\lp_st11_cnt_reg_n_0_[2] ));
  FDCE \lp_st11_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[3]),
        .Q(\lp_st11_cnt_reg_n_0_[3] ));
  FDCE \lp_st11_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[4]),
        .Q(\lp_st11_cnt_reg_n_0_[4] ));
  FDCE \lp_st11_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[5]),
        .Q(\lp_st11_cnt_reg_n_0_[5] ));
  FDCE \lp_st11_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st11_cnt[6]),
        .Q(\lp_st11_cnt_reg_n_0_[6] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \post_count[0]_i_10 
       (.I0(post_count_reg[30]),
        .I1(post_count_reg[10]),
        .I2(post_count_reg[21]),
        .I3(post_count_reg[22]),
        .O(\post_count[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \post_count[0]_i_11 
       (.I0(post_count_reg[28]),
        .I1(post_count_reg[9]),
        .I2(post_count_reg[18]),
        .I3(post_count_reg[17]),
        .O(\post_count[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \post_count[0]_i_12 
       (.I0(post_count_reg[27]),
        .I1(post_count_reg[13]),
        .I2(post_count_reg[19]),
        .I3(post_count_reg[20]),
        .O(\post_count[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \post_count[0]_i_2 
       (.I0(\post_count[0]_i_4_n_0 ),
        .I1(\post_count[0]_i_5_n_0 ),
        .I2(\post_count[0]_i_6_n_0 ),
        .I3(\post_count[0]_i_7_n_0 ),
        .O(post_count));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \post_count[0]_i_4 
       (.I0(post_count_reg[12]),
        .I1(post_count_reg[25]),
        .I2(post_count_reg[0]),
        .I3(post_count_reg[3]),
        .I4(\post_count[0]_i_9_n_0 ),
        .O(\post_count[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \post_count[0]_i_5 
       (.I0(post_count_reg[8]),
        .I1(post_count_reg[29]),
        .I2(post_count_reg[4]),
        .I3(post_count_reg[7]),
        .I4(\post_count[0]_i_10_n_0 ),
        .O(\post_count[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \post_count[0]_i_6 
       (.I0(post_count_reg[11]),
        .I1(post_count_reg[31]),
        .I2(post_count_reg[5]),
        .I3(post_count_reg[16]),
        .I4(\post_count[0]_i_11_n_0 ),
        .O(\post_count[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \post_count[0]_i_7 
       (.I0(post_count_reg[15]),
        .I1(post_count_reg[24]),
        .I2(post_count_reg[2]),
        .I3(post_count_reg[1]),
        .I4(\post_count[0]_i_12_n_0 ),
        .O(\post_count[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \post_count[0]_i_8 
       (.I0(post_count_reg[0]),
        .O(\post_count[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \post_count[0]_i_9 
       (.I0(post_count_reg[26]),
        .I1(post_count_reg[14]),
        .I2(post_count_reg[23]),
        .I3(post_count_reg[6]),
        .O(\post_count[0]_i_9_n_0 ));
  FDRE \post_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_15 ),
        .Q(post_count_reg[0]),
        .R(\post_count_reg[31]_0 ));
  CARRY8 \post_count_reg[0]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\post_count_reg[0]_i_3_n_0 ,\post_count_reg[0]_i_3_n_1 ,\post_count_reg[0]_i_3_n_2 ,\post_count_reg[0]_i_3_n_3 ,\post_count_reg[0]_i_3_n_4 ,\post_count_reg[0]_i_3_n_5 ,\post_count_reg[0]_i_3_n_6 ,\post_count_reg[0]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\post_count_reg[0]_i_3_n_8 ,\post_count_reg[0]_i_3_n_9 ,\post_count_reg[0]_i_3_n_10 ,\post_count_reg[0]_i_3_n_11 ,\post_count_reg[0]_i_3_n_12 ,\post_count_reg[0]_i_3_n_13 ,\post_count_reg[0]_i_3_n_14 ,\post_count_reg[0]_i_3_n_15 }),
        .S({post_count_reg[7:1],\post_count[0]_i_8_n_0 }));
  FDRE \post_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_13 ),
        .Q(post_count_reg[10]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_12 ),
        .Q(post_count_reg[11]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_11 ),
        .Q(post_count_reg[12]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_10 ),
        .Q(post_count_reg[13]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_9 ),
        .Q(post_count_reg[14]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_8 ),
        .Q(post_count_reg[15]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_15 ),
        .Q(post_count_reg[16]),
        .R(\post_count_reg[31]_0 ));
  CARRY8 \post_count_reg[16]_i_1 
       (.CI(\post_count_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\post_count_reg[16]_i_1_n_0 ,\post_count_reg[16]_i_1_n_1 ,\post_count_reg[16]_i_1_n_2 ,\post_count_reg[16]_i_1_n_3 ,\post_count_reg[16]_i_1_n_4 ,\post_count_reg[16]_i_1_n_5 ,\post_count_reg[16]_i_1_n_6 ,\post_count_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[16]_i_1_n_8 ,\post_count_reg[16]_i_1_n_9 ,\post_count_reg[16]_i_1_n_10 ,\post_count_reg[16]_i_1_n_11 ,\post_count_reg[16]_i_1_n_12 ,\post_count_reg[16]_i_1_n_13 ,\post_count_reg[16]_i_1_n_14 ,\post_count_reg[16]_i_1_n_15 }),
        .S(post_count_reg[23:16]));
  FDRE \post_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_14 ),
        .Q(post_count_reg[17]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_13 ),
        .Q(post_count_reg[18]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_12 ),
        .Q(post_count_reg[19]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_14 ),
        .Q(post_count_reg[1]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_11 ),
        .Q(post_count_reg[20]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_10 ),
        .Q(post_count_reg[21]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_9 ),
        .Q(post_count_reg[22]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[16]_i_1_n_8 ),
        .Q(post_count_reg[23]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_15 ),
        .Q(post_count_reg[24]),
        .R(\post_count_reg[31]_0 ));
  CARRY8 \post_count_reg[24]_i_1 
       (.CI(\post_count_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_post_count_reg[24]_i_1_CO_UNCONNECTED [7],\post_count_reg[24]_i_1_n_1 ,\post_count_reg[24]_i_1_n_2 ,\post_count_reg[24]_i_1_n_3 ,\post_count_reg[24]_i_1_n_4 ,\post_count_reg[24]_i_1_n_5 ,\post_count_reg[24]_i_1_n_6 ,\post_count_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[24]_i_1_n_8 ,\post_count_reg[24]_i_1_n_9 ,\post_count_reg[24]_i_1_n_10 ,\post_count_reg[24]_i_1_n_11 ,\post_count_reg[24]_i_1_n_12 ,\post_count_reg[24]_i_1_n_13 ,\post_count_reg[24]_i_1_n_14 ,\post_count_reg[24]_i_1_n_15 }),
        .S(post_count_reg[31:24]));
  FDRE \post_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_14 ),
        .Q(post_count_reg[25]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_13 ),
        .Q(post_count_reg[26]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_12 ),
        .Q(post_count_reg[27]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_11 ),
        .Q(post_count_reg[28]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_10 ),
        .Q(post_count_reg[29]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_13 ),
        .Q(post_count_reg[2]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_9 ),
        .Q(post_count_reg[30]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[24]_i_1_n_8 ),
        .Q(post_count_reg[31]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_12 ),
        .Q(post_count_reg[3]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_11 ),
        .Q(post_count_reg[4]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_10 ),
        .Q(post_count_reg[5]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_9 ),
        .Q(post_count_reg[6]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[0]_i_3_n_8 ),
        .Q(post_count_reg[7]),
        .R(\post_count_reg[31]_0 ));
  FDRE \post_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_15 ),
        .Q(post_count_reg[8]),
        .R(\post_count_reg[31]_0 ));
  CARRY8 \post_count_reg[8]_i_1 
       (.CI(\post_count_reg[0]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\post_count_reg[8]_i_1_n_0 ,\post_count_reg[8]_i_1_n_1 ,\post_count_reg[8]_i_1_n_2 ,\post_count_reg[8]_i_1_n_3 ,\post_count_reg[8]_i_1_n_4 ,\post_count_reg[8]_i_1_n_5 ,\post_count_reg[8]_i_1_n_6 ,\post_count_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\post_count_reg[8]_i_1_n_8 ,\post_count_reg[8]_i_1_n_9 ,\post_count_reg[8]_i_1_n_10 ,\post_count_reg[8]_i_1_n_11 ,\post_count_reg[8]_i_1_n_12 ,\post_count_reg[8]_i_1_n_13 ,\post_count_reg[8]_i_1_n_14 ,\post_count_reg[8]_i_1_n_15 }),
        .S(post_count_reg[15:8]));
  FDRE \post_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(post_count),
        .D(\post_count_reg[8]_i_1_n_14 ),
        .Q(post_count_reg[9]),
        .R(\post_count_reg[31]_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_zero_cnt[0]_i_4 
       (.I0(prepare_zero_cnt_reg[0]),
        .O(\prepare_zero_cnt[0]_i_4_n_0 ));
  FDRE \prepare_zero_cnt_reg[0] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_15 ),
        .Q(prepare_zero_cnt_reg[0]),
        .R(xmit_clk_r0));
  CARRY8 \prepare_zero_cnt_reg[0]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\prepare_zero_cnt_reg[0]_i_3_n_0 ,\prepare_zero_cnt_reg[0]_i_3_n_1 ,\prepare_zero_cnt_reg[0]_i_3_n_2 ,\prepare_zero_cnt_reg[0]_i_3_n_3 ,\prepare_zero_cnt_reg[0]_i_3_n_4 ,\prepare_zero_cnt_reg[0]_i_3_n_5 ,\prepare_zero_cnt_reg[0]_i_3_n_6 ,\prepare_zero_cnt_reg[0]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\prepare_zero_cnt_reg[0]_i_3_n_8 ,\prepare_zero_cnt_reg[0]_i_3_n_9 ,\prepare_zero_cnt_reg[0]_i_3_n_10 ,\prepare_zero_cnt_reg[0]_i_3_n_11 ,\prepare_zero_cnt_reg[0]_i_3_n_12 ,\prepare_zero_cnt_reg[0]_i_3_n_13 ,\prepare_zero_cnt_reg[0]_i_3_n_14 ,\prepare_zero_cnt_reg[0]_i_3_n_15 }),
        .S({prepare_zero_cnt_reg[7:1],\prepare_zero_cnt[0]_i_4_n_0 }));
  FDRE \prepare_zero_cnt_reg[10] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_13 ),
        .Q(prepare_zero_cnt_reg[10]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[11] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_12 ),
        .Q(prepare_zero_cnt_reg[11]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[12] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_11 ),
        .Q(prepare_zero_cnt_reg[12]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[13] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_10 ),
        .Q(prepare_zero_cnt_reg[13]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[14] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_9 ),
        .Q(prepare_zero_cnt_reg[14]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[15] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_8 ),
        .Q(prepare_zero_cnt_reg[15]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[16] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_15 ),
        .Q(prepare_zero_cnt_reg[16]),
        .R(xmit_clk_r0));
  CARRY8 \prepare_zero_cnt_reg[16]_i_1 
       (.CI(\prepare_zero_cnt_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\prepare_zero_cnt_reg[16]_i_1_n_0 ,\prepare_zero_cnt_reg[16]_i_1_n_1 ,\prepare_zero_cnt_reg[16]_i_1_n_2 ,\prepare_zero_cnt_reg[16]_i_1_n_3 ,\prepare_zero_cnt_reg[16]_i_1_n_4 ,\prepare_zero_cnt_reg[16]_i_1_n_5 ,\prepare_zero_cnt_reg[16]_i_1_n_6 ,\prepare_zero_cnt_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[16]_i_1_n_8 ,\prepare_zero_cnt_reg[16]_i_1_n_9 ,\prepare_zero_cnt_reg[16]_i_1_n_10 ,\prepare_zero_cnt_reg[16]_i_1_n_11 ,\prepare_zero_cnt_reg[16]_i_1_n_12 ,\prepare_zero_cnt_reg[16]_i_1_n_13 ,\prepare_zero_cnt_reg[16]_i_1_n_14 ,\prepare_zero_cnt_reg[16]_i_1_n_15 }),
        .S(prepare_zero_cnt_reg[23:16]));
  FDRE \prepare_zero_cnt_reg[17] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_14 ),
        .Q(prepare_zero_cnt_reg[17]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[18] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_13 ),
        .Q(prepare_zero_cnt_reg[18]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[19] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_12 ),
        .Q(prepare_zero_cnt_reg[19]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[1] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_14 ),
        .Q(prepare_zero_cnt_reg[1]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[20] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_11 ),
        .Q(prepare_zero_cnt_reg[20]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[21] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_10 ),
        .Q(prepare_zero_cnt_reg[21]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[22] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_9 ),
        .Q(prepare_zero_cnt_reg[22]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[23] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[16]_i_1_n_8 ),
        .Q(prepare_zero_cnt_reg[23]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[24] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_15 ),
        .Q(prepare_zero_cnt_reg[24]),
        .R(xmit_clk_r0));
  CARRY8 \prepare_zero_cnt_reg[24]_i_1 
       (.CI(\prepare_zero_cnt_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_prepare_zero_cnt_reg[24]_i_1_CO_UNCONNECTED [7],\prepare_zero_cnt_reg[24]_i_1_n_1 ,\prepare_zero_cnt_reg[24]_i_1_n_2 ,\prepare_zero_cnt_reg[24]_i_1_n_3 ,\prepare_zero_cnt_reg[24]_i_1_n_4 ,\prepare_zero_cnt_reg[24]_i_1_n_5 ,\prepare_zero_cnt_reg[24]_i_1_n_6 ,\prepare_zero_cnt_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[24]_i_1_n_8 ,\prepare_zero_cnt_reg[24]_i_1_n_9 ,\prepare_zero_cnt_reg[24]_i_1_n_10 ,\prepare_zero_cnt_reg[24]_i_1_n_11 ,\prepare_zero_cnt_reg[24]_i_1_n_12 ,\prepare_zero_cnt_reg[24]_i_1_n_13 ,\prepare_zero_cnt_reg[24]_i_1_n_14 ,\prepare_zero_cnt_reg[24]_i_1_n_15 }),
        .S(prepare_zero_cnt_reg[31:24]));
  FDRE \prepare_zero_cnt_reg[25] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_14 ),
        .Q(prepare_zero_cnt_reg[25]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[26] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_13 ),
        .Q(prepare_zero_cnt_reg[26]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[27] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_12 ),
        .Q(prepare_zero_cnt_reg[27]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[28] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_11 ),
        .Q(prepare_zero_cnt_reg[28]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[29] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_10 ),
        .Q(prepare_zero_cnt_reg[29]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[2] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_13 ),
        .Q(prepare_zero_cnt_reg[2]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[30] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_9 ),
        .Q(prepare_zero_cnt_reg[30]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[31] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[24]_i_1_n_8 ),
        .Q(prepare_zero_cnt_reg[31]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[3] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_12 ),
        .Q(prepare_zero_cnt_reg[3]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[4] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_11 ),
        .Q(prepare_zero_cnt_reg[4]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[5] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_10 ),
        .Q(prepare_zero_cnt_reg[5]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[6] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_9 ),
        .Q(prepare_zero_cnt_reg[6]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[7] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[0]_i_3_n_8 ),
        .Q(prepare_zero_cnt_reg[7]),
        .R(xmit_clk_r0));
  FDRE \prepare_zero_cnt_reg[8] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_15 ),
        .Q(prepare_zero_cnt_reg[8]),
        .R(xmit_clk_r0));
  CARRY8 \prepare_zero_cnt_reg[8]_i_1 
       (.CI(\prepare_zero_cnt_reg[0]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\prepare_zero_cnt_reg[8]_i_1_n_0 ,\prepare_zero_cnt_reg[8]_i_1_n_1 ,\prepare_zero_cnt_reg[8]_i_1_n_2 ,\prepare_zero_cnt_reg[8]_i_1_n_3 ,\prepare_zero_cnt_reg[8]_i_1_n_4 ,\prepare_zero_cnt_reg[8]_i_1_n_5 ,\prepare_zero_cnt_reg[8]_i_1_n_6 ,\prepare_zero_cnt_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\prepare_zero_cnt_reg[8]_i_1_n_8 ,\prepare_zero_cnt_reg[8]_i_1_n_9 ,\prepare_zero_cnt_reg[8]_i_1_n_10 ,\prepare_zero_cnt_reg[8]_i_1_n_11 ,\prepare_zero_cnt_reg[8]_i_1_n_12 ,\prepare_zero_cnt_reg[8]_i_1_n_13 ,\prepare_zero_cnt_reg[8]_i_1_n_14 ,\prepare_zero_cnt_reg[8]_i_1_n_15 }),
        .S(prepare_zero_cnt_reg[15:8]));
  FDRE \prepare_zero_cnt_reg[9] 
       (.C(tx_div4_clk),
        .CE(en_cal_seq_xmit_byteclk_sync_i_n_1),
        .D(\prepare_zero_cnt_reg[8]_i_1_n_14 ),
        .Q(prepare_zero_cnt_reg[9]),
        .R(xmit_clk_r0));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'hB)) 
    reset_timer_r_i_7
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .O(reset_timer_r_i_7_n_0));
  FDSE reset_timer_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_14),
        .Q(reset_timer_r_reg_n_0),
        .S(\cl_tx_state_reg[3]_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_23 start_clkpost_byteclk_sync_i
       (.out(s_level_out_d3_reg),
        .s_level_out_d1_cdc_to_reg_0(start_clkpost_r_reg_n_0),
        .s_level_out_d3_reg_0(start_clkpost_byteclk_sync_i_n_1),
        .time_out_post(time_out_post),
        .time_out_post_reg(\post_count[0]_i_4_n_0 ),
        .time_out_post_reg_0(\post_count[0]_i_5_n_0 ),
        .time_out_post_reg_1(\post_count[0]_i_6_n_0 ),
        .time_out_post_reg_2(\post_count[0]_i_7_n_0 ),
        .tx_div4_clk(tx_div4_clk));
  FDRE start_clkpost_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_negedge_sync_i_n_5),
        .Q(start_clkpost_r_reg_n_0),
        .R(\cl_tx_state_reg[3]_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_24 start_clkzero_byteclk_sync_i
       (.cl_txrequesths(cl_txrequesths),
        .init_done_byteclk_pos_r(init_done_byteclk_pos_r),
        .out(start_clkzero_byteclk_sync),
        .\prepare_zero_cnt_reg[31] (start_clkzero_byteclk_sync_r_reg_0),
        .s_level_out_d1_cdc_to_reg_0(start_clkzero_r_reg_n_0),
        .start_clkzero_byteclk_sync_r(start_clkzero_byteclk_sync_r),
        .time_out_post(time_out_post),
        .tx_div4_clk(tx_div4_clk),
        .xmit_clk_r0(xmit_clk_r0),
        .xmit_clk_r_reg(start_clkzero_byteclk_sync_i_n_2),
        .xmit_clk_r_reg_0(xmit_clk_r_reg_n_0),
        .xmit_clk_r_reg_1(en_cal_seq_xmit_byteclk_sync),
        .xmit_clk_r_reg_2(xmit_clk_r_i_2_n_0));
  FDRE start_clkzero_byteclk_sync_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(start_clkzero_byteclk_sync),
        .Q(start_clkzero_byteclk_sync_r),
        .R(start_clkzero_byteclk_sync_r_reg_0));
  LUT6 #(
    .INIT(64'h5455545500000400)) 
    start_clkzero_r_i_1
       (.I0(system_rst),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .I4(\cl_tx_state_reg_n_0_[2] ),
        .I5(start_clkzero_r_reg_n_0),
        .O(start_clkzero_r_i_1_n_0));
  FDCE start_clkzero_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(start_clkzero_r_i_1_n_0),
        .Q(start_clkzero_r_reg_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    \time_out_counter[0]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[0]),
        .O(p_0_in[0]));
  LUT5 #(
    .INIT(32'h51550400)) 
    \time_out_counter[10]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[8]),
        .I2(\time_out_counter[11]_i_2_n_0 ),
        .I3(time_out_counter_reg[9]),
        .I4(time_out_counter_reg[10]),
        .O(\time_out_counter[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5155555504000000)) 
    \time_out_counter[11]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[9]),
        .I2(\time_out_counter[11]_i_2_n_0 ),
        .I3(time_out_counter_reg[8]),
        .I4(time_out_counter_reg[10]),
        .I5(time_out_counter_reg[11]),
        .O(\time_out_counter[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    \time_out_counter[11]_i_2 
       (.I0(time_out_counter_reg[6]),
        .I1(\time_out_counter[6]_i_2_n_0 ),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[4]),
        .I4(time_out_counter_reg[5]),
        .I5(time_out_counter_reg[7]),
        .O(\time_out_counter[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h5104)) 
    \time_out_counter[12]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[11]),
        .I2(\time_out_counter[13]_i_4_n_0 ),
        .I3(time_out_counter_reg[12]),
        .O(\time_out_counter[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \time_out_counter[13]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(\time_out_counter[13]_i_3_n_0 ),
        .O(\time_out_counter[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'h0000BF40)) 
    \time_out_counter[13]_i_2 
       (.I0(\time_out_counter[13]_i_4_n_0 ),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[12]),
        .I3(time_out_counter_reg[13]),
        .I4(reset_timer_r_reg_n_0),
        .O(p_0_in[13]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFDFFF)) 
    \time_out_counter[13]_i_3 
       (.I0(\time_out_counter[13]_i_5_n_0 ),
        .I1(\time_out_counter[13]_i_6_n_0 ),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[4]),
        .I4(en_lp_11_cnt_i_2_n_0),
        .I5(\time_out_counter[13]_i_7_n_0 ),
        .O(\time_out_counter[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \time_out_counter[13]_i_4 
       (.I0(time_out_counter_reg[9]),
        .I1(time_out_counter_reg[7]),
        .I2(\time_out_counter[9]_i_2_n_0 ),
        .I3(time_out_counter_reg[6]),
        .I4(time_out_counter_reg[8]),
        .I5(time_out_counter_reg[10]),
        .O(\time_out_counter[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \time_out_counter[13]_i_5 
       (.I0(time_out_counter_reg[12]),
        .I1(time_out_counter_reg[11]),
        .I2(time_out_counter_reg[8]),
        .I3(time_out_counter_reg[13]),
        .I4(time_out_counter_reg[9]),
        .I5(time_out_counter_reg[10]),
        .O(\time_out_counter[13]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \time_out_counter[13]_i_6 
       (.I0(\cl_tx_state_reg_n_0_[0] ),
        .I1(\cl_tx_state_reg_n_0_[2] ),
        .I2(time_out_counter_reg[1]),
        .I3(time_out_counter_reg[0]),
        .O(\time_out_counter[13]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \time_out_counter[13]_i_7 
       (.I0(time_out_counter_reg[5]),
        .I1(time_out_counter_reg[2]),
        .I2(time_out_counter_reg[7]),
        .I3(time_out_counter_reg[6]),
        .O(\time_out_counter[13]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \time_out_counter[1]_i_1 
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[0]),
        .I2(reset_timer_r_reg_n_0),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h1540)) 
    \time_out_counter[2]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[1]),
        .I3(time_out_counter_reg[2]),
        .O(\time_out_counter[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h15554000)) 
    \time_out_counter[3]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[1]),
        .I2(time_out_counter_reg[0]),
        .I3(time_out_counter_reg[2]),
        .I4(time_out_counter_reg[3]),
        .O(\time_out_counter[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1555555540000000)) 
    \time_out_counter[4]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[2]),
        .I2(time_out_counter_reg[0]),
        .I3(time_out_counter_reg[1]),
        .I4(time_out_counter_reg[3]),
        .I5(time_out_counter_reg[4]),
        .O(\time_out_counter[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55150040)) 
    \time_out_counter[5]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[4]),
        .I2(time_out_counter_reg[3]),
        .I3(\time_out_counter[6]_i_2_n_0 ),
        .I4(time_out_counter_reg[5]),
        .O(\time_out_counter[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4555555510000000)) 
    \time_out_counter[6]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(\time_out_counter[6]_i_2_n_0 ),
        .I2(time_out_counter_reg[3]),
        .I3(time_out_counter_reg[4]),
        .I4(time_out_counter_reg[5]),
        .I5(time_out_counter_reg[6]),
        .O(\time_out_counter[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \time_out_counter[6]_i_2 
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[2]),
        .O(\time_out_counter[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h4510)) 
    \time_out_counter[7]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(\time_out_counter[9]_i_2_n_0 ),
        .I2(time_out_counter_reg[6]),
        .I3(time_out_counter_reg[7]),
        .O(\time_out_counter[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'h51550400)) 
    \time_out_counter[8]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[6]),
        .I2(\time_out_counter[9]_i_2_n_0 ),
        .I3(time_out_counter_reg[7]),
        .I4(time_out_counter_reg[8]),
        .O(\time_out_counter[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5155555504000000)) 
    \time_out_counter[9]_i_1 
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_counter_reg[7]),
        .I2(\time_out_counter[9]_i_2_n_0 ),
        .I3(time_out_counter_reg[6]),
        .I4(time_out_counter_reg[8]),
        .I5(time_out_counter_reg[9]),
        .O(\time_out_counter[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \time_out_counter[9]_i_2 
       (.I0(time_out_counter_reg[1]),
        .I1(time_out_counter_reg[0]),
        .I2(time_out_counter_reg[2]),
        .I3(time_out_counter_reg[3]),
        .I4(time_out_counter_reg[4]),
        .I5(time_out_counter_reg[5]),
        .O(\time_out_counter[9]_i_2_n_0 ));
  FDCE \time_out_counter_reg[0] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_0_in[0]),
        .Q(time_out_counter_reg[0]));
  FDCE \time_out_counter_reg[10] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[10]_i_1_n_0 ),
        .Q(time_out_counter_reg[10]));
  FDCE \time_out_counter_reg[11] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[11]_i_1_n_0 ),
        .Q(time_out_counter_reg[11]));
  FDCE \time_out_counter_reg[12] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[12]_i_1_n_0 ),
        .Q(time_out_counter_reg[12]));
  FDCE \time_out_counter_reg[13] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_0_in[13]),
        .Q(time_out_counter_reg[13]));
  FDCE \time_out_counter_reg[1] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_0_in[1]),
        .Q(time_out_counter_reg[1]));
  FDCE \time_out_counter_reg[2] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[2]_i_1_n_0 ),
        .Q(time_out_counter_reg[2]));
  FDCE \time_out_counter_reg[3] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[3]_i_1_n_0 ),
        .Q(time_out_counter_reg[3]));
  FDCE \time_out_counter_reg[4] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[4]_i_1_n_0 ),
        .Q(time_out_counter_reg[4]));
  FDCE \time_out_counter_reg[5] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[5]_i_1_n_0 ),
        .Q(time_out_counter_reg[5]));
  FDCE \time_out_counter_reg[6] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[6]_i_1_n_0 ),
        .Q(time_out_counter_reg[6]));
  FDCE \time_out_counter_reg[7] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[7]_i_1_n_0 ),
        .Q(time_out_counter_reg[7]));
  FDCE \time_out_counter_reg[8] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[8]_i_1_n_0 ),
        .Q(time_out_counter_reg[8]));
  FDCE \time_out_counter_reg[9] 
       (.C(core_clk),
        .CE(\time_out_counter[13]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\time_out_counter[9]_i_1_n_0 ),
        .Q(time_out_counter_reg[9]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h51)) 
    time_out_hsexit_i_1
       (.I0(reset_timer_r_reg_n_0),
        .I1(\time_out_counter[13]_i_3_n_0 ),
        .I2(time_out_hsexit_reg_n_0),
        .O(time_out_hsexit_i_1_n_0));
  FDCE time_out_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(time_out_hsexit_i_1_n_0),
        .Q(time_out_hsexit_reg_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_25 time_out_post_coreclk_sync_i
       (.O({time_out_post_coreclk_sync_i_n_4,time_out_post_coreclk_sync_i_n_5,time_out_post_coreclk_sync_i_n_6,time_out_post_coreclk_sync_i_n_7,time_out_post_coreclk_sync_i_n_8,time_out_post_coreclk_sync_i_n_9,time_out_post_coreclk_sync_i_n_10,time_out_post_coreclk_sync_i_n_11}),
        .\cl_tx_state_reg[0] (time_out_post_coreclk_sync_i_n_37),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .out(time_out_post_coreclk_sync),
        .reset_timer_r_i_2(cl_txrequesths_coreclk_sync),
        .reset_timer_r_i_3_0(time_out_hsexit_reg_n_0),
        .reset_timer_r_reg(cl_txrequesths_coreclk_sync_i_n_9),
        .s_level_out_d3_reg_0(time_out_post_coreclk_sync_i_n_1),
        .time_out_post(time_out_post),
        .time_out_trail(time_out_trail),
        .time_out_trail_reg(time_out_post_coreclk_sync_i_n_2),
        .time_out_trail_reg_0(time_out_post_coreclk_sync_i_n_3),
        .time_out_trail_reg_1(time_out_post_coreclk_sync_i_n_36),
        .time_out_trail_reg_2(\trail_count[0]_i_3_n_0 ),
        .trail_count_reg(trail_count_reg),
        .\trail_count_reg[15] ({time_out_post_coreclk_sync_i_n_12,time_out_post_coreclk_sync_i_n_13,time_out_post_coreclk_sync_i_n_14,time_out_post_coreclk_sync_i_n_15,time_out_post_coreclk_sync_i_n_16,time_out_post_coreclk_sync_i_n_17,time_out_post_coreclk_sync_i_n_18,time_out_post_coreclk_sync_i_n_19}),
        .\trail_count_reg[23] ({time_out_post_coreclk_sync_i_n_20,time_out_post_coreclk_sync_i_n_21,time_out_post_coreclk_sync_i_n_22,time_out_post_coreclk_sync_i_n_23,time_out_post_coreclk_sync_i_n_24,time_out_post_coreclk_sync_i_n_25,time_out_post_coreclk_sync_i_n_26,time_out_post_coreclk_sync_i_n_27}),
        .\trail_count_reg[31] ({time_out_post_coreclk_sync_i_n_28,time_out_post_coreclk_sync_i_n_29,time_out_post_coreclk_sync_i_n_30,time_out_post_coreclk_sync_i_n_31,time_out_post_coreclk_sync_i_n_32,time_out_post_coreclk_sync_i_n_33,time_out_post_coreclk_sync_i_n_34,time_out_post_coreclk_sync_i_n_35}),
        .\trail_count_reg[31]_0 (\cl_tx_state_reg_n_0_[0] ),
        .\trail_count_reg[31]_1 (\cl_tx_state_reg_n_0_[2] ),
        .\trail_count_reg[31]_2 (\cl_tx_state_reg_n_0_[3] ),
        .\trail_count_reg[31]_3 (\cl_tx_state_reg_n_0_[1] ));
  FDRE time_out_post_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(start_clkpost_byteclk_sync_i_n_1),
        .Q(time_out_post),
        .R(start_clkzero_byteclk_sync_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h54)) 
    time_out_prepare_i_1
       (.I0(reset_timer_r_reg_n_0),
        .I1(time_out_prepare_i_2_n_0),
        .I2(time_out_prepare_reg_n_0),
        .O(time_out_prepare_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    time_out_prepare_i_2
       (.I0(\time_out_counter[13]_i_5_n_0 ),
        .I1(time_out_prepare_i_3_n_0),
        .I2(time_out_counter_reg[5]),
        .I3(time_out_counter_reg[2]),
        .I4(time_out_counter_reg[7]),
        .I5(time_out_counter_reg[6]),
        .O(time_out_prepare_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFDFFFF)) 
    time_out_prepare_i_3
       (.I0(hs_clk_state_r_i_6_n_0),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(time_out_counter_reg[4]),
        .I4(time_out_counter_reg[3]),
        .I5(time_out_prepare_i_4_n_0),
        .O(time_out_prepare_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h7)) 
    time_out_prepare_i_4
       (.I0(time_out_counter_reg[0]),
        .I1(time_out_counter_reg[1]),
        .O(time_out_prepare_i_4_n_0));
  FDCE time_out_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(time_out_prepare_i_1_n_0),
        .Q(time_out_prepare_reg_n_0));
  FDCE time_out_trail_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_36),
        .Q(time_out_trail));
  LUT6 #(
    .INIT(64'h00000C0000000800)) 
    time_out_zero_i_1
       (.I0(\zero_count[31]_i_3_n_0 ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .I5(time_out_zero),
        .O(time_out_zero_i_1_n_0));
  FDCE time_out_zero_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(time_out_zero_i_1_n_0),
        .Q(time_out_zero));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \trail_count[0]_i_13 
       (.I0(trail_count_reg[27]),
        .I1(trail_count_reg[31]),
        .I2(trail_count_reg[2]),
        .I3(trail_count_reg[4]),
        .I4(\trail_count[0]_i_17_n_0 ),
        .O(\trail_count[0]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00000004)) 
    \trail_count[0]_i_14 
       (.I0(trail_count_reg[28]),
        .I1(trail_count_reg[0]),
        .I2(trail_count_reg[25]),
        .I3(trail_count_reg[29]),
        .I4(\trail_count[0]_i_18_n_0 ),
        .O(\trail_count[0]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \trail_count[0]_i_15 
       (.I0(trail_count_reg[10]),
        .I1(trail_count_reg[12]),
        .I2(trail_count_reg[22]),
        .I3(trail_count_reg[23]),
        .I4(\trail_count[0]_i_19_n_0 ),
        .O(\trail_count[0]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \trail_count[0]_i_16 
       (.I0(trail_count_reg[13]),
        .I1(trail_count_reg[19]),
        .I2(trail_count_reg[6]),
        .I3(trail_count_reg[17]),
        .I4(\trail_count[0]_i_20_n_0 ),
        .O(\trail_count[0]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \trail_count[0]_i_17 
       (.I0(trail_count_reg[26]),
        .I1(trail_count_reg[9]),
        .I2(trail_count_reg[1]),
        .I3(trail_count_reg[15]),
        .O(\trail_count[0]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \trail_count[0]_i_18 
       (.I0(trail_count_reg[14]),
        .I1(trail_count_reg[11]),
        .I2(trail_count_reg[8]),
        .I3(trail_count_reg[7]),
        .O(\trail_count[0]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \trail_count[0]_i_19 
       (.I0(trail_count_reg[24]),
        .I1(trail_count_reg[21]),
        .I2(trail_count_reg[20]),
        .I3(trail_count_reg[18]),
        .O(\trail_count[0]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \trail_count[0]_i_20 
       (.I0(trail_count_reg[30]),
        .I1(trail_count_reg[16]),
        .I2(trail_count_reg[3]),
        .I3(trail_count_reg[5]),
        .O(\trail_count[0]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \trail_count[0]_i_3 
       (.I0(\trail_count[0]_i_13_n_0 ),
        .I1(\trail_count[0]_i_14_n_0 ),
        .I2(\trail_count[0]_i_15_n_0 ),
        .I3(\trail_count[0]_i_16_n_0 ),
        .O(\trail_count[0]_i_3_n_0 ));
  FDCE \trail_count_reg[0] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_11),
        .Q(trail_count_reg[0]));
  FDCE \trail_count_reg[10] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_17),
        .Q(trail_count_reg[10]));
  FDCE \trail_count_reg[11] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_16),
        .Q(trail_count_reg[11]));
  FDCE \trail_count_reg[12] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_15),
        .Q(trail_count_reg[12]));
  FDCE \trail_count_reg[13] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_14),
        .Q(trail_count_reg[13]));
  FDCE \trail_count_reg[14] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_13),
        .Q(trail_count_reg[14]));
  FDCE \trail_count_reg[15] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_12),
        .Q(trail_count_reg[15]));
  FDCE \trail_count_reg[16] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_27),
        .Q(trail_count_reg[16]));
  FDCE \trail_count_reg[17] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_26),
        .Q(trail_count_reg[17]));
  FDCE \trail_count_reg[18] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_25),
        .Q(trail_count_reg[18]));
  FDCE \trail_count_reg[19] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_24),
        .Q(trail_count_reg[19]));
  FDCE \trail_count_reg[1] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_10),
        .Q(trail_count_reg[1]));
  FDCE \trail_count_reg[20] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_23),
        .Q(trail_count_reg[20]));
  FDCE \trail_count_reg[21] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_22),
        .Q(trail_count_reg[21]));
  FDCE \trail_count_reg[22] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_21),
        .Q(trail_count_reg[22]));
  FDCE \trail_count_reg[23] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_20),
        .Q(trail_count_reg[23]));
  FDCE \trail_count_reg[24] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_35),
        .Q(trail_count_reg[24]));
  FDCE \trail_count_reg[25] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_34),
        .Q(trail_count_reg[25]));
  FDCE \trail_count_reg[26] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_33),
        .Q(trail_count_reg[26]));
  FDCE \trail_count_reg[27] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_32),
        .Q(trail_count_reg[27]));
  FDCE \trail_count_reg[28] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_31),
        .Q(trail_count_reg[28]));
  FDCE \trail_count_reg[29] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_30),
        .Q(trail_count_reg[29]));
  FDCE \trail_count_reg[2] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_9),
        .Q(trail_count_reg[2]));
  FDCE \trail_count_reg[30] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_29),
        .Q(trail_count_reg[30]));
  FDCE \trail_count_reg[31] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_28),
        .Q(trail_count_reg[31]));
  FDCE \trail_count_reg[3] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_8),
        .Q(trail_count_reg[3]));
  FDCE \trail_count_reg[4] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_7),
        .Q(trail_count_reg[4]));
  FDCE \trail_count_reg[5] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_6),
        .Q(trail_count_reg[5]));
  FDCE \trail_count_reg[6] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_5),
        .Q(trail_count_reg[6]));
  FDCE \trail_count_reg[7] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_4),
        .Q(trail_count_reg[7]));
  FDCE \trail_count_reg[8] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_19),
        .Q(trail_count_reg[8]));
  FDCE \trail_count_reg[9] 
       (.C(core_clk),
        .CE(time_out_post_coreclk_sync_i_n_37),
        .CLR(core_rst),
        .D(time_out_post_coreclk_sync_i_n_18),
        .Q(trail_count_reg[9]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    tx_cl_en_lp_tst_coreclk_i_5
       (.I0(\cl_tx_state_reg_n_0_[1] ),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(time_out_trail),
        .O(tx_cl_en_lp_tst_coreclk_i_5_n_0));
  FDRE tx_cl_en_lp_tst_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_coreclk_sync_i_n_11),
        .Q(tx_cl_en_lp_tst_coreclk_reg_n_0),
        .R(\cl_tx_state_reg[3]_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_26 tx_cl_en_lp_tst_coreclk_sync_i
       (.s_level_out_d1_cdc_to_reg_0(tx_cl_en_lp_tst_coreclk_reg_n_0),
        .tx_cl_en_hs_tst(tx_cl_en_hs_tst),
        .tx_cl_en_lp_tst(tx_cl_en_lp_tst),
        .tx_div4_clk(tx_div4_clk));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h1)) 
    tx_cl_lp_cn_i_3
       (.I0(\cl_tx_state_reg_n_0_[2] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .O(tx_cl_lp_cn_i_3_n_0));
  FDSE tx_cl_lp_cn_reg
       (.C(core_clk),
        .CE(cl_txrequesths_coreclk_sync_i_n_4),
        .D(cl_txulpsclk_sync_i_n_3),
        .Q(tx_cl_lp_cn),
        .S(\cl_tx_state_reg[3]_0 ));
  FDSE tx_cl_lp_cp_reg
       (.C(core_clk),
        .CE(cl_txrequesths_coreclk_sync_i_n_4),
        .D(cl_txulpsexit_sync_i_n_1),
        .Q(tx_cl_lp_cp),
        .S(\cl_tx_state_reg[3]_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_27 xmit_clk_pre_coreclk_sync_i
       (.\cl_tx_state_reg[2] (time_out_prepare_reg_n_0),
        .\cl_tx_state_reg[3] (xmit_clk_pre_coreclk_sync_i_n_1),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .hs_clk_state_r_reg(\cl_tx_state_reg_n_0_[3] ),
        .hs_clk_state_r_reg_0(\cl_tx_state_reg_n_0_[0] ),
        .hs_clk_state_r_reg_1(cl_txrequesths_coreclk_sync),
        .hs_clk_state_r_reg_2(hs_clk_state_r_i_6_n_0),
        .out(xmit_clk_pre_coreclk_sync),
        .s_level_out_d3_reg_0(xmit_clk_pre_coreclk_sync_i_n_2),
        .time_out_zero(time_out_zero),
        .xmit_clk_pre_r(xmit_clk_pre_r));
  LUT6 #(
    .INIT(64'h00000000000000B0)) 
    xmit_clk_pre_r_i_1
       (.I0(xmit_clk_pre_r),
        .I1(clk_pre_cnt),
        .I2(xmit_clk_r_reg_n_0),
        .I3(start_clkzero_byteclk_sync_r_reg_0),
        .I4(time_out_post),
        .I5(init_done_byteclk_pos_r),
        .O(xmit_clk_pre_r_i_1_n_0));
  FDRE xmit_clk_pre_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(xmit_clk_pre_r_i_1_n_0),
        .Q(xmit_clk_pre_r),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    xmit_clk_r_i_10
       (.I0(prepare_zero_cnt_reg[7]),
        .I1(prepare_zero_cnt_reg[1]),
        .I2(prepare_zero_cnt_reg[26]),
        .I3(prepare_zero_cnt_reg[14]),
        .O(xmit_clk_r_i_10_n_0));
  LUT4 #(
    .INIT(16'hFEFF)) 
    xmit_clk_r_i_2
       (.I0(xmit_clk_r_i_3_n_0),
        .I1(xmit_clk_r_i_4_n_0),
        .I2(xmit_clk_r_i_5_n_0),
        .I3(xmit_clk_r_i_6_n_0),
        .O(xmit_clk_r_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    xmit_clk_r_i_3
       (.I0(prepare_zero_cnt_reg[22]),
        .I1(prepare_zero_cnt_reg[24]),
        .I2(prepare_zero_cnt_reg[4]),
        .I3(prepare_zero_cnt_reg[6]),
        .I4(xmit_clk_r_i_7_n_0),
        .O(xmit_clk_r_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    xmit_clk_r_i_4
       (.I0(prepare_zero_cnt_reg[15]),
        .I1(prepare_zero_cnt_reg[27]),
        .I2(prepare_zero_cnt_reg[2]),
        .I3(prepare_zero_cnt_reg[8]),
        .I4(xmit_clk_r_i_8_n_0),
        .O(xmit_clk_r_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    xmit_clk_r_i_5
       (.I0(prepare_zero_cnt_reg[16]),
        .I1(prepare_zero_cnt_reg[28]),
        .I2(prepare_zero_cnt_reg[12]),
        .I3(prepare_zero_cnt_reg[31]),
        .I4(xmit_clk_r_i_9_n_0),
        .O(xmit_clk_r_i_5_n_0));
  LUT5 #(
    .INIT(32'h00000010)) 
    xmit_clk_r_i_6
       (.I0(prepare_zero_cnt_reg[19]),
        .I1(prepare_zero_cnt_reg[21]),
        .I2(prepare_zero_cnt_reg[0]),
        .I3(prepare_zero_cnt_reg[9]),
        .I4(xmit_clk_r_i_10_n_0),
        .O(xmit_clk_r_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    xmit_clk_r_i_7
       (.I0(prepare_zero_cnt_reg[30]),
        .I1(prepare_zero_cnt_reg[11]),
        .I2(prepare_zero_cnt_reg[29]),
        .I3(prepare_zero_cnt_reg[17]),
        .O(xmit_clk_r_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    xmit_clk_r_i_8
       (.I0(prepare_zero_cnt_reg[3]),
        .I1(prepare_zero_cnt_reg[13]),
        .I2(prepare_zero_cnt_reg[25]),
        .I3(prepare_zero_cnt_reg[20]),
        .O(xmit_clk_r_i_8_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    xmit_clk_r_i_9
       (.I0(prepare_zero_cnt_reg[5]),
        .I1(prepare_zero_cnt_reg[10]),
        .I2(prepare_zero_cnt_reg[23]),
        .I3(prepare_zero_cnt_reg[18]),
        .O(xmit_clk_r_i_9_n_0));
  FDRE xmit_clk_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(start_clkzero_byteclk_sync_i_n_2),
        .Q(xmit_clk_r_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000020)) 
    \zero_count[0]_i_1__3 
       (.I0(\cl_tx_state_reg_n_0_[0] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .I4(\zero_count_reg_n_0_[0] ),
        .O(\zero_count[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[10]_i_1 
       (.I0(zero_count0[10]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[10]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[11]_i_1 
       (.I0(zero_count0[11]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[11]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[12]_i_1 
       (.I0(zero_count0[12]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[12]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[13]_i_1 
       (.I0(zero_count0[13]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[13]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[14]_i_1 
       (.I0(zero_count0[14]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[14]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[15]_i_1 
       (.I0(zero_count0[15]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[15]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[16]_i_1 
       (.I0(zero_count0[16]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[16]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[17]_i_1 
       (.I0(zero_count0[17]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[17]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[18]_i_1 
       (.I0(zero_count0[18]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[18]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[19]_i_1 
       (.I0(zero_count0[19]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[19]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[1]_i_1 
       (.I0(zero_count0[1]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[1]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[20]_i_1 
       (.I0(zero_count0[20]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[20]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[21]_i_1 
       (.I0(zero_count0[21]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[21]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[22]_i_1 
       (.I0(zero_count0[22]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[22]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[23]_i_1 
       (.I0(zero_count0[23]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[23]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[24]_i_1 
       (.I0(zero_count0[24]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[24]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[25]_i_1 
       (.I0(zero_count0[25]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[25]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[26]_i_1 
       (.I0(zero_count0[26]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[26]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[27]_i_1 
       (.I0(zero_count0[27]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[27]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[28]_i_1 
       (.I0(zero_count0[28]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[28]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[29]_i_1 
       (.I0(zero_count0[29]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[29]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[2]_i_1 
       (.I0(zero_count0[2]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[30]_i_1 
       (.I0(zero_count0[30]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[30]));
  LUT5 #(
    .INIT(32'hFFDFFFFF)) 
    \zero_count[31]_i_1 
       (.I0(\cl_tx_state_reg_n_0_[0] ),
        .I1(\cl_tx_state_reg_n_0_[3] ),
        .I2(\cl_tx_state_reg_n_0_[2] ),
        .I3(\cl_tx_state_reg_n_0_[1] ),
        .I4(\zero_count[31]_i_3_n_0 ),
        .O(\zero_count[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[31]_i_10 
       (.I0(\zero_count_reg_n_0_[25] ),
        .I1(\zero_count_reg_n_0_[1] ),
        .I2(\zero_count_reg_n_0_[12] ),
        .I3(\zero_count_reg_n_0_[14] ),
        .O(\zero_count[31]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[31]_i_11 
       (.I0(\zero_count_reg_n_0_[31] ),
        .I1(\zero_count_reg_n_0_[2] ),
        .I2(\zero_count_reg_n_0_[29] ),
        .I3(\zero_count_reg_n_0_[24] ),
        .O(\zero_count[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[31]_i_12 
       (.I0(\zero_count_reg_n_0_[13] ),
        .I1(\zero_count_reg_n_0_[10] ),
        .I2(\zero_count_reg_n_0_[28] ),
        .I3(\zero_count_reg_n_0_[26] ),
        .O(\zero_count[31]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[31]_i_2 
       (.I0(zero_count0[31]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[31]));
  LUT4 #(
    .INIT(16'h0004)) 
    \zero_count[31]_i_3 
       (.I0(\zero_count[31]_i_5_n_0 ),
        .I1(\zero_count[31]_i_6_n_0 ),
        .I2(\zero_count[31]_i_7_n_0 ),
        .I3(\zero_count[31]_i_8_n_0 ),
        .O(\zero_count[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[31]_i_5 
       (.I0(\zero_count_reg_n_0_[17] ),
        .I1(\zero_count_reg_n_0_[20] ),
        .I2(\zero_count_reg_n_0_[23] ),
        .I3(\zero_count_reg_n_0_[22] ),
        .I4(\zero_count[31]_i_9_n_0 ),
        .O(\zero_count[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \zero_count[31]_i_6 
       (.I0(\zero_count_reg_n_0_[4] ),
        .I1(\zero_count_reg_n_0_[11] ),
        .I2(\zero_count_reg_n_0_[5] ),
        .I3(\zero_count_reg_n_0_[15] ),
        .I4(\zero_count[31]_i_10_n_0 ),
        .O(\zero_count[31]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[31]_i_7 
       (.I0(\zero_count_reg_n_0_[0] ),
        .I1(\zero_count_reg_n_0_[6] ),
        .I2(\zero_count_reg_n_0_[7] ),
        .I3(\zero_count_reg_n_0_[9] ),
        .I4(\zero_count[31]_i_11_n_0 ),
        .O(\zero_count[31]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[31]_i_8 
       (.I0(\zero_count_reg_n_0_[18] ),
        .I1(\zero_count_reg_n_0_[30] ),
        .I2(\zero_count_reg_n_0_[16] ),
        .I3(\zero_count_reg_n_0_[27] ),
        .I4(\zero_count[31]_i_12_n_0 ),
        .O(\zero_count[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \zero_count[31]_i_9 
       (.I0(\zero_count_reg_n_0_[3] ),
        .I1(\zero_count_reg_n_0_[8] ),
        .I2(\zero_count_reg_n_0_[21] ),
        .I3(\zero_count_reg_n_0_[19] ),
        .O(\zero_count[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[3]_i_1 
       (.I0(zero_count0[3]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[3]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[4]_i_1 
       (.I0(zero_count0[4]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[5]_i_1 
       (.I0(zero_count0[5]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[6]_i_1 
       (.I0(zero_count0[6]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[7]_i_1 
       (.I0(zero_count0[7]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[8]_i_1 
       (.I0(zero_count0[8]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[8]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \zero_count[9]_i_1 
       (.I0(zero_count0[9]),
        .I1(\cl_tx_state_reg_n_0_[0] ),
        .I2(\cl_tx_state_reg_n_0_[3] ),
        .I3(\cl_tx_state_reg_n_0_[2] ),
        .I4(\cl_tx_state_reg_n_0_[1] ),
        .O(p_1_in__0[9]));
  FDCE \zero_count_reg[0] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(\zero_count[0]_i_1__3_n_0 ),
        .Q(\zero_count_reg_n_0_[0] ));
  FDCE \zero_count_reg[10] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[10]),
        .Q(\zero_count_reg_n_0_[10] ));
  FDCE \zero_count_reg[11] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[11]),
        .Q(\zero_count_reg_n_0_[11] ));
  FDCE \zero_count_reg[12] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[12]),
        .Q(\zero_count_reg_n_0_[12] ));
  FDCE \zero_count_reg[13] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[13]),
        .Q(\zero_count_reg_n_0_[13] ));
  FDCE \zero_count_reg[14] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[14]),
        .Q(\zero_count_reg_n_0_[14] ));
  FDCE \zero_count_reg[15] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[15]),
        .Q(\zero_count_reg_n_0_[15] ));
  FDCE \zero_count_reg[16] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[16]),
        .Q(\zero_count_reg_n_0_[16] ));
  CARRY8 \zero_count_reg[16]_i_2 
       (.CI(\zero_count_reg[8]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[16]_i_2_n_0 ,\zero_count_reg[16]_i_2_n_1 ,\zero_count_reg[16]_i_2_n_2 ,\zero_count_reg[16]_i_2_n_3 ,\zero_count_reg[16]_i_2_n_4 ,\zero_count_reg[16]_i_2_n_5 ,\zero_count_reg[16]_i_2_n_6 ,\zero_count_reg[16]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[16:9]),
        .S({\zero_count_reg_n_0_[16] ,\zero_count_reg_n_0_[15] ,\zero_count_reg_n_0_[14] ,\zero_count_reg_n_0_[13] ,\zero_count_reg_n_0_[12] ,\zero_count_reg_n_0_[11] ,\zero_count_reg_n_0_[10] ,\zero_count_reg_n_0_[9] }));
  FDCE \zero_count_reg[17] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[17]),
        .Q(\zero_count_reg_n_0_[17] ));
  FDCE \zero_count_reg[18] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[18]),
        .Q(\zero_count_reg_n_0_[18] ));
  FDCE \zero_count_reg[19] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[19]),
        .Q(\zero_count_reg_n_0_[19] ));
  FDCE \zero_count_reg[1] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[1]),
        .Q(\zero_count_reg_n_0_[1] ));
  FDCE \zero_count_reg[20] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[20]),
        .Q(\zero_count_reg_n_0_[20] ));
  FDCE \zero_count_reg[21] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[21]),
        .Q(\zero_count_reg_n_0_[21] ));
  FDCE \zero_count_reg[22] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[22]),
        .Q(\zero_count_reg_n_0_[22] ));
  FDCE \zero_count_reg[23] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[23]),
        .Q(\zero_count_reg_n_0_[23] ));
  FDCE \zero_count_reg[24] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[24]),
        .Q(\zero_count_reg_n_0_[24] ));
  CARRY8 \zero_count_reg[24]_i_2 
       (.CI(\zero_count_reg[16]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[24]_i_2_n_0 ,\zero_count_reg[24]_i_2_n_1 ,\zero_count_reg[24]_i_2_n_2 ,\zero_count_reg[24]_i_2_n_3 ,\zero_count_reg[24]_i_2_n_4 ,\zero_count_reg[24]_i_2_n_5 ,\zero_count_reg[24]_i_2_n_6 ,\zero_count_reg[24]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[24:17]),
        .S({\zero_count_reg_n_0_[24] ,\zero_count_reg_n_0_[23] ,\zero_count_reg_n_0_[22] ,\zero_count_reg_n_0_[21] ,\zero_count_reg_n_0_[20] ,\zero_count_reg_n_0_[19] ,\zero_count_reg_n_0_[18] ,\zero_count_reg_n_0_[17] }));
  FDCE \zero_count_reg[25] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[25]),
        .Q(\zero_count_reg_n_0_[25] ));
  FDCE \zero_count_reg[26] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[26]),
        .Q(\zero_count_reg_n_0_[26] ));
  FDCE \zero_count_reg[27] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[27]),
        .Q(\zero_count_reg_n_0_[27] ));
  FDCE \zero_count_reg[28] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[28]),
        .Q(\zero_count_reg_n_0_[28] ));
  FDCE \zero_count_reg[29] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[29]),
        .Q(\zero_count_reg_n_0_[29] ));
  FDCE \zero_count_reg[2] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[2]),
        .Q(\zero_count_reg_n_0_[2] ));
  FDCE \zero_count_reg[30] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[30]),
        .Q(\zero_count_reg_n_0_[30] ));
  FDCE \zero_count_reg[31] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[31]),
        .Q(\zero_count_reg_n_0_[31] ));
  CARRY8 \zero_count_reg[31]_i_4 
       (.CI(\zero_count_reg[24]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_zero_count_reg[31]_i_4_CO_UNCONNECTED [7:6],\zero_count_reg[31]_i_4_n_2 ,\zero_count_reg[31]_i_4_n_3 ,\zero_count_reg[31]_i_4_n_4 ,\zero_count_reg[31]_i_4_n_5 ,\zero_count_reg[31]_i_4_n_6 ,\zero_count_reg[31]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_zero_count_reg[31]_i_4_O_UNCONNECTED [7],zero_count0[31:25]}),
        .S({1'b0,\zero_count_reg_n_0_[31] ,\zero_count_reg_n_0_[30] ,\zero_count_reg_n_0_[29] ,\zero_count_reg_n_0_[28] ,\zero_count_reg_n_0_[27] ,\zero_count_reg_n_0_[26] ,\zero_count_reg_n_0_[25] }));
  FDCE \zero_count_reg[3] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[3]),
        .Q(\zero_count_reg_n_0_[3] ));
  FDCE \zero_count_reg[4] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[4]),
        .Q(\zero_count_reg_n_0_[4] ));
  FDCE \zero_count_reg[5] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[5]),
        .Q(\zero_count_reg_n_0_[5] ));
  FDCE \zero_count_reg[6] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[6]),
        .Q(\zero_count_reg_n_0_[6] ));
  FDCE \zero_count_reg[7] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[7]),
        .Q(\zero_count_reg_n_0_[7] ));
  FDCE \zero_count_reg[8] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[8]),
        .Q(\zero_count_reg_n_0_[8] ));
  CARRY8 \zero_count_reg[8]_i_2 
       (.CI(\zero_count_reg_n_0_[0] ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[8]_i_2_n_0 ,\zero_count_reg[8]_i_2_n_1 ,\zero_count_reg[8]_i_2_n_2 ,\zero_count_reg[8]_i_2_n_3 ,\zero_count_reg[8]_i_2_n_4 ,\zero_count_reg[8]_i_2_n_5 ,\zero_count_reg[8]_i_2_n_6 ,\zero_count_reg[8]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(zero_count0[8:1]),
        .S({\zero_count_reg_n_0_[8] ,\zero_count_reg_n_0_[7] ,\zero_count_reg_n_0_[6] ,\zero_count_reg_n_0_[5] ,\zero_count_reg_n_0_[4] ,\zero_count_reg_n_0_[3] ,\zero_count_reg_n_0_[2] ,\zero_count_reg_n_0_[1] }));
  FDCE \zero_count_reg[9] 
       (.C(core_clk),
        .CE(\zero_count[31]_i_1_n_0 ),
        .CLR(core_rst),
        .D(p_1_in__0[9]),
        .Q(\zero_count_reg_n_0_[9] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane
   (en_hs_datapath_r,
    hs_dp_sync_out,
    en_hs_datapath_reg,
    s_level_out_d3_reg,
    en_hs_datapath_reg_0,
    en_hs_datapath_reg_1,
    hs_xfer_done,
    dl1_txrequesths_0,
    dl2_txrequesths_0,
    dl3_txrequesths_0,
    tx_dl0_hs_dp,
    esc_ctrl_all_sm,
    timeout_zero_out_i_0,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    dl_txreadyesc_reg,
    dl0_ulpsactivenot,
    tx_dl0_lp_dn,
    tx_dl0_lp_dp,
    tx_dl0_en_lp_tst,
    timeout_hsexit,
    tx_dl0_en_hs_tst,
    dl0_stopstate,
    out,
    tx_div4_clk,
    \cl_tx_state_reg[0] ,
    dl_status_reg,
    dl_hs_exit_done_i,
    dl1_txrequesths,
    dl2_txrequesths,
    dl3_txrequesths,
    cl_init_done_coreclk_i,
    core_clk,
    core_rst,
    dl0_txclkesc,
    dl0_txrequesths,
    dl0_enable,
    dl_txrequesths_r_reg_0,
    dl0_txrequestesc,
    dl0_forcetxstopmode,
    \esc_cmd_data_reg[0] ,
    dl0_txdatahs,
    dl0_txvalidesc,
    dl0_txulpsexit,
    dl0_txdataesc,
    dl0_txtriggeresc,
    cl_txclkactivehs_i,
    en_hs_datapath_reg_2,
    en_lp_01_cnt_reg,
    system_rst,
    timeout_hsexit_all,
    dl0_txulpsesc,
    dl0_txlpdtesc,
    s_level_out_d1_cdc_to_reg);
  output en_hs_datapath_r;
  output hs_dp_sync_out;
  output en_hs_datapath_reg;
  output s_level_out_d3_reg;
  output [0:0]en_hs_datapath_reg_0;
  output en_hs_datapath_reg_1;
  output hs_xfer_done;
  output dl1_txrequesths_0;
  output dl2_txrequesths_0;
  output dl3_txrequesths_0;
  output [7:0]tx_dl0_hs_dp;
  output esc_ctrl_all_sm;
  output timeout_zero_out_i_0;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output dl_txreadyesc_reg;
  output dl0_ulpsactivenot;
  output tx_dl0_lp_dn;
  output tx_dl0_lp_dp;
  output tx_dl0_en_lp_tst;
  output [0:0]timeout_hsexit;
  output tx_dl0_en_hs_tst;
  output dl0_stopstate;
  input out;
  input tx_div4_clk;
  input \cl_tx_state_reg[0] ;
  input [2:0]dl_status_reg;
  input [2:0]dl_hs_exit_done_i;
  input dl1_txrequesths;
  input dl2_txrequesths;
  input dl3_txrequesths;
  input cl_init_done_coreclk_i;
  input core_clk;
  input core_rst;
  input dl0_txclkesc;
  input dl0_txrequesths;
  input dl0_enable;
  input dl_txrequesths_r_reg_0;
  input dl0_txrequestesc;
  input dl0_forcetxstopmode;
  input \esc_cmd_data_reg[0] ;
  input [7:0]dl0_txdatahs;
  input dl0_txvalidesc;
  input dl0_txulpsexit;
  input [7:0]dl0_txdataesc;
  input [3:0]dl0_txtriggeresc;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg_2;
  input en_lp_01_cnt_reg;
  input system_rst;
  input timeout_hsexit_all;
  input dl0_txulpsesc;
  input dl0_txlpdtesc;
  input s_level_out_d1_cdc_to_reg;

  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire cl_init_done_coreclk_i;
  wire \cl_tx_state_reg[0] ;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_txrequesths;
  wire dl1_txrequesths_0;
  wire dl2_txrequesths;
  wire dl2_txrequesths_0;
  wire dl3_txrequesths;
  wire dl3_txrequesths_0;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [2:0]dl_hs_exit_done_i;
  wire [2:0]dl_status_reg;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath_sync;
  wire en_cal_hs_datapath_sync_i_n_1;
  wire en_hs_datapath_r;
  wire en_hs_datapath_reg;
  wire [0:0]en_hs_datapath_reg_0;
  wire en_hs_datapath_reg_1;
  wire en_hs_datapath_reg_2;
  wire en_hs_datapath_sync_i_n_4;
  wire en_lp_01_cnt_reg;
  wire \esc_cmd_data_reg[0] ;
  wire esc_ctrl_all_sm;
  wire esc_ctrl_i;
  wire esc_ctrl_lane_sm;
  wire esc_start;
  wire esc_stopstate_coreclk_sync;
  wire esc_stopstate_i;
  wire hs_dp_sync_out;
  wire hs_xfer_done;
  wire hs_xfer_done_i;
  wire out;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire system_rst;
  wire [0:0]timeout_hsexit;
  wire timeout_hsexit_all;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire tx_dl0_en_hs_tst;
  wire tx_dl0_en_lp_tst;
  wire [7:0]tx_dl0_hs_dp;
  wire tx_dl0_lp_dn;
  wire tx_dl0_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire u_tx_data_lane_sm_n_8;

  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_82 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_83 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(u_tx_data_lane_sm_n_8),
        .Q(dl0_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl0_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_84 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath(en_cal_hs_datapath),
        .hs_dp_sync_out(hs_dp_sync_out),
        .out(en_cal_hs_datapath_sync),
        .s_level_out_d3_reg_0(en_cal_hs_datapath_sync_i_n_1),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_85 en_hs_datapath_sync_i
       (.dl0_txrequesths(dl0_txrequesths),
        .dl0_txrequesths_0(en_hs_datapath_sync_i_n_4),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txrequesths_0(dl1_txrequesths_0),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txrequesths_0(dl2_txrequesths_0),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txrequesths_0(dl3_txrequesths_0),
        .out(hs_dp_sync_out),
        .s_level_out_d1_cdc_to_reg_0(en_hs_datapath_reg_0),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_86 esc_stopstate_coreclk_sync_i
       (.core_clk(core_clk),
        .out(esc_stopstate_coreclk_sync),
        .s_level_out_d1_cdc_to_reg_0(esc_stopstate_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_87 \gen_tx_dl_en_tst_up.hs_xfer_done_sync_i 
       (.\cl_tx_state_reg[0] (\cl_tx_state_reg[0] ),
        .\cl_tx_state_reg[0]_0 (en_hs_datapath_reg_0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .dl_status_reg(dl_status_reg),
        .en_hs_datapath_reg(en_hs_datapath_reg),
        .hs_xfer_done(hs_xfer_done),
        .hs_xfer_done_i(hs_xfer_done_i),
        .s_level_out_d3_reg_0(s_level_out_d3_reg));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm_88 u_tx_data_lane_sm
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl_status_reg(dl_status_reg),
        .dl_stopstate_coreclk_reg(esc_stopstate_coreclk_sync),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath(en_cal_hs_datapath),
        .en_hs_datapath_reg_0(en_hs_datapath_reg_0),
        .en_hs_datapath_reg_1(en_hs_datapath_reg_1),
        .en_hs_datapath_reg_2(en_hs_datapath_reg_2),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg),
        .esc_start(esc_start),
        .init_done_reg(u_tx_data_lane_sm_n_8),
        .out(esc_ctrl_lane_sm),
        .start_clkpost_r_i_2(s_level_out_d3_reg),
        .system_rst(system_rst),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(timeout_hsexit),
        .timeout_hsexit_reg_1(dl_active_lane_coreclk_sync),
        .tx_dl0_en_hs_tst(tx_dl0_en_hs_tst),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath_89 u_tx_esc_datapath
       (.dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_txclkesc(dl0_txclkesc),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .\esc_cmd_data_reg[0]_0 (\esc_cmd_data_reg[0] ),
        .esc_ctrl_all_sm(esc_ctrl_all_sm),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_start(esc_start),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .tx_dl0_lp_dn(tx_dl0_lp_dn),
        .tx_dl0_lp_dp(tx_dl0_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath_90 u_tx_hs_datapath
       (.\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_1 (en_cal_hs_datapath_sync),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txrequesths(dl0_txrequesths),
        .en_hs_datapath_r(en_hs_datapath_r),
        .en_hs_datapath_r_reg_0(hs_dp_sync_out),
        .esc_ctrl_i(esc_ctrl_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .hs_xfer_done_reg_0(dl_active_lane_div4clk_sync),
        .out(out),
        .time_out_zero_reg_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl0_en_lp_tst(tx_dl0_en_lp_tst),
        .tx_dl0_hs_dp(tx_dl0_hs_dp),
        .\zero_count_reg[31]_0 (en_cal_hs_datapath_sync_i_n_1),
        .\zero_count_reg[31]_1 (en_hs_datapath_sync_i_n_4));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_7
   (out,
    tx_dl1_hs_dp,
    dl_status_reg,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    dl_txreadyesc_reg,
    dl1_ulpsactivenot,
    dl1_stopstate,
    tx_dl1_lp_dn,
    tx_dl1_lp_dp,
    tx_dl1_en_lp_tst,
    tx_dl1_en_hs_tst,
    hs_xfer_done_all,
    timeout_hsexit_all,
    p_0_in,
    esc_active_all_reg,
    core_rst,
    core_clk,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ,
    dl1_txrequesths,
    tx_div4_clk,
    dl1_enable,
    dl_txrequesths_r_reg_0,
    dl1_txrequestesc,
    dl1_forcetxstopmode,
    dl0_txclkesc,
    \FSM_sequential_dl_tx_sm_state[2]_i_4 ,
    s_level_out_d1_cdc_to_reg,
    \esc_cmd_data_reg[0] ,
    hs_dp_sync_out,
    \zero_count_reg[31] ,
    dl1_txdatahs,
    timeout_zero_out_i_0,
    dl1_txvalidesc,
    dl1_txulpsexit,
    dl1_txdataesc,
    dl1_txtriggeresc,
    en_hs_datapath_r,
    dl1_txulpsesc,
    dl1_txlpdtesc,
    dl_hs_exit_done_i,
    cl_init_done_coreclk_i,
    cl_txclkactivehs_i,
    en_hs_datapath_reg,
    en_lp_01_cnt_reg,
    system_rst);
  output out;
  output [7:0]tx_dl1_hs_dp;
  output [0:0]dl_status_reg;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output dl_txreadyesc_reg;
  output dl1_ulpsactivenot;
  output dl1_stopstate;
  output tx_dl1_lp_dn;
  output tx_dl1_lp_dp;
  output tx_dl1_en_lp_tst;
  output tx_dl1_en_hs_tst;
  output hs_xfer_done_all;
  output timeout_hsexit_all;
  output p_0_in;
  input [2:0]esc_active_all_reg;
  input core_rst;
  input core_clk;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ;
  input dl1_txrequesths;
  input tx_div4_clk;
  input dl1_enable;
  input dl_txrequesths_r_reg_0;
  input dl1_txrequestesc;
  input dl1_forcetxstopmode;
  input dl0_txclkesc;
  input [2:0]\FSM_sequential_dl_tx_sm_state[2]_i_4 ;
  input s_level_out_d1_cdc_to_reg;
  input \esc_cmd_data_reg[0] ;
  input hs_dp_sync_out;
  input \zero_count_reg[31] ;
  input [7:0]dl1_txdatahs;
  input timeout_zero_out_i_0;
  input dl1_txvalidesc;
  input dl1_txulpsexit;
  input [7:0]dl1_txdataesc;
  input [3:0]dl1_txtriggeresc;
  input en_hs_datapath_r;
  input dl1_txulpsesc;
  input dl1_txlpdtesc;
  input [2:0]dl_hs_exit_done_i;
  input cl_init_done_coreclk_i;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg;
  input en_lp_01_cnt_reg;
  input system_rst;

  wire [2:0]\FSM_sequential_dl_tx_sm_state[2]_i_4 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_txclkesc;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [2:0]dl_hs_exit_done_i;
  wire [0:0]dl_status_reg;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath_sync;
  wire en_cal_hs_datapath_sync_i_n_1;
  wire en_hs_datapath_r;
  wire en_hs_datapath_reg;
  wire en_lp_01_cnt_reg;
  wire [2:0]esc_active_all_reg;
  wire \esc_cmd_data_reg[0] ;
  wire esc_ctrl_i;
  wire esc_ctrl_lane_sm;
  wire esc_start;
  wire esc_stopstate_coreclk_sync;
  wire esc_stopstate_i;
  wire hs_dp_sync_out;
  wire hs_xfer_done_all;
  wire hs_xfer_done_i;
  wire out;
  wire p_0_in;
  wire s_level_out_d1_cdc_to_reg;
  wire system_rst;
  wire timeout_hsexit_all;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire tx_dl1_en_hs_tst;
  wire tx_dl1_en_lp_tst;
  wire [7:0]tx_dl1_hs_dp;
  wire tx_dl1_lp_dn;
  wire tx_dl1_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire u_tx_data_lane_sm_n_7;
  wire \zero_count_reg[31] ;

  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_63 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_64 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(u_tx_data_lane_sm_n_7),
        .Q(dl1_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl1_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_65 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath(en_cal_hs_datapath),
        .hs_dp_sync_out(hs_dp_sync_out),
        .out(en_cal_hs_datapath_sync),
        .s_level_out_d3_reg_0(en_cal_hs_datapath_sync_i_n_1),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_66 en_hs_datapath_sync_i
       (.dl_status_reg(dl_status_reg),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_67 esc_stopstate_coreclk_sync_i
       (.core_clk(core_clk),
        .out(esc_stopstate_coreclk_sync),
        .s_level_out_d1_cdc_to_reg_0(esc_stopstate_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_68 \gen_tx_dl_en_tst_up.hs_xfer_done_sync_i 
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .hs_xfer_done_all(hs_xfer_done_all),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(out));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm_69 u_tx_data_lane_sm
       (.\FSM_sequential_dl_tx_sm_state[2]_i_4 (\FSM_sequential_dl_tx_sm_state[2]_i_4 ),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl_status_reg(dl_status_reg),
        .dl_stopstate_coreclk_reg(esc_stopstate_coreclk_sync),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath(en_cal_hs_datapath),
        .en_hs_datapath_reg_0(en_hs_datapath_reg),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg),
        .esc_start(esc_start),
        .init_done_reg(u_tx_data_lane_sm_n_7),
        .out(esc_ctrl_lane_sm),
        .system_rst(system_rst),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(dl_active_lane_coreclk_sync),
        .tx_dl1_en_hs_tst(tx_dl1_en_hs_tst),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath_70 u_tx_esc_datapath
       (.dl0_txclkesc(dl0_txclkesc),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .esc_active_all_reg(esc_active_all_reg),
        .\esc_cmd_data_reg[0]_0 (\esc_cmd_data_reg[0] ),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_start(esc_start),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .p_0_in(p_0_in),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .tx_dl1_lp_dn(tx_dl1_lp_dn),
        .tx_dl1_lp_dp(tx_dl1_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath_71 u_tx_hs_datapath
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 (\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txrequesths(dl1_txrequesths),
        .en_hs_datapath_r(en_hs_datapath_r),
        .esc_ctrl_i(esc_ctrl_i),
        .hs_dp_sync_out(hs_dp_sync_out),
        .hs_xfer_done_i(hs_xfer_done_i),
        .hs_xfer_done_reg_0(dl_active_lane_div4clk_sync),
        .out(en_cal_hs_datapath_sync),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl1_en_lp_tst(tx_dl1_en_lp_tst),
        .tx_dl1_hs_dp(tx_dl1_hs_dp),
        .\zero_count_reg[31]_0 (en_cal_hs_datapath_sync_i_n_1),
        .\zero_count_reg[31]_1 (\zero_count_reg[31] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_8
   (out,
    tx_dl2_hs_dp,
    esc_ctrl_all_sm_reg,
    dl_status_reg,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    timeout_hsexit_reg,
    dl_txreadyesc_reg,
    dl2_ulpsactivenot,
    dl2_stopstate,
    tx_dl2_lp_dn,
    tx_dl2_lp_dp,
    tx_dl2_en_lp_tst,
    tx_dl2_en_hs_tst,
    s_level_out_d3_reg,
    core_rst,
    core_clk,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ,
    dl2_txrequesths,
    tx_div4_clk,
    dl2_enable,
    dl_txrequesths_r_reg_0,
    dl2_txrequestesc,
    dl2_forcetxstopmode,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    \esc_cmd_data_reg[0] ,
    hs_dp_sync_out,
    \zero_count_reg[31] ,
    dl2_txdatahs,
    timeout_zero_out_i_0,
    dl2_txvalidesc,
    dl2_txulpsexit,
    dl2_txdataesc,
    dl2_txtriggeresc,
    en_hs_datapath_r,
    dl2_txulpsesc,
    dl2_txlpdtesc,
    dl_hs_exit_done_i,
    cl_txclkactivehs_i_3,
    cl_init_done_coreclk_i,
    cl_txclkactivehs_i,
    en_hs_datapath_reg,
    en_lp_01_cnt_reg,
    system_rst,
    timeout_hsexit_all);
  output out;
  output [7:0]tx_dl2_hs_dp;
  output esc_ctrl_all_sm_reg;
  output [0:0]dl_status_reg;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output [0:0]timeout_hsexit_reg;
  output dl_txreadyesc_reg;
  output dl2_ulpsactivenot;
  output dl2_stopstate;
  output tx_dl2_lp_dn;
  output tx_dl2_lp_dp;
  output tx_dl2_en_lp_tst;
  output tx_dl2_en_hs_tst;
  output s_level_out_d3_reg;
  input core_rst;
  input core_clk;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ;
  input dl2_txrequesths;
  input tx_div4_clk;
  input dl2_enable;
  input dl_txrequesths_r_reg_0;
  input dl2_txrequestesc;
  input dl2_forcetxstopmode;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input \esc_cmd_data_reg[0] ;
  input hs_dp_sync_out;
  input \zero_count_reg[31] ;
  input [7:0]dl2_txdatahs;
  input timeout_zero_out_i_0;
  input dl2_txvalidesc;
  input dl2_txulpsexit;
  input [7:0]dl2_txdataesc;
  input [3:0]dl2_txtriggeresc;
  input en_hs_datapath_r;
  input dl2_txulpsesc;
  input dl2_txlpdtesc;
  input [2:0]dl_hs_exit_done_i;
  input cl_txclkactivehs_i_3;
  input cl_init_done_coreclk_i;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg;
  input en_lp_01_cnt_reg;
  input system_rst;
  input timeout_hsexit_all;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_i_3;
  wire core_clk;
  wire core_rst;
  wire dl0_txclkesc;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [2:0]dl_hs_exit_done_i;
  wire [0:0]dl_status_reg;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath_sync;
  wire en_cal_hs_datapath_sync_i_n_1;
  wire en_hs_datapath_r;
  wire en_hs_datapath_reg;
  wire en_lp_01_cnt_reg;
  wire \esc_cmd_data_reg[0] ;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_i;
  wire esc_ctrl_lane_sm;
  wire esc_start;
  wire esc_stopstate_coreclk_sync;
  wire esc_stopstate_i;
  wire hs_dp_sync_out;
  wire hs_xfer_done_i;
  wire out;
  wire s_level_out_d1_cdc_to_reg;
  wire s_level_out_d3_reg;
  wire system_rst;
  wire timeout_hsexit_all;
  wire [0:0]timeout_hsexit_reg;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire tx_dl2_en_hs_tst;
  wire tx_dl2_en_lp_tst;
  wire [7:0]tx_dl2_hs_dp;
  wire tx_dl2_lp_dn;
  wire tx_dl2_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire u_tx_data_lane_sm_n_7;
  wire \zero_count_reg[31] ;

  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_44 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_45 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(u_tx_data_lane_sm_n_7),
        .Q(dl2_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl2_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_46 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath(en_cal_hs_datapath),
        .hs_dp_sync_out(hs_dp_sync_out),
        .out(en_cal_hs_datapath_sync),
        .s_level_out_d3_reg_0(en_cal_hs_datapath_sync_i_n_1),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_47 en_hs_datapath_sync_i
       (.dl_status_reg(dl_status_reg),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_48 esc_stopstate_coreclk_sync_i
       (.core_clk(core_clk),
        .out(esc_stopstate_coreclk_sync),
        .s_level_out_d1_cdc_to_reg_0(esc_stopstate_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_49 \gen_tx_dl_en_tst_up.hs_xfer_done_sync_i 
       (.cl_txclkactivehs_i_3(cl_txclkactivehs_i_3),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(out),
        .s_level_out_d3_reg_0(s_level_out_d3_reg));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm_50 u_tx_data_lane_sm
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl_status_reg(dl_status_reg),
        .dl_stopstate_coreclk_reg(esc_stopstate_coreclk_sync),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath(en_cal_hs_datapath),
        .en_hs_datapath_reg_0(en_hs_datapath_reg),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg),
        .esc_start(esc_start),
        .init_done_reg(u_tx_data_lane_sm_n_7),
        .out(esc_ctrl_lane_sm),
        .system_rst(system_rst),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(timeout_hsexit_reg),
        .timeout_hsexit_reg_1(dl_active_lane_coreclk_sync),
        .tx_dl2_en_hs_tst(tx_dl2_en_hs_tst),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath_51 u_tx_esc_datapath
       (.dl0_txclkesc(dl0_txclkesc),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .\esc_cmd_data_reg[0]_0 (\esc_cmd_data_reg[0] ),
        .esc_ctrl_all_sm_reg_0(esc_ctrl_all_sm_reg),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_start(esc_start),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .tx_dl2_lp_dn(tx_dl2_lp_dn),
        .tx_dl2_lp_dp(tx_dl2_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath_52 u_tx_hs_datapath
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 (\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txrequesths(dl2_txrequesths),
        .en_hs_datapath_r(en_hs_datapath_r),
        .esc_ctrl_i(esc_ctrl_i),
        .hs_dp_sync_out(hs_dp_sync_out),
        .hs_xfer_done_i(hs_xfer_done_i),
        .hs_xfer_done_reg_0(dl_active_lane_div4clk_sync),
        .out(en_cal_hs_datapath_sync),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl2_en_lp_tst(tx_dl2_en_lp_tst),
        .tx_dl2_hs_dp(tx_dl2_hs_dp),
        .\zero_count_reg[31]_0 (en_cal_hs_datapath_sync_i_n_1),
        .\zero_count_reg[31]_1 (\zero_count_reg[31] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_9
   (out,
    tx_dl3_hs_dp,
    esc_ctrl_all_sm_reg,
    dl_status_reg,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ,
    timeout_hsexit_reg,
    dl_txreadyesc_reg,
    dl3_ulpsactivenot,
    dl3_stopstate,
    tx_dl3_lp_dn,
    tx_dl3_lp_dp,
    tx_dl3_en_lp_tst,
    tx_dl3_en_hs_tst,
    hs_active_all,
    core_rst,
    core_clk,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ,
    dl3_txrequesths,
    tx_div4_clk,
    dl3_enable,
    dl_txrequesths_r_reg_0,
    dl3_txrequestesc,
    dl3_forcetxstopmode,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    \esc_cmd_data_reg[0] ,
    hs_dp_sync_out,
    \zero_count_reg[31] ,
    dl3_txdatahs,
    timeout_zero_out_i_0,
    dl3_txvalidesc,
    dl3_txulpsexit,
    dl3_txdataesc,
    dl3_txtriggeresc,
    en_hs_datapath_r,
    dl3_txulpsesc,
    dl3_txlpdtesc,
    reset_timer_r_i_10,
    cl_txclkactivehs_i,
    hs_xfer_done_all,
    system_rst,
    cl_init_done_coreclk_i,
    en_lp_01_cnt_reg,
    dl_hs_exit_done_i,
    timeout_hsexit_all);
  output out;
  output [7:0]tx_dl3_hs_dp;
  output esc_ctrl_all_sm_reg;
  output [0:0]dl_status_reg;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  output [0:0]timeout_hsexit_reg;
  output dl_txreadyesc_reg;
  output dl3_ulpsactivenot;
  output dl3_stopstate;
  output tx_dl3_lp_dn;
  output tx_dl3_lp_dp;
  output tx_dl3_en_lp_tst;
  output tx_dl3_en_hs_tst;
  output hs_active_all;
  input core_rst;
  input core_clk;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ;
  input dl3_txrequesths;
  input tx_div4_clk;
  input dl3_enable;
  input dl_txrequesths_r_reg_0;
  input dl3_txrequestesc;
  input dl3_forcetxstopmode;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input \esc_cmd_data_reg[0] ;
  input hs_dp_sync_out;
  input \zero_count_reg[31] ;
  input [7:0]dl3_txdatahs;
  input timeout_zero_out_i_0;
  input dl3_txvalidesc;
  input dl3_txulpsexit;
  input [7:0]dl3_txdataesc;
  input [3:0]dl3_txtriggeresc;
  input en_hs_datapath_r;
  input dl3_txulpsesc;
  input dl3_txlpdtesc;
  input [2:0]reset_timer_r_i_10;
  input cl_txclkactivehs_i;
  input hs_xfer_done_all;
  input system_rst;
  input cl_init_done_coreclk_i;
  input en_lp_01_cnt_reg;
  input [2:0]dl_hs_exit_done_i;
  input timeout_hsexit_all;

  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_txclkesc;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire dl_active_lane_coreclk_sync;
  wire dl_active_lane_div4clk_sync;
  wire [2:0]dl_hs_exit_done_i;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_i;
  wire dl_txreadyesc_reg;
  wire dl_txrequesths_r;
  wire dl_txrequesths_r_reg_0;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath_sync;
  wire en_cal_hs_datapath_sync_i_n_1;
  wire en_hs_datapath_r;
  wire en_lp_01_cnt_reg;
  wire \esc_cmd_data_reg[0] ;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_i;
  wire esc_ctrl_lane_sm;
  wire esc_start;
  wire esc_stopstate_coreclk_sync_i_n_0;
  wire esc_stopstate_i;
  wire \gen_tx_dl_en_tst_up.hs_xfer_done_sync_i_n_1 ;
  wire hs_active_all;
  wire hs_dp_sync_out;
  wire hs_xfer_done_all;
  wire hs_xfer_done_i;
  wire out;
  wire [2:0]reset_timer_r_i_10;
  wire s_level_out_d1_cdc_to_reg;
  wire system_rst;
  wire timeout_hsexit_all;
  wire [0:0]timeout_hsexit_reg;
  wire timeout_zero_out_i_0;
  wire tx_div4_clk;
  wire tx_dl3_en_hs_tst;
  wire tx_dl3_en_lp_tst;
  wire [7:0]tx_dl3_hs_dp;
  wire tx_dl3_lp_dn;
  wire tx_dl3_lp_dp;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire u_tx_data_lane_sm_n_9;
  wire \zero_count_reg[31] ;

  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_28 dl_active_lane_coreclk_sync_i
       (.core_clk(core_clk),
        .out(dl_active_lane_coreclk_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_29 dl_active_lane_div4clk_sync_i
       (.out(dl_active_lane_div4clk_sync),
        .tx_div4_clk(tx_div4_clk));
  FDRE dl_stopstate_coreclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(esc_stopstate_coreclk_sync_i_n_0),
        .Q(dl3_stopstate),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl3_txrequesths),
        .Q(dl_txrequesths_r),
        .R(dl_txrequesths_r_reg_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_30 en_cal_hs_datapath_sync_i
       (.en_cal_hs_datapath(en_cal_hs_datapath),
        .hs_dp_sync_out(hs_dp_sync_out),
        .out(en_cal_hs_datapath_sync),
        .s_level_out_d3_reg_0(en_cal_hs_datapath_sync_i_n_1),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_31 en_hs_datapath_sync_i
       (.s_level_out_d1_cdc_to_reg_0(dl_status_reg),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_32 esc_stopstate_coreclk_sync_i
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .dl_stopstate_i(dl_stopstate_i),
        .out(esc_stopstate_i),
        .s_level_out_d2_reg_0(esc_stopstate_coreclk_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_33 \gen_tx_dl_en_tst_up.hs_xfer_done_sync_i 
       (.\FSM_sequential_dl_tx_sm_state[2]_i_6__2 (u_tx_data_lane_sm_n_9),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(\gen_tx_dl_en_tst_up.hs_xfer_done_sync_i_n_1 ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(out));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm u_tx_data_lane_sm
       (.\FSM_sequential_dl_tx_sm_state_reg[0]_0 (\gen_tx_dl_en_tst_up.hs_xfer_done_sync_i_n_1 ),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (u_tx_data_lane_sm_n_9),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath(en_cal_hs_datapath),
        .en_hs_datapath_reg_0(dl_status_reg),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg),
        .esc_start(esc_start),
        .hs_active_all(hs_active_all),
        .hs_xfer_done_all(hs_xfer_done_all),
        .out(esc_ctrl_lane_sm),
        .reset_timer_r_i_10(reset_timer_r_i_10),
        .system_rst(system_rst),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg_0(timeout_hsexit_reg),
        .timeout_hsexit_reg_1(dl_active_lane_coreclk_sync),
        .tx_dl3_en_hs_tst(tx_dl3_en_hs_tst),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath u_tx_esc_datapath
       (.dl0_txclkesc(dl0_txclkesc),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl_txreadyesc_reg_0(dl_txreadyesc_reg),
        .\esc_cmd_data_reg[0]_0 (\esc_cmd_data_reg[0] ),
        .esc_ctrl_all_sm_reg_0(esc_ctrl_all_sm_reg),
        .esc_ctrl_i(esc_ctrl_i),
        .esc_start(esc_start),
        .esc_stopstate_reg_0(esc_stopstate_i),
        .hs_xfer_done_i(hs_xfer_done_i),
        .out(esc_ctrl_lane_sm),
        .s_level_out_d1_cdc_to_reg(s_level_out_d1_cdc_to_reg),
        .tx_dl3_lp_dn(tx_dl3_lp_dn),
        .tx_dl3_lp_dp(tx_dl3_lp_dp),
        .tx_dl_lp_dn_hs_i(tx_dl_lp_dn_hs_i),
        .tx_dl_lp_dp_hs_i(tx_dl_lp_dp_hs_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath u_tx_hs_datapath
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 (\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] ),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 (\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg ),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txrequesths(dl3_txrequesths),
        .en_hs_datapath_r(en_hs_datapath_r),
        .esc_ctrl_i(esc_ctrl_i),
        .hs_dp_sync_out(hs_dp_sync_out),
        .hs_xfer_done_i(hs_xfer_done_i),
        .hs_xfer_done_reg_0(dl_active_lane_div4clk_sync),
        .out(en_cal_hs_datapath_sync),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl3_en_lp_tst(tx_dl3_en_lp_tst),
        .tx_dl3_hs_dp(tx_dl3_hs_dp),
        .\zero_count_reg[31]_0 (en_cal_hs_datapath_sync_i_n_1),
        .\zero_count_reg[31]_1 (\zero_count_reg[31] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane_sm" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm
   (en_cal_hs_datapath,
    en_hs_datapath_reg_0,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    timeout_hsexit_reg_0,
    dl_stopstate_i,
    esc_start,
    tx_dl3_en_hs_tst,
    hs_active_all,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    core_clk,
    core_rst,
    dl3_enable,
    dl_txrequesths_r,
    dl3_txrequestesc,
    dl3_forcetxstopmode,
    out,
    reset_timer_r_i_10,
    cl_txclkactivehs_i,
    hs_xfer_done_all,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    system_rst,
    cl_init_done_coreclk_i,
    en_lp_01_cnt_reg_0,
    timeout_hsexit_reg_1,
    timeout_hsexit_all);
  output en_cal_hs_datapath;
  output en_hs_datapath_reg_0;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output timeout_hsexit_reg_0;
  output dl_stopstate_i;
  output esc_start;
  output tx_dl3_en_hs_tst;
  output hs_active_all;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  input core_clk;
  input core_rst;
  input dl3_enable;
  input dl_txrequesths_r;
  input dl3_txrequestesc;
  input dl3_forcetxstopmode;
  input out;
  input [2:0]reset_timer_r_i_10;
  input cl_txclkactivehs_i;
  input hs_xfer_done_all;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input system_rst;
  input cl_init_done_coreclk_i;
  input en_lp_01_cnt_reg_0;
  input timeout_hsexit_reg_1;
  input timeout_hsexit_all;

  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_txrequestesc;
  wire dl_enable_sync;
  wire dl_enable_sync_i_n_1;
  wire dl_enable_sync_i_n_2;
  wire dl_forcetxstopmode_sync;
  wire dl_forcetxstopmode_sync_i_n_1;
  wire dl_forcetxstopmode_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_3;
  wire dl_forcetxstopmode_sync_i_n_4;
  wire dl_forcetxstopmode_sync_i_n_5;
  wire dl_forcetxstopmode_sync_i_n_6;
  (* DONT_TOUCH *) wire dl_status_bit_6_reg_n_0;
  wire dl_stopstate_i;
  wire [2:0]dl_tx_sm_state__0;
  wire dl_txrequestesc_sync;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequestesc_sync_i_n_4;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_10;
  wire dl_txrequesths_sync_i_n_11;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_3;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txrequesths_sync_i_n_8;
  wire dl_txrequesths_sync_i_n_9;
  wire dl_txskewcalhs_sync;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath13_out;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg_0;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_r;
  wire esc_start;
  wire hs_active_all;
  wire hs_xfer_done_all;
  wire hsexit_count0__0_carry__0_n_5;
  wire hsexit_count0__0_carry__0_n_6;
  wire hsexit_count0__0_carry__0_n_7;
  wire hsexit_count0__0_carry_n_0;
  wire hsexit_count0__0_carry_n_1;
  wire hsexit_count0__0_carry_n_2;
  wire hsexit_count0__0_carry_n_3;
  wire hsexit_count0__0_carry_n_4;
  wire hsexit_count0__0_carry_n_5;
  wire hsexit_count0__0_carry_n_6;
  wire hsexit_count0__0_carry_n_7;
  wire \hsexit_count[12]_i_1__2_n_0 ;
  wire \hsexit_count[12]_i_2__2_n_0 ;
  wire \hsexit_count[12]_i_3__2_n_0 ;
  wire \hsexit_count[12]_i_4__2_n_0 ;
  wire \hsexit_count[12]_i_5__2_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__3_n_0 ;
  wire \lp_st01_cnt[3]_i_2__3_n_0 ;
  wire \lp_st01_cnt[5]_i_2__3_n_0 ;
  wire \lp_st01_cnt[6]_i_2__3_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  wire out;
  wire [8:0]p_0_in;
  wire [12:0]p_0_in__0;
  wire \prepare_count[7]_i_2_n_0 ;
  wire \prepare_count[8]_i_1_n_0 ;
  wire \prepare_count[8]_i_4__2_n_0 ;
  wire \prepare_count[8]_i_5__2_n_0 ;
  wire [8:1]prepare_count_reg;
  wire \prepare_count_reg_n_0_[0] ;
  wire [2:0]reset_timer_r_i_10;
  wire sel;
  wire system_rst;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1__2_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_hsexit_reg_1;
  wire timeout_prepare_i_1__2_n_0;
  wire timeout_prepare_reg_n_0;
  wire tx_dl3_en_hs_tst;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire [7:3]NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED;
  wire [7:4]NLW_hsexit_count0__0_carry__0_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_13 
       (.I0(dl_tx_sm_state__0[2]),
        .I1(dl_tx_sm_state__0[1]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(dl_forcetxstopmode_sync_i_n_4),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_4),
        .Q(dl_tx_sm_state__0[0]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(dl_forcetxstopmode_sync_i_n_4),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(dl_tx_sm_state__0[1]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(dl_forcetxstopmode_sync_i_n_4),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_2),
        .Q(dl_tx_sm_state__0[2]));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_37 dl_enable_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_forcetxstopmode_sync),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_enable_sync_i_n_2),
        .Q(dl_tx_sm_state__0[1:0]),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_enable(dl3_enable),
        .out(dl_enable_sync),
        .system_rst(system_rst));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_38 dl_forcetxstopmode_sync_i
       (.E(dl_forcetxstopmode_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_forcetxstopmode_sync_i_n_5),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequesths_sync_i_n_8),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (esc_active_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_2 (\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_forcetxstopmode_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (dl_forcetxstopmode_sync_i_n_6),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_forcetxstopmode_sync_i_n_1),
        .dl_stopstate_reg_0(dl_txrequesths_sync_i_n_7),
        .dl_stopstate_reg_1(dl_txrequesths_sync_i_n_11),
        .dl_stopstate_reg_2(dl_txrequestesc_sync_i_n_2),
        .en_hs_datapath_reg(dl_txrequesths_sync_i_n_6),
        .en_hs_datapath_reg_0(timeout_prepare_reg_n_0),
        .esc_start_reg(dl_enable_sync),
        .hs_xfer_done_all(hs_xfer_done_all),
        .init_done_reg(dl_forcetxstopmode_sync_i_n_2),
        .out(dl_forcetxstopmode_sync),
        .system_rst(system_rst),
        .tx_dl_lp_dn_reg(dl_txskewcalhs_sync),
        .tx_dl_lp_dn_reg_0(dl_txrequesths_sync));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequestesc_sync_i_n_1),
        .Q(dl_status_bit_6_reg_n_0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_forcetxstopmode_sync_i_n_1),
        .Q(dl_stopstate_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_39 dl_txrequestesc_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[2] (dl_txrequestesc_sync_i_n_1),
        .Q(dl_tx_sm_state__0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl_status_bit_6_reg(dl_txrequesths_sync_i_n_10),
        .dl_status_bit_6_reg_0(dl_status_bit_6_reg_n_0),
        .dl_status_bit_6_reg_1(dl_forcetxstopmode_sync_i_n_2),
        .dl_status_bit_6_reg_2(dl_txrequesths_sync_i_n_6),
        .dl_stopstate_i_2__2(esc_active_sync),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_reg(timeout_hsexit_reg_0),
        .out(dl_txrequestesc_sync),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_2),
        .s_level_out_d3_reg_1(dl_txrequestesc_sync_i_n_3),
        .s_level_out_d3_reg_2(dl_txrequestesc_sync_i_n_4),
        .timeout_hsexit_all(timeout_hsexit_all));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_40 dl_txrequesths_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_7),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txrequesths_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (dl_txrequesths_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_11),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (timeout_prepare_reg_n_0),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_txrequesths_sync_i_n_10),
        .dl_status_bit_6_reg_0(dl_status_bit_6_reg_n_0),
        .dl_stopstate_reg(esc_active_sync_i_n_2),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_hs_datapath14_out(en_hs_datapath14_out),
        .en_hs_datapath_reg(dl_txskewcalhs_sync),
        .en_lp_01_cnt_reg(dl_forcetxstopmode_sync_i_n_2),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(lp_01_r_reg_n_0),
        .en_lp_01_cnt_reg_2(en_lp_01_cnt_reg_0),
        .en_lp_01_cnt_reg_3(dl_enable_sync_i_n_2),
        .init_done_reg(dl_txrequesths_sync_i_n_8),
        .out(dl_txrequesths_sync),
        .s_level_out_d3_reg_0(dl_txrequesths_sync_i_n_3),
        .s_level_out_d3_reg_1(dl_txrequesths_sync_i_n_6),
        .timeout_prepare_reg(dl_txrequesths_sync_i_n_9),
        .tx_dl_lp_dn_reg(dl_forcetxstopmode_sync_i_n_5),
        .tx_dl_lp_dn_reg_0(timeout_hsexit_reg_1),
        .tx_dl_lp_dp_reg(dl_txrequestesc_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_41 dl_txskewcalhs_sync_i
       (.D({dl_txskewcalhs_sync_i_n_2,dl_txskewcalhs_sync_i_n_3,dl_txskewcalhs_sync_i_n_4}),
        .\FSM_sequential_dl_tx_sm_state[1]_i_2__2_0 (lp_01_r_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state[2]_i_7__2_0 (en_lp_01_cnt_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txrequestesc_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (dl_txrequesths_sync),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (dl_txrequesths_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_9),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (timeout_hsexit_reg_1),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (timeout_hsexit_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_2 (dl_txrequestesc_sync),
        .Q(dl_tx_sm_state__0),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .en_cal_hs_datapath13_out(en_cal_hs_datapath13_out),
        .en_cal_hs_datapath_reg(timeout_prepare_reg_n_0),
        .en_cal_hs_datapath_reg_0(dl_txrequesths_sync_i_n_6),
        .esc_start(esc_start),
        .esc_start_reg(dl_forcetxstopmode_sync_i_n_2),
        .esc_start_reg_0(esc_active_sync_i_n_1),
        .esc_start_reg_1(dl_txrequestesc_sync_i_n_3),
        .out(dl_txskewcalhs_sync));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_forcetxstopmode_sync_i_n_3),
        .CLR(core_rst),
        .D(en_cal_hs_datapath13_out),
        .Q(en_cal_hs_datapath));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_forcetxstopmode_sync_i_n_3),
        .CLR(core_rst),
        .D(en_hs_datapath14_out),
        .Q(en_hs_datapath_reg_0));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_1),
        .Q(en_lp_01_cnt_reg_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_42 esc_active_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[0] (timeout_hsexit_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (esc_active_sync_i_n_1),
        .Q(dl_tx_sm_state__0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(out),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .timeout_hsexit_all(timeout_hsexit_all));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(esc_start));
  CARRY8 hsexit_count0__0_carry
       (.CI(hsexit_count_reg[0]),
        .CI_TOP(1'b0),
        .CO({hsexit_count0__0_carry_n_0,hsexit_count0__0_carry_n_1,hsexit_count0__0_carry_n_2,hsexit_count0__0_carry_n_3,hsexit_count0__0_carry_n_4,hsexit_count0__0_carry_n_5,hsexit_count0__0_carry_n_6,hsexit_count0__0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__0[8:1]),
        .S(hsexit_count_reg[8:1]));
  CARRY8 hsexit_count0__0_carry__0
       (.CI(hsexit_count0__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED[7:3],hsexit_count0__0_carry__0_n_5,hsexit_count0__0_carry__0_n_6,hsexit_count0__0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_hsexit_count0__0_carry__0_O_UNCONNECTED[7:4],p_0_in__0[12:9]}),
        .S({1'b0,1'b0,1'b0,1'b0,hsexit_count_reg[12:9]}));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_1__2 
       (.I0(hsexit_count_reg[0]),
        .O(p_0_in__0[0]));
  LUT4 #(
    .INIT(16'hF7FF)) 
    \hsexit_count[12]_i_1__2 
       (.I0(dl_tx_sm_state__0[1]),
        .I1(dl_tx_sm_state__0[2]),
        .I2(dl_tx_sm_state__0[0]),
        .I3(timeout_hsexit_reg_1),
        .O(\hsexit_count[12]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[12]_i_2__2 
       (.I0(\hsexit_count[12]_i_3__2_n_0 ),
        .O(\hsexit_count[12]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \hsexit_count[12]_i_3__2 
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .I2(hsexit_count_reg[10]),
        .I3(\hsexit_count[12]_i_4__2_n_0 ),
        .I4(\hsexit_count[12]_i_5__2_n_0 ),
        .O(\hsexit_count[12]_i_3__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \hsexit_count[12]_i_4__2 
       (.I0(hsexit_count_reg[5]),
        .I1(hsexit_count_reg[6]),
        .I2(hsexit_count_reg[11]),
        .I3(hsexit_count_reg[12]),
        .O(\hsexit_count[12]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEEEEEEEEEEEEE)) 
    \hsexit_count[12]_i_5__2 
       (.I0(hsexit_count_reg[4]),
        .I1(hsexit_count_reg[7]),
        .I2(hsexit_count_reg[2]),
        .I3(hsexit_count_reg[3]),
        .I4(hsexit_count_reg[0]),
        .I5(hsexit_count_reg[1]),
        .O(\hsexit_count[12]_i_5__2_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[0]),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[10]),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[11]),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[12]),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[1]),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[2]),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[3]),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[4]),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[5]),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[6]),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[7]),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[8]),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__2_n_0 ),
        .D(p_0_in__0[9]),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[12]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__3
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__3_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__3 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__3 
       (.I0(\lp_st01_cnt[1]_i_2__3_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__3 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__3 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__3_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__3 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__3 
       (.I0(\lp_st01_cnt[5]_i_2__3_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__3 
       (.I0(\lp_st01_cnt[6]_i_2__3_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__3 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__3_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1__2 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1__2 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .I1(prepare_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \prepare_count[2]_i_1__2 
       (.I0(prepare_count_reg[2]),
        .I1(prepare_count_reg[1]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \prepare_count[3]_i_1 
       (.I0(prepare_count_reg[2]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \prepare_count[4]_i_1__2 
       (.I0(prepare_count_reg[4]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[2]),
        .I3(\prepare_count_reg_n_0_[0] ),
        .I4(prepare_count_reg[1]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \prepare_count[5]_i_1__2 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[1]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .I3(prepare_count_reg[2]),
        .I4(prepare_count_reg[3]),
        .I5(prepare_count_reg[4]),
        .O(p_0_in[5]));
  LUT5 #(
    .INIT(32'hAA6AAAAA)) 
    \prepare_count[6]_i_1__2 
       (.I0(prepare_count_reg[6]),
        .I1(prepare_count_reg[4]),
        .I2(prepare_count_reg[3]),
        .I3(\prepare_count[7]_i_2_n_0 ),
        .I4(prepare_count_reg[5]),
        .O(p_0_in[6]));
  LUT6 #(
    .INIT(64'hA6AAAAAAAAAAAAAA)) 
    \prepare_count[7]_i_1__2 
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[5]),
        .I2(\prepare_count[7]_i_2_n_0 ),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .I5(prepare_count_reg[6]),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \prepare_count[7]_i_2 
       (.I0(prepare_count_reg[1]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[2]),
        .O(\prepare_count[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1 
       (.I0(dl_tx_sm_state__0[0]),
        .I1(dl_tx_sm_state__0[1]),
        .I2(dl_tx_sm_state__0[2]),
        .O(\prepare_count[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h222A)) 
    \prepare_count[8]_i_2__2 
       (.I0(\prepare_count[8]_i_4__2_n_0 ),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[2]),
        .O(sel));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \prepare_count[8]_i_3__2 
       (.I0(prepare_count_reg[8]),
        .I1(prepare_count_reg[6]),
        .I2(\prepare_count[8]_i_5__2_n_0 ),
        .I3(prepare_count_reg[5]),
        .I4(prepare_count_reg[7]),
        .O(p_0_in[8]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \prepare_count[8]_i_4__2 
       (.I0(prepare_count_reg[4]),
        .I1(prepare_count_reg[5]),
        .I2(prepare_count_reg[6]),
        .I3(prepare_count_reg[8]),
        .I4(prepare_count_reg[7]),
        .O(\prepare_count[8]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \prepare_count[8]_i_5__2 
       (.I0(prepare_count_reg[4]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[2]),
        .I3(\prepare_count_reg_n_0_[0] ),
        .I4(prepare_count_reg[1]),
        .O(\prepare_count[8]_i_5__2_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(\prepare_count_reg_n_0_[0] ),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(prepare_count_reg[1]),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(prepare_count_reg[2]),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[3]),
        .Q(prepare_count_reg[3]),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(prepare_count_reg[4]),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(prepare_count_reg[5]),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(prepare_count_reg[6]),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(prepare_count_reg[7]),
        .R(\prepare_count[8]_i_1_n_0 ));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[8]),
        .Q(prepare_count_reg[8]),
        .R(\prepare_count[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    reset_timer_r_i_12
       (.I0(en_hs_datapath_reg_0),
        .I1(reset_timer_r_i_10[0]),
        .I2(reset_timer_r_i_10[1]),
        .I3(reset_timer_r_i_10[2]),
        .O(hs_active_all));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_43 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  LUT6 #(
    .INIT(64'h5F5555555D555555)) 
    timeout_hsexit_i_1__2
       (.I0(timeout_hsexit_reg_1),
        .I1(timeout_hsexit_reg_0),
        .I2(dl_tx_sm_state__0[0]),
        .I3(dl_tx_sm_state__0[2]),
        .I4(dl_tx_sm_state__0[1]),
        .I5(\hsexit_count[12]_i_3__2_n_0 ),
        .O(timeout_hsexit_i_1__2_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1__2_n_0),
        .Q(timeout_hsexit_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT5 #(
    .INIT(32'h03000100)) 
    timeout_prepare_i_1__2
       (.I0(sel),
        .I1(dl_tx_sm_state__0[0]),
        .I2(dl_tx_sm_state__0[1]),
        .I3(dl_tx_sm_state__0[2]),
        .I4(timeout_prepare_reg_n_0),
        .O(timeout_prepare_i_1__2_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1__2_n_0),
        .Q(timeout_prepare_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT1 #(
    .INIT(2'h1)) 
    tx_dl3_en_hs_tst_INST_0
       (.I0(en_hs_datapath_reg_0),
        .O(tx_dl3_en_hs_tst));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(dl_forcetxstopmode_sync_i_n_6),
        .D(dl_txrequesths_sync_i_n_2),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(dl_forcetxstopmode_sync_i_n_6),
        .D(dl_txrequesths_sync_i_n_4),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane_sm" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm_50
   (en_cal_hs_datapath,
    dl_status_reg,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    timeout_hsexit_reg_0,
    esc_start,
    tx_dl2_en_hs_tst,
    init_done_reg,
    core_clk,
    core_rst,
    dl2_enable,
    dl_txrequesths_r,
    dl2_txrequestesc,
    dl2_forcetxstopmode,
    out,
    cl_init_done_coreclk_i,
    cl_txclkactivehs_i,
    en_hs_datapath_reg_0,
    timeout_hsexit_reg_1,
    en_lp_01_cnt_reg_0,
    system_rst,
    timeout_hsexit_all,
    dl_stopstate_coreclk_reg);
  output en_cal_hs_datapath;
  output [0:0]dl_status_reg;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output timeout_hsexit_reg_0;
  output esc_start;
  output tx_dl2_en_hs_tst;
  output init_done_reg;
  input core_clk;
  input core_rst;
  input dl2_enable;
  input dl_txrequesths_r;
  input dl2_txrequestesc;
  input dl2_forcetxstopmode;
  input out;
  input cl_init_done_coreclk_i;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg_0;
  input timeout_hsexit_reg_1;
  input en_lp_01_cnt_reg_0;
  input system_rst;
  input timeout_hsexit_all;
  input dl_stopstate_coreclk_reg;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_txrequestesc;
  wire dl_enable_sync;
  wire dl_enable_sync_i_n_1;
  wire dl_forcetxstopmode_sync;
  wire dl_forcetxstopmode_sync_i_n_1;
  wire dl_forcetxstopmode_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_4;
  (* DONT_TOUCH *) wire dl_status_bit_6_reg_n_0;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_coreclk_reg;
  wire dl_stopstate_i;
  wire [2:0]dl_tx_sm_state__0;
  wire dl_txrequestesc_sync;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_10;
  wire dl_txrequesths_sync_i_n_11;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_3;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_5;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txrequesths_sync_i_n_9;
  wire dl_txskewcalhs_sync;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire dl_txskewcalhs_sync_i_n_5;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath13_out;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg_0;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_i_n_3;
  wire esc_active_sync_i_n_4;
  wire esc_active_sync_i_n_5;
  wire esc_active_sync_i_n_6;
  wire esc_active_sync_r;
  wire esc_start;
  wire hsexit_count0__0_carry__0_n_5;
  wire hsexit_count0__0_carry__0_n_6;
  wire hsexit_count0__0_carry__0_n_7;
  wire hsexit_count0__0_carry_n_0;
  wire hsexit_count0__0_carry_n_1;
  wire hsexit_count0__0_carry_n_2;
  wire hsexit_count0__0_carry_n_3;
  wire hsexit_count0__0_carry_n_4;
  wire hsexit_count0__0_carry_n_5;
  wire hsexit_count0__0_carry_n_6;
  wire hsexit_count0__0_carry_n_7;
  wire \hsexit_count[12]_i_1__1_n_0 ;
  wire \hsexit_count[12]_i_2__1_n_0 ;
  wire \hsexit_count[12]_i_3__1_n_0 ;
  wire \hsexit_count[12]_i_4__1_n_0 ;
  wire \hsexit_count[12]_i_5__1_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire init_done_reg;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__2_n_0 ;
  wire \lp_st01_cnt[3]_i_2__2_n_0 ;
  wire \lp_st01_cnt[5]_i_2__2_n_0 ;
  wire \lp_st01_cnt[6]_i_2__2_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  wire out;
  wire [8:0]p_0_in;
  wire [12:0]p_0_in__0;
  wire \prepare_count[3]_i_1__2_n_0 ;
  wire \prepare_count[8]_i_1__2_n_0 ;
  wire \prepare_count[8]_i_4__1_n_0 ;
  wire \prepare_count[8]_i_5__1_n_0 ;
  wire [8:1]prepare_count_reg;
  wire \prepare_count_reg_n_0_[0] ;
  wire sel;
  wire system_rst;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1__1_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_hsexit_reg_1;
  wire timeout_prepare_i_1__1_n_0;
  wire timeout_prepare_reg_n_0;
  wire tx_dl2_en_hs_tst;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire [7:3]NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED;
  wire [7:4]NLW_hsexit_count0__0_carry__0_O_UNCONNECTED;

  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_4),
        .Q(dl_tx_sm_state__0[0]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(dl_tx_sm_state__0[1]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_3),
        .Q(dl_tx_sm_state__0[2]));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_56 dl_enable_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_forcetxstopmode_sync),
        .Q(dl_tx_sm_state__0[0]),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_enable(dl2_enable),
        .out(dl_enable_sync),
        .system_rst(system_rst));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_57 dl_forcetxstopmode_sync_i
       (.Q(dl_tx_sm_state__0),
        .SR(\prepare_count[8]_i_1__2_n_0 ),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(dl_forcetxstopmode_sync_i_n_4),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_forcetxstopmode_sync_i_n_1),
        .dl_stopstate_reg_0(esc_active_sync_i_n_4),
        .dl_stopstate_reg_1(esc_active_sync_i_n_6),
        .dl_stopstate_reg_2(dl_txrequesths_sync_i_n_2),
        .dl_stopstate_reg_3(dl_enable_sync),
        .en_hs_datapath14_out(en_hs_datapath14_out),
        .en_hs_datapath_reg(dl_txrequesths_sync),
        .en_hs_datapath_reg_0(dl_txskewcalhs_sync),
        .init_done_reg(dl_forcetxstopmode_sync_i_n_2),
        .out(dl_forcetxstopmode_sync),
        .system_rst(system_rst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_10),
        .Q(dl_status_bit_6_reg_n_0));
  LUT3 #(
    .INIT(8'hA8)) 
    dl_stopstate_coreclk_i_1__1
       (.I0(cl_init_done_coreclk_i),
        .I1(dl_stopstate_i),
        .I2(dl_stopstate_coreclk_reg),
        .O(init_done_reg));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_forcetxstopmode_sync_i_n_1),
        .Q(dl_stopstate_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_58 dl_txrequestesc_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txrequestesc_sync_i_n_1),
        .Q(dl_tx_sm_state__0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl_status_bit_6_reg(timeout_hsexit_reg_0),
        .dl_status_bit_6_reg_0(dl_status_bit_6_reg_n_0),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_reg(esc_active_sync),
        .out(dl_txrequestesc_sync),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_3),
        .timeout_hsexit_reg(dl_txrequestesc_sync_i_n_2));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_59 dl_txrequesths_sync_i
       (.D(dl_txrequesths_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_5),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txrequesths_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (dl_txrequesths_sync_i_n_7),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_1 (dl_txrequesths_sync_i_n_9),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_10),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (lp_01_r_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_2 (dl_txskewcalhs_sync_i_n_2),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(dl_txrequesths_sync_i_n_2),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_txrequestesc_sync_i_n_1),
        .dl_status_bit_6_reg_0(dl_forcetxstopmode_sync_i_n_4),
        .dl_status_bit_6_reg_1(esc_active_sync_i_n_5),
        .dl_status_bit_6_reg_2(dl_status_bit_6_reg_n_0),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath13_out(en_cal_hs_datapath13_out),
        .en_cal_hs_datapath_reg(timeout_prepare_reg_n_0),
        .en_cal_hs_datapath_reg_0(dl_txskewcalhs_sync),
        .en_hs_datapath_reg(en_hs_datapath_reg_0),
        .en_lp_01_cnt_reg(dl_forcetxstopmode_sync_i_n_2),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(timeout_hsexit_reg_1),
        .en_lp_01_cnt_reg_2(en_lp_01_cnt_reg_0),
        .init_done_reg(dl_txrequesths_sync_i_n_11),
        .out(dl_txrequesths_sync),
        .s_level_out_d2_reg_0(dl_txrequesths_sync_i_n_6),
        .tx_dl_lp_dn_reg(esc_active_sync_i_n_2),
        .tx_dl_lp_dn_reg_0(dl_txskewcalhs_sync_i_n_5),
        .tx_dl_lp_dp_reg(esc_active_sync_i_n_3),
        .tx_dl_lp_dp_reg_0(dl_txrequestesc_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_60 dl_txskewcalhs_sync_i
       (.D({dl_txskewcalhs_sync_i_n_3,dl_txskewcalhs_sync_i_n_4}),
        .\FSM_sequential_dl_tx_sm_state[2]_i_8__1_0 (en_lp_01_cnt_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (dl_txrequesths_sync_i_n_6),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_2 (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (timeout_prepare_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_1 (dl_txrequesths_sync),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_2 (lp_01_r_reg_n_0),
        .Q(dl_tx_sm_state__0),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .esc_start(esc_start),
        .esc_start_reg(dl_forcetxstopmode_sync_i_n_2),
        .esc_start_reg_0(dl_txrequestesc_sync_i_n_2),
        .esc_start_reg_1(timeout_hsexit_reg_0),
        .esc_start_reg_2(dl_txrequestesc_sync),
        .esc_start_reg_3(timeout_hsexit_reg_1),
        .out(dl_txskewcalhs_sync),
        .s_level_out_d3_reg_0(dl_txskewcalhs_sync_i_n_5));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_7),
        .CLR(core_rst),
        .D(en_cal_hs_datapath13_out),
        .Q(en_cal_hs_datapath));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_7),
        .CLR(core_rst),
        .D(en_hs_datapath14_out),
        .Q(dl_status_reg));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_1),
        .Q(en_lp_01_cnt_reg_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_61 esc_active_sync_i
       (.E(esc_active_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_5),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequesths_sync_i_n_11),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (timeout_prepare_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_2 (en_hs_datapath_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_3 (dl_forcetxstopmode_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (esc_active_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (esc_active_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (esc_active_sync_i_n_6),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_txrequestesc_sync),
        .dl_status_bit_6_reg_0(timeout_hsexit_reg_0),
        .dl_stopstate_reg(dl_txrequesths_sync_i_n_6),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(out),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .s_level_out_d3_reg_1(esc_active_sync_i_n_5),
        .timeout_hsexit_all(timeout_hsexit_all));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(esc_start));
  CARRY8 hsexit_count0__0_carry
       (.CI(hsexit_count_reg[0]),
        .CI_TOP(1'b0),
        .CO({hsexit_count0__0_carry_n_0,hsexit_count0__0_carry_n_1,hsexit_count0__0_carry_n_2,hsexit_count0__0_carry_n_3,hsexit_count0__0_carry_n_4,hsexit_count0__0_carry_n_5,hsexit_count0__0_carry_n_6,hsexit_count0__0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__0[8:1]),
        .S(hsexit_count_reg[8:1]));
  CARRY8 hsexit_count0__0_carry__0
       (.CI(hsexit_count0__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED[7:3],hsexit_count0__0_carry__0_n_5,hsexit_count0__0_carry__0_n_6,hsexit_count0__0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_hsexit_count0__0_carry__0_O_UNCONNECTED[7:4],p_0_in__0[12:9]}),
        .S({1'b0,1'b0,1'b0,1'b0,hsexit_count_reg[12:9]}));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_1__1 
       (.I0(hsexit_count_reg[0]),
        .O(p_0_in__0[0]));
  LUT4 #(
    .INIT(16'hF7FF)) 
    \hsexit_count[12]_i_1__1 
       (.I0(dl_tx_sm_state__0[1]),
        .I1(dl_tx_sm_state__0[2]),
        .I2(dl_tx_sm_state__0[0]),
        .I3(timeout_hsexit_reg_1),
        .O(\hsexit_count[12]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[12]_i_2__1 
       (.I0(\hsexit_count[12]_i_3__1_n_0 ),
        .O(\hsexit_count[12]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \hsexit_count[12]_i_3__1 
       (.I0(\hsexit_count[12]_i_4__1_n_0 ),
        .I1(hsexit_count_reg[10]),
        .I2(hsexit_count_reg[5]),
        .I3(hsexit_count_reg[6]),
        .I4(\hsexit_count[12]_i_5__1_n_0 ),
        .O(\hsexit_count[12]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \hsexit_count[12]_i_4__1 
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .I2(hsexit_count_reg[12]),
        .I3(hsexit_count_reg[11]),
        .I4(hsexit_count_reg[7]),
        .I5(hsexit_count_reg[4]),
        .O(\hsexit_count[12]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \hsexit_count[12]_i_5__1 
       (.I0(hsexit_count_reg[2]),
        .I1(hsexit_count_reg[3]),
        .I2(hsexit_count_reg[1]),
        .I3(hsexit_count_reg[0]),
        .O(\hsexit_count[12]_i_5__1_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[0]),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[10]),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[11]),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[12]),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[1]),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[2]),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[3]),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[4]),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[5]),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[6]),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[7]),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[8]),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__1_n_0 ),
        .D(p_0_in__0[9]),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[12]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__2
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__2_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__2 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__2 
       (.I0(\lp_st01_cnt[1]_i_2__2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__2 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__2_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__2 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__2 
       (.I0(\lp_st01_cnt[5]_i_2__2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__2 
       (.I0(\lp_st01_cnt[6]_i_2__2_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__2 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__2_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1__1 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1__1 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .I1(prepare_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \prepare_count[2]_i_1__1 
       (.I0(prepare_count_reg[2]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \prepare_count[3]_i_1__2 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[2]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .I3(prepare_count_reg[1]),
        .O(\prepare_count[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \prepare_count[4]_i_1__1 
       (.I0(prepare_count_reg[2]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \prepare_count[5]_i_1__1 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[2]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .I3(prepare_count_reg[1]),
        .I4(prepare_count_reg[3]),
        .I5(prepare_count_reg[4]),
        .O(p_0_in[5]));
  LUT3 #(
    .INIT(8'h6A)) 
    \prepare_count[6]_i_1__1 
       (.I0(prepare_count_reg[6]),
        .I1(\prepare_count[8]_i_5__1_n_0 ),
        .I2(prepare_count_reg[5]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \prepare_count[7]_i_1__1 
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[5]),
        .I2(\prepare_count[8]_i_5__1_n_0 ),
        .I3(prepare_count_reg[6]),
        .O(p_0_in[7]));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1__2 
       (.I0(dl_tx_sm_state__0[0]),
        .I1(dl_tx_sm_state__0[1]),
        .I2(dl_tx_sm_state__0[2]),
        .O(\prepare_count[8]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h0057)) 
    \prepare_count[8]_i_2__1 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[2]),
        .I3(\prepare_count[8]_i_4__1_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \prepare_count[8]_i_3__1 
       (.I0(prepare_count_reg[8]),
        .I1(prepare_count_reg[6]),
        .I2(\prepare_count[8]_i_5__1_n_0 ),
        .I3(prepare_count_reg[5]),
        .I4(prepare_count_reg[7]),
        .O(p_0_in[8]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \prepare_count[8]_i_4__1 
       (.I0(prepare_count_reg[8]),
        .I1(prepare_count_reg[5]),
        .I2(prepare_count_reg[6]),
        .I3(prepare_count_reg[7]),
        .I4(prepare_count_reg[4]),
        .O(\prepare_count[8]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \prepare_count[8]_i_5__1 
       (.I0(prepare_count_reg[4]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(\prepare_count_reg_n_0_[0] ),
        .I4(prepare_count_reg[2]),
        .O(\prepare_count[8]_i_5__1_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(\prepare_count_reg_n_0_[0] ),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(prepare_count_reg[1]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(prepare_count_reg[2]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(\prepare_count[3]_i_1__2_n_0 ),
        .Q(prepare_count_reg[3]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(prepare_count_reg[4]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(prepare_count_reg[5]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(prepare_count_reg[6]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(prepare_count_reg[7]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[8]),
        .Q(prepare_count_reg[8]),
        .R(\prepare_count[8]_i_1__2_n_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_62 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  LUT6 #(
    .INIT(64'h33333333FB333333)) 
    timeout_hsexit_i_1__1
       (.I0(\hsexit_count[12]_i_3__1_n_0 ),
        .I1(timeout_hsexit_reg_1),
        .I2(timeout_hsexit_reg_0),
        .I3(dl_tx_sm_state__0[1]),
        .I4(dl_tx_sm_state__0[2]),
        .I5(dl_tx_sm_state__0[0]),
        .O(timeout_hsexit_i_1__1_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1__1_n_0),
        .Q(timeout_hsexit_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h000B0000)) 
    timeout_prepare_i_1__1
       (.I0(timeout_prepare_reg_n_0),
        .I1(sel),
        .I2(dl_tx_sm_state__0[0]),
        .I3(dl_tx_sm_state__0[1]),
        .I4(dl_tx_sm_state__0[2]),
        .O(timeout_prepare_i_1__1_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1__1_n_0),
        .Q(timeout_prepare_reg_n_0),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    tx_dl2_en_hs_tst_INST_0
       (.I0(dl_status_reg),
        .O(tx_dl2_en_hs_tst));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_9),
        .D(dl_txrequesths_sync_i_n_5),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_9),
        .D(dl_txrequesths_sync_i_n_4),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane_sm" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm_69
   (en_cal_hs_datapath,
    dl_status_reg,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    esc_start,
    tx_dl1_en_hs_tst,
    timeout_hsexit_all,
    init_done_reg,
    core_clk,
    core_rst,
    dl1_enable,
    dl_txrequesths_r,
    dl1_txrequestesc,
    dl1_forcetxstopmode,
    out,
    \FSM_sequential_dl_tx_sm_state[2]_i_4 ,
    cl_init_done_coreclk_i,
    cl_txclkactivehs_i,
    en_hs_datapath_reg_0,
    timeout_hsexit_reg_0,
    en_lp_01_cnt_reg_0,
    system_rst,
    dl_stopstate_coreclk_reg);
  output en_cal_hs_datapath;
  output [0:0]dl_status_reg;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output esc_start;
  output tx_dl1_en_hs_tst;
  output timeout_hsexit_all;
  output init_done_reg;
  input core_clk;
  input core_rst;
  input dl1_enable;
  input dl_txrequesths_r;
  input dl1_txrequestesc;
  input dl1_forcetxstopmode;
  input out;
  input [2:0]\FSM_sequential_dl_tx_sm_state[2]_i_4 ;
  input cl_init_done_coreclk_i;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg_0;
  input timeout_hsexit_reg_0;
  input en_lp_01_cnt_reg_0;
  input system_rst;
  input dl_stopstate_coreclk_reg;

  wire [2:0]\FSM_sequential_dl_tx_sm_state[2]_i_4 ;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_txrequestesc;
  wire dl_enable_sync;
  wire dl_enable_sync_i_n_1;
  wire dl_forcetxstopmode_sync;
  wire dl_forcetxstopmode_sync_i_n_1;
  wire dl_forcetxstopmode_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_4;
  (* DONT_TOUCH *) wire dl_status_bit_6_reg_n_0;
  wire [0:0]dl_status_reg;
  wire dl_stopstate_coreclk_reg;
  wire dl_stopstate_i;
  wire [2:0]dl_tx_sm_state__0;
  wire dl_txrequestesc_sync;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_10;
  wire dl_txrequesths_sync_i_n_11;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_3;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_5;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txrequesths_sync_i_n_9;
  wire dl_txskewcalhs_sync;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire dl_txskewcalhs_sync_i_n_5;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath13_out;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg_0;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_i_n_3;
  wire esc_active_sync_i_n_4;
  wire esc_active_sync_i_n_5;
  wire esc_active_sync_i_n_6;
  wire esc_active_sync_r;
  wire esc_start;
  wire hsexit_count0__0_carry__0_n_5;
  wire hsexit_count0__0_carry__0_n_6;
  wire hsexit_count0__0_carry__0_n_7;
  wire hsexit_count0__0_carry_n_0;
  wire hsexit_count0__0_carry_n_1;
  wire hsexit_count0__0_carry_n_2;
  wire hsexit_count0__0_carry_n_3;
  wire hsexit_count0__0_carry_n_4;
  wire hsexit_count0__0_carry_n_5;
  wire hsexit_count0__0_carry_n_6;
  wire hsexit_count0__0_carry_n_7;
  wire \hsexit_count[12]_i_1__0_n_0 ;
  wire \hsexit_count[12]_i_2__0_n_0 ;
  wire \hsexit_count[12]_i_3__0_n_0 ;
  wire \hsexit_count[12]_i_4__0_n_0 ;
  wire \hsexit_count[12]_i_5__0_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire init_done_reg;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__1_n_0 ;
  wire \lp_st01_cnt[3]_i_2__1_n_0 ;
  wire \lp_st01_cnt[5]_i_2__1_n_0 ;
  wire \lp_st01_cnt[6]_i_2__1_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  wire out;
  wire [8:0]p_0_in_0;
  wire [12:0]p_0_in__0;
  wire \prepare_count[3]_i_1__1_n_0 ;
  wire \prepare_count[8]_i_1__1_n_0 ;
  wire \prepare_count[8]_i_4__0_n_0 ;
  wire \prepare_count[8]_i_5__0_n_0 ;
  wire [8:1]prepare_count_reg;
  wire \prepare_count_reg_n_0_[0] ;
  wire sel;
  wire system_rst;
  wire [1:1]timeout_hsexit;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1__0_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_prepare_i_1__0_n_0;
  wire timeout_prepare_reg_n_0;
  wire tx_dl1_en_hs_tst;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire [7:3]NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED;
  wire [7:4]NLW_hsexit_count0__0_carry__0_O_UNCONNECTED;

  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_10__2 
       (.I0(timeout_hsexit),
        .I1(\FSM_sequential_dl_tx_sm_state[2]_i_4 [0]),
        .I2(\FSM_sequential_dl_tx_sm_state[2]_i_4 [2]),
        .I3(\FSM_sequential_dl_tx_sm_state[2]_i_4 [1]),
        .O(timeout_hsexit_all));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_4),
        .Q(dl_tx_sm_state__0[0]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(dl_tx_sm_state__0[1]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_3),
        .Q(dl_tx_sm_state__0[2]));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_75 dl_enable_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_forcetxstopmode_sync),
        .Q(dl_tx_sm_state__0[0]),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_enable(dl1_enable),
        .out(dl_enable_sync),
        .system_rst(system_rst));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_76 dl_forcetxstopmode_sync_i
       (.Q(dl_tx_sm_state__0),
        .SR(\prepare_count[8]_i_1__1_n_0 ),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(dl_forcetxstopmode_sync_i_n_4),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_forcetxstopmode_sync_i_n_1),
        .dl_stopstate_reg_0(esc_active_sync_i_n_4),
        .dl_stopstate_reg_1(esc_active_sync_i_n_6),
        .dl_stopstate_reg_2(dl_txrequesths_sync_i_n_2),
        .dl_stopstate_reg_3(dl_enable_sync),
        .en_hs_datapath14_out(en_hs_datapath14_out),
        .en_hs_datapath_reg(dl_txrequesths_sync),
        .en_hs_datapath_reg_0(dl_txskewcalhs_sync),
        .init_done_reg(dl_forcetxstopmode_sync_i_n_2),
        .out(dl_forcetxstopmode_sync),
        .system_rst(system_rst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_10),
        .Q(dl_status_bit_6_reg_n_0));
  LUT3 #(
    .INIT(8'hA8)) 
    dl_stopstate_coreclk_i_1__0
       (.I0(cl_init_done_coreclk_i),
        .I1(dl_stopstate_i),
        .I2(dl_stopstate_coreclk_reg),
        .O(init_done_reg));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_forcetxstopmode_sync_i_n_1),
        .Q(dl_stopstate_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_77 dl_txrequestesc_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txrequestesc_sync_i_n_1),
        .Q(dl_tx_sm_state__0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl_status_bit_6_reg(dl_status_bit_6_reg_n_0),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_reg(esc_active_sync),
        .out(dl_txrequestesc_sync),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_3),
        .timeout_hsexit(timeout_hsexit),
        .timeout_hsexit_reg(dl_txrequestesc_sync_i_n_2));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_78 dl_txrequesths_sync_i
       (.D(dl_txrequesths_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_5),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txrequesths_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (dl_txrequesths_sync_i_n_7),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_1 (dl_txrequesths_sync_i_n_9),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_10),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (lp_01_r_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_2 (dl_txskewcalhs_sync_i_n_2),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(dl_txrequesths_sync_i_n_2),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_txrequestesc_sync_i_n_1),
        .dl_status_bit_6_reg_0(dl_forcetxstopmode_sync_i_n_4),
        .dl_status_bit_6_reg_1(esc_active_sync_i_n_5),
        .dl_status_bit_6_reg_2(dl_status_bit_6_reg_n_0),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath13_out(en_cal_hs_datapath13_out),
        .en_cal_hs_datapath_reg(timeout_prepare_reg_n_0),
        .en_cal_hs_datapath_reg_0(dl_txskewcalhs_sync),
        .en_hs_datapath_reg(en_hs_datapath_reg_0),
        .en_lp_01_cnt_reg(dl_forcetxstopmode_sync_i_n_2),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(timeout_hsexit_reg_0),
        .en_lp_01_cnt_reg_2(en_lp_01_cnt_reg_0),
        .init_done_reg(dl_txrequesths_sync_i_n_11),
        .out(dl_txrequesths_sync),
        .s_level_out_d2_reg_0(dl_txrequesths_sync_i_n_6),
        .tx_dl_lp_dn_reg(esc_active_sync_i_n_2),
        .tx_dl_lp_dn_reg_0(dl_txskewcalhs_sync_i_n_5),
        .tx_dl_lp_dp_reg(esc_active_sync_i_n_3),
        .tx_dl_lp_dp_reg_0(dl_txrequestesc_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_79 dl_txskewcalhs_sync_i
       (.D({dl_txskewcalhs_sync_i_n_3,dl_txskewcalhs_sync_i_n_4}),
        .\FSM_sequential_dl_tx_sm_state[2]_i_8__0_0 (en_lp_01_cnt_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (dl_txrequesths_sync_i_n_6),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_2 (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (timeout_prepare_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_1 (dl_txrequesths_sync),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_2 (lp_01_r_reg_n_0),
        .Q(dl_tx_sm_state__0),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .esc_start(esc_start),
        .esc_start_reg(dl_forcetxstopmode_sync_i_n_2),
        .esc_start_reg_0(dl_txrequestesc_sync_i_n_2),
        .esc_start_reg_1(dl_txrequestesc_sync),
        .esc_start_reg_2(timeout_hsexit_reg_0),
        .out(dl_txskewcalhs_sync),
        .s_level_out_d3_reg_0(dl_txskewcalhs_sync_i_n_5),
        .timeout_hsexit(timeout_hsexit));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_7),
        .CLR(core_rst),
        .D(en_cal_hs_datapath13_out),
        .Q(en_cal_hs_datapath));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_7),
        .CLR(core_rst),
        .D(en_hs_datapath14_out),
        .Q(dl_status_reg));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_1),
        .Q(en_lp_01_cnt_reg_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_80 esc_active_sync_i
       (.E(esc_active_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_5),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequesths_sync_i_n_11),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (timeout_prepare_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_2 (en_hs_datapath_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_3 (dl_forcetxstopmode_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (esc_active_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (esc_active_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (esc_active_sync_i_n_6),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_txrequestesc_sync),
        .dl_stopstate_reg(dl_txrequesths_sync_i_n_6),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(out),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .s_level_out_d3_reg_1(esc_active_sync_i_n_5),
        .timeout_hsexit(timeout_hsexit),
        .timeout_hsexit_all(timeout_hsexit_all));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(esc_start));
  CARRY8 hsexit_count0__0_carry
       (.CI(hsexit_count_reg[0]),
        .CI_TOP(1'b0),
        .CO({hsexit_count0__0_carry_n_0,hsexit_count0__0_carry_n_1,hsexit_count0__0_carry_n_2,hsexit_count0__0_carry_n_3,hsexit_count0__0_carry_n_4,hsexit_count0__0_carry_n_5,hsexit_count0__0_carry_n_6,hsexit_count0__0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__0[8:1]),
        .S(hsexit_count_reg[8:1]));
  CARRY8 hsexit_count0__0_carry__0
       (.CI(hsexit_count0__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED[7:3],hsexit_count0__0_carry__0_n_5,hsexit_count0__0_carry__0_n_6,hsexit_count0__0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_hsexit_count0__0_carry__0_O_UNCONNECTED[7:4],p_0_in__0[12:9]}),
        .S({1'b0,1'b0,1'b0,1'b0,hsexit_count_reg[12:9]}));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_1__0 
       (.I0(hsexit_count_reg[0]),
        .O(p_0_in__0[0]));
  LUT4 #(
    .INIT(16'hF7FF)) 
    \hsexit_count[12]_i_1__0 
       (.I0(dl_tx_sm_state__0[1]),
        .I1(dl_tx_sm_state__0[2]),
        .I2(dl_tx_sm_state__0[0]),
        .I3(timeout_hsexit_reg_0),
        .O(\hsexit_count[12]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[12]_i_2__0 
       (.I0(\hsexit_count[12]_i_3__0_n_0 ),
        .O(\hsexit_count[12]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \hsexit_count[12]_i_3__0 
       (.I0(\hsexit_count[12]_i_4__0_n_0 ),
        .I1(hsexit_count_reg[10]),
        .I2(hsexit_count_reg[5]),
        .I3(hsexit_count_reg[6]),
        .I4(\hsexit_count[12]_i_5__0_n_0 ),
        .O(\hsexit_count[12]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \hsexit_count[12]_i_4__0 
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .I2(hsexit_count_reg[12]),
        .I3(hsexit_count_reg[11]),
        .I4(hsexit_count_reg[7]),
        .I5(hsexit_count_reg[4]),
        .O(\hsexit_count[12]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \hsexit_count[12]_i_5__0 
       (.I0(hsexit_count_reg[2]),
        .I1(hsexit_count_reg[3]),
        .I2(hsexit_count_reg[1]),
        .I3(hsexit_count_reg[0]),
        .O(\hsexit_count[12]_i_5__0_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[0]),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[10]),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[11]),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[12]),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[1]),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[2]),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[3]),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[4]),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[5]),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[6]),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[7]),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[8]),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2__0_n_0 ),
        .D(p_0_in__0[9]),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__1
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__1_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__1 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__1 
       (.I0(\lp_st01_cnt[1]_i_2__1_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__1 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__1_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__1 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__1 
       (.I0(\lp_st01_cnt[5]_i_2__1_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__1 
       (.I0(\lp_st01_cnt[6]_i_2__1_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__1 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__1_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1__0 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .O(p_0_in_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1__0 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .I1(prepare_count_reg[1]),
        .O(p_0_in_0[1]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \prepare_count[2]_i_1__0 
       (.I0(prepare_count_reg[2]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[1]),
        .O(p_0_in_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \prepare_count[3]_i_1__1 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[2]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .I3(prepare_count_reg[1]),
        .O(\prepare_count[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \prepare_count[4]_i_1__0 
       (.I0(prepare_count_reg[2]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .O(p_0_in_0[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \prepare_count[5]_i_1__0 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[2]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .I3(prepare_count_reg[1]),
        .I4(prepare_count_reg[3]),
        .I5(prepare_count_reg[4]),
        .O(p_0_in_0[5]));
  LUT3 #(
    .INIT(8'h6A)) 
    \prepare_count[6]_i_1__0 
       (.I0(prepare_count_reg[6]),
        .I1(\prepare_count[8]_i_5__0_n_0 ),
        .I2(prepare_count_reg[5]),
        .O(p_0_in_0[6]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \prepare_count[7]_i_1__0 
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[5]),
        .I2(\prepare_count[8]_i_5__0_n_0 ),
        .I3(prepare_count_reg[6]),
        .O(p_0_in_0[7]));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1__1 
       (.I0(dl_tx_sm_state__0[0]),
        .I1(dl_tx_sm_state__0[1]),
        .I2(dl_tx_sm_state__0[2]),
        .O(\prepare_count[8]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'h0057)) 
    \prepare_count[8]_i_2__0 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[2]),
        .I3(\prepare_count[8]_i_4__0_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \prepare_count[8]_i_3__0 
       (.I0(prepare_count_reg[8]),
        .I1(prepare_count_reg[6]),
        .I2(\prepare_count[8]_i_5__0_n_0 ),
        .I3(prepare_count_reg[5]),
        .I4(prepare_count_reg[7]),
        .O(p_0_in_0[8]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \prepare_count[8]_i_4__0 
       (.I0(prepare_count_reg[8]),
        .I1(prepare_count_reg[5]),
        .I2(prepare_count_reg[6]),
        .I3(prepare_count_reg[7]),
        .I4(prepare_count_reg[4]),
        .O(\prepare_count[8]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \prepare_count[8]_i_5__0 
       (.I0(prepare_count_reg[4]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(\prepare_count_reg_n_0_[0] ),
        .I4(prepare_count_reg[2]),
        .O(\prepare_count[8]_i_5__0_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[0]),
        .Q(\prepare_count_reg_n_0_[0] ),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[1]),
        .Q(prepare_count_reg[1]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[2]),
        .Q(prepare_count_reg[2]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(\prepare_count[3]_i_1__1_n_0 ),
        .Q(prepare_count_reg[3]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[4]),
        .Q(prepare_count_reg[4]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[5]),
        .Q(prepare_count_reg[5]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[6]),
        .Q(prepare_count_reg[6]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[7]),
        .Q(prepare_count_reg[7]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in_0[8]),
        .Q(prepare_count_reg[8]),
        .R(\prepare_count[8]_i_1__1_n_0 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_81 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  LUT6 #(
    .INIT(64'h33333333FB333333)) 
    timeout_hsexit_i_1__0
       (.I0(\hsexit_count[12]_i_3__0_n_0 ),
        .I1(timeout_hsexit_reg_0),
        .I2(timeout_hsexit),
        .I3(dl_tx_sm_state__0[1]),
        .I4(dl_tx_sm_state__0[2]),
        .I5(dl_tx_sm_state__0[0]),
        .O(timeout_hsexit_i_1__0_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1__0_n_0),
        .Q(timeout_hsexit),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h000B0000)) 
    timeout_prepare_i_1__0
       (.I0(timeout_prepare_reg_n_0),
        .I1(sel),
        .I2(dl_tx_sm_state__0[0]),
        .I3(dl_tx_sm_state__0[1]),
        .I4(dl_tx_sm_state__0[2]),
        .O(timeout_prepare_i_1__0_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1__0_n_0),
        .Q(timeout_prepare_reg_n_0),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    tx_dl1_en_hs_tst_INST_0
       (.I0(dl_status_reg),
        .O(tx_dl1_en_hs_tst));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_9),
        .D(dl_txrequesths_sync_i_n_5),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_9),
        .D(dl_txrequesths_sync_i_n_4),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_data_lane_sm" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_sm_88
   (en_cal_hs_datapath,
    en_hs_datapath_reg_0,
    tx_dl_lp_dp_hs_i,
    tx_dl_lp_dn_hs_i,
    timeout_hsexit_reg_0,
    esc_start,
    en_hs_datapath_reg_1,
    tx_dl0_en_hs_tst,
    init_done_reg,
    core_clk,
    core_rst,
    dl0_enable,
    dl_txrequesths_r,
    dl0_txrequestesc,
    dl0_forcetxstopmode,
    out,
    dl_status_reg,
    start_clkpost_r_i_2,
    cl_init_done_coreclk_i,
    cl_txclkactivehs_i,
    en_hs_datapath_reg_2,
    timeout_hsexit_reg_1,
    en_lp_01_cnt_reg_0,
    system_rst,
    timeout_hsexit_all,
    dl_stopstate_coreclk_reg);
  output en_cal_hs_datapath;
  output en_hs_datapath_reg_0;
  output tx_dl_lp_dp_hs_i;
  output tx_dl_lp_dn_hs_i;
  output timeout_hsexit_reg_0;
  output esc_start;
  output en_hs_datapath_reg_1;
  output tx_dl0_en_hs_tst;
  output init_done_reg;
  input core_clk;
  input core_rst;
  input dl0_enable;
  input dl_txrequesths_r;
  input dl0_txrequestesc;
  input dl0_forcetxstopmode;
  input out;
  input [2:0]dl_status_reg;
  input start_clkpost_r_i_2;
  input cl_init_done_coreclk_i;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg_2;
  input timeout_hsexit_reg_1;
  input en_lp_01_cnt_reg_0;
  input system_rst;
  input timeout_hsexit_all;
  input dl_stopstate_coreclk_reg;

  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_txrequestesc;
  wire dl_enable_sync;
  wire dl_enable_sync_i_n_1;
  wire dl_forcetxstopmode_sync;
  wire dl_forcetxstopmode_sync_i_n_1;
  wire dl_forcetxstopmode_sync_i_n_2;
  wire dl_forcetxstopmode_sync_i_n_4;
  (* DONT_TOUCH *) wire dl_status_bit_6_reg_n_0;
  wire [2:0]dl_status_reg;
  wire dl_stopstate_coreclk_reg;
  wire dl_stopstate_i;
  wire [2:0]dl_tx_sm_state__0;
  wire dl_txrequestesc_sync;
  wire dl_txrequestesc_sync_i_n_1;
  wire dl_txrequestesc_sync_i_n_2;
  wire dl_txrequestesc_sync_i_n_3;
  wire dl_txrequesths_r;
  wire dl_txrequesths_sync;
  wire dl_txrequesths_sync_i_n_1;
  wire dl_txrequesths_sync_i_n_10;
  wire dl_txrequesths_sync_i_n_11;
  wire dl_txrequesths_sync_i_n_2;
  wire dl_txrequesths_sync_i_n_3;
  wire dl_txrequesths_sync_i_n_4;
  wire dl_txrequesths_sync_i_n_5;
  wire dl_txrequesths_sync_i_n_6;
  wire dl_txrequesths_sync_i_n_7;
  wire dl_txrequesths_sync_i_n_9;
  wire dl_txskewcalhs_sync;
  wire dl_txskewcalhs_sync_i_n_1;
  wire dl_txskewcalhs_sync_i_n_2;
  wire dl_txskewcalhs_sync_i_n_3;
  wire dl_txskewcalhs_sync_i_n_4;
  wire dl_txskewcalhs_sync_i_n_5;
  wire en_cal_hs_datapath;
  wire en_cal_hs_datapath13_out;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg_0;
  wire en_hs_datapath_reg_1;
  wire en_hs_datapath_reg_2;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_n_0;
  wire esc_active_sync;
  wire esc_active_sync_i_n_1;
  wire esc_active_sync_i_n_2;
  wire esc_active_sync_i_n_3;
  wire esc_active_sync_i_n_4;
  wire esc_active_sync_i_n_5;
  wire esc_active_sync_i_n_6;
  wire esc_active_sync_r;
  wire esc_start;
  wire hsexit_count0__0_carry__0_n_5;
  wire hsexit_count0__0_carry__0_n_6;
  wire hsexit_count0__0_carry__0_n_7;
  wire hsexit_count0__0_carry_n_0;
  wire hsexit_count0__0_carry_n_1;
  wire hsexit_count0__0_carry_n_2;
  wire hsexit_count0__0_carry_n_3;
  wire hsexit_count0__0_carry_n_4;
  wire hsexit_count0__0_carry_n_5;
  wire hsexit_count0__0_carry_n_6;
  wire hsexit_count0__0_carry_n_7;
  wire \hsexit_count[12]_i_1_n_0 ;
  wire \hsexit_count[12]_i_2_n_0 ;
  wire \hsexit_count[12]_i_3_n_0 ;
  wire \hsexit_count[12]_i_4_n_0 ;
  wire \hsexit_count[12]_i_5_n_0 ;
  wire [12:0]hsexit_count_reg;
  wire init_done_reg;
  wire lp_01_r;
  wire lp_01_r_reg_n_0;
  wire [6:0]lp_st01_cnt;
  wire \lp_st01_cnt[1]_i_2__0_n_0 ;
  wire \lp_st01_cnt[3]_i_2__0_n_0 ;
  wire \lp_st01_cnt[5]_i_2__0_n_0 ;
  wire \lp_st01_cnt[6]_i_2__0_n_0 ;
  wire \lp_st01_cnt_reg_n_0_[0] ;
  wire \lp_st01_cnt_reg_n_0_[1] ;
  wire \lp_st01_cnt_reg_n_0_[2] ;
  wire \lp_st01_cnt_reg_n_0_[3] ;
  wire \lp_st01_cnt_reg_n_0_[4] ;
  wire \lp_st01_cnt_reg_n_0_[5] ;
  wire \lp_st01_cnt_reg_n_0_[6] ;
  wire out;
  wire [8:0]p_0_in;
  wire [12:0]p_0_in__0;
  wire \prepare_count[3]_i_1__0_n_0 ;
  wire \prepare_count[8]_i_1__0_n_0 ;
  wire \prepare_count[8]_i_4_n_0 ;
  wire \prepare_count[8]_i_5_n_0 ;
  wire [8:1]prepare_count_reg;
  wire \prepare_count_reg_n_0_[0] ;
  wire sel;
  wire start_clkpost_r_i_2;
  wire system_rst;
  wire timeout_hsexit_all;
  wire timeout_hsexit_i_1_n_0;
  wire timeout_hsexit_reg_0;
  wire timeout_hsexit_reg_1;
  wire timeout_prepare_i_1_n_0;
  wire timeout_prepare_reg_n_0;
  wire tx_dl0_en_hs_tst;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dp_hs_i;
  wire [7:3]NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED;
  wire [7:4]NLW_hsexit_count0__0_carry__0_O_UNCONNECTED;

  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[0] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_4),
        .Q(dl_tx_sm_state__0[0]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[1] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_3),
        .Q(dl_tx_sm_state__0[1]));
  (* FSM_ENCODED_STATES = "DL_WO_INIT_LP_11:001,DL_TX_HS_EXIT:110,DL_TX_HS_RQST:011,DL_TX_BEGIN:000,DL_TX_HS_PRPR:100,DL_TX_HS_GO:101,DL_TX_STOP:010,DL_TX_ESC_WAIT:111" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_sm_state_reg[2] 
       (.C(core_clk),
        .CE(esc_active_sync_i_n_1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_3),
        .Q(dl_tx_sm_state__0[2]));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_94 dl_enable_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[0] (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_forcetxstopmode_sync),
        .Q(dl_tx_sm_state__0[0]),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .out(dl_enable_sync),
        .system_rst(system_rst));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_95 dl_forcetxstopmode_sync_i
       (.Q(dl_tx_sm_state__0),
        .SR(\prepare_count[8]_i_1__0_n_0 ),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(dl_forcetxstopmode_sync_i_n_4),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl_stopstate_i(dl_stopstate_i),
        .dl_stopstate_reg(dl_forcetxstopmode_sync_i_n_1),
        .dl_stopstate_reg_0(esc_active_sync_i_n_4),
        .dl_stopstate_reg_1(esc_active_sync_i_n_6),
        .dl_stopstate_reg_2(dl_txrequesths_sync_i_n_1),
        .dl_stopstate_reg_3(dl_enable_sync),
        .en_hs_datapath14_out(en_hs_datapath14_out),
        .en_hs_datapath_reg(dl_txrequesths_sync),
        .en_hs_datapath_reg_0(dl_txskewcalhs_sync),
        .init_done_reg(dl_forcetxstopmode_sync_i_n_2),
        .out(dl_forcetxstopmode_sync),
        .system_rst(system_rst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_10),
        .Q(dl_status_bit_6_reg_n_0));
  LUT3 #(
    .INIT(8'hA8)) 
    dl_stopstate_coreclk_i_1
       (.I0(cl_init_done_coreclk_i),
        .I1(dl_stopstate_i),
        .I2(dl_stopstate_coreclk_reg),
        .O(init_done_reg));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_forcetxstopmode_sync_i_n_1),
        .Q(dl_stopstate_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_96 dl_txrequestesc_sync_i
       (.\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txrequestesc_sync_i_n_1),
        .Q(dl_tx_sm_state__0),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl_status_bit_6_reg(timeout_hsexit_reg_0),
        .dl_status_bit_6_reg_0(dl_status_bit_6_reg_n_0),
        .esc_active_sync_r(esc_active_sync_r),
        .esc_start_reg(esc_active_sync),
        .out(dl_txrequestesc_sync),
        .s_level_out_d3_reg_0(dl_txrequestesc_sync_i_n_3),
        .timeout_hsexit_reg(dl_txrequestesc_sync_i_n_2));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_97 dl_txrequesths_sync_i
       (.D(dl_txrequesths_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txrequesths_sync_i_n_5),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txrequesths_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (dl_txrequesths_sync_i_n_7),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_1 (dl_txrequesths_sync_i_n_9),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (dl_txrequesths_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (dl_txrequesths_sync_i_n_10),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (lp_01_r_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_2 (dl_txskewcalhs_sync_i_n_2),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg(dl_txrequesths_sync_i_n_1),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_txrequestesc_sync_i_n_1),
        .dl_status_bit_6_reg_0(dl_forcetxstopmode_sync_i_n_4),
        .dl_status_bit_6_reg_1(esc_active_sync_i_n_5),
        .dl_status_bit_6_reg_2(dl_status_bit_6_reg_n_0),
        .dl_txrequesths_r(dl_txrequesths_r),
        .en_cal_hs_datapath13_out(en_cal_hs_datapath13_out),
        .en_cal_hs_datapath_reg(timeout_prepare_reg_n_0),
        .en_cal_hs_datapath_reg_0(dl_txskewcalhs_sync),
        .en_hs_datapath_reg(en_hs_datapath_reg_2),
        .en_lp_01_cnt_reg(dl_forcetxstopmode_sync_i_n_2),
        .en_lp_01_cnt_reg_0(en_lp_01_cnt_reg_n_0),
        .en_lp_01_cnt_reg_1(timeout_hsexit_reg_1),
        .en_lp_01_cnt_reg_2(en_lp_01_cnt_reg_0),
        .init_done_reg(dl_txrequesths_sync_i_n_11),
        .out(dl_txrequesths_sync),
        .s_level_out_d2_reg_0(dl_txrequesths_sync_i_n_6),
        .tx_dl_lp_dn_reg(esc_active_sync_i_n_2),
        .tx_dl_lp_dn_reg_0(dl_txskewcalhs_sync_i_n_5),
        .tx_dl_lp_dp_reg(esc_active_sync_i_n_3),
        .tx_dl_lp_dp_reg_0(dl_txrequestesc_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_98 dl_txskewcalhs_sync_i
       (.D({dl_txskewcalhs_sync_i_n_3,dl_txskewcalhs_sync_i_n_4}),
        .\FSM_sequential_dl_tx_sm_state[2]_i_8_0 (en_lp_01_cnt_reg_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequestesc_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (dl_txrequesths_sync_i_n_6),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_2 (dl_enable_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1] (dl_txskewcalhs_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_0 (timeout_prepare_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_1 (dl_txrequesths_sync),
        .\FSM_sequential_dl_tx_sm_state_reg[1]_2 (lp_01_r_reg_n_0),
        .Q(dl_tx_sm_state__0),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .esc_start(esc_start),
        .esc_start_reg(dl_forcetxstopmode_sync_i_n_2),
        .esc_start_reg_0(dl_txrequestesc_sync_i_n_2),
        .esc_start_reg_1(timeout_hsexit_reg_0),
        .esc_start_reg_2(dl_txrequestesc_sync),
        .esc_start_reg_3(timeout_hsexit_reg_1),
        .out(dl_txskewcalhs_sync),
        .s_level_out_d3_reg_0(dl_txskewcalhs_sync_i_n_5));
  FDCE en_cal_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_7),
        .CLR(core_rst),
        .D(en_cal_hs_datapath13_out),
        .Q(en_cal_hs_datapath));
  FDCE en_hs_datapath_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_7),
        .CLR(core_rst),
        .D(en_hs_datapath14_out),
        .Q(en_hs_datapath_reg_0));
  FDCE en_lp_01_cnt_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txrequesths_sync_i_n_2),
        .Q(en_lp_01_cnt_reg_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_99 esc_active_sync_i
       (.E(esc_active_sync_i_n_1),
        .\FSM_sequential_dl_tx_sm_state_reg[0] (dl_txskewcalhs_sync_i_n_5),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_0 (dl_txrequesths_sync_i_n_11),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_1 (timeout_prepare_reg_n_0),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_2 (en_hs_datapath_reg_2),
        .\FSM_sequential_dl_tx_sm_state_reg[0]_3 (dl_forcetxstopmode_sync_i_n_2),
        .\FSM_sequential_dl_tx_sm_state_reg[2] (esc_active_sync_i_n_3),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_0 (esc_active_sync_i_n_4),
        .\FSM_sequential_dl_tx_sm_state_reg[2]_1 (esc_active_sync_i_n_6),
        .Q(dl_tx_sm_state__0),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_bit_6_reg(dl_txrequestesc_sync),
        .dl_status_bit_6_reg_0(timeout_hsexit_reg_0),
        .dl_stopstate_reg(dl_txrequesths_sync_i_n_6),
        .esc_active_sync_r(esc_active_sync_r),
        .out(esc_active_sync),
        .s_level_out_d1_cdc_to_reg_0(out),
        .s_level_out_d3_reg_0(esc_active_sync_i_n_2),
        .s_level_out_d3_reg_1(esc_active_sync_i_n_5),
        .timeout_hsexit_all(timeout_hsexit_all));
  FDCE esc_active_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(esc_active_sync),
        .Q(esc_active_sync_r));
  FDCE esc_start_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_txskewcalhs_sync_i_n_1),
        .Q(esc_start));
  CARRY8 hsexit_count0__0_carry
       (.CI(hsexit_count_reg[0]),
        .CI_TOP(1'b0),
        .CO({hsexit_count0__0_carry_n_0,hsexit_count0__0_carry_n_1,hsexit_count0__0_carry_n_2,hsexit_count0__0_carry_n_3,hsexit_count0__0_carry_n_4,hsexit_count0__0_carry_n_5,hsexit_count0__0_carry_n_6,hsexit_count0__0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__0[8:1]),
        .S(hsexit_count_reg[8:1]));
  CARRY8 hsexit_count0__0_carry__0
       (.CI(hsexit_count0__0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_hsexit_count0__0_carry__0_CO_UNCONNECTED[7:3],hsexit_count0__0_carry__0_n_5,hsexit_count0__0_carry__0_n_6,hsexit_count0__0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_hsexit_count0__0_carry__0_O_UNCONNECTED[7:4],p_0_in__0[12:9]}),
        .S({1'b0,1'b0,1'b0,1'b0,hsexit_count_reg[12:9]}));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[0]_i_1 
       (.I0(hsexit_count_reg[0]),
        .O(p_0_in__0[0]));
  LUT4 #(
    .INIT(16'hF7FF)) 
    \hsexit_count[12]_i_1 
       (.I0(dl_tx_sm_state__0[1]),
        .I1(dl_tx_sm_state__0[2]),
        .I2(dl_tx_sm_state__0[0]),
        .I3(timeout_hsexit_reg_1),
        .O(\hsexit_count[12]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hsexit_count[12]_i_2 
       (.I0(\hsexit_count[12]_i_3_n_0 ),
        .O(\hsexit_count[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \hsexit_count[12]_i_3 
       (.I0(\hsexit_count[12]_i_4_n_0 ),
        .I1(hsexit_count_reg[10]),
        .I2(hsexit_count_reg[5]),
        .I3(hsexit_count_reg[6]),
        .I4(\hsexit_count[12]_i_5_n_0 ),
        .O(\hsexit_count[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \hsexit_count[12]_i_4 
       (.I0(hsexit_count_reg[8]),
        .I1(hsexit_count_reg[9]),
        .I2(hsexit_count_reg[12]),
        .I3(hsexit_count_reg[11]),
        .I4(hsexit_count_reg[7]),
        .I5(hsexit_count_reg[4]),
        .O(\hsexit_count[12]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \hsexit_count[12]_i_5 
       (.I0(hsexit_count_reg[2]),
        .I1(hsexit_count_reg[3]),
        .I2(hsexit_count_reg[1]),
        .I3(hsexit_count_reg[0]),
        .O(\hsexit_count[12]_i_5_n_0 ));
  FDRE \hsexit_count_reg[0] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[0]),
        .Q(hsexit_count_reg[0]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[10] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[10]),
        .Q(hsexit_count_reg[10]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[11] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[11]),
        .Q(hsexit_count_reg[11]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[12] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[12]),
        .Q(hsexit_count_reg[12]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[1] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[1]),
        .Q(hsexit_count_reg[1]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[2] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[2]),
        .Q(hsexit_count_reg[2]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[3] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[3]),
        .Q(hsexit_count_reg[3]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[4] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[4]),
        .Q(hsexit_count_reg[4]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[5] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[5]),
        .Q(hsexit_count_reg[5]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[6] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[6]),
        .Q(hsexit_count_reg[6]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[7] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[7]),
        .Q(hsexit_count_reg[7]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[8] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[8]),
        .Q(hsexit_count_reg[8]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  FDRE \hsexit_count_reg[9] 
       (.C(core_clk),
        .CE(\hsexit_count[12]_i_2_n_0 ),
        .D(p_0_in__0[9]),
        .Q(hsexit_count_reg[9]),
        .R(\hsexit_count[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h04)) 
    lp_01_r_i_1__0
       (.I0(\lp_st01_cnt_reg_n_0_[1] ),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .I2(\lp_st01_cnt[1]_i_2__0_n_0 ),
        .O(lp_01_r));
  FDCE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_01_r),
        .Q(lp_01_r_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \lp_st01_cnt[0]_i_1__0 
       (.I0(en_lp_01_cnt_reg_n_0),
        .I1(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[0]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h20C0)) 
    \lp_st01_cnt[1]_i_1__0 
       (.I0(\lp_st01_cnt[1]_i_2__0_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .O(lp_st01_cnt[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \lp_st01_cnt[1]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .I3(\lp_st01_cnt_reg_n_0_[5] ),
        .I4(\lp_st01_cnt_reg_n_0_[6] ),
        .O(\lp_st01_cnt[1]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7080)) 
    \lp_st01_cnt[2]_i_1__0 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[2] ),
        .O(lp_st01_cnt[2]));
  LUT6 #(
    .INIT(64'h76FF000088000000)) 
    \lp_st01_cnt[3]_i_1__0 
       (.I0(\lp_st01_cnt_reg_n_0_[2] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt[3]_i_2__0_n_0 ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[3] ),
        .O(lp_st01_cnt[3]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \lp_st01_cnt[3]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[6] ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st01_cnt[4]_i_1__0 
       (.I0(\lp_st01_cnt_reg_n_0_[3] ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[1] ),
        .I3(\lp_st01_cnt_reg_n_0_[0] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[4] ),
        .O(lp_st01_cnt[4]));
  LUT6 #(
    .INIT(64'hBFFF000040000000)) 
    \lp_st01_cnt[5]_i_1__0 
       (.I0(\lp_st01_cnt[5]_i_2__0_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[2] ),
        .I2(\lp_st01_cnt_reg_n_0_[3] ),
        .I3(\lp_st01_cnt_reg_n_0_[4] ),
        .I4(en_lp_01_cnt_reg_n_0),
        .I5(\lp_st01_cnt_reg_n_0_[5] ),
        .O(lp_st01_cnt[5]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st01_cnt[5]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .O(\lp_st01_cnt[5]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'hB040)) 
    \lp_st01_cnt[6]_i_1__0 
       (.I0(\lp_st01_cnt[6]_i_2__0_n_0 ),
        .I1(\lp_st01_cnt_reg_n_0_[5] ),
        .I2(en_lp_01_cnt_reg_n_0),
        .I3(\lp_st01_cnt_reg_n_0_[6] ),
        .O(lp_st01_cnt[6]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \lp_st01_cnt[6]_i_2__0 
       (.I0(\lp_st01_cnt_reg_n_0_[0] ),
        .I1(\lp_st01_cnt_reg_n_0_[1] ),
        .I2(\lp_st01_cnt_reg_n_0_[2] ),
        .I3(\lp_st01_cnt_reg_n_0_[3] ),
        .I4(\lp_st01_cnt_reg_n_0_[4] ),
        .O(\lp_st01_cnt[6]_i_2__0_n_0 ));
  FDCE \lp_st01_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[0]),
        .Q(\lp_st01_cnt_reg_n_0_[0] ));
  FDCE \lp_st01_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[1]),
        .Q(\lp_st01_cnt_reg_n_0_[1] ));
  FDCE \lp_st01_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[2]),
        .Q(\lp_st01_cnt_reg_n_0_[2] ));
  FDCE \lp_st01_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[3]),
        .Q(\lp_st01_cnt_reg_n_0_[3] ));
  FDCE \lp_st01_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[4]),
        .Q(\lp_st01_cnt_reg_n_0_[4] ));
  FDCE \lp_st01_cnt_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[5]),
        .Q(\lp_st01_cnt_reg_n_0_[5] ));
  FDCE \lp_st01_cnt_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_st01_cnt[6]),
        .Q(\lp_st01_cnt_reg_n_0_[6] ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \prepare_count[0]_i_1 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prepare_count[1]_i_1 
       (.I0(\prepare_count_reg_n_0_[0] ),
        .I1(prepare_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \prepare_count[2]_i_1 
       (.I0(prepare_count_reg[2]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \prepare_count[3]_i_1__0 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[2]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .I3(prepare_count_reg[1]),
        .O(\prepare_count[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \prepare_count[4]_i_1 
       (.I0(prepare_count_reg[2]),
        .I1(\prepare_count_reg_n_0_[0] ),
        .I2(prepare_count_reg[1]),
        .I3(prepare_count_reg[3]),
        .I4(prepare_count_reg[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \prepare_count[5]_i_1 
       (.I0(prepare_count_reg[5]),
        .I1(prepare_count_reg[2]),
        .I2(\prepare_count_reg_n_0_[0] ),
        .I3(prepare_count_reg[1]),
        .I4(prepare_count_reg[3]),
        .I5(prepare_count_reg[4]),
        .O(p_0_in[5]));
  LUT3 #(
    .INIT(8'h6A)) 
    \prepare_count[6]_i_1 
       (.I0(prepare_count_reg[6]),
        .I1(\prepare_count[8]_i_5_n_0 ),
        .I2(prepare_count_reg[5]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \prepare_count[7]_i_1 
       (.I0(prepare_count_reg[7]),
        .I1(prepare_count_reg[5]),
        .I2(\prepare_count[8]_i_5_n_0 ),
        .I3(prepare_count_reg[6]),
        .O(p_0_in[7]));
  LUT3 #(
    .INIT(8'hEF)) 
    \prepare_count[8]_i_1__0 
       (.I0(dl_tx_sm_state__0[0]),
        .I1(dl_tx_sm_state__0[1]),
        .I2(dl_tx_sm_state__0[2]),
        .O(\prepare_count[8]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h0057)) 
    \prepare_count[8]_i_2 
       (.I0(prepare_count_reg[3]),
        .I1(prepare_count_reg[1]),
        .I2(prepare_count_reg[2]),
        .I3(\prepare_count[8]_i_4_n_0 ),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \prepare_count[8]_i_3 
       (.I0(prepare_count_reg[8]),
        .I1(prepare_count_reg[6]),
        .I2(\prepare_count[8]_i_5_n_0 ),
        .I3(prepare_count_reg[5]),
        .I4(prepare_count_reg[7]),
        .O(p_0_in[8]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \prepare_count[8]_i_4 
       (.I0(prepare_count_reg[8]),
        .I1(prepare_count_reg[5]),
        .I2(prepare_count_reg[6]),
        .I3(prepare_count_reg[7]),
        .I4(prepare_count_reg[4]),
        .O(\prepare_count[8]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \prepare_count[8]_i_5 
       (.I0(prepare_count_reg[4]),
        .I1(prepare_count_reg[3]),
        .I2(prepare_count_reg[1]),
        .I3(\prepare_count_reg_n_0_[0] ),
        .I4(prepare_count_reg[2]),
        .O(\prepare_count[8]_i_5_n_0 ));
  FDRE \prepare_count_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(\prepare_count_reg_n_0_[0] ),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(prepare_count_reg[1]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(prepare_count_reg[2]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(\prepare_count[3]_i_1__0_n_0 ),
        .Q(prepare_count_reg[3]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(prepare_count_reg[4]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(prepare_count_reg[5]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(prepare_count_reg[6]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(prepare_count_reg[7]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  FDRE \prepare_count_reg[8] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[8]),
        .Q(prepare_count_reg[8]),
        .R(\prepare_count[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    start_clkpost_r_i_4
       (.I0(dl_status_reg[1]),
        .I1(dl_status_reg[0]),
        .I2(en_hs_datapath_reg_0),
        .I3(dl_status_reg[2]),
        .I4(start_clkpost_r_i_2),
        .O(en_hs_datapath_reg_1));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_100 timeout_hs_tx_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst));
  LUT6 #(
    .INIT(64'h33333333FB333333)) 
    timeout_hsexit_i_1
       (.I0(\hsexit_count[12]_i_3_n_0 ),
        .I1(timeout_hsexit_reg_1),
        .I2(timeout_hsexit_reg_0),
        .I3(dl_tx_sm_state__0[1]),
        .I4(dl_tx_sm_state__0[2]),
        .I5(dl_tx_sm_state__0[0]),
        .O(timeout_hsexit_i_1_n_0));
  FDRE timeout_hsexit_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_hsexit_i_1_n_0),
        .Q(timeout_hsexit_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h000B0000)) 
    timeout_prepare_i_1
       (.I0(timeout_prepare_reg_n_0),
        .I1(sel),
        .I2(dl_tx_sm_state__0[0]),
        .I3(dl_tx_sm_state__0[1]),
        .I4(dl_tx_sm_state__0[2]),
        .O(timeout_prepare_i_1_n_0));
  FDRE timeout_prepare_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(timeout_prepare_i_1_n_0),
        .Q(timeout_prepare_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT1 #(
    .INIT(2'h1)) 
    tx_dl0_en_hs_tst_INST_0
       (.I0(en_hs_datapath_reg_0),
        .O(tx_dl0_en_hs_tst));
  FDPE tx_dl_lp_dn_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_9),
        .D(dl_txrequesths_sync_i_n_5),
        .PRE(core_rst),
        .Q(tx_dl_lp_dn_hs_i));
  FDPE tx_dl_lp_dp_reg
       (.C(core_clk),
        .CE(dl_txrequesths_sync_i_n_9),
        .D(dl_txrequesths_sync_i_n_4),
        .PRE(core_rst),
        .Q(tx_dl_lp_dp_hs_i));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_esc_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath
   (out,
    esc_ctrl_all_sm_reg_0,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    esc_ctrl_i,
    dl3_ulpsactivenot,
    tx_dl3_lp_dn,
    tx_dl3_lp_dp,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl3_forcetxstopmode,
    esc_start,
    \esc_cmd_data_reg[0]_0 ,
    dl3_txrequestesc,
    dl3_txvalidesc,
    dl3_txulpsexit,
    dl3_txdataesc,
    dl3_txtriggeresc,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    tx_dl_lp_dp_hs_i,
    dl3_txulpsesc,
    dl3_txlpdtesc);
  output out;
  output esc_ctrl_all_sm_reg_0;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output esc_ctrl_i;
  output dl3_ulpsactivenot;
  output tx_dl3_lp_dn;
  output tx_dl3_lp_dp;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl3_forcetxstopmode;
  input esc_start;
  input \esc_cmd_data_reg[0]_0 ;
  input dl3_txrequestesc;
  input dl3_txvalidesc;
  input dl3_txulpsexit;
  input [7:0]dl3_txdataesc;
  input [3:0]dl3_txtriggeresc;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input tx_dl_lp_dp_hs_i;
  input dl3_txulpsesc;
  input dl3_txlpdtesc;

  wire \FSM_sequential_dl_tx_state[2]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_11__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_15__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_16__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6__2_n_0 ;
  wire [3:0]bit_cnt;
  wire \bit_cnt[3]_i_10__2_n_0 ;
  wire \bit_cnt[3]_i_11__2_n_0 ;
  wire \bit_cnt[3]_i_12__2_n_0 ;
  wire \bit_cnt[3]_i_7__2_n_0 ;
  wire \bit_cnt[3]_i_9__2_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_txclkesc;
  wire dl3_forcetxstopmode;
  wire [7:0]dl3_txdataesc;
  wire dl3_txlpdtesc;
  wire dl3_txrequestesc;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2__2_n_0;
  wire dl_txreadyesc_i_3__2_n_0;
  wire dl_txreadyesc_i_4__2_n_0;
  wire dl_txreadyesc_i_5__2_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_2__2_n_0;
  wire \esc_cmd_data[5]_i_3__2_n_0 ;
  wire \esc_cmd_data[5]_i_4__2_n_0 ;
  wire \esc_cmd_data[7]_i_3__2_n_0 ;
  wire \esc_cmd_data[7]_i_4__2_n_0 ;
  wire \esc_cmd_data[7]_i_6__2_n_0 ;
  wire \esc_cmd_data[7]_i_7__2_n_0 ;
  wire \esc_cmd_data[7]_i_9__2_n_0 ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_axi_if_i_1__2_n_0;
  (* DONT_TOUCH *) wire esc_ctrl_axi_if_reg_n_0;
  wire esc_ctrl_i;
  wire esc_start;
  wire esc_start_sync;
  wire esc_stopstate_i_1__2_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_17;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_31;
  wire init_done_sync_i_n_32;
  wire init_done_sync_i_n_33;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire tx_dl3_lp_dn;
  wire tx_dl3_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_12__2_n_0;
  wire tx_dl_lp_dn_i_15__2_n_0;
  wire tx_dl_lp_dn_i_16__2_n_0;
  wire tx_dl_lp_dn_i_17__2_n_0;
  wire tx_dl_lp_dn_i_18__2_n_0;
  wire tx_dl_lp_dn_i_19__2_n_0;
  wire tx_dl_lp_dn_i_20__2_n_0;
  wire tx_dl_lp_dn_i_21__2_n_0;
  wire tx_dl_lp_dn_i_4__2_n_0;
  wire tx_dl_lp_dn_i_6__2_n_0;
  wire tx_dl_lp_dn_i_7__2_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_3__5_n_0;
  wire tx_dl_lp_dp_i_5__2_n_0;
  wire txlpdtesc_r;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;
  wire txulpsesc_r_i_2__2_n_0;

  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_5__2 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_5__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \FSM_sequential_dl_tx_state[2]_i_7__2 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[3]_i_11__2 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[3]_i_11__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000280000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_15__2 
       (.I0(dl_txreadyesc_i_4__2_n_0),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(\esc_cmd_data[7]_i_6__2_n_0 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_15__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \FSM_sequential_dl_tx_state[3]_i_16__2 
       (.I0(dl_tx_state[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[3]_i_16__2_n_0 ));
  LUT6 #(
    .INIT(64'h2020200000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_5__2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(tx_dl_lp_dn_esc_i),
        .I4(tx_dl_lp_dp_esc_i),
        .I5(dl_txreadyesc_i_4__2_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_5__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[3]_i_6__2 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6__2_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[0]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[1]),
        .S(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[2]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_0),
        .Q(dl_tx_state[3]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h00202000)) 
    \bit_cnt[1]_i_1__2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(\bit_cnt_reg_n_0_[1] ),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0060000000C00000)) 
    \bit_cnt[2]_i_1__2 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[0]),
        .I5(\bit_cnt_reg_n_0_[0] ),
        .O(bit_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_10__2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .O(\bit_cnt[3]_i_10__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h511F)) 
    \bit_cnt[3]_i_11__2 
       (.I0(dl_tx_state[2]),
        .I1(\esc_cmd_data[7]_i_6__2_n_0 ),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(tx_dl_lp_dn_esc_i),
        .O(\bit_cnt[3]_i_11__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_12__2 
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_12__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bit_cnt[3]_i_7__2 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(\bit_cnt[3]_i_7__2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \bit_cnt[3]_i_9__2 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .O(\bit_cnt[3]_i_9__2_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[3]),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_34 dl_forcetxstopmode_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .esc_ctrl_all_sm_reg(\esc_cmd_data_reg[0]_0 ),
        .s_level_out_d3_reg_0(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFF20202000000000)) 
    dl_txreadyesc_i_2__2
       (.I0(tx_dl_lp_dn_i_4__2_n_0),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[3]),
        .I3(dl_txreadyesc_i_4__2_n_0),
        .I4(dl_txreadyesc_i_5__2_n_0),
        .I5(txlpdtesc_r),
        .O(dl_txreadyesc_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    dl_txreadyesc_i_3__2
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(dl_txreadyesc_i_3__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    dl_txreadyesc_i_4__2
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[3] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_txreadyesc_i_4__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'hE)) 
    dl_txreadyesc_i_5__2
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(dl_txreadyesc_i_5__2_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_23),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    dl_ulpsactivenot_i_2__2
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[3] ),
        .O(dl_ulpsactivenot_i_2__2_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_24),
        .Q(dl3_ulpsactivenot),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \esc_cmd_data[5]_i_3__2 
       (.I0(\esc_cmd_data[7]_i_9__2_n_0 ),
        .I1(dl_txreadyesc_reg_0),
        .I2(dl3_txvalidesc),
        .O(\esc_cmd_data[5]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \esc_cmd_data[5]_i_4__2 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .O(\esc_cmd_data[5]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \esc_cmd_data[7]_i_3__2 
       (.I0(dl3_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h0001555500000000)) 
    \esc_cmd_data[7]_i_4__2 
       (.I0(\bit_cnt[3]_i_10__2_n_0 ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(dl_txreadyesc_i_5__2_n_0),
        .O(\esc_cmd_data[7]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \esc_cmd_data[7]_i_6__2 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(p_0_in),
        .I3(\txtriggeresc_r_reg_n_0_[3] ),
        .O(\esc_cmd_data[7]_i_6__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \esc_cmd_data[7]_i_7__2 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\esc_cmd_data[7]_i_7__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFD5555)) 
    \esc_cmd_data[7]_i_9__2 
       (.I0(dl_txreadyesc_i_5__2_n_0),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(\bit_cnt[3]_i_10__2_n_0 ),
        .O(\esc_cmd_data[7]_i_9__2_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_21),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_20),
        .Q(data0[0]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_19),
        .Q(data0[1]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_18),
        .Q(data0[2]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_17),
        .Q(data0[3]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_16),
        .Q(data0[4]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_15),
        .Q(data0[5]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_14),
        .Q(data0[6]),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__2_n_0),
        .D(init_done_sync_i_n_10),
        .Q(esc_ctrl_all_sm_reg_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h1513)) 
    esc_ctrl_axi_if_i_1__2
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_ctrl_axi_if_i_1__2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__2_n_0),
        .D(init_done_sync_i_n_12),
        .Q(esc_ctrl_axi_if_reg_n_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__2_n_0),
        .D(init_done_sync_i_n_11),
        .Q(out),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_33),
        .Q(esc_ctrl_i),
        .R(1'b0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_35 esc_start_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .esc_start(esc_start),
        .out(esc_start_sync));
  LUT4 #(
    .INIT(16'h0042)) 
    esc_stopstate_i_1__2
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[2]),
        .O(esc_stopstate_i_1__2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1__2_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_36 init_done_sync_i
       (.D({init_done_sync_i_n_0,init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3}),
        .E(init_done_sync_i_n_9),
        .\FSM_sequential_dl_tx_state[2]_i_4__2_0 (\FSM_sequential_dl_tx_state[2]_i_7__2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0] (init_done_sync_i_n_10),
        .\FSM_sequential_dl_tx_state_reg[0]_0 (init_done_sync_i_n_11),
        .\FSM_sequential_dl_tx_state_reg[0]_1 (init_done_sync_i_n_12),
        .\FSM_sequential_dl_tx_state_reg[0]_2 (\FSM_sequential_dl_tx_state[3]_i_5__2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_3 (\FSM_sequential_dl_tx_state[3]_i_6__2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_4 (\FSM_sequential_dl_tx_state[3]_i_15__2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_5 (\FSM_sequential_dl_tx_state[3]_i_16__2_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] ({init_done_sync_i_n_25,init_done_sync_i_n_26,init_done_sync_i_n_27,init_done_sync_i_n_28}),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_13),
        .\FSM_sequential_dl_tx_state_reg[3] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[3]_0 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] ({bit_cnt[3],bit_cnt[0]}),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_7__2_n_0 ),
        .\bit_cnt_reg[0]_1 (\bit_cnt[3]_i_10__2_n_0 ),
        .\bit_cnt_reg[0]_2 (dl_ulpsactivenot_i_2__2_n_0),
        .\bit_cnt_reg[0]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\bit_cnt_reg[0]_4 (\bit_cnt[3]_i_12__2_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_9__2_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_11__2_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl3_txdataesc(dl3_txdataesc),
        .\dl3_txdataesc[7] ({init_done_sync_i_n_14,init_done_sync_i_n_15,init_done_sync_i_n_16,init_done_sync_i_n_17,init_done_sync_i_n_18,init_done_sync_i_n_19,init_done_sync_i_n_20,init_done_sync_i_n_21}),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txlpdtesc_0(init_done_sync_i_n_32),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .\dl3_txtriggeresc[0] (init_done_sync_i_n_29),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsesc_0(init_done_sync_i_n_31),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_txvalidesc_0(init_done_sync_i_n_22),
        .dl3_txvalidesc_1(init_done_sync_i_n_23),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl_txreadyesc_reg(\esc_cmd_data_reg[0]_0 ),
        .dl_txreadyesc_reg_0(dl_txreadyesc_i_2__2_n_0),
        .\esc_cmd_data_reg[0] (init_done_sync_i_n_6),
        .\esc_cmd_data_reg[0]_0 (init_done_sync_i_n_8),
        .\esc_cmd_data_reg[0]_1 (\esc_cmd_data[7]_i_6__2_n_0 ),
        .\esc_cmd_data_reg[0]_2 (\esc_cmd_data[7]_i_7__2_n_0 ),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[5]_i_4__2_n_0 ),
        .\esc_cmd_data_reg[5] (\esc_cmd_data[7]_i_4__2_n_0 ),
        .\esc_cmd_data_reg[5]_0 (\esc_cmd_data[5]_i_3__2_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .\esc_cmd_data_reg[6]_0 (\esc_cmd_data[7]_i_3__2_n_0 ),
        .\esc_cmd_data_reg[6]_1 (\esc_cmd_data[7]_i_9__2_n_0 ),
        .\esc_cmd_data_reg[7] (dl_txreadyesc_reg_0),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_reg_0),
        .esc_ctrl_axi_if_reg(esc_ctrl_axi_if_reg_n_0),
        .esc_ctrl_lane_sm_reg(out),
        .esc_ctrl_t_reg(init_done_sync_i_n_33),
        .esc_ctrl_t_reg_0(\FSM_sequential_dl_tx_state[3]_i_11__2_n_0 ),
        .esc_ctrl_t_reg_1(esc_ctrl_i),
        .esc_ctrl_t_reg_2(dl_forcetxstopmode_sync_i_n_0),
        .out(esc_start_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(init_done_sync_i_n_24),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(tx_dl_lp_dn_i_12__2_n_0),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_18__2_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_16__2_n_0),
        .tx_dl_lp_dn_reg_2(\FSM_sequential_dl_tx_state[2]_i_5__2_n_0 ),
        .tx_dl_lp_dn_reg_3(tx_dl_lp_dn_i_17__2_n_0),
        .tx_dl_lp_dp_reg(tx_dl_lp_dn_i_4__2_n_0),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dn_i_6__2_n_0),
        .tx_dl_lp_dp_reg_1(tx_dl_lp_dn_i_7__2_n_0),
        .tx_dl_lp_dp_reg_2(dl_txreadyesc_i_4__2_n_0),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_i_3__5_n_0),
        .txlpdtesc_r(txlpdtesc_r),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(txulpsesc_r_i_2__2_n_0),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl3_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(hs_xfer_done_i),
        .I2(esc_ctrl_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl3_lp_dn));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl3_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dp_hs_i),
        .I2(esc_ctrl_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl3_lp_dp));
  LUT6 #(
    .INIT(64'h8380808083838383)) 
    tx_dl_lp_dn_i_12__2
       (.I0(tx_dl_lp_dn_i_19__2_n_0),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(dl_ulpsactivenot_i_2__2_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_11__2_n_0 ),
        .I5(tx_dl_lp_dn_i_20__2_n_0),
        .O(tx_dl_lp_dn_i_12__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h7)) 
    tx_dl_lp_dn_i_15__2
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_15__2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    tx_dl_lp_dn_i_16__2
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .O(tx_dl_lp_dn_i_16__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h01)) 
    tx_dl_lp_dn_i_17__2
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_17__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_18__2
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .O(tx_dl_lp_dn_i_18__2_n_0));
  LUT6 #(
    .INIT(64'hAAFFAEAAAAAAAEAA)) 
    tx_dl_lp_dn_i_19__2
       (.I0(tx_dl_lp_dn_i_21__2_n_0),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_19__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    tx_dl_lp_dn_i_20__2
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_20__2_n_0));
  LUT6 #(
    .INIT(64'h0000BFFD00000000)) 
    tx_dl_lp_dn_i_21__2
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_21__2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_4__2
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_4__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h002F)) 
    tx_dl_lp_dn_i_6__2
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_6__2_n_0));
  LUT6 #(
    .INIT(64'h0000000008FF0808)) 
    tx_dl_lp_dn_i_7__2
       (.I0(tx_dl_lp_dn_i_15__2_n_0),
        .I1(dl_tx_state[0]),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(dl_ulpsactivenot_i_2__2_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_16__2_n_0 ),
        .I5(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_7__2_n_0));
  FDSE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_6),
        .Q(tx_dl_lp_dn_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFFFF07F3FFFF04C0)) 
    tx_dl_lp_dp_i_3__5
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(tx_dl_lp_dp_i_5__2_n_0),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dp_i_3__5_n_0));
  LUT6 #(
    .INIT(64'h0020000000000020)) 
    tx_dl_lp_dp_i_5__2
       (.I0(\FSM_sequential_dl_tx_state[3]_i_11__2_n_0 ),
        .I1(txulpsesc_r),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .I3(txlpdtesc_r),
        .I4(tx_dl_lp_dn_esc_i),
        .I5(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dp_i_5__2_n_0));
  FDSE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_8),
        .Q(tx_dl_lp_dp_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_32),
        .Q(txlpdtesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_28),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_27),
        .Q(p_2_in),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_26),
        .Q(p_0_in),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_25),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    txulpsesc_r_i_2__2
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(txulpsesc_r_i_2__2_n_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_31),
        .Q(txulpsesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_esc_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath_51
   (out,
    esc_ctrl_all_sm_reg_0,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    esc_ctrl_i,
    dl2_ulpsactivenot,
    tx_dl2_lp_dn,
    tx_dl2_lp_dp,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl2_forcetxstopmode,
    esc_start,
    \esc_cmd_data_reg[0]_0 ,
    dl2_txrequestesc,
    dl2_txvalidesc,
    dl2_txulpsexit,
    dl2_txdataesc,
    dl2_txtriggeresc,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    tx_dl_lp_dp_hs_i,
    dl2_txulpsesc,
    dl2_txlpdtesc);
  output out;
  output esc_ctrl_all_sm_reg_0;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output esc_ctrl_i;
  output dl2_ulpsactivenot;
  output tx_dl2_lp_dn;
  output tx_dl2_lp_dp;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl2_forcetxstopmode;
  input esc_start;
  input \esc_cmd_data_reg[0]_0 ;
  input dl2_txrequestesc;
  input dl2_txvalidesc;
  input dl2_txulpsexit;
  input [7:0]dl2_txdataesc;
  input [3:0]dl2_txtriggeresc;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input tx_dl_lp_dp_hs_i;
  input dl2_txulpsesc;
  input dl2_txlpdtesc;

  wire \FSM_sequential_dl_tx_state[2]_i_5__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_11__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_15__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_16__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6__1_n_0 ;
  wire [3:0]bit_cnt;
  wire \bit_cnt[3]_i_10__1_n_0 ;
  wire \bit_cnt[3]_i_11__1_n_0 ;
  wire \bit_cnt[3]_i_12__1_n_0 ;
  wire \bit_cnt[3]_i_7__1_n_0 ;
  wire \bit_cnt[3]_i_9__1_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_txclkesc;
  wire dl2_forcetxstopmode;
  wire [7:0]dl2_txdataesc;
  wire dl2_txlpdtesc;
  wire dl2_txrequestesc;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2__1_n_0;
  wire dl_txreadyesc_i_3__1_n_0;
  wire dl_txreadyesc_i_4__1_n_0;
  wire dl_txreadyesc_i_5__1_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_2__1_n_0;
  wire \esc_cmd_data[5]_i_3__1_n_0 ;
  wire \esc_cmd_data[5]_i_4__1_n_0 ;
  wire \esc_cmd_data[7]_i_3__1_n_0 ;
  wire \esc_cmd_data[7]_i_4__1_n_0 ;
  wire \esc_cmd_data[7]_i_6__1_n_0 ;
  wire \esc_cmd_data[7]_i_7__1_n_0 ;
  wire \esc_cmd_data[7]_i_9__1_n_0 ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire esc_ctrl_all_sm_reg_0;
  wire esc_ctrl_axi_if_i_1__1_n_0;
  (* DONT_TOUCH *) wire esc_ctrl_axi_if_reg_n_0;
  wire esc_ctrl_i;
  wire esc_start;
  wire esc_start_sync;
  wire esc_stopstate_i_1__1_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_17;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_31;
  wire init_done_sync_i_n_32;
  wire init_done_sync_i_n_33;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire tx_dl2_lp_dn;
  wire tx_dl2_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_12__1_n_0;
  wire tx_dl_lp_dn_i_15__1_n_0;
  wire tx_dl_lp_dn_i_16__1_n_0;
  wire tx_dl_lp_dn_i_17__1_n_0;
  wire tx_dl_lp_dn_i_18__1_n_0;
  wire tx_dl_lp_dn_i_19__1_n_0;
  wire tx_dl_lp_dn_i_20__1_n_0;
  wire tx_dl_lp_dn_i_21__1_n_0;
  wire tx_dl_lp_dn_i_4__1_n_0;
  wire tx_dl_lp_dn_i_6__1_n_0;
  wire tx_dl_lp_dn_i_7__1_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_3__3_n_0;
  wire tx_dl_lp_dp_i_5__1_n_0;
  wire txlpdtesc_r;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;
  wire txulpsesc_r_i_2__1_n_0;

  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_5__1 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \FSM_sequential_dl_tx_state[2]_i_7__1 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[3]_i_11__1 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[3]_i_11__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000280000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_15__1 
       (.I0(dl_txreadyesc_i_4__1_n_0),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(\esc_cmd_data[7]_i_6__1_n_0 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_15__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \FSM_sequential_dl_tx_state[3]_i_16__1 
       (.I0(dl_tx_state[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[3]_i_16__1_n_0 ));
  LUT6 #(
    .INIT(64'h2020200000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_5__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(tx_dl_lp_dn_esc_i),
        .I4(tx_dl_lp_dp_esc_i),
        .I5(dl_txreadyesc_i_4__1_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[3]_i_6__1 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6__1_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[0]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[1]),
        .S(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[2]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_0),
        .Q(dl_tx_state[3]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT5 #(
    .INIT(32'h00202000)) 
    \bit_cnt[1]_i_1__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(\bit_cnt_reg_n_0_[1] ),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0060000000C00000)) 
    \bit_cnt[2]_i_1__1 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[0]),
        .I5(\bit_cnt_reg_n_0_[0] ),
        .O(bit_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_10__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .O(\bit_cnt[3]_i_10__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'h511F)) 
    \bit_cnt[3]_i_11__1 
       (.I0(dl_tx_state[2]),
        .I1(\esc_cmd_data[7]_i_6__1_n_0 ),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(tx_dl_lp_dn_esc_i),
        .O(\bit_cnt[3]_i_11__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_12__1 
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_12__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bit_cnt[3]_i_7__1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(\bit_cnt[3]_i_7__1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \bit_cnt[3]_i_9__1 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .O(\bit_cnt[3]_i_9__1_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[3]),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_53 dl_forcetxstopmode_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .esc_ctrl_all_sm_reg(\esc_cmd_data_reg[0]_0 ),
        .s_level_out_d3_reg_0(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFF20202000000000)) 
    dl_txreadyesc_i_2__1
       (.I0(tx_dl_lp_dn_i_4__1_n_0),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[3]),
        .I3(dl_txreadyesc_i_4__1_n_0),
        .I4(dl_txreadyesc_i_5__1_n_0),
        .I5(txlpdtesc_r),
        .O(dl_txreadyesc_i_2__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    dl_txreadyesc_i_3__1
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(dl_txreadyesc_i_3__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    dl_txreadyesc_i_4__1
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[3] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_txreadyesc_i_4__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'hE)) 
    dl_txreadyesc_i_5__1
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(dl_txreadyesc_i_5__1_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_23),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    dl_ulpsactivenot_i_2__1
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[3] ),
        .O(dl_ulpsactivenot_i_2__1_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_24),
        .Q(dl2_ulpsactivenot),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \esc_cmd_data[5]_i_3__1 
       (.I0(\esc_cmd_data[7]_i_9__1_n_0 ),
        .I1(dl_txreadyesc_reg_0),
        .I2(dl2_txvalidesc),
        .O(\esc_cmd_data[5]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \esc_cmd_data[5]_i_4__1 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .O(\esc_cmd_data[5]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \esc_cmd_data[7]_i_3__1 
       (.I0(dl2_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0001555500000000)) 
    \esc_cmd_data[7]_i_4__1 
       (.I0(\bit_cnt[3]_i_10__1_n_0 ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(dl_txreadyesc_i_5__1_n_0),
        .O(\esc_cmd_data[7]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \esc_cmd_data[7]_i_6__1 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(p_0_in),
        .I3(\txtriggeresc_r_reg_n_0_[3] ),
        .O(\esc_cmd_data[7]_i_6__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \esc_cmd_data[7]_i_7__1 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\esc_cmd_data[7]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFD5555)) 
    \esc_cmd_data[7]_i_9__1 
       (.I0(dl_txreadyesc_i_5__1_n_0),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(\bit_cnt[3]_i_10__1_n_0 ),
        .O(\esc_cmd_data[7]_i_9__1_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_21),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_20),
        .Q(data0[0]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_19),
        .Q(data0[1]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_18),
        .Q(data0[2]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_17),
        .Q(data0[3]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_16),
        .Q(data0[4]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_15),
        .Q(data0[5]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_14),
        .Q(data0[6]),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__1_n_0),
        .D(init_done_sync_i_n_10),
        .Q(esc_ctrl_all_sm_reg_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h1513)) 
    esc_ctrl_axi_if_i_1__1
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_ctrl_axi_if_i_1__1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__1_n_0),
        .D(init_done_sync_i_n_12),
        .Q(esc_ctrl_axi_if_reg_n_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__1_n_0),
        .D(init_done_sync_i_n_11),
        .Q(out),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_33),
        .Q(esc_ctrl_i),
        .R(1'b0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_54 esc_start_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .esc_start(esc_start),
        .out(esc_start_sync));
  LUT4 #(
    .INIT(16'h0042)) 
    esc_stopstate_i_1__1
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[2]),
        .O(esc_stopstate_i_1__1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1__1_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_55 init_done_sync_i
       (.D({init_done_sync_i_n_0,init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3}),
        .E(init_done_sync_i_n_9),
        .\FSM_sequential_dl_tx_state[2]_i_4__1_0 (\FSM_sequential_dl_tx_state[2]_i_7__1_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0] (init_done_sync_i_n_10),
        .\FSM_sequential_dl_tx_state_reg[0]_0 (init_done_sync_i_n_11),
        .\FSM_sequential_dl_tx_state_reg[0]_1 (init_done_sync_i_n_12),
        .\FSM_sequential_dl_tx_state_reg[0]_2 (\FSM_sequential_dl_tx_state[3]_i_5__1_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_3 (\FSM_sequential_dl_tx_state[3]_i_6__1_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_4 (\FSM_sequential_dl_tx_state[3]_i_15__1_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_5 (\FSM_sequential_dl_tx_state[3]_i_16__1_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] ({init_done_sync_i_n_25,init_done_sync_i_n_26,init_done_sync_i_n_27,init_done_sync_i_n_28}),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_13),
        .\FSM_sequential_dl_tx_state_reg[3] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[3]_0 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] ({bit_cnt[3],bit_cnt[0]}),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_7__1_n_0 ),
        .\bit_cnt_reg[0]_1 (\bit_cnt[3]_i_10__1_n_0 ),
        .\bit_cnt_reg[0]_2 (dl_ulpsactivenot_i_2__1_n_0),
        .\bit_cnt_reg[0]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\bit_cnt_reg[0]_4 (\bit_cnt[3]_i_12__1_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_9__1_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_11__1_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl2_txdataesc(dl2_txdataesc),
        .\dl2_txdataesc[7] ({init_done_sync_i_n_14,init_done_sync_i_n_15,init_done_sync_i_n_16,init_done_sync_i_n_17,init_done_sync_i_n_18,init_done_sync_i_n_19,init_done_sync_i_n_20,init_done_sync_i_n_21}),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txlpdtesc_0(init_done_sync_i_n_32),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .\dl2_txtriggeresc[0] (init_done_sync_i_n_29),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsesc_0(init_done_sync_i_n_31),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_txvalidesc_0(init_done_sync_i_n_22),
        .dl2_txvalidesc_1(init_done_sync_i_n_23),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl_txreadyesc_reg(\esc_cmd_data_reg[0]_0 ),
        .dl_txreadyesc_reg_0(dl_txreadyesc_i_2__1_n_0),
        .\esc_cmd_data_reg[0] (init_done_sync_i_n_6),
        .\esc_cmd_data_reg[0]_0 (init_done_sync_i_n_8),
        .\esc_cmd_data_reg[0]_1 (\esc_cmd_data[7]_i_6__1_n_0 ),
        .\esc_cmd_data_reg[0]_2 (\esc_cmd_data[7]_i_7__1_n_0 ),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[5]_i_4__1_n_0 ),
        .\esc_cmd_data_reg[5] (\esc_cmd_data[7]_i_4__1_n_0 ),
        .\esc_cmd_data_reg[5]_0 (\esc_cmd_data[5]_i_3__1_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .\esc_cmd_data_reg[6]_0 (\esc_cmd_data[7]_i_3__1_n_0 ),
        .\esc_cmd_data_reg[6]_1 (\esc_cmd_data[7]_i_9__1_n_0 ),
        .\esc_cmd_data_reg[7] (dl_txreadyesc_reg_0),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_reg_0),
        .esc_ctrl_axi_if_reg(esc_ctrl_axi_if_reg_n_0),
        .esc_ctrl_lane_sm_reg(out),
        .esc_ctrl_t_reg(init_done_sync_i_n_33),
        .esc_ctrl_t_reg_0(\FSM_sequential_dl_tx_state[3]_i_11__1_n_0 ),
        .esc_ctrl_t_reg_1(esc_ctrl_i),
        .esc_ctrl_t_reg_2(dl_forcetxstopmode_sync_i_n_0),
        .out(esc_start_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(init_done_sync_i_n_24),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(tx_dl_lp_dn_i_12__1_n_0),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_18__1_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_16__1_n_0),
        .tx_dl_lp_dn_reg_2(\FSM_sequential_dl_tx_state[2]_i_5__1_n_0 ),
        .tx_dl_lp_dn_reg_3(tx_dl_lp_dn_i_17__1_n_0),
        .tx_dl_lp_dp_reg(tx_dl_lp_dn_i_4__1_n_0),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dn_i_6__1_n_0),
        .tx_dl_lp_dp_reg_1(tx_dl_lp_dn_i_7__1_n_0),
        .tx_dl_lp_dp_reg_2(dl_txreadyesc_i_4__1_n_0),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_i_3__3_n_0),
        .txlpdtesc_r(txlpdtesc_r),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(txulpsesc_r_i_2__1_n_0),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl2_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(hs_xfer_done_i),
        .I2(esc_ctrl_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl2_lp_dn));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl2_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dp_hs_i),
        .I2(esc_ctrl_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl2_lp_dp));
  LUT6 #(
    .INIT(64'h8380808083838383)) 
    tx_dl_lp_dn_i_12__1
       (.I0(tx_dl_lp_dn_i_19__1_n_0),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(dl_ulpsactivenot_i_2__1_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_11__1_n_0 ),
        .I5(tx_dl_lp_dn_i_20__1_n_0),
        .O(tx_dl_lp_dn_i_12__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h7)) 
    tx_dl_lp_dn_i_15__1
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_15__1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    tx_dl_lp_dn_i_16__1
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .O(tx_dl_lp_dn_i_16__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h01)) 
    tx_dl_lp_dn_i_17__1
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_17__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_18__1
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .O(tx_dl_lp_dn_i_18__1_n_0));
  LUT6 #(
    .INIT(64'hAAFFAEAAAAAAAEAA)) 
    tx_dl_lp_dn_i_19__1
       (.I0(tx_dl_lp_dn_i_21__1_n_0),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_19__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    tx_dl_lp_dn_i_20__1
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_20__1_n_0));
  LUT6 #(
    .INIT(64'h0000BFFD00000000)) 
    tx_dl_lp_dn_i_21__1
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_21__1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_4__1
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_4__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'h002F)) 
    tx_dl_lp_dn_i_6__1
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_6__1_n_0));
  LUT6 #(
    .INIT(64'h0000000008FF0808)) 
    tx_dl_lp_dn_i_7__1
       (.I0(tx_dl_lp_dn_i_15__1_n_0),
        .I1(dl_tx_state[0]),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(dl_ulpsactivenot_i_2__1_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_16__1_n_0 ),
        .I5(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_7__1_n_0));
  FDSE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_6),
        .Q(tx_dl_lp_dn_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFFFF07F3FFFF04C0)) 
    tx_dl_lp_dp_i_3__3
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(tx_dl_lp_dp_i_5__1_n_0),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dp_i_3__3_n_0));
  LUT6 #(
    .INIT(64'h0020000000000020)) 
    tx_dl_lp_dp_i_5__1
       (.I0(\FSM_sequential_dl_tx_state[3]_i_11__1_n_0 ),
        .I1(txulpsesc_r),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .I3(txlpdtesc_r),
        .I4(tx_dl_lp_dn_esc_i),
        .I5(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dp_i_5__1_n_0));
  FDSE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_8),
        .Q(tx_dl_lp_dp_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_32),
        .Q(txlpdtesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_28),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_27),
        .Q(p_2_in),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_26),
        .Q(p_0_in),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_25),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    txulpsesc_r_i_2__1
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(txulpsesc_r_i_2__1_n_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_31),
        .Q(txulpsesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_esc_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath_70
   (out,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    esc_ctrl_i,
    dl1_ulpsactivenot,
    tx_dl1_lp_dn,
    tx_dl1_lp_dp,
    p_0_in,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl1_forcetxstopmode,
    esc_start,
    \esc_cmd_data_reg[0]_0 ,
    dl1_txrequestesc,
    dl1_txvalidesc,
    dl1_txulpsexit,
    dl1_txdataesc,
    dl1_txtriggeresc,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    tx_dl_lp_dp_hs_i,
    dl1_txulpsesc,
    dl1_txlpdtesc,
    esc_active_all_reg);
  output out;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output esc_ctrl_i;
  output dl1_ulpsactivenot;
  output tx_dl1_lp_dn;
  output tx_dl1_lp_dp;
  output p_0_in;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl1_forcetxstopmode;
  input esc_start;
  input \esc_cmd_data_reg[0]_0 ;
  input dl1_txrequestesc;
  input dl1_txvalidesc;
  input dl1_txulpsexit;
  input [7:0]dl1_txdataesc;
  input [3:0]dl1_txtriggeresc;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input tx_dl_lp_dp_hs_i;
  input dl1_txulpsesc;
  input dl1_txlpdtesc;
  input [2:0]esc_active_all_reg;

  wire \FSM_sequential_dl_tx_state[2]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_11__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_15__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_16__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6__0_n_0 ;
  wire [3:0]bit_cnt;
  wire \bit_cnt[3]_i_10__0_n_0 ;
  wire \bit_cnt[3]_i_11__0_n_0 ;
  wire \bit_cnt[3]_i_12__0_n_0 ;
  wire \bit_cnt[3]_i_7__0_n_0 ;
  wire \bit_cnt[3]_i_9__0_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_txclkesc;
  wire dl1_forcetxstopmode;
  wire [7:0]dl1_txdataesc;
  wire dl1_txlpdtesc;
  wire dl1_txrequestesc;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2__0_n_0;
  wire dl_txreadyesc_i_3__0_n_0;
  wire dl_txreadyesc_i_4__0_n_0;
  wire dl_txreadyesc_i_5__0_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_2__0_n_0;
  wire [2:0]esc_active_all_reg;
  wire \esc_cmd_data[5]_i_3__0_n_0 ;
  wire \esc_cmd_data[5]_i_4__0_n_0 ;
  wire \esc_cmd_data[7]_i_3__0_n_0 ;
  wire \esc_cmd_data[7]_i_4__0_n_0 ;
  wire \esc_cmd_data[7]_i_6__0_n_0 ;
  wire \esc_cmd_data[7]_i_7__0_n_0 ;
  wire \esc_cmd_data[7]_i_9__0_n_0 ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire [1:1]esc_ctrl_all_sm_c;
  wire esc_ctrl_axi_if_i_1__0_n_0;
  (* DONT_TOUCH *) wire esc_ctrl_axi_if_reg_n_0;
  wire esc_ctrl_i;
  wire esc_start;
  wire esc_start_sync;
  wire esc_stopstate_i_1__0_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_17;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_31;
  wire init_done_sync_i_n_32;
  wire init_done_sync_i_n_33;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_0_in_0;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire tx_dl1_lp_dn;
  wire tx_dl1_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_12__0_n_0;
  wire tx_dl_lp_dn_i_15__0_n_0;
  wire tx_dl_lp_dn_i_16__0_n_0;
  wire tx_dl_lp_dn_i_17__0_n_0;
  wire tx_dl_lp_dn_i_18__0_n_0;
  wire tx_dl_lp_dn_i_19__0_n_0;
  wire tx_dl_lp_dn_i_20__0_n_0;
  wire tx_dl_lp_dn_i_21__0_n_0;
  wire tx_dl_lp_dn_i_4__0_n_0;
  wire tx_dl_lp_dn_i_6__0_n_0;
  wire tx_dl_lp_dn_i_7__0_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_3__1_n_0;
  wire tx_dl_lp_dp_i_5__0_n_0;
  wire txlpdtesc_r;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;
  wire txulpsesc_r_i_2__0_n_0;

  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_5__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \FSM_sequential_dl_tx_state[2]_i_7__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[3]_i_11__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[3]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000280000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_15__0 
       (.I0(dl_txreadyesc_i_4__0_n_0),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(\esc_cmd_data[7]_i_6__0_n_0 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_15__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \FSM_sequential_dl_tx_state[3]_i_16__0 
       (.I0(dl_tx_state[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[3]_i_16__0_n_0 ));
  LUT6 #(
    .INIT(64'h2020200000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_5__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(tx_dl_lp_dn_esc_i),
        .I4(tx_dl_lp_dp_esc_i),
        .I5(dl_txreadyesc_i_4__0_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[3]_i_6__0 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6__0_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[0]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[1]),
        .S(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[2]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_0),
        .Q(dl_tx_state[3]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h00202000)) 
    \bit_cnt[1]_i_1__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(\bit_cnt_reg_n_0_[1] ),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0060000000C00000)) 
    \bit_cnt[2]_i_1__0 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[0]),
        .I5(\bit_cnt_reg_n_0_[0] ),
        .O(bit_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_10__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .O(\bit_cnt[3]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'h511F)) 
    \bit_cnt[3]_i_11__0 
       (.I0(dl_tx_state[2]),
        .I1(\esc_cmd_data[7]_i_6__0_n_0 ),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(tx_dl_lp_dn_esc_i),
        .O(\bit_cnt[3]_i_11__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_12__0 
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_12__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bit_cnt[3]_i_7__0 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(\bit_cnt[3]_i_7__0_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \bit_cnt[3]_i_9__0 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .O(\bit_cnt[3]_i_9__0_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[3]),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_72 dl_forcetxstopmode_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .esc_ctrl_all_sm_reg(\esc_cmd_data_reg[0]_0 ),
        .s_level_out_d3_reg_0(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFF20202000000000)) 
    dl_txreadyesc_i_2__0
       (.I0(tx_dl_lp_dn_i_4__0_n_0),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[3]),
        .I3(dl_txreadyesc_i_4__0_n_0),
        .I4(dl_txreadyesc_i_5__0_n_0),
        .I5(txlpdtesc_r),
        .O(dl_txreadyesc_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    dl_txreadyesc_i_3__0
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(dl_txreadyesc_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    dl_txreadyesc_i_4__0
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[3] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_txreadyesc_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'hE)) 
    dl_txreadyesc_i_5__0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(dl_txreadyesc_i_5__0_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_23),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    dl_ulpsactivenot_i_2__0
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[3] ),
        .O(dl_ulpsactivenot_i_2__0_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_24),
        .Q(dl1_ulpsactivenot),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    esc_active_all_i_1
       (.I0(esc_ctrl_all_sm_c),
        .I1(esc_active_all_reg[0]),
        .I2(esc_active_all_reg[2]),
        .I3(esc_active_all_reg[1]),
        .O(p_0_in));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \esc_cmd_data[5]_i_3__0 
       (.I0(\esc_cmd_data[7]_i_9__0_n_0 ),
        .I1(dl_txreadyesc_reg_0),
        .I2(dl1_txvalidesc),
        .O(\esc_cmd_data[5]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \esc_cmd_data[5]_i_4__0 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .O(\esc_cmd_data[5]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \esc_cmd_data[7]_i_3__0 
       (.I0(dl1_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0001555500000000)) 
    \esc_cmd_data[7]_i_4__0 
       (.I0(\bit_cnt[3]_i_10__0_n_0 ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(dl_txreadyesc_i_5__0_n_0),
        .O(\esc_cmd_data[7]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \esc_cmd_data[7]_i_6__0 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(p_0_in_0),
        .I3(\txtriggeresc_r_reg_n_0_[3] ),
        .O(\esc_cmd_data[7]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \esc_cmd_data[7]_i_7__0 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\esc_cmd_data[7]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFD5555)) 
    \esc_cmd_data[7]_i_9__0 
       (.I0(dl_txreadyesc_i_5__0_n_0),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(\bit_cnt[3]_i_10__0_n_0 ),
        .O(\esc_cmd_data[7]_i_9__0_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_21),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_20),
        .Q(data0[0]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_19),
        .Q(data0[1]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_18),
        .Q(data0[2]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_17),
        .Q(data0[3]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_16),
        .Q(data0[4]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_15),
        .Q(data0[5]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_14),
        .Q(data0[6]),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__0_n_0),
        .D(init_done_sync_i_n_10),
        .Q(esc_ctrl_all_sm_c),
        .R(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h1513)) 
    esc_ctrl_axi_if_i_1__0
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_ctrl_axi_if_i_1__0_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__0_n_0),
        .D(init_done_sync_i_n_12),
        .Q(esc_ctrl_axi_if_reg_n_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1__0_n_0),
        .D(init_done_sync_i_n_11),
        .Q(out),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_33),
        .Q(esc_ctrl_i),
        .R(1'b0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_73 esc_start_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .esc_start(esc_start),
        .out(esc_start_sync));
  LUT4 #(
    .INIT(16'h0042)) 
    esc_stopstate_i_1__0
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[2]),
        .O(esc_stopstate_i_1__0_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1__0_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_74 init_done_sync_i
       (.D({init_done_sync_i_n_0,init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3}),
        .E(init_done_sync_i_n_9),
        .\FSM_sequential_dl_tx_state[2]_i_4__0_0 (\FSM_sequential_dl_tx_state[2]_i_7__0_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0] (init_done_sync_i_n_10),
        .\FSM_sequential_dl_tx_state_reg[0]_0 (init_done_sync_i_n_11),
        .\FSM_sequential_dl_tx_state_reg[0]_1 (init_done_sync_i_n_12),
        .\FSM_sequential_dl_tx_state_reg[0]_2 (\FSM_sequential_dl_tx_state[3]_i_5__0_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_3 (\FSM_sequential_dl_tx_state[3]_i_6__0_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_4 (\FSM_sequential_dl_tx_state[3]_i_15__0_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_5 (\FSM_sequential_dl_tx_state[3]_i_16__0_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] ({init_done_sync_i_n_25,init_done_sync_i_n_26,init_done_sync_i_n_27,init_done_sync_i_n_28}),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_13),
        .\FSM_sequential_dl_tx_state_reg[3] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[3]_0 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in_0,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] ({bit_cnt[3],bit_cnt[0]}),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_7__0_n_0 ),
        .\bit_cnt_reg[0]_1 (\bit_cnt[3]_i_10__0_n_0 ),
        .\bit_cnt_reg[0]_2 (dl_ulpsactivenot_i_2__0_n_0),
        .\bit_cnt_reg[0]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\bit_cnt_reg[0]_4 (\bit_cnt[3]_i_12__0_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_9__0_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_11__0_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl1_txdataesc(dl1_txdataesc),
        .\dl1_txdataesc[7] ({init_done_sync_i_n_14,init_done_sync_i_n_15,init_done_sync_i_n_16,init_done_sync_i_n_17,init_done_sync_i_n_18,init_done_sync_i_n_19,init_done_sync_i_n_20,init_done_sync_i_n_21}),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txlpdtesc_0(init_done_sync_i_n_32),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .\dl1_txtriggeresc[0] (init_done_sync_i_n_29),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsesc_0(init_done_sync_i_n_31),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_txvalidesc_0(init_done_sync_i_n_22),
        .dl1_txvalidesc_1(init_done_sync_i_n_23),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_txreadyesc_reg(\esc_cmd_data_reg[0]_0 ),
        .dl_txreadyesc_reg_0(dl_txreadyesc_i_2__0_n_0),
        .\esc_cmd_data_reg[0] (init_done_sync_i_n_6),
        .\esc_cmd_data_reg[0]_0 (init_done_sync_i_n_8),
        .\esc_cmd_data_reg[0]_1 (\esc_cmd_data[7]_i_6__0_n_0 ),
        .\esc_cmd_data_reg[0]_2 (\esc_cmd_data[7]_i_7__0_n_0 ),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[5]_i_4__0_n_0 ),
        .\esc_cmd_data_reg[5] (\esc_cmd_data[7]_i_4__0_n_0 ),
        .\esc_cmd_data_reg[5]_0 (\esc_cmd_data[5]_i_3__0_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .\esc_cmd_data_reg[6]_0 (\esc_cmd_data[7]_i_3__0_n_0 ),
        .\esc_cmd_data_reg[6]_1 (\esc_cmd_data[7]_i_9__0_n_0 ),
        .\esc_cmd_data_reg[7] (dl_txreadyesc_reg_0),
        .esc_ctrl_axi_if_reg(esc_ctrl_axi_if_reg_n_0),
        .esc_ctrl_lane_sm_reg(out),
        .esc_ctrl_t_reg(init_done_sync_i_n_33),
        .esc_ctrl_t_reg_0(\FSM_sequential_dl_tx_state[3]_i_11__0_n_0 ),
        .esc_ctrl_t_reg_1(esc_start_sync),
        .esc_ctrl_t_reg_2(esc_ctrl_i),
        .esc_ctrl_t_reg_3(dl_forcetxstopmode_sync_i_n_0),
        .out(esc_ctrl_all_sm_c),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(init_done_sync_i_n_24),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(tx_dl_lp_dn_i_12__0_n_0),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_18__0_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_16__0_n_0),
        .tx_dl_lp_dn_reg_2(\FSM_sequential_dl_tx_state[2]_i_5__0_n_0 ),
        .tx_dl_lp_dn_reg_3(tx_dl_lp_dn_i_17__0_n_0),
        .tx_dl_lp_dp_reg(tx_dl_lp_dn_i_4__0_n_0),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dn_i_6__0_n_0),
        .tx_dl_lp_dp_reg_1(tx_dl_lp_dn_i_7__0_n_0),
        .tx_dl_lp_dp_reg_2(dl_txreadyesc_i_4__0_n_0),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_i_3__1_n_0),
        .txlpdtesc_r(txlpdtesc_r),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(txulpsesc_r_i_2__0_n_0),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl1_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(hs_xfer_done_i),
        .I2(esc_ctrl_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl1_lp_dn));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl1_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dp_hs_i),
        .I2(esc_ctrl_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl1_lp_dp));
  LUT6 #(
    .INIT(64'h8380808083838383)) 
    tx_dl_lp_dn_i_12__0
       (.I0(tx_dl_lp_dn_i_19__0_n_0),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(dl_ulpsactivenot_i_2__0_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_11__0_n_0 ),
        .I5(tx_dl_lp_dn_i_20__0_n_0),
        .O(tx_dl_lp_dn_i_12__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h7)) 
    tx_dl_lp_dn_i_15__0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_15__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    tx_dl_lp_dn_i_16__0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .O(tx_dl_lp_dn_i_16__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h01)) 
    tx_dl_lp_dn_i_17__0
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_17__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_18__0
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .O(tx_dl_lp_dn_i_18__0_n_0));
  LUT6 #(
    .INIT(64'hAAFFAEAAAAAAAEAA)) 
    tx_dl_lp_dn_i_19__0
       (.I0(tx_dl_lp_dn_i_21__0_n_0),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_19__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    tx_dl_lp_dn_i_20__0
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_20__0_n_0));
  LUT6 #(
    .INIT(64'h0000BFFD00000000)) 
    tx_dl_lp_dn_i_21__0
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_21__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_4__0
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h002F)) 
    tx_dl_lp_dn_i_6__0
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h0000000008FF0808)) 
    tx_dl_lp_dn_i_7__0
       (.I0(tx_dl_lp_dn_i_15__0_n_0),
        .I1(dl_tx_state[0]),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(dl_ulpsactivenot_i_2__0_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_16__0_n_0 ),
        .I5(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_7__0_n_0));
  FDSE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_6),
        .Q(tx_dl_lp_dn_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFFFF07F3FFFF04C0)) 
    tx_dl_lp_dp_i_3__1
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(tx_dl_lp_dp_i_5__0_n_0),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dp_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h0020000000000020)) 
    tx_dl_lp_dp_i_5__0
       (.I0(\FSM_sequential_dl_tx_state[3]_i_11__0_n_0 ),
        .I1(txulpsesc_r),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .I3(txlpdtesc_r),
        .I4(tx_dl_lp_dn_esc_i),
        .I5(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dp_i_5__0_n_0));
  FDSE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_8),
        .Q(tx_dl_lp_dp_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_32),
        .Q(txlpdtesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_28),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_27),
        .Q(p_2_in),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_26),
        .Q(p_0_in_0),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_25),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    txulpsesc_r_i_2__0
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(txulpsesc_r_i_2__0_n_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_31),
        .Q(txulpsesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_esc_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_esc_datapath_89
   (out,
    esc_ctrl_all_sm,
    esc_stopstate_reg_0,
    dl_txreadyesc_reg_0,
    esc_ctrl_i,
    dl0_ulpsactivenot,
    tx_dl0_lp_dn,
    tx_dl0_lp_dp,
    dl0_txclkesc,
    s_level_out_d1_cdc_to_reg,
    dl0_forcetxstopmode,
    esc_start,
    \esc_cmd_data_reg[0]_0 ,
    dl0_txrequestesc,
    dl0_txvalidesc,
    dl0_txulpsexit,
    dl0_txdataesc,
    dl0_txtriggeresc,
    hs_xfer_done_i,
    tx_dl_lp_dn_hs_i,
    tx_dl_lp_dp_hs_i,
    dl0_txulpsesc,
    dl0_txlpdtesc);
  output out;
  output esc_ctrl_all_sm;
  output esc_stopstate_reg_0;
  output dl_txreadyesc_reg_0;
  output esc_ctrl_i;
  output dl0_ulpsactivenot;
  output tx_dl0_lp_dn;
  output tx_dl0_lp_dp;
  input dl0_txclkesc;
  input s_level_out_d1_cdc_to_reg;
  input dl0_forcetxstopmode;
  input esc_start;
  input \esc_cmd_data_reg[0]_0 ;
  input dl0_txrequestesc;
  input dl0_txvalidesc;
  input dl0_txulpsexit;
  input [7:0]dl0_txdataesc;
  input [3:0]dl0_txtriggeresc;
  input hs_xfer_done_i;
  input tx_dl_lp_dn_hs_i;
  input tx_dl_lp_dp_hs_i;
  input dl0_txulpsesc;
  input dl0_txlpdtesc;

  wire \FSM_sequential_dl_tx_state[2]_i_5_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_7_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_11_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_15_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_16_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_5_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_6_n_0 ;
  wire [3:0]bit_cnt;
  wire \bit_cnt[3]_i_10_n_0 ;
  wire \bit_cnt[3]_i_11_n_0 ;
  wire \bit_cnt[3]_i_12_n_0 ;
  wire \bit_cnt[3]_i_7_n_0 ;
  wire \bit_cnt[3]_i_9_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire \bit_cnt_reg_n_0_[3] ;
  wire [6:0]data0;
  wire dl0_forcetxstopmode;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire dl0_txlpdtesc;
  wire dl0_txrequestesc;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl_forcetxstopmode_sync_i_n_0;
  wire [3:0]dl_tx_state;
  wire dl_txreadyesc_i_2_n_0;
  wire dl_txreadyesc_i_3_n_0;
  wire dl_txreadyesc_i_4_n_0;
  wire dl_txreadyesc_i_5_n_0;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_2_n_0;
  wire \esc_cmd_data[5]_i_3_n_0 ;
  wire \esc_cmd_data[5]_i_4_n_0 ;
  wire \esc_cmd_data[7]_i_3_n_0 ;
  wire \esc_cmd_data[7]_i_4_n_0 ;
  wire \esc_cmd_data[7]_i_6_n_0 ;
  wire \esc_cmd_data[7]_i_7_n_0 ;
  wire \esc_cmd_data[7]_i_9_n_0 ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg_n_0_[0] ;
  (* DONT_TOUCH *) wire esc_ctrl_all_sm;
  wire esc_ctrl_axi_if_i_1_n_0;
  (* DONT_TOUCH *) wire esc_ctrl_axi_if_reg_n_0;
  wire esc_ctrl_i;
  wire esc_start;
  wire esc_start_sync;
  wire esc_stopstate_i_1_n_0;
  (* DONT_TOUCH *) wire esc_stopstate_reg_0;
  wire hs_xfer_done_i;
  wire init_done_sync_i_n_0;
  wire init_done_sync_i_n_1;
  wire init_done_sync_i_n_10;
  wire init_done_sync_i_n_11;
  wire init_done_sync_i_n_12;
  wire init_done_sync_i_n_13;
  wire init_done_sync_i_n_14;
  wire init_done_sync_i_n_15;
  wire init_done_sync_i_n_16;
  wire init_done_sync_i_n_17;
  wire init_done_sync_i_n_18;
  wire init_done_sync_i_n_19;
  wire init_done_sync_i_n_2;
  wire init_done_sync_i_n_20;
  wire init_done_sync_i_n_21;
  wire init_done_sync_i_n_22;
  wire init_done_sync_i_n_23;
  wire init_done_sync_i_n_24;
  wire init_done_sync_i_n_25;
  wire init_done_sync_i_n_26;
  wire init_done_sync_i_n_27;
  wire init_done_sync_i_n_28;
  wire init_done_sync_i_n_29;
  wire init_done_sync_i_n_3;
  wire init_done_sync_i_n_30;
  wire init_done_sync_i_n_31;
  wire init_done_sync_i_n_32;
  wire init_done_sync_i_n_33;
  wire init_done_sync_i_n_6;
  wire init_done_sync_i_n_7;
  wire init_done_sync_i_n_8;
  wire init_done_sync_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire p_0_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to_reg;
  wire tx_dl0_lp_dn;
  wire tx_dl0_lp_dp;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_hs_i;
  wire tx_dl_lp_dn_i_12_n_0;
  wire tx_dl_lp_dn_i_15_n_0;
  wire tx_dl_lp_dn_i_16_n_0;
  wire tx_dl_lp_dn_i_17_n_0;
  wire tx_dl_lp_dn_i_18_n_0;
  wire tx_dl_lp_dn_i_19_n_0;
  wire tx_dl_lp_dn_i_20_n_0;
  wire tx_dl_lp_dn_i_21_n_0;
  wire tx_dl_lp_dn_i_4_n_0;
  wire tx_dl_lp_dn_i_6_n_0;
  wire tx_dl_lp_dn_i_7_n_0;
  wire tx_dl_lp_dp_esc_i;
  wire tx_dl_lp_dp_hs_i;
  wire tx_dl_lp_dp_i_3_n_0;
  wire tx_dl_lp_dp_i_5_n_0;
  wire txlpdtesc_r;
  wire \txtriggeresc_r_reg_n_0_[0] ;
  wire \txtriggeresc_r_reg_n_0_[3] ;
  wire txulpsesc_r;
  wire txulpsesc_r_i_2_n_0;

  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[2]_i_5 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\FSM_sequential_dl_tx_state[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \FSM_sequential_dl_tx_state[2]_i_7 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[2]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_tx_state[3]_i_11 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .O(\FSM_sequential_dl_tx_state[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000280000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_15 
       (.I0(dl_txreadyesc_i_4_n_0),
        .I1(tx_dl_lp_dp_esc_i),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(dl_tx_state[0]),
        .I4(dl_tx_state[3]),
        .I5(\esc_cmd_data[7]_i_6_n_0 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h74)) 
    \FSM_sequential_dl_tx_state[3]_i_16 
       (.I0(dl_tx_state[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .O(\FSM_sequential_dl_tx_state[3]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h2020200000000000)) 
    \FSM_sequential_dl_tx_state[3]_i_5 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(tx_dl_lp_dn_esc_i),
        .I4(tx_dl_lp_dp_esc_i),
        .I5(dl_txreadyesc_i_4_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_tx_state[3]_i_6 
       (.I0(dl_tx_state[3]),
        .I1(dl_tx_state[0]),
        .O(\FSM_sequential_dl_tx_state[3]_i_6_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_3),
        .Q(dl_tx_state[0]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_tx_state_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_2),
        .Q(dl_tx_state[1]),
        .S(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_1),
        .Q(dl_tx_state[2]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* FSM_ENCODED_STATES = "DL_TX_LP_YIELD:0000,DL_TX_ESC_RQST:0001,DL_TX_LP_RQST:0100,DL_TX_ESC_ABORT:0110,DL_TX_ESC_END:0101,DL_TX_LPDT_XFER:0111,DL_TX_ESC_STOP:1001,DL_TX_ESC_BEGIN:0010,DL_TX_ESC_SPACE1:1010,DL_TX_LPDT_RDY:1000,DL_TX_ESC_WAKEUP:1011,DL_TX_ESC_SPACE0:1100,DL_TX_ESC_GO:0011" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_tx_state_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_9),
        .D(init_done_sync_i_n_0),
        .Q(dl_tx_state[3]),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h00202000)) 
    \bit_cnt[1]_i_1 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(\bit_cnt_reg_n_0_[1] ),
        .O(bit_cnt[1]));
  LUT6 #(
    .INIT(64'h0060000000C00000)) 
    \bit_cnt[2]_i_1 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .I2(dl_tx_state[1]),
        .I3(dl_tx_state[3]),
        .I4(dl_tx_state[0]),
        .I5(\bit_cnt_reg_n_0_[0] ),
        .O(bit_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \bit_cnt[3]_i_10 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[1]),
        .O(\bit_cnt[3]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h511F)) 
    \bit_cnt[3]_i_11 
       (.I0(dl_tx_state[2]),
        .I1(\esc_cmd_data[7]_i_6_n_0 ),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(tx_dl_lp_dn_esc_i),
        .O(\bit_cnt[3]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \bit_cnt[3]_i_12 
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .O(\bit_cnt[3]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \bit_cnt[3]_i_7 
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(\bit_cnt[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \bit_cnt[3]_i_9 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[2] ),
        .O(\bit_cnt[3]_i_9_n_0 ));
  FDRE \bit_cnt_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[0]),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[1]),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[2]),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE \bit_cnt_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_13),
        .D(bit_cnt[3]),
        .Q(\bit_cnt_reg_n_0_[3] ),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_91 dl_forcetxstopmode_sync_i
       (.dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_txclkesc(dl0_txclkesc),
        .esc_ctrl_all_sm_reg(\esc_cmd_data_reg[0]_0 ),
        .s_level_out_d3_reg_0(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFF20202000000000)) 
    dl_txreadyesc_i_2
       (.I0(tx_dl_lp_dn_i_4_n_0),
        .I1(dl_tx_state[1]),
        .I2(dl_tx_state[3]),
        .I3(dl_txreadyesc_i_4_n_0),
        .I4(dl_txreadyesc_i_5_n_0),
        .I5(txlpdtesc_r),
        .O(dl_txreadyesc_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    dl_txreadyesc_i_3
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[1]),
        .O(dl_txreadyesc_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    dl_txreadyesc_i_4
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[3] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .O(dl_txreadyesc_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'hE)) 
    dl_txreadyesc_i_5
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(dl_txreadyesc_i_5_n_0));
  FDRE dl_txreadyesc_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_23),
        .Q(dl_txreadyesc_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    dl_ulpsactivenot_i_2
       (.I0(\bit_cnt_reg_n_0_[0] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[3] ),
        .O(dl_ulpsactivenot_i_2_n_0));
  FDRE dl_ulpsactivenot_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_24),
        .Q(dl0_ulpsactivenot),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \esc_cmd_data[5]_i_3 
       (.I0(\esc_cmd_data[7]_i_9_n_0 ),
        .I1(dl_txreadyesc_reg_0),
        .I2(dl0_txvalidesc),
        .O(\esc_cmd_data[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \esc_cmd_data[5]_i_4 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .O(\esc_cmd_data[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \esc_cmd_data[7]_i_3 
       (.I0(dl0_txvalidesc),
        .I1(dl_txreadyesc_reg_0),
        .O(\esc_cmd_data[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0001555500000000)) 
    \esc_cmd_data[7]_i_4 
       (.I0(\bit_cnt[3]_i_10_n_0 ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(dl_txreadyesc_i_5_n_0),
        .O(\esc_cmd_data[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \esc_cmd_data[7]_i_6 
       (.I0(\txtriggeresc_r_reg_n_0_[0] ),
        .I1(p_2_in),
        .I2(p_0_in),
        .I3(\txtriggeresc_r_reg_n_0_[3] ),
        .O(\esc_cmd_data[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \esc_cmd_data[7]_i_7 
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[2]),
        .O(\esc_cmd_data[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFD5555)) 
    \esc_cmd_data[7]_i_9 
       (.I0(dl_txreadyesc_i_5_n_0),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[1] ),
        .I3(\bit_cnt_reg_n_0_[2] ),
        .I4(\bit_cnt_reg_n_0_[3] ),
        .I5(\bit_cnt[3]_i_10_n_0 ),
        .O(\esc_cmd_data[7]_i_9_n_0 ));
  FDRE \esc_cmd_data_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_21),
        .Q(\esc_cmd_data_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_20),
        .Q(data0[0]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_19),
        .Q(data0[1]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_18),
        .Q(data0[2]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[4] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_17),
        .Q(data0[3]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[5] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_16),
        .Q(data0[4]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[6] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_15),
        .Q(data0[5]),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \esc_cmd_data_reg[7] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_22),
        .D(init_done_sync_i_n_14),
        .Q(data0[6]),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_all_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1_n_0),
        .D(init_done_sync_i_n_10),
        .Q(esc_ctrl_all_sm),
        .R(dl_forcetxstopmode_sync_i_n_0));
  LUT4 #(
    .INIT(16'h1513)) 
    esc_ctrl_axi_if_i_1
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .I3(dl_tx_state[0]),
        .O(esc_ctrl_axi_if_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_axi_if_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1_n_0),
        .D(init_done_sync_i_n_12),
        .Q(esc_ctrl_axi_if_reg_n_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_ctrl_lane_sm_reg
       (.C(dl0_txclkesc),
        .CE(esc_ctrl_axi_if_i_1_n_0),
        .D(init_done_sync_i_n_11),
        .Q(out),
        .R(dl_forcetxstopmode_sync_i_n_0));
  FDRE #(
    .INIT(1'b0)) 
    esc_ctrl_t_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_33),
        .Q(esc_ctrl_i),
        .R(1'b0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_92 esc_start_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .esc_start(esc_start),
        .out(esc_start_sync));
  LUT4 #(
    .INIT(16'h0042)) 
    esc_stopstate_i_1
       (.I0(dl_tx_state[1]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[0]),
        .I3(dl_tx_state[2]),
        .O(esc_stopstate_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE esc_stopstate_reg
       (.C(dl0_txclkesc),
        .CE(esc_stopstate_i_1_n_0),
        .D(init_done_sync_i_n_30),
        .Q(esc_stopstate_reg_0),
        .R(dl_forcetxstopmode_sync_i_n_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_93 init_done_sync_i
       (.D({init_done_sync_i_n_0,init_done_sync_i_n_1,init_done_sync_i_n_2,init_done_sync_i_n_3}),
        .E(init_done_sync_i_n_9),
        .\FSM_sequential_dl_tx_state[2]_i_4_0 (\FSM_sequential_dl_tx_state[2]_i_7_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0] (init_done_sync_i_n_10),
        .\FSM_sequential_dl_tx_state_reg[0]_0 (init_done_sync_i_n_11),
        .\FSM_sequential_dl_tx_state_reg[0]_1 (init_done_sync_i_n_12),
        .\FSM_sequential_dl_tx_state_reg[0]_2 (\FSM_sequential_dl_tx_state[3]_i_5_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_3 (\FSM_sequential_dl_tx_state[3]_i_6_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_4 (\FSM_sequential_dl_tx_state[3]_i_15_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[0]_5 (\FSM_sequential_dl_tx_state[3]_i_16_n_0 ),
        .\FSM_sequential_dl_tx_state_reg[1] ({init_done_sync_i_n_25,init_done_sync_i_n_26,init_done_sync_i_n_27,init_done_sync_i_n_28}),
        .\FSM_sequential_dl_tx_state_reg[1]_0 (init_done_sync_i_n_30),
        .\FSM_sequential_dl_tx_state_reg[2] (init_done_sync_i_n_13),
        .\FSM_sequential_dl_tx_state_reg[3] (init_done_sync_i_n_7),
        .\FSM_sequential_dl_tx_state_reg[3]_0 ({\txtriggeresc_r_reg_n_0_[3] ,p_0_in,p_2_in,\txtriggeresc_r_reg_n_0_[0] }),
        .Q(dl_tx_state),
        .\bit_cnt_reg[0] ({bit_cnt[3],bit_cnt[0]}),
        .\bit_cnt_reg[0]_0 (\bit_cnt[3]_i_7_n_0 ),
        .\bit_cnt_reg[0]_1 (\bit_cnt[3]_i_10_n_0 ),
        .\bit_cnt_reg[0]_2 (dl_ulpsactivenot_i_2_n_0),
        .\bit_cnt_reg[0]_3 ({\bit_cnt_reg_n_0_[3] ,\bit_cnt_reg_n_0_[2] ,\bit_cnt_reg_n_0_[1] ,\bit_cnt_reg_n_0_[0] }),
        .\bit_cnt_reg[0]_4 (\bit_cnt[3]_i_12_n_0 ),
        .\bit_cnt_reg[3] (\bit_cnt[3]_i_9_n_0 ),
        .\bit_cnt_reg[3]_0 (\bit_cnt[3]_i_11_n_0 ),
        .dl0_txclkesc(dl0_txclkesc),
        .dl0_txdataesc(dl0_txdataesc),
        .\dl0_txdataesc[7] ({init_done_sync_i_n_14,init_done_sync_i_n_15,init_done_sync_i_n_16,init_done_sync_i_n_17,init_done_sync_i_n_18,init_done_sync_i_n_19,init_done_sync_i_n_20,init_done_sync_i_n_21}),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txlpdtesc_0(init_done_sync_i_n_32),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .\dl0_txtriggeresc[0] (init_done_sync_i_n_29),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsesc_0(init_done_sync_i_n_31),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_txvalidesc_0(init_done_sync_i_n_22),
        .dl0_txvalidesc_1(init_done_sync_i_n_23),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl_txreadyesc_reg(\esc_cmd_data_reg[0]_0 ),
        .dl_txreadyesc_reg_0(dl_txreadyesc_i_2_n_0),
        .\esc_cmd_data_reg[0] (init_done_sync_i_n_6),
        .\esc_cmd_data_reg[0]_0 (init_done_sync_i_n_8),
        .\esc_cmd_data_reg[0]_1 (\esc_cmd_data[7]_i_6_n_0 ),
        .\esc_cmd_data_reg[0]_2 (\esc_cmd_data[7]_i_7_n_0 ),
        .\esc_cmd_data_reg[3] (\esc_cmd_data[5]_i_4_n_0 ),
        .\esc_cmd_data_reg[5] (\esc_cmd_data[7]_i_4_n_0 ),
        .\esc_cmd_data_reg[5]_0 (\esc_cmd_data[5]_i_3_n_0 ),
        .\esc_cmd_data_reg[6] ({data0,\esc_cmd_data_reg_n_0_[0] }),
        .\esc_cmd_data_reg[6]_0 (\esc_cmd_data[7]_i_3_n_0 ),
        .\esc_cmd_data_reg[6]_1 (\esc_cmd_data[7]_i_9_n_0 ),
        .\esc_cmd_data_reg[7] (dl_txreadyesc_reg_0),
        .esc_ctrl_all_sm(esc_ctrl_all_sm),
        .esc_ctrl_axi_if_reg(esc_ctrl_axi_if_reg_n_0),
        .esc_ctrl_lane_sm_reg(out),
        .esc_ctrl_t_reg(init_done_sync_i_n_33),
        .esc_ctrl_t_reg_0(\FSM_sequential_dl_tx_state[3]_i_11_n_0 ),
        .esc_ctrl_t_reg_1(esc_ctrl_i),
        .esc_ctrl_t_reg_2(dl_forcetxstopmode_sync_i_n_0),
        .out(esc_start_sync),
        .s_level_out_d1_cdc_to_reg_0(s_level_out_d1_cdc_to_reg),
        .s_level_out_d3_reg_0(init_done_sync_i_n_24),
        .tx_dl_lp_dn_esc_i(tx_dl_lp_dn_esc_i),
        .tx_dl_lp_dn_reg(tx_dl_lp_dn_i_12_n_0),
        .tx_dl_lp_dn_reg_0(tx_dl_lp_dn_i_18_n_0),
        .tx_dl_lp_dn_reg_1(tx_dl_lp_dn_i_16_n_0),
        .tx_dl_lp_dn_reg_2(\FSM_sequential_dl_tx_state[2]_i_5_n_0 ),
        .tx_dl_lp_dn_reg_3(tx_dl_lp_dn_i_17_n_0),
        .tx_dl_lp_dp_reg(tx_dl_lp_dn_i_4_n_0),
        .tx_dl_lp_dp_reg_0(tx_dl_lp_dn_i_6_n_0),
        .tx_dl_lp_dp_reg_1(tx_dl_lp_dn_i_7_n_0),
        .tx_dl_lp_dp_reg_2(dl_txreadyesc_i_4_n_0),
        .tx_dl_lp_dp_reg_3(tx_dl_lp_dp_i_3_n_0),
        .txlpdtesc_r(txlpdtesc_r),
        .txulpsesc_r(txulpsesc_r),
        .txulpsesc_r_reg(txulpsesc_r_i_2_n_0),
        .txulpsesc_r_reg_0(dl_txreadyesc_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl0_lp_dn_INST_0
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(hs_xfer_done_i),
        .I2(esc_ctrl_i),
        .I3(tx_dl_lp_dn_hs_i),
        .O(tx_dl0_lp_dn));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hAFAC)) 
    tx_dl0_lp_dp_INST_0
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dp_hs_i),
        .I2(esc_ctrl_i),
        .I3(hs_xfer_done_i),
        .O(tx_dl0_lp_dp));
  LUT6 #(
    .INIT(64'h8380808083838383)) 
    tx_dl_lp_dn_i_12
       (.I0(tx_dl_lp_dn_i_19_n_0),
        .I1(tx_dl_lp_dn_esc_i),
        .I2(tx_dl_lp_dp_esc_i),
        .I3(dl_ulpsactivenot_i_2_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_11_n_0 ),
        .I5(tx_dl_lp_dn_i_20_n_0),
        .O(tx_dl_lp_dn_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h7)) 
    tx_dl_lp_dn_i_15
       (.I0(tx_dl_lp_dn_esc_i),
        .I1(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dn_i_15_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    tx_dl_lp_dn_i_16
       (.I0(tx_dl_lp_dp_esc_i),
        .I1(tx_dl_lp_dn_esc_i),
        .O(tx_dl_lp_dn_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h01)) 
    tx_dl_lp_dn_i_17
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_17_n_0));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_18
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .O(tx_dl_lp_dn_i_18_n_0));
  LUT6 #(
    .INIT(64'hAAFFAEAAAAAAAEAA)) 
    tx_dl_lp_dn_i_19
       (.I0(tx_dl_lp_dn_i_21_n_0),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(\bit_cnt_reg_n_0_[0] ),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_19_n_0));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    tx_dl_lp_dn_i_20
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[3]),
        .I2(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_20_n_0));
  LUT6 #(
    .INIT(64'h0000BFFD00000000)) 
    tx_dl_lp_dn_i_21
       (.I0(\bit_cnt_reg_n_0_[3] ),
        .I1(\bit_cnt_reg_n_0_[1] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt_reg_n_0_[0] ),
        .I4(dl_tx_state[3]),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_21_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    tx_dl_lp_dn_i_4
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .O(tx_dl_lp_dn_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h002F)) 
    tx_dl_lp_dn_i_6
       (.I0(dl_tx_state[0]),
        .I1(dl_tx_state[2]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(tx_dl_lp_dn_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000000008FF0808)) 
    tx_dl_lp_dn_i_7
       (.I0(tx_dl_lp_dn_i_15_n_0),
        .I1(dl_tx_state[0]),
        .I2(\bit_cnt_reg_n_0_[3] ),
        .I3(dl_ulpsactivenot_i_2_n_0),
        .I4(\FSM_sequential_dl_tx_state[3]_i_16_n_0 ),
        .I5(dl_tx_state[3]),
        .O(tx_dl_lp_dn_i_7_n_0));
  FDSE tx_dl_lp_dn_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_6),
        .Q(tx_dl_lp_dn_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  LUT6 #(
    .INIT(64'hFFFF07F3FFFF04C0)) 
    tx_dl_lp_dp_i_3
       (.I0(txlpdtesc_r),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[2]),
        .I4(tx_dl_lp_dp_i_5_n_0),
        .I5(dl_tx_state[1]),
        .O(tx_dl_lp_dp_i_3_n_0));
  LUT6 #(
    .INIT(64'h0020000000000020)) 
    tx_dl_lp_dp_i_5
       (.I0(\FSM_sequential_dl_tx_state[3]_i_11_n_0 ),
        .I1(txulpsesc_r),
        .I2(\esc_cmd_data_reg_n_0_[0] ),
        .I3(txlpdtesc_r),
        .I4(tx_dl_lp_dn_esc_i),
        .I5(tx_dl_lp_dp_esc_i),
        .O(tx_dl_lp_dp_i_5_n_0));
  FDSE tx_dl_lp_dp_reg
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_7),
        .D(init_done_sync_i_n_8),
        .Q(tx_dl_lp_dp_esc_i),
        .S(dl_forcetxstopmode_sync_i_n_0));
  FDRE txlpdtesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_32),
        .Q(txlpdtesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[0] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_28),
        .Q(\txtriggeresc_r_reg_n_0_[0] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[1] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_27),
        .Q(p_2_in),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[2] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_26),
        .Q(p_0_in),
        .R(\esc_cmd_data_reg[0]_0 ));
  FDRE \txtriggeresc_r_reg[3] 
       (.C(dl0_txclkesc),
        .CE(init_done_sync_i_n_29),
        .D(init_done_sync_i_n_25),
        .Q(\txtriggeresc_r_reg_n_0_[3] ),
        .R(\esc_cmd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    txulpsesc_r_i_2
       (.I0(dl_tx_state[2]),
        .I1(dl_tx_state[0]),
        .I2(dl_tx_state[3]),
        .I3(dl_tx_state[1]),
        .O(txulpsesc_r_i_2_n_0));
  FDRE txulpsesc_r_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(init_done_sync_i_n_31),
        .Q(txulpsesc_r),
        .R(\esc_cmd_data_reg[0]_0 ));
endmodule

(* BYTE_UI_LOCAL = "8" *) (* C_CLK_POST_VAL = "112" *) (* C_CLK_PREPARE_VAL = "95" *) 
(* C_CLK_PRE_VAL = "8" *) (* C_CLK_TRAIL_VAL = "60" *) (* C_CLK_ZERO_VAL = "205" *) 
(* C_DPHY_LANES = "4" *) (* C_DPHY_MODE = "MASTER" *) (* C_EN_DEBUG_REGS = "0" *) 
(* C_EN_HS_OBUFTDS = "FALSE" *) (* C_EN_REGISTER = "0" *) (* C_EN_TIMEOUT_REGS = "0" *) 
(* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) (* C_HS_EXIT_VAL = "100" *) 
(* C_HS_LINE_RATE = "1000" *) (* C_HS_PREPARE_VAL = "91" *) (* C_HS_TRAIL_VAL = "64" *) 
(* C_HS_TX_TIMEOUT = "65541" *) (* C_HS_ZERO_VAL = "111" *) (* C_INIT = "1000000" *) 
(* C_IS_7SERIES = "FALSE" *) (* C_LPX_PERIOD = "50" *) (* C_STABLE_CLK_PERIOD = "5.000000" *) 
(* C_USE_LANE0_TXREADYHS = "TRUE" *) (* C_WAKEUP = "1000000" *) (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
(* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IS_VERSAL = "0" *) 
(* LINE_RATE_SPEC_SWITCH = "1500" *) (* LP_STATE_CNT = "9" *) (* MTBF_SYNC_STAGES = "3" *) 
(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_fab_top" *) (* SKEW_CAL_FIRST_TIME = "4096" *) (* SKEW_CAL_PERIODIC_TIME = "128" *) 
(* SUPPORT_LEVEL = "0" *) (* UI = "1000" *) (* UI4 = "4" *) 
(* UI52 = "52" *) (* UI6 = "6" *) (* UI8 = "8" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_fab_top
   (tx_div4_clk,
    oserdes_clkdiv_in,
    config_div4_clk,
    dl_tst_clk_in,
    cl_tst_clk_in,
    core_clk,
    core_rst,
    core_ref_clk,
    system_rst_in,
    dphy_srst_out,
    dphy_en_out,
    system_rst_phybyteclk_in,
    system_rst_byteclk_in,
    system_rst_escclk_in,
    phy_rst,
    phy_ready,
    init_done,
    cl_txclkactivehs,
    cl_txrequesths,
    cl_stopstate,
    cl_enable,
    cl_txulpsclk,
    cl_txulpsexit,
    cl_ulpsactivenot,
    dl0_txbyteclkhs,
    dl0_txdatahs,
    dl0_txrequesths,
    dl0_txskewcalhs,
    dl0_txreadyhs,
    dl0_forcetxstopmode,
    dl0_stopstate,
    dl0_enable,
    dl0_txclkesc,
    dl0_txrequestesc,
    dl0_txlpdtesc,
    dl0_txulpsexit,
    dl0_ulpsactivenot,
    dl0_txulpsesc,
    dl0_txtriggeresc,
    dl0_txdataesc,
    dl0_txvalidesc,
    dl0_txreadyesc,
    dl1_txbyteclkhs,
    dl1_txdatahs,
    dl1_txrequesths,
    dl1_txskewcalhs,
    dl1_txreadyhs,
    dl1_forcetxstopmode,
    dl1_stopstate,
    dl1_enable,
    dl1_txclkesc,
    dl1_txrequestesc,
    dl1_txlpdtesc,
    dl1_txulpsexit,
    dl1_ulpsactivenot,
    dl1_txulpsesc,
    dl1_txtriggeresc,
    dl1_txdataesc,
    dl1_txvalidesc,
    dl1_txreadyesc,
    dl2_txbyteclkhs,
    dl2_txdatahs,
    dl2_txrequesths,
    dl2_txskewcalhs,
    dl2_txreadyhs,
    dl2_forcetxstopmode,
    dl2_stopstate,
    dl2_enable,
    dl2_txclkesc,
    dl2_txrequestesc,
    dl2_txlpdtesc,
    dl2_txulpsexit,
    dl2_ulpsactivenot,
    dl2_txulpsesc,
    dl2_txtriggeresc,
    dl2_txdataesc,
    dl2_txvalidesc,
    dl2_txreadyesc,
    dl3_txbyteclkhs,
    dl3_txdatahs,
    dl3_txrequesths,
    dl3_txskewcalhs,
    dl3_txreadyhs,
    dl3_forcetxstopmode,
    dl3_stopstate,
    dl3_enable,
    dl3_txclkesc,
    dl3_txrequestesc,
    dl3_txlpdtesc,
    dl3_txulpsexit,
    dl3_ulpsactivenot,
    dl3_txulpsesc,
    dl3_txtriggeresc,
    dl3_txdataesc,
    dl3_txvalidesc,
    dl3_txreadyesc,
    dl4_txbyteclkhs,
    dl4_txdatahs,
    dl4_txrequesths,
    dl4_txskewcalhs,
    dl4_txreadyhs,
    dl4_forcetxstopmode,
    dl4_stopstate,
    dl4_enable,
    dl4_txclkesc,
    dl4_txrequestesc,
    dl4_txlpdtesc,
    dl4_txulpsexit,
    dl4_ulpsactivenot,
    dl4_txulpsesc,
    dl4_txtriggeresc,
    dl4_txdataesc,
    dl4_txvalidesc,
    dl4_txreadyesc,
    dl5_txbyteclkhs,
    dl5_txdatahs,
    dl5_txrequesths,
    dl5_txskewcalhs,
    dl5_txreadyhs,
    dl5_forcetxstopmode,
    dl5_stopstate,
    dl5_enable,
    dl5_txclkesc,
    dl5_txrequestesc,
    dl5_txlpdtesc,
    dl5_txulpsexit,
    dl5_ulpsactivenot,
    dl5_txulpsesc,
    dl5_txtriggeresc,
    dl5_txdataesc,
    dl5_txvalidesc,
    dl5_txreadyesc,
    dl6_txbyteclkhs,
    dl6_txdatahs,
    dl6_txrequesths,
    dl6_txskewcalhs,
    dl6_txreadyhs,
    dl6_forcetxstopmode,
    dl6_stopstate,
    dl6_enable,
    dl6_txclkesc,
    dl6_txrequestesc,
    dl6_txlpdtesc,
    dl6_txulpsexit,
    dl6_ulpsactivenot,
    dl6_txulpsesc,
    dl6_txtriggeresc,
    dl6_txdataesc,
    dl6_txvalidesc,
    dl6_txreadyesc,
    dl7_txbyteclkhs,
    dl7_txdatahs,
    dl7_txrequesths,
    dl7_txskewcalhs,
    dl7_txreadyhs,
    dl7_forcetxstopmode,
    dl7_stopstate,
    dl7_enable,
    dl7_txclkesc,
    dl7_txrequestesc,
    dl7_txlpdtesc,
    dl7_txulpsexit,
    dl7_ulpsactivenot,
    dl7_txulpsesc,
    dl7_txtriggeresc,
    dl7_txdataesc,
    dl7_txvalidesc,
    dl7_txreadyesc,
    tx_hs_clk_p,
    tx_cl_lp_cp,
    tx_cl_lp_cn,
    tx_cl_en_lp_tst,
    tx_cl_en_hs_tst,
    tx_dl0_hs_dp,
    tx_dl0_lp_dp,
    tx_dl0_lp_dn,
    tx_dl0_en_lp_tst,
    tx_dl0_en_hs_tst,
    tx_dl1_hs_dp,
    tx_dl1_lp_dp,
    tx_dl1_lp_dn,
    tx_dl1_en_lp_tst,
    tx_dl1_en_hs_tst,
    tx_dl2_hs_dp,
    tx_dl2_lp_dp,
    tx_dl2_lp_dn,
    tx_dl2_en_lp_tst,
    tx_dl2_en_hs_tst,
    tx_dl3_hs_dp,
    tx_dl3_lp_dp,
    tx_dl3_lp_dn,
    tx_dl3_en_lp_tst,
    tx_dl3_en_hs_tst,
    tx_dl4_hs_dp,
    tx_dl4_lp_dp,
    tx_dl4_lp_dn,
    tx_dl4_en_lp_tst,
    tx_dl4_en_hs_tst,
    tx_dl5_hs_dp,
    tx_dl5_lp_dp,
    tx_dl5_lp_dn,
    tx_dl5_en_lp_tst,
    tx_dl5_en_hs_tst,
    tx_dl6_hs_dp,
    tx_dl6_lp_dp,
    tx_dl6_lp_dn,
    tx_dl6_en_lp_tst,
    tx_dl6_en_hs_tst,
    tx_dl7_hs_dp,
    tx_dl7_lp_dp,
    tx_dl7_lp_dn,
    tx_dl7_en_lp_tst,
    tx_dl7_en_hs_tst,
    active_lanes_in,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid);
  input tx_div4_clk;
  input oserdes_clkdiv_in;
  input config_div4_clk;
  input dl_tst_clk_in;
  input cl_tst_clk_in;
  input core_clk;
  input core_rst;
  output core_ref_clk;
  input system_rst_in;
  output dphy_srst_out;
  output dphy_en_out;
  input system_rst_phybyteclk_in;
  input system_rst_byteclk_in;
  input system_rst_escclk_in;
  output phy_rst;
  input phy_ready;
  output init_done;
  output cl_txclkactivehs;
  input cl_txrequesths;
  output cl_stopstate;
  input cl_enable;
  input cl_txulpsclk;
  input cl_txulpsexit;
  output cl_ulpsactivenot;
  output dl0_txbyteclkhs;
  input [7:0]dl0_txdatahs;
  input dl0_txrequesths;
  input dl0_txskewcalhs;
  output dl0_txreadyhs;
  input dl0_forcetxstopmode;
  output dl0_stopstate;
  input dl0_enable;
  input dl0_txclkesc;
  input dl0_txrequestesc;
  input dl0_txlpdtesc;
  input dl0_txulpsexit;
  output dl0_ulpsactivenot;
  input dl0_txulpsesc;
  input [3:0]dl0_txtriggeresc;
  input [7:0]dl0_txdataesc;
  input dl0_txvalidesc;
  output dl0_txreadyesc;
  output dl1_txbyteclkhs;
  input [7:0]dl1_txdatahs;
  input dl1_txrequesths;
  input dl1_txskewcalhs;
  output dl1_txreadyhs;
  input dl1_forcetxstopmode;
  output dl1_stopstate;
  input dl1_enable;
  input dl1_txclkesc;
  input dl1_txrequestesc;
  input dl1_txlpdtesc;
  input dl1_txulpsexit;
  output dl1_ulpsactivenot;
  input dl1_txulpsesc;
  input [3:0]dl1_txtriggeresc;
  input [7:0]dl1_txdataesc;
  input dl1_txvalidesc;
  output dl1_txreadyesc;
  output dl2_txbyteclkhs;
  input [7:0]dl2_txdatahs;
  input dl2_txrequesths;
  input dl2_txskewcalhs;
  output dl2_txreadyhs;
  input dl2_forcetxstopmode;
  output dl2_stopstate;
  input dl2_enable;
  input dl2_txclkesc;
  input dl2_txrequestesc;
  input dl2_txlpdtesc;
  input dl2_txulpsexit;
  output dl2_ulpsactivenot;
  input dl2_txulpsesc;
  input [3:0]dl2_txtriggeresc;
  input [7:0]dl2_txdataesc;
  input dl2_txvalidesc;
  output dl2_txreadyesc;
  output dl3_txbyteclkhs;
  input [7:0]dl3_txdatahs;
  input dl3_txrequesths;
  input dl3_txskewcalhs;
  output dl3_txreadyhs;
  input dl3_forcetxstopmode;
  output dl3_stopstate;
  input dl3_enable;
  input dl3_txclkesc;
  input dl3_txrequestesc;
  input dl3_txlpdtesc;
  input dl3_txulpsexit;
  output dl3_ulpsactivenot;
  input dl3_txulpsesc;
  input [3:0]dl3_txtriggeresc;
  input [7:0]dl3_txdataesc;
  input dl3_txvalidesc;
  output dl3_txreadyesc;
  output dl4_txbyteclkhs;
  input [7:0]dl4_txdatahs;
  input dl4_txrequesths;
  input dl4_txskewcalhs;
  output dl4_txreadyhs;
  input dl4_forcetxstopmode;
  output dl4_stopstate;
  input dl4_enable;
  input dl4_txclkesc;
  input dl4_txrequestesc;
  input dl4_txlpdtesc;
  input dl4_txulpsexit;
  output dl4_ulpsactivenot;
  input dl4_txulpsesc;
  input [3:0]dl4_txtriggeresc;
  input [7:0]dl4_txdataesc;
  input dl4_txvalidesc;
  output dl4_txreadyesc;
  output dl5_txbyteclkhs;
  input [7:0]dl5_txdatahs;
  input dl5_txrequesths;
  input dl5_txskewcalhs;
  output dl5_txreadyhs;
  input dl5_forcetxstopmode;
  output dl5_stopstate;
  input dl5_enable;
  input dl5_txclkesc;
  input dl5_txrequestesc;
  input dl5_txlpdtesc;
  input dl5_txulpsexit;
  output dl5_ulpsactivenot;
  input dl5_txulpsesc;
  input [3:0]dl5_txtriggeresc;
  input [7:0]dl5_txdataesc;
  input dl5_txvalidesc;
  output dl5_txreadyesc;
  output dl6_txbyteclkhs;
  input [7:0]dl6_txdatahs;
  input dl6_txrequesths;
  input dl6_txskewcalhs;
  output dl6_txreadyhs;
  input dl6_forcetxstopmode;
  output dl6_stopstate;
  input dl6_enable;
  input dl6_txclkesc;
  input dl6_txrequestesc;
  input dl6_txlpdtesc;
  input dl6_txulpsexit;
  output dl6_ulpsactivenot;
  input dl6_txulpsesc;
  input [3:0]dl6_txtriggeresc;
  input [7:0]dl6_txdataesc;
  input dl6_txvalidesc;
  output dl6_txreadyesc;
  output dl7_txbyteclkhs;
  input [7:0]dl7_txdatahs;
  input dl7_txrequesths;
  input dl7_txskewcalhs;
  output dl7_txreadyhs;
  input dl7_forcetxstopmode;
  output dl7_stopstate;
  input dl7_enable;
  input dl7_txclkesc;
  input dl7_txrequestesc;
  input dl7_txlpdtesc;
  input dl7_txulpsexit;
  output dl7_ulpsactivenot;
  input dl7_txulpsesc;
  input [3:0]dl7_txtriggeresc;
  input [7:0]dl7_txdataesc;
  input dl7_txvalidesc;
  output dl7_txreadyesc;
  output [7:0]tx_hs_clk_p;
  output tx_cl_lp_cp;
  output tx_cl_lp_cn;
  output tx_cl_en_lp_tst;
  output tx_cl_en_hs_tst;
  output [7:0]tx_dl0_hs_dp;
  output tx_dl0_lp_dp;
  output tx_dl0_lp_dn;
  output tx_dl0_en_lp_tst;
  output tx_dl0_en_hs_tst;
  output [7:0]tx_dl1_hs_dp;
  output tx_dl1_lp_dp;
  output tx_dl1_lp_dn;
  output tx_dl1_en_lp_tst;
  output tx_dl1_en_hs_tst;
  output [7:0]tx_dl2_hs_dp;
  output tx_dl2_lp_dp;
  output tx_dl2_lp_dn;
  output tx_dl2_en_lp_tst;
  output tx_dl2_en_hs_tst;
  output [7:0]tx_dl3_hs_dp;
  output tx_dl3_lp_dp;
  output tx_dl3_lp_dn;
  output tx_dl3_en_lp_tst;
  output tx_dl3_en_hs_tst;
  output [7:0]tx_dl4_hs_dp;
  output tx_dl4_lp_dp;
  output tx_dl4_lp_dn;
  output tx_dl4_en_lp_tst;
  output tx_dl4_en_hs_tst;
  output [7:0]tx_dl5_hs_dp;
  output tx_dl5_lp_dp;
  output tx_dl5_lp_dn;
  output tx_dl5_en_lp_tst;
  output tx_dl5_en_hs_tst;
  output [7:0]tx_dl6_hs_dp;
  output tx_dl6_lp_dp;
  output tx_dl6_lp_dn;
  output tx_dl6_en_lp_tst;
  output tx_dl6_en_hs_tst;
  output [7:0]tx_dl7_hs_dp;
  output tx_dl7_lp_dp;
  output tx_dl7_lp_dn;
  output tx_dl7_en_lp_tst;
  output tx_dl7_en_hs_tst;
  input [7:0]active_lanes_in;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;

  wire \<const0> ;
  wire cl_enable;
  wire cl_enable_sync;
  wire cl_init_done_coreclk_i;
  wire cl_init_done_escclk_sync_i;
  wire cl_stopstate;
  wire cl_txclkactivehs;
  wire cl_txclkactivehs_i;
  wire cl_txrequesths;
  wire cl_txrequesths_negedge_sync;
  wire cl_txulpsclk;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_forcetxstopmode;
  wire dl0_stopstate;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire [7:0]dl0_txdatahs;
  wire dl0_txlpdtesc;
  wire dl0_txreadyesc;
  wire dl0_txreadyhs;
  wire dl0_txrequestesc;
  wire dl0_txrequesths;
  wire [3:0]dl0_txtriggeresc;
  wire dl0_txulpsesc;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_forcetxstopmode;
  wire dl1_stopstate;
  wire [7:0]dl1_txdataesc;
  wire [7:0]dl1_txdatahs;
  wire dl1_txlpdtesc;
  wire dl1_txreadyesc;
  wire dl1_txreadyhs;
  wire dl1_txrequestesc;
  wire dl1_txrequesths;
  wire [3:0]dl1_txtriggeresc;
  wire dl1_txulpsesc;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire dl1_ulpsactivenot;
  wire dl2_enable;
  wire dl2_forcetxstopmode;
  wire dl2_stopstate;
  wire [7:0]dl2_txdataesc;
  wire [7:0]dl2_txdatahs;
  wire dl2_txlpdtesc;
  wire dl2_txreadyesc;
  wire dl2_txreadyhs;
  wire dl2_txrequestesc;
  wire dl2_txrequesths;
  wire [3:0]dl2_txtriggeresc;
  wire dl2_txulpsesc;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire dl2_ulpsactivenot;
  wire dl3_enable;
  wire dl3_forcetxstopmode;
  wire dl3_stopstate;
  wire [7:0]dl3_txdataesc;
  wire [7:0]dl3_txdatahs;
  wire dl3_txlpdtesc;
  wire dl3_txreadyesc;
  wire dl3_txreadyhs;
  wire dl3_txrequestesc;
  wire dl3_txrequesths;
  wire [3:0]dl3_txtriggeresc;
  wire dl3_txulpsesc;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire dl3_ulpsactivenot;
  wire [3:0]dl_hs_exit_done_i;
  wire [21:0]dl_status_reg;
  wire esc_active_all;
  wire esc_active_all_sync;
  wire [3:0]esc_ctrl_all_sm_c;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_2 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_3 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_5 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_7 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_8 ;
  wire \gen_tx_data_lane[0].u_tx_data_lane_n_9 ;
  wire \gen_tx_data_lane[2].u_tx_data_lane_n_20 ;
  wire hs_active_all;
  wire hs_dp_sync_out_i_0;
  wire hs_xfer_done_all;
  wire init_done;
  wire oserdes_clkdiv_in;
  wire p_0_in;
  wire phy_ready;
  wire phy_rst;
  wire start_clkpost_byteclk_sync;
  wire system_rst_byteclk_sync_i_n_1;
  wire system_rst_byteclk_t;
  wire system_rst_byteclk_w;
  wire system_rst_div4clk_t;
  wire system_rst_div4clk_w;
  wire system_rst_escclk_t;
  wire system_rst_escclk_w;
  wire system_rst_in;
  wire system_rst_t;
  wire [3:0]timeout_hsexit;
  wire timeout_hsexit_all;
  wire timeout_zero_out_i_0;
  wire tx_cl_en_hs_tst;
  wire tx_cl_en_lp_tst;
  wire tx_cl_lp_cn;
  wire tx_cl_lp_cp;
  wire tx_div4_clk;
  wire tx_dl0_en_hs_tst;
  wire tx_dl0_en_lp_tst;
  wire [7:0]tx_dl0_hs_dp;
  wire tx_dl0_lp_dn;
  wire tx_dl0_lp_dp;
  wire tx_dl1_en_hs_tst;
  wire tx_dl1_en_lp_tst;
  wire [7:0]tx_dl1_hs_dp;
  wire tx_dl1_lp_dn;
  wire tx_dl1_lp_dp;
  wire tx_dl2_en_hs_tst;
  wire tx_dl2_en_lp_tst;
  wire [7:0]tx_dl2_hs_dp;
  wire tx_dl2_lp_dn;
  wire tx_dl2_lp_dp;
  wire tx_dl3_en_hs_tst;
  wire tx_dl3_en_lp_tst;
  wire [7:0]tx_dl3_hs_dp;
  wire tx_dl3_lp_dn;
  wire tx_dl3_lp_dp;
  wire [6:6]\^tx_hs_clk_p ;
  wire u_tx_clk_lane_n_13;
  wire u_tx_clk_lane_n_15;
  wire \u_tx_hs_datapath/en_hs_datapath_r ;
  wire u_tx_support_rst_logic_n_0;

  assign core_ref_clk = \<const0> ;
  assign dl0_txbyteclkhs = \<const0> ;
  assign dl1_txbyteclkhs = \<const0> ;
  assign dl2_txbyteclkhs = \<const0> ;
  assign dl3_txbyteclkhs = \<const0> ;
  assign dl4_stopstate = \<const0> ;
  assign dl4_txbyteclkhs = \<const0> ;
  assign dl4_txreadyesc = \<const0> ;
  assign dl4_txreadyhs = \<const0> ;
  assign dl4_ulpsactivenot = \<const0> ;
  assign dl5_stopstate = \<const0> ;
  assign dl5_txbyteclkhs = \<const0> ;
  assign dl5_txreadyesc = \<const0> ;
  assign dl5_txreadyhs = \<const0> ;
  assign dl5_ulpsactivenot = \<const0> ;
  assign dl6_stopstate = \<const0> ;
  assign dl6_txbyteclkhs = \<const0> ;
  assign dl6_txreadyesc = \<const0> ;
  assign dl6_txreadyhs = \<const0> ;
  assign dl6_ulpsactivenot = \<const0> ;
  assign dl7_stopstate = \<const0> ;
  assign dl7_txbyteclkhs = \<const0> ;
  assign dl7_txreadyesc = \<const0> ;
  assign dl7_txreadyhs = \<const0> ;
  assign dl7_ulpsactivenot = \<const0> ;
  assign dphy_en_out = \<const0> ;
  assign dphy_srst_out = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign tx_dl4_en_hs_tst = \<const0> ;
  assign tx_dl4_en_lp_tst = \<const0> ;
  assign tx_dl4_hs_dp[7] = \<const0> ;
  assign tx_dl4_hs_dp[6] = \<const0> ;
  assign tx_dl4_hs_dp[5] = \<const0> ;
  assign tx_dl4_hs_dp[4] = \<const0> ;
  assign tx_dl4_hs_dp[3] = \<const0> ;
  assign tx_dl4_hs_dp[2] = \<const0> ;
  assign tx_dl4_hs_dp[1] = \<const0> ;
  assign tx_dl4_hs_dp[0] = \<const0> ;
  assign tx_dl4_lp_dn = \<const0> ;
  assign tx_dl4_lp_dp = \<const0> ;
  assign tx_dl5_en_hs_tst = \<const0> ;
  assign tx_dl5_en_lp_tst = \<const0> ;
  assign tx_dl5_hs_dp[7] = \<const0> ;
  assign tx_dl5_hs_dp[6] = \<const0> ;
  assign tx_dl5_hs_dp[5] = \<const0> ;
  assign tx_dl5_hs_dp[4] = \<const0> ;
  assign tx_dl5_hs_dp[3] = \<const0> ;
  assign tx_dl5_hs_dp[2] = \<const0> ;
  assign tx_dl5_hs_dp[1] = \<const0> ;
  assign tx_dl5_hs_dp[0] = \<const0> ;
  assign tx_dl5_lp_dn = \<const0> ;
  assign tx_dl5_lp_dp = \<const0> ;
  assign tx_dl6_en_hs_tst = \<const0> ;
  assign tx_dl6_en_lp_tst = \<const0> ;
  assign tx_dl6_hs_dp[7] = \<const0> ;
  assign tx_dl6_hs_dp[6] = \<const0> ;
  assign tx_dl6_hs_dp[5] = \<const0> ;
  assign tx_dl6_hs_dp[4] = \<const0> ;
  assign tx_dl6_hs_dp[3] = \<const0> ;
  assign tx_dl6_hs_dp[2] = \<const0> ;
  assign tx_dl6_hs_dp[1] = \<const0> ;
  assign tx_dl6_hs_dp[0] = \<const0> ;
  assign tx_dl6_lp_dn = \<const0> ;
  assign tx_dl6_lp_dp = \<const0> ;
  assign tx_dl7_en_hs_tst = \<const0> ;
  assign tx_dl7_en_lp_tst = \<const0> ;
  assign tx_dl7_hs_dp[7] = \<const0> ;
  assign tx_dl7_hs_dp[6] = \<const0> ;
  assign tx_dl7_hs_dp[5] = \<const0> ;
  assign tx_dl7_hs_dp[4] = \<const0> ;
  assign tx_dl7_hs_dp[3] = \<const0> ;
  assign tx_dl7_hs_dp[2] = \<const0> ;
  assign tx_dl7_hs_dp[1] = \<const0> ;
  assign tx_dl7_hs_dp[0] = \<const0> ;
  assign tx_dl7_lp_dn = \<const0> ;
  assign tx_dl7_lp_dp = \<const0> ;
  assign tx_hs_clk_p[7] = \<const0> ;
  assign tx_hs_clk_p[6] = \^tx_hs_clk_p [6];
  assign tx_hs_clk_p[5] = \<const0> ;
  assign tx_hs_clk_p[4] = \<const0> ;
  assign tx_hs_clk_p[3] = \<const0> ;
  assign tx_hs_clk_p[2] = \<const0> ;
  assign tx_hs_clk_p[1] = \<const0> ;
  assign tx_hs_clk_p[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE esc_active_all_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(p_0_in),
        .Q(esc_active_all),
        .R(1'b0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized2 esc_active_all_sync_i
       (.core_clk(core_clk),
        .in0(esc_active_all),
        .out(esc_active_all_sync));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane \gen_tx_data_lane[0].u_tx_data_lane 
       (.\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl0_txreadyhs),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .\cl_tx_state_reg[0] (u_tx_clk_lane_n_13),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_forcetxstopmode(dl0_forcetxstopmode),
        .dl0_stopstate(dl0_stopstate),
        .dl0_txclkesc(dl0_txclkesc),
        .dl0_txdataesc(dl0_txdataesc),
        .dl0_txdatahs(dl0_txdatahs),
        .dl0_txlpdtesc(dl0_txlpdtesc),
        .dl0_txrequestesc(dl0_txrequestesc),
        .dl0_txrequesths(dl0_txrequesths),
        .dl0_txtriggeresc(dl0_txtriggeresc),
        .dl0_txulpsesc(dl0_txulpsesc),
        .dl0_txulpsexit(dl0_txulpsexit),
        .dl0_txvalidesc(dl0_txvalidesc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txrequesths_0(\gen_tx_data_lane[0].u_tx_data_lane_n_7 ),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txrequesths_0(\gen_tx_data_lane[0].u_tx_data_lane_n_8 ),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txrequesths_0(\gen_tx_data_lane[0].u_tx_data_lane_n_9 ),
        .dl_hs_exit_done_i(dl_hs_exit_done_i[3:1]),
        .dl_status_reg({dl_status_reg[21],dl_status_reg[14],dl_status_reg[7]}),
        .dl_txreadyesc_reg(dl0_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .en_hs_datapath_r(\u_tx_hs_datapath/en_hs_datapath_r ),
        .en_hs_datapath_reg(\gen_tx_data_lane[0].u_tx_data_lane_n_2 ),
        .en_hs_datapath_reg_0(dl_status_reg[0]),
        .en_hs_datapath_reg_1(\gen_tx_data_lane[0].u_tx_data_lane_n_5 ),
        .en_hs_datapath_reg_2(u_tx_clk_lane_n_15),
        .en_lp_01_cnt_reg(esc_active_all_sync),
        .\esc_cmd_data_reg[0] (system_rst_escclk_t),
        .esc_ctrl_all_sm(esc_ctrl_all_sm_c[0]),
        .hs_dp_sync_out(hs_dp_sync_out_i_0),
        .hs_xfer_done(dl_hs_exit_done_i[0]),
        .out(system_rst_div4clk_t),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .s_level_out_d3_reg(\gen_tx_data_lane[0].u_tx_data_lane_n_3 ),
        .system_rst(system_rst_t),
        .timeout_hsexit(timeout_hsexit[0]),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl0_en_hs_tst(tx_dl0_en_hs_tst),
        .tx_dl0_en_lp_tst(tx_dl0_en_lp_tst),
        .tx_dl0_hs_dp(tx_dl0_hs_dp),
        .tx_dl0_lp_dn(tx_dl0_lp_dn),
        .tx_dl0_lp_dp(tx_dl0_lp_dp));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_7 \gen_tx_data_lane[1].u_tx_data_lane 
       (.\FSM_sequential_dl_tx_sm_state[2]_i_4 ({timeout_hsexit[3:2],timeout_hsexit[0]}),
        .\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] (system_rst_div4clk_t),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl1_txreadyhs),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txclkesc(dl0_txclkesc),
        .dl1_enable(dl1_enable),
        .dl1_forcetxstopmode(dl1_forcetxstopmode),
        .dl1_stopstate(dl1_stopstate),
        .dl1_txdataesc(dl1_txdataesc),
        .dl1_txdatahs(dl1_txdatahs),
        .dl1_txlpdtesc(dl1_txlpdtesc),
        .dl1_txrequestesc(dl1_txrequestesc),
        .dl1_txrequesths(dl1_txrequesths),
        .dl1_txtriggeresc(dl1_txtriggeresc),
        .dl1_txulpsesc(dl1_txulpsesc),
        .dl1_txulpsexit(dl1_txulpsexit),
        .dl1_txvalidesc(dl1_txvalidesc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_hs_exit_done_i({dl_hs_exit_done_i[3:2],dl_hs_exit_done_i[0]}),
        .dl_status_reg(dl_status_reg[7]),
        .dl_txreadyesc_reg(dl1_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .en_hs_datapath_r(\u_tx_hs_datapath/en_hs_datapath_r ),
        .en_hs_datapath_reg(u_tx_clk_lane_n_15),
        .en_lp_01_cnt_reg(esc_active_all_sync),
        .esc_active_all_reg({esc_ctrl_all_sm_c[3:2],esc_ctrl_all_sm_c[0]}),
        .\esc_cmd_data_reg[0] (system_rst_escclk_t),
        .hs_dp_sync_out(hs_dp_sync_out_i_0),
        .hs_xfer_done_all(hs_xfer_done_all),
        .out(dl_hs_exit_done_i[1]),
        .p_0_in(p_0_in),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .system_rst(system_rst_t),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl1_en_hs_tst(tx_dl1_en_hs_tst),
        .tx_dl1_en_lp_tst(tx_dl1_en_lp_tst),
        .tx_dl1_hs_dp(tx_dl1_hs_dp),
        .tx_dl1_lp_dn(tx_dl1_lp_dn),
        .tx_dl1_lp_dp(tx_dl1_lp_dp),
        .\zero_count_reg[31] (\gen_tx_data_lane[0].u_tx_data_lane_n_7 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_8 \gen_tx_data_lane[2].u_tx_data_lane 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] (system_rst_div4clk_t),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl2_txreadyhs),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_i_3(cl_txrequesths_negedge_sync),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txclkesc(dl0_txclkesc),
        .dl2_enable(dl2_enable),
        .dl2_forcetxstopmode(dl2_forcetxstopmode),
        .dl2_stopstate(dl2_stopstate),
        .dl2_txdataesc(dl2_txdataesc),
        .dl2_txdatahs(dl2_txdatahs),
        .dl2_txlpdtesc(dl2_txlpdtesc),
        .dl2_txrequestesc(dl2_txrequestesc),
        .dl2_txrequesths(dl2_txrequesths),
        .dl2_txtriggeresc(dl2_txtriggeresc),
        .dl2_txulpsesc(dl2_txulpsesc),
        .dl2_txulpsexit(dl2_txulpsexit),
        .dl2_txvalidesc(dl2_txvalidesc),
        .dl2_ulpsactivenot(dl2_ulpsactivenot),
        .dl_hs_exit_done_i({dl_hs_exit_done_i[3],dl_hs_exit_done_i[1:0]}),
        .dl_status_reg(dl_status_reg[14]),
        .dl_txreadyesc_reg(dl2_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .en_hs_datapath_r(\u_tx_hs_datapath/en_hs_datapath_r ),
        .en_hs_datapath_reg(u_tx_clk_lane_n_15),
        .en_lp_01_cnt_reg(esc_active_all_sync),
        .\esc_cmd_data_reg[0] (system_rst_escclk_t),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_c[2]),
        .hs_dp_sync_out(hs_dp_sync_out_i_0),
        .out(dl_hs_exit_done_i[2]),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .s_level_out_d3_reg(\gen_tx_data_lane[2].u_tx_data_lane_n_20 ),
        .system_rst(system_rst_t),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg(timeout_hsexit[2]),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl2_en_hs_tst(tx_dl2_en_hs_tst),
        .tx_dl2_en_lp_tst(tx_dl2_en_lp_tst),
        .tx_dl2_hs_dp(tx_dl2_hs_dp),
        .tx_dl2_lp_dn(tx_dl2_lp_dn),
        .tx_dl2_lp_dp(tx_dl2_lp_dp),
        .\zero_count_reg[31] (\gen_tx_data_lane[0].u_tx_data_lane_n_8 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_data_lane_9 \gen_tx_data_lane[3].u_tx_data_lane 
       (.\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] (system_rst_div4clk_t),
        .\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg (dl3_txreadyhs),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_txclkesc(dl0_txclkesc),
        .dl3_enable(dl3_enable),
        .dl3_forcetxstopmode(dl3_forcetxstopmode),
        .dl3_stopstate(dl3_stopstate),
        .dl3_txdataesc(dl3_txdataesc),
        .dl3_txdatahs(dl3_txdatahs),
        .dl3_txlpdtesc(dl3_txlpdtesc),
        .dl3_txrequestesc(dl3_txrequestesc),
        .dl3_txrequesths(dl3_txrequesths),
        .dl3_txtriggeresc(dl3_txtriggeresc),
        .dl3_txulpsesc(dl3_txulpsesc),
        .dl3_txulpsexit(dl3_txulpsexit),
        .dl3_txvalidesc(dl3_txvalidesc),
        .dl3_ulpsactivenot(dl3_ulpsactivenot),
        .dl_hs_exit_done_i(dl_hs_exit_done_i[2:0]),
        .dl_status_reg(dl_status_reg[21]),
        .dl_txreadyesc_reg(dl3_txreadyesc),
        .dl_txrequesths_r_reg_0(system_rst_byteclk_t),
        .en_hs_datapath_r(\u_tx_hs_datapath/en_hs_datapath_r ),
        .en_lp_01_cnt_reg(esc_active_all_sync),
        .\esc_cmd_data_reg[0] (system_rst_escclk_t),
        .esc_ctrl_all_sm_reg(esc_ctrl_all_sm_c[3]),
        .hs_active_all(hs_active_all),
        .hs_dp_sync_out(hs_dp_sync_out_i_0),
        .hs_xfer_done_all(hs_xfer_done_all),
        .out(dl_hs_exit_done_i[3]),
        .reset_timer_r_i_10({dl_status_reg[14],dl_status_reg[7],dl_status_reg[0]}),
        .s_level_out_d1_cdc_to_reg(cl_init_done_escclk_sync_i),
        .system_rst(system_rst_t),
        .timeout_hsexit_all(timeout_hsexit_all),
        .timeout_hsexit_reg(timeout_hsexit[3]),
        .timeout_zero_out_i_0(timeout_zero_out_i_0),
        .tx_div4_clk(tx_div4_clk),
        .tx_dl3_en_hs_tst(tx_dl3_en_hs_tst),
        .tx_dl3_en_lp_tst(tx_dl3_en_lp_tst),
        .tx_dl3_hs_dp(tx_dl3_hs_dp),
        .tx_dl3_lp_dn(tx_dl3_lp_dn),
        .tx_dl3_lp_dp(tx_dl3_lp_dp),
        .\zero_count_reg[31] (\gen_tx_data_lane[0].u_tx_data_lane_n_9 ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell system_rst_byteclk90_sync_i
       (.oserdes_clkdiv_in(oserdes_clkdiv_in),
        .system_rst_byteclk(system_rst_byteclk_w));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_10 system_rst_byteclk_sync_i
       (.out(system_rst_byteclk_t),
        .\post_count_reg[31] (start_clkpost_byteclk_sync),
        .s_level_out_d3_reg_0(system_rst_byteclk_sync_i_n_1),
        .system_rst_byteclk(system_rst_byteclk_w),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_11 system_rst_escclk_sync_i
       (.dl0_txclkesc(dl0_txclkesc),
        .out(system_rst_escclk_t),
        .system_rst_escclk(system_rst_escclk_w));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_12 system_rst_phybyteclk_sync_i
       (.out(system_rst_div4clk_t),
        .system_rst_div4clk(system_rst_div4clk_w),
        .tx_div4_clk(tx_div4_clk));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_13 u_cl_init_done_escclk_sync
       (.cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .dl0_txclkesc(dl0_txclkesc),
        .out(cl_init_done_escclk_sync_i));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_clk_lane u_tx_clk_lane
       (.cl_enable(cl_enable),
        .cl_init_done_coreclk_i(cl_init_done_coreclk_i),
        .cl_stopstate(cl_stopstate),
        .\cl_tx_state_reg[0]_0 (\gen_tx_data_lane[0].u_tx_data_lane_n_2 ),
        .\cl_tx_state_reg[1]_0 (u_tx_clk_lane_n_13),
        .\cl_tx_state_reg[3]_0 (u_tx_support_rst_logic_n_0),
        .cl_txclkactivehs(cl_txclkactivehs),
        .cl_txclkactivehs_i(cl_txclkactivehs_i),
        .cl_txclkactivehs_reg_0(u_tx_clk_lane_n_15),
        .cl_txrequesths(cl_txrequesths),
        .cl_txulpsclk(cl_txulpsclk),
        .cl_txulpsexit(cl_txulpsexit),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_hs_exit_done_i(dl_hs_exit_done_i),
        .hs_active_all(hs_active_all),
        .out(cl_enable_sync),
        .\post_count_reg[31]_0 (system_rst_byteclk_sync_i_n_1),
        .s_level_out_d2_reg(init_done),
        .s_level_out_d3_reg(start_clkpost_byteclk_sync),
        .s_level_out_d3_reg_0(cl_txrequesths_negedge_sync),
        .start_clkpost_r_reg_0(\gen_tx_data_lane[2].u_tx_data_lane_n_20 ),
        .start_clkpost_r_reg_1(\gen_tx_data_lane[0].u_tx_data_lane_n_3 ),
        .start_clkpost_r_reg_2(\gen_tx_data_lane[0].u_tx_data_lane_n_5 ),
        .start_clkzero_byteclk_sync_r_reg_0(system_rst_byteclk_t),
        .system_rst(system_rst_t),
        .tx_cl_en_hs_tst(tx_cl_en_hs_tst),
        .tx_cl_en_lp_tst(tx_cl_en_lp_tst),
        .tx_cl_lp_cn(tx_cl_lp_cn),
        .tx_cl_lp_cp(tx_cl_lp_cp),
        .tx_div4_clk(tx_div4_clk),
        .tx_hs_clk_p(\^tx_hs_clk_p ));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_support_rst_logic u_tx_support_rst_logic
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .core_rst_0(u_tx_support_rst_logic_n_0),
        .out(cl_enable_sync),
        .phy_ready(phy_ready),
        .phy_rst(phy_rst),
        .system_rst(system_rst_t),
        .system_rst_byteclk(system_rst_byteclk_w),
        .system_rst_div4clk(system_rst_div4clk_w),
        .system_rst_escclk(system_rst_escclk_w),
        .system_rst_in(system_rst_in));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_hs_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath
   (tx_dl3_hs_dp,
    hs_xfer_done_i,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    tx_dl3_en_lp_tst,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ,
    dl3_txrequesths,
    tx_div4_clk,
    out,
    hs_dp_sync_out,
    \zero_count_reg[31]_0 ,
    \zero_count_reg[31]_1 ,
    dl3_txdatahs,
    timeout_zero_out_i_0,
    en_hs_datapath_r,
    esc_ctrl_i,
    hs_xfer_done_reg_0);
  output [7:0]tx_dl3_hs_dp;
  output hs_xfer_done_i;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output tx_dl3_en_lp_tst;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ;
  input dl3_txrequesths;
  input tx_div4_clk;
  input out;
  input hs_dp_sync_out;
  input \zero_count_reg[31]_0 ;
  input \zero_count_reg[31]_1 ;
  input [7:0]dl3_txdatahs;
  input timeout_zero_out_i_0;
  input en_hs_datapath_r;
  input esc_ctrl_i;
  input hs_xfer_done_reg_0;

  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__2_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__2_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__2_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__2_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__2_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ;
  (* DONT_TOUCH *) wire [7:0]data_hs;
  wire [7:0]dl3_txdatahs;
  wire dl3_txrequesths;
  wire [1:0]dl_tx_cal_st;
  wire dl_txrequesths_posedge_r;
  wire dl_txrequesths_posedge_r_i_1__2_n_0;
  wire dl_txrequesths_r;
  wire en_hs_datapath_posedge_r;
  wire en_hs_datapath_posedge_r_i_1__2_n_0;
  wire en_hs_datapath_r;
  wire esc_ctrl_i;
  (* DONT_TOUCH *) wire [7:0]gen_eot_r;
  wire \gen_skewcal_cnt.time_out_trail_i_1__2_n_0 ;
  wire \gen_skewcal_cnt.time_out_trail_reg_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_10__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_11__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_12__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_13__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_4__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_5__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_6__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_7__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_8__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_9__2_n_0 ;
  wire [31:0]\gen_skewcal_cnt.trail_count_reg ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_9 ;
  (* DONT_TOUCH *) wire [15:0]hs_dp_quadtrature_r;
  wire hs_dp_sync_out;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1__2_n_0;
  wire hs_xfer_done_reg_0;
  wire out;
  wire time_out_zero_i_1__3_n_0;
  wire time_out_zero_i_2__2_n_0;
  wire time_out_zero_i_3__2_n_0;
  wire time_out_zero_reg_n_0;
  wire timeout_zero_out_i_0;
  wire trail_count__0;
  wire tx_div4_clk;
  wire tx_dl3_en_lp_tst;
  (* DONT_TOUCH *) wire [7:0]tx_dl3_hs_dp;
  wire \zero_count[0]_i_10__2_n_0 ;
  wire \zero_count[0]_i_11__2_n_0 ;
  wire \zero_count[0]_i_12__2_n_0 ;
  wire \zero_count[0]_i_13__2_n_0 ;
  wire \zero_count[0]_i_14__2_n_0 ;
  wire \zero_count[0]_i_15__2_n_0 ;
  wire \zero_count[0]_i_1__2_n_0 ;
  wire \zero_count[0]_i_6__2_n_0 ;
  wire \zero_count[0]_i_7__2_n_0 ;
  wire \zero_count[0]_i_8__2_n_0 ;
  wire \zero_count[0]_i_9__2_n_0 ;
  wire zero_count__0;
  wire [31:0]zero_count_reg;
  wire \zero_count_reg[0]_i_3__2_n_0 ;
  wire \zero_count_reg[0]_i_3__2_n_1 ;
  wire \zero_count_reg[0]_i_3__2_n_10 ;
  wire \zero_count_reg[0]_i_3__2_n_11 ;
  wire \zero_count_reg[0]_i_3__2_n_12 ;
  wire \zero_count_reg[0]_i_3__2_n_13 ;
  wire \zero_count_reg[0]_i_3__2_n_14 ;
  wire \zero_count_reg[0]_i_3__2_n_15 ;
  wire \zero_count_reg[0]_i_3__2_n_2 ;
  wire \zero_count_reg[0]_i_3__2_n_3 ;
  wire \zero_count_reg[0]_i_3__2_n_4 ;
  wire \zero_count_reg[0]_i_3__2_n_5 ;
  wire \zero_count_reg[0]_i_3__2_n_6 ;
  wire \zero_count_reg[0]_i_3__2_n_7 ;
  wire \zero_count_reg[0]_i_3__2_n_8 ;
  wire \zero_count_reg[0]_i_3__2_n_9 ;
  wire \zero_count_reg[16]_i_1__2_n_0 ;
  wire \zero_count_reg[16]_i_1__2_n_1 ;
  wire \zero_count_reg[16]_i_1__2_n_10 ;
  wire \zero_count_reg[16]_i_1__2_n_11 ;
  wire \zero_count_reg[16]_i_1__2_n_12 ;
  wire \zero_count_reg[16]_i_1__2_n_13 ;
  wire \zero_count_reg[16]_i_1__2_n_14 ;
  wire \zero_count_reg[16]_i_1__2_n_15 ;
  wire \zero_count_reg[16]_i_1__2_n_2 ;
  wire \zero_count_reg[16]_i_1__2_n_3 ;
  wire \zero_count_reg[16]_i_1__2_n_4 ;
  wire \zero_count_reg[16]_i_1__2_n_5 ;
  wire \zero_count_reg[16]_i_1__2_n_6 ;
  wire \zero_count_reg[16]_i_1__2_n_7 ;
  wire \zero_count_reg[16]_i_1__2_n_8 ;
  wire \zero_count_reg[16]_i_1__2_n_9 ;
  wire \zero_count_reg[24]_i_1__2_n_1 ;
  wire \zero_count_reg[24]_i_1__2_n_10 ;
  wire \zero_count_reg[24]_i_1__2_n_11 ;
  wire \zero_count_reg[24]_i_1__2_n_12 ;
  wire \zero_count_reg[24]_i_1__2_n_13 ;
  wire \zero_count_reg[24]_i_1__2_n_14 ;
  wire \zero_count_reg[24]_i_1__2_n_15 ;
  wire \zero_count_reg[24]_i_1__2_n_2 ;
  wire \zero_count_reg[24]_i_1__2_n_3 ;
  wire \zero_count_reg[24]_i_1__2_n_4 ;
  wire \zero_count_reg[24]_i_1__2_n_5 ;
  wire \zero_count_reg[24]_i_1__2_n_6 ;
  wire \zero_count_reg[24]_i_1__2_n_7 ;
  wire \zero_count_reg[24]_i_1__2_n_8 ;
  wire \zero_count_reg[24]_i_1__2_n_9 ;
  wire \zero_count_reg[31]_0 ;
  wire \zero_count_reg[31]_1 ;
  wire \zero_count_reg[8]_i_1__2_n_0 ;
  wire \zero_count_reg[8]_i_1__2_n_1 ;
  wire \zero_count_reg[8]_i_1__2_n_10 ;
  wire \zero_count_reg[8]_i_1__2_n_11 ;
  wire \zero_count_reg[8]_i_1__2_n_12 ;
  wire \zero_count_reg[8]_i_1__2_n_13 ;
  wire \zero_count_reg[8]_i_1__2_n_14 ;
  wire \zero_count_reg[8]_i_1__2_n_15 ;
  wire \zero_count_reg[8]_i_1__2_n_2 ;
  wire \zero_count_reg[8]_i_1__2_n_3 ;
  wire \zero_count_reg[8]_i_1__2_n_4 ;
  wire \zero_count_reg[8]_i_1__2_n_5 ;
  wire \zero_count_reg[8]_i_1__2_n_6 ;
  wire \zero_count_reg[8]_i_1__2_n_7 ;
  wire \zero_count_reg[8]_i_1__2_n_8 ;
  wire \zero_count_reg[8]_i_1__2_n_9 ;
  wire [7:7]\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1__2_CO_UNCONNECTED ;
  wire [7:7]\NLW_zero_count_reg[24]_i_1__2_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hF7FFF7F7F0F0F0F0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__2 
       (.I0(hs_dp_sync_out),
        .I1(dl3_txrequesths),
        .I2(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__2_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl_tx_cal_st[0]),
        .I5(dl_tx_cal_st[1]),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFAFCFAFC0A0CFAFC)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__2 
       (.I0(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I1(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__2_n_0 ),
        .I2(dl_tx_cal_st[1]),
        .I3(dl_tx_cal_st[0]),
        .I4(dl3_txrequesths),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__2_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80008080)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__2 
       (.I0(hs_dp_sync_out),
        .I1(dl_tx_cal_st[1]),
        .I2(dl3_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl_tx_cal_st[0]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__2_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__2 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_n_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl_tx_cal_st[0]),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__2 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_n_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__2_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[0] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__2_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__2_n_0 ),
        .Q(dl_tx_cal_st[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[1] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__2_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__2_n_0 ),
        .Q(dl_tx_cal_st[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[0]),
        .I3(tx_dl3_hs_dp[0]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[1]),
        .I3(tx_dl3_hs_dp[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[2]),
        .I3(tx_dl3_hs_dp[2]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[3]),
        .I3(tx_dl3_hs_dp[3]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[4]),
        .I3(tx_dl3_hs_dp[4]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[5]),
        .I3(tx_dl3_hs_dp[5]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[6]),
        .I3(tx_dl3_hs_dp[6]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h04040444)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2 
       (.I0(gen_eot_r[7]),
        .I1(dl_tx_cal_st[1]),
        .I2(dl3_txrequesths),
        .I3(dl_tx_cal_st[0]),
        .I4(hs_dp_sync_out),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000015)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__2 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_n_0),
        .I3(dl_tx_cal_st[0]),
        .I4(dl_tx_cal_st[1]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .I2(dl3_txdatahs[7]),
        .I3(tx_dl3_hs_dp[7]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT5 #(
    .INIT(32'hFFFF0008)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2 
       (.I0(time_out_zero_reg_n_0),
        .I1(en_hs_datapath_posedge_r),
        .I2(dl_tx_cal_st[0]),
        .I3(dl_tx_cal_st[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2 
       (.I0(hs_dp_sync_out),
        .I1(dl_tx_cal_st[1]),
        .I2(dl3_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ));
  LUT4 #(
    .INIT(16'hFF01)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2 
       (.I0(dl_txrequesths_posedge_r),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h707000FF40400000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl3_txrequesths),
        .I3(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__2_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[2]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[3]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[4]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[5]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[6]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__2_n_0 ),
        .Q(tx_dl3_hs_dp[7]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000554000000000)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2 
       (.I0(out),
        .I1(en_hs_datapath_posedge_r),
        .I2(timeout_zero_out_i_0),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I5(dl3_txrequesths),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__2_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__2 
       (.I0(dl3_txdatahs[0]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[0]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__2 
       (.I0(dl3_txdatahs[1]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[1]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__2 
       (.I0(dl3_txdatahs[2]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[2]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__2 
       (.I0(dl3_txdatahs[3]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[3]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__2 
       (.I0(dl3_txdatahs[4]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[4]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__2 
       (.I0(dl3_txdatahs[5]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[5]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__2 
       (.I0(dl3_txdatahs[6]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[6]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__2 
       (.I0(dl3_txdatahs[7]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ),
        .I2(gen_eot_r[7]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT5 #(
    .INIT(32'hFFFF5444)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_txrequesths_posedge_r),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_n_0),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h740000007400FFFF)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl_tx_cal_st[0]),
        .I3(dl3_txrequesths),
        .I4(dl_tx_cal_st[1]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__2_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__2_n_0 ),
        .Q(gen_eot_r[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__2_n_0 ),
        .Q(gen_eot_r[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__2_n_0 ),
        .Q(gen_eot_r[2]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__2_n_0 ),
        .Q(gen_eot_r[3]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__2_n_0 ),
        .Q(gen_eot_r[4]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__2_n_0 ),
        .Q(gen_eot_r[5]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__2_n_0 ),
        .Q(gen_eot_r[6]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__2_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__2_n_0 ),
        .Q(gen_eot_r[7]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    dl_txrequesths_posedge_r_i_1__2
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(dl_txrequesths_r),
        .I2(dl3_txrequesths),
        .I3(dl_txrequesths_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(dl_txrequesths_posedge_r_i_1__2_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1__2_n_0),
        .Q(dl_txrequesths_posedge_r),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl3_txrequesths),
        .Q(dl_txrequesths_r),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    en_hs_datapath_posedge_r_i_1__2
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(en_hs_datapath_r),
        .I2(hs_dp_sync_out),
        .I3(en_hs_datapath_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(en_hs_datapath_posedge_r_i_1__2_n_0));
  FDRE en_hs_datapath_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_hs_datapath_posedge_r_i_1__2_n_0),
        .Q(en_hs_datapath_posedge_r),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h50515000)) 
    \gen_skewcal_cnt.time_out_trail_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_4__2_n_0 ),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(dl_tx_cal_st[1]),
        .I4(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.time_out_trail_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.time_out_trail_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\gen_skewcal_cnt.time_out_trail_i_1__2_n_0 ),
        .Q(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_10__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [13]),
        .I1(\gen_skewcal_cnt.trail_count_reg [12]),
        .I2(\gen_skewcal_cnt.trail_count_reg [15]),
        .I3(\gen_skewcal_cnt.trail_count_reg [14]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_10__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_11__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [5]),
        .I1(\gen_skewcal_cnt.trail_count_reg [4]),
        .I2(\gen_skewcal_cnt.trail_count_reg [7]),
        .I3(\gen_skewcal_cnt.trail_count_reg [6]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_11__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_12__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [29]),
        .I1(\gen_skewcal_cnt.trail_count_reg [28]),
        .I2(\gen_skewcal_cnt.trail_count_reg [31]),
        .I3(\gen_skewcal_cnt.trail_count_reg [30]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_12__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_13__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [21]),
        .I1(\gen_skewcal_cnt.trail_count_reg [20]),
        .I2(\gen_skewcal_cnt.trail_count_reg [23]),
        .I3(\gen_skewcal_cnt.trail_count_reg [22]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_13__2_n_0 ));
  LUT3 #(
    .INIT(8'hAB)) 
    \gen_skewcal_cnt.trail_count[0]_i_1__2 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \gen_skewcal_cnt.trail_count[0]_i_2__2 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_4__2_n_0 ),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .O(trail_count__0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_4__2 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_6__2_n_0 ),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_7__2_n_0 ),
        .I2(\gen_skewcal_cnt.trail_count[0]_i_8__2_n_0 ),
        .I3(\gen_skewcal_cnt.trail_count[0]_i_9__2_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_4__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_skewcal_cnt.trail_count[0]_i_5__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_5__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_6__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [10]),
        .I1(\gen_skewcal_cnt.trail_count_reg [11]),
        .I2(\gen_skewcal_cnt.trail_count_reg [8]),
        .I3(\gen_skewcal_cnt.trail_count_reg [9]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_10__2_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_6__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    \gen_skewcal_cnt.trail_count[0]_i_7__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [2]),
        .I1(\gen_skewcal_cnt.trail_count_reg [3]),
        .I2(\gen_skewcal_cnt.trail_count_reg [0]),
        .I3(\gen_skewcal_cnt.trail_count_reg [1]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_11__2_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_7__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_8__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [26]),
        .I1(\gen_skewcal_cnt.trail_count_reg [27]),
        .I2(\gen_skewcal_cnt.trail_count_reg [24]),
        .I3(\gen_skewcal_cnt.trail_count_reg [25]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_12__2_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_8__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_9__2 
       (.I0(\gen_skewcal_cnt.trail_count_reg [18]),
        .I1(\gen_skewcal_cnt.trail_count_reg [19]),
        .I2(\gen_skewcal_cnt.trail_count_reg [16]),
        .I3(\gen_skewcal_cnt.trail_count_reg [17]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_13__2_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_9__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [0]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[0]_i_3__2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_0 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_1 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_2 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_3 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_4 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_5 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_6 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_8 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_9 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_10 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_11 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_12 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_13 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_14 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_15 }),
        .S({\gen_skewcal_cnt.trail_count_reg [7:1],\gen_skewcal_cnt.trail_count[0]_i_5__2_n_0 }));
  FDRE \gen_skewcal_cnt.trail_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [10]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [11]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [12]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [13]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [14]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [15]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [16]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[16]_i_1__2 
       (.CI(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_0 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_1 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_2 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_3 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_4 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_5 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_6 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_8 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_9 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_10 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_11 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_12 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_13 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_14 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [23:16]));
  FDRE \gen_skewcal_cnt.trail_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [17]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [18]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [19]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [1]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [20]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [21]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [22]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [23]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [24]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[24]_i_1__2 
       (.CI(\gen_skewcal_cnt.trail_count_reg[16]_i_1__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1__2_CO_UNCONNECTED [7],\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_1 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_2 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_3 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_4 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_5 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_6 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_8 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_9 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_10 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_11 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_12 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_13 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_14 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [31:24]));
  FDRE \gen_skewcal_cnt.trail_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [25]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [26]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [27]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [28]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [29]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [2]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [30]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__2_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [31]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [3]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [4]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [5]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [6]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [7]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [8]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[8]_i_1__2 
       (.CI(\gen_skewcal_cnt.trail_count_reg[0]_i_3__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_0 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_1 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_2 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_3 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_4 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_5 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_6 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_8 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_9 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_10 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_11 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_12 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_13 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_14 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [15:8]));
  FDRE \gen_skewcal_cnt.trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__2_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [9]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1__2
       (.I0(hs_xfer_done_i),
        .I1(hs_dp_sync_out),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(hs_xfer_done_reg_0),
        .O(hs_xfer_done_i_1__2_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1__2_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(data_hs[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(data_hs[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(data_hs[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(data_hs[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(data_hs[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(data_hs[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(data_hs[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(data_hs[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[14]));
  LUT6 #(
    .INIT(64'h5555504000000000)) 
    time_out_zero_i_1__3
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(\zero_count[0]_i_7__2_n_0 ),
        .I2(\zero_count[0]_i_6__2_n_0 ),
        .I3(time_out_zero_i_2__2_n_0),
        .I4(time_out_zero_reg_n_0),
        .I5(time_out_zero_i_3__2_n_0),
        .O(time_out_zero_i_1__3_n_0));
  LUT4 #(
    .INIT(16'hF800)) 
    time_out_zero_i_2__2
       (.I0(zero_count_reg[0]),
        .I1(zero_count_reg[1]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[3]),
        .O(time_out_zero_i_2__2_n_0));
  LUT6 #(
    .INIT(64'hAE0E0E0E0EAE0E0E)) 
    time_out_zero_i_3__2
       (.I0(hs_dp_sync_out),
        .I1(out),
        .I2(time_out_zero_reg_n_0),
        .I3(dl_tx_cal_st[1]),
        .I4(dl3_txrequesths),
        .I5(dl_tx_cal_st[0]),
        .O(time_out_zero_i_3__2_n_0));
  FDRE time_out_zero_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_zero_i_1__3_n_0),
        .Q(time_out_zero_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h04)) 
    tx_dl3_en_lp_tst_INST_0
       (.I0(hs_xfer_done_i),
        .I1(hs_dp_sync_out),
        .I2(esc_ctrl_i),
        .O(tx_dl3_en_lp_tst));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_10__2 
       (.I0(zero_count_reg[10]),
        .I1(zero_count_reg[11]),
        .I2(zero_count_reg[8]),
        .I3(zero_count_reg[9]),
        .I4(\zero_count[0]_i_13__2_n_0 ),
        .O(\zero_count[0]_i_10__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \zero_count[0]_i_11__2 
       (.I0(\zero_count[0]_i_14__2_n_0 ),
        .I1(zero_count_reg[25]),
        .I2(zero_count_reg[24]),
        .I3(zero_count_reg[27]),
        .I4(zero_count_reg[26]),
        .I5(\zero_count[0]_i_15__2_n_0 ),
        .O(\zero_count[0]_i_11__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_12__2 
       (.I0(zero_count_reg[21]),
        .I1(zero_count_reg[20]),
        .I2(zero_count_reg[23]),
        .I3(zero_count_reg[22]),
        .O(\zero_count[0]_i_12__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_13__2 
       (.I0(zero_count_reg[13]),
        .I1(zero_count_reg[12]),
        .I2(zero_count_reg[15]),
        .I3(zero_count_reg[14]),
        .O(\zero_count[0]_i_13__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_14__2 
       (.I0(zero_count_reg[29]),
        .I1(zero_count_reg[28]),
        .I2(zero_count_reg[31]),
        .I3(zero_count_reg[30]),
        .O(\zero_count[0]_i_14__2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_15__2 
       (.I0(zero_count_reg[5]),
        .I1(zero_count_reg[4]),
        .I2(zero_count_reg[7]),
        .I3(zero_count_reg[6]),
        .O(\zero_count[0]_i_15__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAFF28FF)) 
    \zero_count[0]_i_1__2 
       (.I0(time_out_zero_reg_n_0),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .I3(\zero_count_reg[31]_0 ),
        .I4(\zero_count_reg[31]_1 ),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .O(\zero_count[0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000222A2A2A)) 
    \zero_count[0]_i_2__2 
       (.I0(\zero_count[0]_i_6__2_n_0 ),
        .I1(zero_count_reg[3]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[1]),
        .I4(zero_count_reg[0]),
        .I5(\zero_count[0]_i_7__2_n_0 ),
        .O(zero_count__0));
  LUT3 #(
    .INIT(8'hF8)) 
    \zero_count[0]_i_6__2 
       (.I0(en_hs_datapath_posedge_r),
        .I1(dl_txrequesths_posedge_r),
        .I2(out),
        .O(\zero_count[0]_i_6__2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \zero_count[0]_i_7__2 
       (.I0(\zero_count[0]_i_9__2_n_0 ),
        .I1(\zero_count[0]_i_10__2_n_0 ),
        .I2(\zero_count[0]_i_11__2_n_0 ),
        .O(\zero_count[0]_i_7__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \zero_count[0]_i_8__2 
       (.I0(zero_count_reg[0]),
        .O(\zero_count[0]_i_8__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_9__2 
       (.I0(zero_count_reg[18]),
        .I1(zero_count_reg[19]),
        .I2(zero_count_reg[16]),
        .I3(zero_count_reg[17]),
        .I4(\zero_count[0]_i_12__2_n_0 ),
        .O(\zero_count[0]_i_9__2_n_0 ));
  FDRE \zero_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_15 ),
        .Q(zero_count_reg[0]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  CARRY8 \zero_count_reg[0]_i_3__2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[0]_i_3__2_n_0 ,\zero_count_reg[0]_i_3__2_n_1 ,\zero_count_reg[0]_i_3__2_n_2 ,\zero_count_reg[0]_i_3__2_n_3 ,\zero_count_reg[0]_i_3__2_n_4 ,\zero_count_reg[0]_i_3__2_n_5 ,\zero_count_reg[0]_i_3__2_n_6 ,\zero_count_reg[0]_i_3__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\zero_count_reg[0]_i_3__2_n_8 ,\zero_count_reg[0]_i_3__2_n_9 ,\zero_count_reg[0]_i_3__2_n_10 ,\zero_count_reg[0]_i_3__2_n_11 ,\zero_count_reg[0]_i_3__2_n_12 ,\zero_count_reg[0]_i_3__2_n_13 ,\zero_count_reg[0]_i_3__2_n_14 ,\zero_count_reg[0]_i_3__2_n_15 }),
        .S({zero_count_reg[7:1],\zero_count[0]_i_8__2_n_0 }));
  FDRE \zero_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_13 ),
        .Q(zero_count_reg[10]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_12 ),
        .Q(zero_count_reg[11]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_11 ),
        .Q(zero_count_reg[12]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_10 ),
        .Q(zero_count_reg[13]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_9 ),
        .Q(zero_count_reg[14]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_8 ),
        .Q(zero_count_reg[15]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_15 ),
        .Q(zero_count_reg[16]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  CARRY8 \zero_count_reg[16]_i_1__2 
       (.CI(\zero_count_reg[8]_i_1__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[16]_i_1__2_n_0 ,\zero_count_reg[16]_i_1__2_n_1 ,\zero_count_reg[16]_i_1__2_n_2 ,\zero_count_reg[16]_i_1__2_n_3 ,\zero_count_reg[16]_i_1__2_n_4 ,\zero_count_reg[16]_i_1__2_n_5 ,\zero_count_reg[16]_i_1__2_n_6 ,\zero_count_reg[16]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[16]_i_1__2_n_8 ,\zero_count_reg[16]_i_1__2_n_9 ,\zero_count_reg[16]_i_1__2_n_10 ,\zero_count_reg[16]_i_1__2_n_11 ,\zero_count_reg[16]_i_1__2_n_12 ,\zero_count_reg[16]_i_1__2_n_13 ,\zero_count_reg[16]_i_1__2_n_14 ,\zero_count_reg[16]_i_1__2_n_15 }),
        .S(zero_count_reg[23:16]));
  FDRE \zero_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_14 ),
        .Q(zero_count_reg[17]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_13 ),
        .Q(zero_count_reg[18]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_12 ),
        .Q(zero_count_reg[19]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_14 ),
        .Q(zero_count_reg[1]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_11 ),
        .Q(zero_count_reg[20]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_10 ),
        .Q(zero_count_reg[21]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_9 ),
        .Q(zero_count_reg[22]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__2_n_8 ),
        .Q(zero_count_reg[23]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_15 ),
        .Q(zero_count_reg[24]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  CARRY8 \zero_count_reg[24]_i_1__2 
       (.CI(\zero_count_reg[16]_i_1__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_zero_count_reg[24]_i_1__2_CO_UNCONNECTED [7],\zero_count_reg[24]_i_1__2_n_1 ,\zero_count_reg[24]_i_1__2_n_2 ,\zero_count_reg[24]_i_1__2_n_3 ,\zero_count_reg[24]_i_1__2_n_4 ,\zero_count_reg[24]_i_1__2_n_5 ,\zero_count_reg[24]_i_1__2_n_6 ,\zero_count_reg[24]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[24]_i_1__2_n_8 ,\zero_count_reg[24]_i_1__2_n_9 ,\zero_count_reg[24]_i_1__2_n_10 ,\zero_count_reg[24]_i_1__2_n_11 ,\zero_count_reg[24]_i_1__2_n_12 ,\zero_count_reg[24]_i_1__2_n_13 ,\zero_count_reg[24]_i_1__2_n_14 ,\zero_count_reg[24]_i_1__2_n_15 }),
        .S(zero_count_reg[31:24]));
  FDRE \zero_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_14 ),
        .Q(zero_count_reg[25]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_13 ),
        .Q(zero_count_reg[26]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_12 ),
        .Q(zero_count_reg[27]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_11 ),
        .Q(zero_count_reg[28]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_10 ),
        .Q(zero_count_reg[29]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_13 ),
        .Q(zero_count_reg[2]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_9 ),
        .Q(zero_count_reg[30]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__2_n_8 ),
        .Q(zero_count_reg[31]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_12 ),
        .Q(zero_count_reg[3]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_11 ),
        .Q(zero_count_reg[4]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_10 ),
        .Q(zero_count_reg[5]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_9 ),
        .Q(zero_count_reg[6]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__2_n_8 ),
        .Q(zero_count_reg[7]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  FDRE \zero_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_15 ),
        .Q(zero_count_reg[8]),
        .R(\zero_count[0]_i_1__2_n_0 ));
  CARRY8 \zero_count_reg[8]_i_1__2 
       (.CI(\zero_count_reg[0]_i_3__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[8]_i_1__2_n_0 ,\zero_count_reg[8]_i_1__2_n_1 ,\zero_count_reg[8]_i_1__2_n_2 ,\zero_count_reg[8]_i_1__2_n_3 ,\zero_count_reg[8]_i_1__2_n_4 ,\zero_count_reg[8]_i_1__2_n_5 ,\zero_count_reg[8]_i_1__2_n_6 ,\zero_count_reg[8]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[8]_i_1__2_n_8 ,\zero_count_reg[8]_i_1__2_n_9 ,\zero_count_reg[8]_i_1__2_n_10 ,\zero_count_reg[8]_i_1__2_n_11 ,\zero_count_reg[8]_i_1__2_n_12 ,\zero_count_reg[8]_i_1__2_n_13 ,\zero_count_reg[8]_i_1__2_n_14 ,\zero_count_reg[8]_i_1__2_n_15 }),
        .S(zero_count_reg[15:8]));
  FDRE \zero_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__2_n_14 ),
        .Q(zero_count_reg[9]),
        .R(\zero_count[0]_i_1__2_n_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_hs_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath_52
   (tx_dl2_hs_dp,
    hs_xfer_done_i,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    tx_dl2_en_lp_tst,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ,
    dl2_txrequesths,
    tx_div4_clk,
    out,
    hs_dp_sync_out,
    \zero_count_reg[31]_0 ,
    \zero_count_reg[31]_1 ,
    dl2_txdatahs,
    timeout_zero_out_i_0,
    en_hs_datapath_r,
    esc_ctrl_i,
    hs_xfer_done_reg_0);
  output [7:0]tx_dl2_hs_dp;
  output hs_xfer_done_i;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output tx_dl2_en_lp_tst;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ;
  input dl2_txrequesths;
  input tx_div4_clk;
  input out;
  input hs_dp_sync_out;
  input \zero_count_reg[31]_0 ;
  input \zero_count_reg[31]_1 ;
  input [7:0]dl2_txdatahs;
  input timeout_zero_out_i_0;
  input en_hs_datapath_r;
  input esc_ctrl_i;
  input hs_xfer_done_reg_0;

  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__1_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__1_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__1_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__1_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__1_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ;
  (* DONT_TOUCH *) wire [7:0]data_hs;
  wire [7:0]dl2_txdatahs;
  wire dl2_txrequesths;
  wire [1:0]dl_tx_cal_st;
  wire dl_txrequesths_posedge_r;
  wire dl_txrequesths_posedge_r_i_1__1_n_0;
  wire dl_txrequesths_r;
  wire en_hs_datapath_posedge_r;
  wire en_hs_datapath_posedge_r_i_1__1_n_0;
  wire en_hs_datapath_r;
  wire esc_ctrl_i;
  (* DONT_TOUCH *) wire [7:0]gen_eot_r;
  wire \gen_skewcal_cnt.time_out_trail_i_1__1_n_0 ;
  wire \gen_skewcal_cnt.time_out_trail_reg_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_10__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_11__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_12__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_13__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_4__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_5__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_6__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_7__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_8__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_9__1_n_0 ;
  wire [31:0]\gen_skewcal_cnt.trail_count_reg ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_9 ;
  (* DONT_TOUCH *) wire [15:0]hs_dp_quadtrature_r;
  wire hs_dp_sync_out;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1__1_n_0;
  wire hs_xfer_done_reg_0;
  wire out;
  wire time_out_zero_i_1__2_n_0;
  wire time_out_zero_i_2__1_n_0;
  wire time_out_zero_i_3__1_n_0;
  wire time_out_zero_reg_n_0;
  wire timeout_zero_out_i_0;
  wire trail_count__0;
  wire tx_div4_clk;
  wire tx_dl2_en_lp_tst;
  (* DONT_TOUCH *) wire [7:0]tx_dl2_hs_dp;
  wire \zero_count[0]_i_10__1_n_0 ;
  wire \zero_count[0]_i_11__1_n_0 ;
  wire \zero_count[0]_i_12__1_n_0 ;
  wire \zero_count[0]_i_13__1_n_0 ;
  wire \zero_count[0]_i_14__1_n_0 ;
  wire \zero_count[0]_i_15__1_n_0 ;
  wire \zero_count[0]_i_1__1_n_0 ;
  wire \zero_count[0]_i_6__1_n_0 ;
  wire \zero_count[0]_i_7__1_n_0 ;
  wire \zero_count[0]_i_8__1_n_0 ;
  wire \zero_count[0]_i_9__1_n_0 ;
  wire zero_count__0;
  wire [31:0]zero_count_reg;
  wire \zero_count_reg[0]_i_3__1_n_0 ;
  wire \zero_count_reg[0]_i_3__1_n_1 ;
  wire \zero_count_reg[0]_i_3__1_n_10 ;
  wire \zero_count_reg[0]_i_3__1_n_11 ;
  wire \zero_count_reg[0]_i_3__1_n_12 ;
  wire \zero_count_reg[0]_i_3__1_n_13 ;
  wire \zero_count_reg[0]_i_3__1_n_14 ;
  wire \zero_count_reg[0]_i_3__1_n_15 ;
  wire \zero_count_reg[0]_i_3__1_n_2 ;
  wire \zero_count_reg[0]_i_3__1_n_3 ;
  wire \zero_count_reg[0]_i_3__1_n_4 ;
  wire \zero_count_reg[0]_i_3__1_n_5 ;
  wire \zero_count_reg[0]_i_3__1_n_6 ;
  wire \zero_count_reg[0]_i_3__1_n_7 ;
  wire \zero_count_reg[0]_i_3__1_n_8 ;
  wire \zero_count_reg[0]_i_3__1_n_9 ;
  wire \zero_count_reg[16]_i_1__1_n_0 ;
  wire \zero_count_reg[16]_i_1__1_n_1 ;
  wire \zero_count_reg[16]_i_1__1_n_10 ;
  wire \zero_count_reg[16]_i_1__1_n_11 ;
  wire \zero_count_reg[16]_i_1__1_n_12 ;
  wire \zero_count_reg[16]_i_1__1_n_13 ;
  wire \zero_count_reg[16]_i_1__1_n_14 ;
  wire \zero_count_reg[16]_i_1__1_n_15 ;
  wire \zero_count_reg[16]_i_1__1_n_2 ;
  wire \zero_count_reg[16]_i_1__1_n_3 ;
  wire \zero_count_reg[16]_i_1__1_n_4 ;
  wire \zero_count_reg[16]_i_1__1_n_5 ;
  wire \zero_count_reg[16]_i_1__1_n_6 ;
  wire \zero_count_reg[16]_i_1__1_n_7 ;
  wire \zero_count_reg[16]_i_1__1_n_8 ;
  wire \zero_count_reg[16]_i_1__1_n_9 ;
  wire \zero_count_reg[24]_i_1__1_n_1 ;
  wire \zero_count_reg[24]_i_1__1_n_10 ;
  wire \zero_count_reg[24]_i_1__1_n_11 ;
  wire \zero_count_reg[24]_i_1__1_n_12 ;
  wire \zero_count_reg[24]_i_1__1_n_13 ;
  wire \zero_count_reg[24]_i_1__1_n_14 ;
  wire \zero_count_reg[24]_i_1__1_n_15 ;
  wire \zero_count_reg[24]_i_1__1_n_2 ;
  wire \zero_count_reg[24]_i_1__1_n_3 ;
  wire \zero_count_reg[24]_i_1__1_n_4 ;
  wire \zero_count_reg[24]_i_1__1_n_5 ;
  wire \zero_count_reg[24]_i_1__1_n_6 ;
  wire \zero_count_reg[24]_i_1__1_n_7 ;
  wire \zero_count_reg[24]_i_1__1_n_8 ;
  wire \zero_count_reg[24]_i_1__1_n_9 ;
  wire \zero_count_reg[31]_0 ;
  wire \zero_count_reg[31]_1 ;
  wire \zero_count_reg[8]_i_1__1_n_0 ;
  wire \zero_count_reg[8]_i_1__1_n_1 ;
  wire \zero_count_reg[8]_i_1__1_n_10 ;
  wire \zero_count_reg[8]_i_1__1_n_11 ;
  wire \zero_count_reg[8]_i_1__1_n_12 ;
  wire \zero_count_reg[8]_i_1__1_n_13 ;
  wire \zero_count_reg[8]_i_1__1_n_14 ;
  wire \zero_count_reg[8]_i_1__1_n_15 ;
  wire \zero_count_reg[8]_i_1__1_n_2 ;
  wire \zero_count_reg[8]_i_1__1_n_3 ;
  wire \zero_count_reg[8]_i_1__1_n_4 ;
  wire \zero_count_reg[8]_i_1__1_n_5 ;
  wire \zero_count_reg[8]_i_1__1_n_6 ;
  wire \zero_count_reg[8]_i_1__1_n_7 ;
  wire \zero_count_reg[8]_i_1__1_n_8 ;
  wire \zero_count_reg[8]_i_1__1_n_9 ;
  wire [7:7]\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1__1_CO_UNCONNECTED ;
  wire [7:7]\NLW_zero_count_reg[24]_i_1__1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hF7FFF7F7F0F0F0F0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__1 
       (.I0(hs_dp_sync_out),
        .I1(dl2_txrequesths),
        .I2(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__1_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl_tx_cal_st[0]),
        .I5(dl_tx_cal_st[1]),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFAFCFAFC0A0CFAFC)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__1 
       (.I0(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I1(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__1_n_0 ),
        .I2(dl_tx_cal_st[1]),
        .I3(dl_tx_cal_st[0]),
        .I4(dl2_txrequesths),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__1_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80008080)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__1 
       (.I0(hs_dp_sync_out),
        .I1(dl_tx_cal_st[1]),
        .I2(dl2_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl_tx_cal_st[0]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__1_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__1 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_n_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl_tx_cal_st[0]),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__1 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_n_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__1_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[0] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__1_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__1_n_0 ),
        .Q(dl_tx_cal_st[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[1] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__1_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__1_n_0 ),
        .Q(dl_tx_cal_st[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[0]),
        .I3(tx_dl2_hs_dp[0]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[1]),
        .I3(tx_dl2_hs_dp[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[2]),
        .I3(tx_dl2_hs_dp[2]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[3]),
        .I3(tx_dl2_hs_dp[3]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[4]),
        .I3(tx_dl2_hs_dp[4]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[5]),
        .I3(tx_dl2_hs_dp[5]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[6]),
        .I3(tx_dl2_hs_dp[6]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h04040444)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1 
       (.I0(gen_eot_r[7]),
        .I1(dl_tx_cal_st[1]),
        .I2(dl2_txrequesths),
        .I3(dl_tx_cal_st[0]),
        .I4(hs_dp_sync_out),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000015)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__1 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_n_0),
        .I3(dl_tx_cal_st[0]),
        .I4(dl_tx_cal_st[1]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .I2(dl2_txdatahs[7]),
        .I3(tx_dl2_hs_dp[7]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'hFFFF0008)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1 
       (.I0(time_out_zero_reg_n_0),
        .I1(en_hs_datapath_posedge_r),
        .I2(dl_tx_cal_st[0]),
        .I3(dl_tx_cal_st[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1 
       (.I0(hs_dp_sync_out),
        .I1(dl_tx_cal_st[1]),
        .I2(dl2_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ));
  LUT4 #(
    .INIT(16'hFF01)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1 
       (.I0(dl_txrequesths_posedge_r),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h707000FF40400000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl2_txrequesths),
        .I3(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[2]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[3]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[4]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[5]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[6]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__1_n_0 ),
        .Q(tx_dl2_hs_dp[7]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000554000000000)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1 
       (.I0(out),
        .I1(en_hs_datapath_posedge_r),
        .I2(timeout_zero_out_i_0),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I5(dl2_txrequesths),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__1_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__1 
       (.I0(dl2_txdatahs[0]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[0]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__1 
       (.I0(dl2_txdatahs[1]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[1]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__1 
       (.I0(dl2_txdatahs[2]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[2]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__1 
       (.I0(dl2_txdatahs[3]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[3]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__1 
       (.I0(dl2_txdatahs[4]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[4]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__1 
       (.I0(dl2_txdatahs[5]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[5]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__1 
       (.I0(dl2_txdatahs[6]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[6]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__1 
       (.I0(dl2_txdatahs[7]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ),
        .I2(gen_eot_r[7]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'hFFFF5444)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_txrequesths_posedge_r),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_n_0),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h740000007400FFFF)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl_tx_cal_st[0]),
        .I3(dl2_txrequesths),
        .I4(dl_tx_cal_st[1]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__1_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__1_n_0 ),
        .Q(gen_eot_r[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__1_n_0 ),
        .Q(gen_eot_r[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__1_n_0 ),
        .Q(gen_eot_r[2]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__1_n_0 ),
        .Q(gen_eot_r[3]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__1_n_0 ),
        .Q(gen_eot_r[4]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__1_n_0 ),
        .Q(gen_eot_r[5]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__1_n_0 ),
        .Q(gen_eot_r[6]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__1_n_0 ),
        .Q(gen_eot_r[7]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    dl_txrequesths_posedge_r_i_1__1
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(dl_txrequesths_r),
        .I2(dl2_txrequesths),
        .I3(dl_txrequesths_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(dl_txrequesths_posedge_r_i_1__1_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1__1_n_0),
        .Q(dl_txrequesths_posedge_r),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl2_txrequesths),
        .Q(dl_txrequesths_r),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    en_hs_datapath_posedge_r_i_1__1
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(en_hs_datapath_r),
        .I2(hs_dp_sync_out),
        .I3(en_hs_datapath_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(en_hs_datapath_posedge_r_i_1__1_n_0));
  FDRE en_hs_datapath_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_hs_datapath_posedge_r_i_1__1_n_0),
        .Q(en_hs_datapath_posedge_r),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h50515000)) 
    \gen_skewcal_cnt.time_out_trail_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_4__1_n_0 ),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(dl_tx_cal_st[1]),
        .I4(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.time_out_trail_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.time_out_trail_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\gen_skewcal_cnt.time_out_trail_i_1__1_n_0 ),
        .Q(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_10__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [13]),
        .I1(\gen_skewcal_cnt.trail_count_reg [12]),
        .I2(\gen_skewcal_cnt.trail_count_reg [15]),
        .I3(\gen_skewcal_cnt.trail_count_reg [14]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_10__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_11__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [5]),
        .I1(\gen_skewcal_cnt.trail_count_reg [4]),
        .I2(\gen_skewcal_cnt.trail_count_reg [7]),
        .I3(\gen_skewcal_cnt.trail_count_reg [6]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_11__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_12__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [29]),
        .I1(\gen_skewcal_cnt.trail_count_reg [28]),
        .I2(\gen_skewcal_cnt.trail_count_reg [31]),
        .I3(\gen_skewcal_cnt.trail_count_reg [30]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_12__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_13__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [21]),
        .I1(\gen_skewcal_cnt.trail_count_reg [20]),
        .I2(\gen_skewcal_cnt.trail_count_reg [23]),
        .I3(\gen_skewcal_cnt.trail_count_reg [22]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_13__1_n_0 ));
  LUT3 #(
    .INIT(8'hAB)) 
    \gen_skewcal_cnt.trail_count[0]_i_1__1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \gen_skewcal_cnt.trail_count[0]_i_2__1 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_4__1_n_0 ),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .O(trail_count__0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_4__1 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_6__1_n_0 ),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_7__1_n_0 ),
        .I2(\gen_skewcal_cnt.trail_count[0]_i_8__1_n_0 ),
        .I3(\gen_skewcal_cnt.trail_count[0]_i_9__1_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_skewcal_cnt.trail_count[0]_i_5__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_5__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_6__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [10]),
        .I1(\gen_skewcal_cnt.trail_count_reg [11]),
        .I2(\gen_skewcal_cnt.trail_count_reg [8]),
        .I3(\gen_skewcal_cnt.trail_count_reg [9]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_10__1_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_6__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    \gen_skewcal_cnt.trail_count[0]_i_7__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [2]),
        .I1(\gen_skewcal_cnt.trail_count_reg [3]),
        .I2(\gen_skewcal_cnt.trail_count_reg [0]),
        .I3(\gen_skewcal_cnt.trail_count_reg [1]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_11__1_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_7__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_8__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [26]),
        .I1(\gen_skewcal_cnt.trail_count_reg [27]),
        .I2(\gen_skewcal_cnt.trail_count_reg [24]),
        .I3(\gen_skewcal_cnt.trail_count_reg [25]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_12__1_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_8__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_9__1 
       (.I0(\gen_skewcal_cnt.trail_count_reg [18]),
        .I1(\gen_skewcal_cnt.trail_count_reg [19]),
        .I2(\gen_skewcal_cnt.trail_count_reg [16]),
        .I3(\gen_skewcal_cnt.trail_count_reg [17]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_13__1_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_9__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [0]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[0]_i_3__1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_0 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_1 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_2 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_3 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_4 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_5 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_6 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_8 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_9 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_10 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_11 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_12 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_13 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_14 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_15 }),
        .S({\gen_skewcal_cnt.trail_count_reg [7:1],\gen_skewcal_cnt.trail_count[0]_i_5__1_n_0 }));
  FDRE \gen_skewcal_cnt.trail_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [10]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [11]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [12]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [13]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [14]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [15]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [16]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[16]_i_1__1 
       (.CI(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_0 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_1 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_2 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_3 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_4 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_5 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_6 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_8 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_9 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_10 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_11 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_12 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_13 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_14 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [23:16]));
  FDRE \gen_skewcal_cnt.trail_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [17]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [18]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [19]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [1]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [20]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [21]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [22]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [23]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [24]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[24]_i_1__1 
       (.CI(\gen_skewcal_cnt.trail_count_reg[16]_i_1__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1__1_CO_UNCONNECTED [7],\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_1 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_2 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_3 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_4 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_5 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_6 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_8 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_9 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_10 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_11 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_12 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_13 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_14 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [31:24]));
  FDRE \gen_skewcal_cnt.trail_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [25]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [26]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [27]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [28]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [29]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [2]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [30]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__1_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [31]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [3]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [4]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [5]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [6]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [7]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [8]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[8]_i_1__1 
       (.CI(\gen_skewcal_cnt.trail_count_reg[0]_i_3__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_0 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_1 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_2 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_3 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_4 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_5 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_6 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_8 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_9 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_10 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_11 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_12 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_13 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_14 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [15:8]));
  FDRE \gen_skewcal_cnt.trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__1_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [9]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1__1
       (.I0(hs_xfer_done_i),
        .I1(hs_dp_sync_out),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(hs_xfer_done_reg_0),
        .O(hs_xfer_done_i_1__1_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1__1_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(data_hs[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(data_hs[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(data_hs[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(data_hs[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(data_hs[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(data_hs[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(data_hs[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(data_hs[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[14]));
  LUT6 #(
    .INIT(64'h5555504000000000)) 
    time_out_zero_i_1__2
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(\zero_count[0]_i_7__1_n_0 ),
        .I2(\zero_count[0]_i_6__1_n_0 ),
        .I3(time_out_zero_i_2__1_n_0),
        .I4(time_out_zero_reg_n_0),
        .I5(time_out_zero_i_3__1_n_0),
        .O(time_out_zero_i_1__2_n_0));
  LUT4 #(
    .INIT(16'hF800)) 
    time_out_zero_i_2__1
       (.I0(zero_count_reg[0]),
        .I1(zero_count_reg[1]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[3]),
        .O(time_out_zero_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hAE0E0E0E0EAE0E0E)) 
    time_out_zero_i_3__1
       (.I0(hs_dp_sync_out),
        .I1(out),
        .I2(time_out_zero_reg_n_0),
        .I3(dl_tx_cal_st[1]),
        .I4(dl2_txrequesths),
        .I5(dl_tx_cal_st[0]),
        .O(time_out_zero_i_3__1_n_0));
  FDRE time_out_zero_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_zero_i_1__2_n_0),
        .Q(time_out_zero_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h04)) 
    tx_dl2_en_lp_tst_INST_0
       (.I0(hs_xfer_done_i),
        .I1(hs_dp_sync_out),
        .I2(esc_ctrl_i),
        .O(tx_dl2_en_lp_tst));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_10__1 
       (.I0(zero_count_reg[10]),
        .I1(zero_count_reg[11]),
        .I2(zero_count_reg[8]),
        .I3(zero_count_reg[9]),
        .I4(\zero_count[0]_i_13__1_n_0 ),
        .O(\zero_count[0]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \zero_count[0]_i_11__1 
       (.I0(\zero_count[0]_i_14__1_n_0 ),
        .I1(zero_count_reg[25]),
        .I2(zero_count_reg[24]),
        .I3(zero_count_reg[27]),
        .I4(zero_count_reg[26]),
        .I5(\zero_count[0]_i_15__1_n_0 ),
        .O(\zero_count[0]_i_11__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_12__1 
       (.I0(zero_count_reg[21]),
        .I1(zero_count_reg[20]),
        .I2(zero_count_reg[23]),
        .I3(zero_count_reg[22]),
        .O(\zero_count[0]_i_12__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_13__1 
       (.I0(zero_count_reg[13]),
        .I1(zero_count_reg[12]),
        .I2(zero_count_reg[15]),
        .I3(zero_count_reg[14]),
        .O(\zero_count[0]_i_13__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_14__1 
       (.I0(zero_count_reg[29]),
        .I1(zero_count_reg[28]),
        .I2(zero_count_reg[31]),
        .I3(zero_count_reg[30]),
        .O(\zero_count[0]_i_14__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_15__1 
       (.I0(zero_count_reg[5]),
        .I1(zero_count_reg[4]),
        .I2(zero_count_reg[7]),
        .I3(zero_count_reg[6]),
        .O(\zero_count[0]_i_15__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAFF28FF)) 
    \zero_count[0]_i_1__1 
       (.I0(time_out_zero_reg_n_0),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .I3(\zero_count_reg[31]_0 ),
        .I4(\zero_count_reg[31]_1 ),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .O(\zero_count[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000222A2A2A)) 
    \zero_count[0]_i_2__1 
       (.I0(\zero_count[0]_i_6__1_n_0 ),
        .I1(zero_count_reg[3]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[1]),
        .I4(zero_count_reg[0]),
        .I5(\zero_count[0]_i_7__1_n_0 ),
        .O(zero_count__0));
  LUT3 #(
    .INIT(8'hF8)) 
    \zero_count[0]_i_6__1 
       (.I0(en_hs_datapath_posedge_r),
        .I1(dl_txrequesths_posedge_r),
        .I2(out),
        .O(\zero_count[0]_i_6__1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \zero_count[0]_i_7__1 
       (.I0(\zero_count[0]_i_9__1_n_0 ),
        .I1(\zero_count[0]_i_10__1_n_0 ),
        .I2(\zero_count[0]_i_11__1_n_0 ),
        .O(\zero_count[0]_i_7__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \zero_count[0]_i_8__1 
       (.I0(zero_count_reg[0]),
        .O(\zero_count[0]_i_8__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_9__1 
       (.I0(zero_count_reg[18]),
        .I1(zero_count_reg[19]),
        .I2(zero_count_reg[16]),
        .I3(zero_count_reg[17]),
        .I4(\zero_count[0]_i_12__1_n_0 ),
        .O(\zero_count[0]_i_9__1_n_0 ));
  FDRE \zero_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_15 ),
        .Q(zero_count_reg[0]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  CARRY8 \zero_count_reg[0]_i_3__1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[0]_i_3__1_n_0 ,\zero_count_reg[0]_i_3__1_n_1 ,\zero_count_reg[0]_i_3__1_n_2 ,\zero_count_reg[0]_i_3__1_n_3 ,\zero_count_reg[0]_i_3__1_n_4 ,\zero_count_reg[0]_i_3__1_n_5 ,\zero_count_reg[0]_i_3__1_n_6 ,\zero_count_reg[0]_i_3__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\zero_count_reg[0]_i_3__1_n_8 ,\zero_count_reg[0]_i_3__1_n_9 ,\zero_count_reg[0]_i_3__1_n_10 ,\zero_count_reg[0]_i_3__1_n_11 ,\zero_count_reg[0]_i_3__1_n_12 ,\zero_count_reg[0]_i_3__1_n_13 ,\zero_count_reg[0]_i_3__1_n_14 ,\zero_count_reg[0]_i_3__1_n_15 }),
        .S({zero_count_reg[7:1],\zero_count[0]_i_8__1_n_0 }));
  FDRE \zero_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_13 ),
        .Q(zero_count_reg[10]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_12 ),
        .Q(zero_count_reg[11]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_11 ),
        .Q(zero_count_reg[12]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_10 ),
        .Q(zero_count_reg[13]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_9 ),
        .Q(zero_count_reg[14]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_8 ),
        .Q(zero_count_reg[15]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_15 ),
        .Q(zero_count_reg[16]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  CARRY8 \zero_count_reg[16]_i_1__1 
       (.CI(\zero_count_reg[8]_i_1__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[16]_i_1__1_n_0 ,\zero_count_reg[16]_i_1__1_n_1 ,\zero_count_reg[16]_i_1__1_n_2 ,\zero_count_reg[16]_i_1__1_n_3 ,\zero_count_reg[16]_i_1__1_n_4 ,\zero_count_reg[16]_i_1__1_n_5 ,\zero_count_reg[16]_i_1__1_n_6 ,\zero_count_reg[16]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[16]_i_1__1_n_8 ,\zero_count_reg[16]_i_1__1_n_9 ,\zero_count_reg[16]_i_1__1_n_10 ,\zero_count_reg[16]_i_1__1_n_11 ,\zero_count_reg[16]_i_1__1_n_12 ,\zero_count_reg[16]_i_1__1_n_13 ,\zero_count_reg[16]_i_1__1_n_14 ,\zero_count_reg[16]_i_1__1_n_15 }),
        .S(zero_count_reg[23:16]));
  FDRE \zero_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_14 ),
        .Q(zero_count_reg[17]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_13 ),
        .Q(zero_count_reg[18]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_12 ),
        .Q(zero_count_reg[19]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_14 ),
        .Q(zero_count_reg[1]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_11 ),
        .Q(zero_count_reg[20]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_10 ),
        .Q(zero_count_reg[21]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_9 ),
        .Q(zero_count_reg[22]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__1_n_8 ),
        .Q(zero_count_reg[23]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_15 ),
        .Q(zero_count_reg[24]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  CARRY8 \zero_count_reg[24]_i_1__1 
       (.CI(\zero_count_reg[16]_i_1__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_zero_count_reg[24]_i_1__1_CO_UNCONNECTED [7],\zero_count_reg[24]_i_1__1_n_1 ,\zero_count_reg[24]_i_1__1_n_2 ,\zero_count_reg[24]_i_1__1_n_3 ,\zero_count_reg[24]_i_1__1_n_4 ,\zero_count_reg[24]_i_1__1_n_5 ,\zero_count_reg[24]_i_1__1_n_6 ,\zero_count_reg[24]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[24]_i_1__1_n_8 ,\zero_count_reg[24]_i_1__1_n_9 ,\zero_count_reg[24]_i_1__1_n_10 ,\zero_count_reg[24]_i_1__1_n_11 ,\zero_count_reg[24]_i_1__1_n_12 ,\zero_count_reg[24]_i_1__1_n_13 ,\zero_count_reg[24]_i_1__1_n_14 ,\zero_count_reg[24]_i_1__1_n_15 }),
        .S(zero_count_reg[31:24]));
  FDRE \zero_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_14 ),
        .Q(zero_count_reg[25]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_13 ),
        .Q(zero_count_reg[26]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_12 ),
        .Q(zero_count_reg[27]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_11 ),
        .Q(zero_count_reg[28]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_10 ),
        .Q(zero_count_reg[29]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_13 ),
        .Q(zero_count_reg[2]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_9 ),
        .Q(zero_count_reg[30]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__1_n_8 ),
        .Q(zero_count_reg[31]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_12 ),
        .Q(zero_count_reg[3]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_11 ),
        .Q(zero_count_reg[4]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_10 ),
        .Q(zero_count_reg[5]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_9 ),
        .Q(zero_count_reg[6]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__1_n_8 ),
        .Q(zero_count_reg[7]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  FDRE \zero_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_15 ),
        .Q(zero_count_reg[8]),
        .R(\zero_count[0]_i_1__1_n_0 ));
  CARRY8 \zero_count_reg[8]_i_1__1 
       (.CI(\zero_count_reg[0]_i_3__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[8]_i_1__1_n_0 ,\zero_count_reg[8]_i_1__1_n_1 ,\zero_count_reg[8]_i_1__1_n_2 ,\zero_count_reg[8]_i_1__1_n_3 ,\zero_count_reg[8]_i_1__1_n_4 ,\zero_count_reg[8]_i_1__1_n_5 ,\zero_count_reg[8]_i_1__1_n_6 ,\zero_count_reg[8]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[8]_i_1__1_n_8 ,\zero_count_reg[8]_i_1__1_n_9 ,\zero_count_reg[8]_i_1__1_n_10 ,\zero_count_reg[8]_i_1__1_n_11 ,\zero_count_reg[8]_i_1__1_n_12 ,\zero_count_reg[8]_i_1__1_n_13 ,\zero_count_reg[8]_i_1__1_n_14 ,\zero_count_reg[8]_i_1__1_n_15 }),
        .S(zero_count_reg[15:8]));
  FDRE \zero_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__1_n_14 ),
        .Q(zero_count_reg[9]),
        .R(\zero_count[0]_i_1__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_hs_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath_71
   (tx_dl1_hs_dp,
    hs_xfer_done_i,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    tx_dl1_en_lp_tst,
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ,
    dl1_txrequesths,
    tx_div4_clk,
    out,
    hs_dp_sync_out,
    \zero_count_reg[31]_0 ,
    \zero_count_reg[31]_1 ,
    dl1_txdatahs,
    timeout_zero_out_i_0,
    en_hs_datapath_r,
    esc_ctrl_i,
    hs_xfer_done_reg_0);
  output [7:0]tx_dl1_hs_dp;
  output hs_xfer_done_i;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output tx_dl1_en_lp_tst;
  input \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ;
  input dl1_txrequesths;
  input tx_div4_clk;
  input out;
  input hs_dp_sync_out;
  input \zero_count_reg[31]_0 ;
  input \zero_count_reg[31]_1 ;
  input [7:0]dl1_txdatahs;
  input timeout_zero_out_i_0;
  input en_hs_datapath_r;
  input esc_ctrl_i;
  input hs_xfer_done_reg_0;

  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__0_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__0_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__0_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__0_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__0_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ;
  (* DONT_TOUCH *) wire [7:0]data_hs;
  wire [7:0]dl1_txdatahs;
  wire dl1_txrequesths;
  wire [1:0]dl_tx_cal_st;
  wire dl_txrequesths_posedge_r;
  wire dl_txrequesths_posedge_r_i_1__0_n_0;
  wire dl_txrequesths_r;
  wire en_hs_datapath_posedge_r;
  wire en_hs_datapath_posedge_r_i_1__0_n_0;
  wire en_hs_datapath_r;
  wire esc_ctrl_i;
  (* DONT_TOUCH *) wire [7:0]gen_eot_r;
  wire \gen_skewcal_cnt.time_out_trail_i_1__0_n_0 ;
  wire \gen_skewcal_cnt.time_out_trail_reg_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_10__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_11__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_12__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_13__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_4__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_5__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_6__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_7__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_8__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_9__0_n_0 ;
  wire [31:0]\gen_skewcal_cnt.trail_count_reg ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_9 ;
  (* DONT_TOUCH *) wire [15:0]hs_dp_quadtrature_r;
  wire hs_dp_sync_out;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1__0_n_0;
  wire hs_xfer_done_reg_0;
  wire out;
  wire time_out_zero_i_1__1_n_0;
  wire time_out_zero_i_2__0_n_0;
  wire time_out_zero_i_3__0_n_0;
  wire time_out_zero_reg_n_0;
  wire timeout_zero_out_i_0;
  wire trail_count__0;
  wire tx_div4_clk;
  wire tx_dl1_en_lp_tst;
  (* DONT_TOUCH *) wire [7:0]tx_dl1_hs_dp;
  wire \zero_count[0]_i_10__0_n_0 ;
  wire \zero_count[0]_i_11__0_n_0 ;
  wire \zero_count[0]_i_12__0_n_0 ;
  wire \zero_count[0]_i_13__0_n_0 ;
  wire \zero_count[0]_i_14__0_n_0 ;
  wire \zero_count[0]_i_15__0_n_0 ;
  wire \zero_count[0]_i_1__0_n_0 ;
  wire \zero_count[0]_i_6__0_n_0 ;
  wire \zero_count[0]_i_7__0_n_0 ;
  wire \zero_count[0]_i_8__0_n_0 ;
  wire \zero_count[0]_i_9__0_n_0 ;
  wire zero_count__0;
  wire [31:0]zero_count_reg;
  wire \zero_count_reg[0]_i_3__0_n_0 ;
  wire \zero_count_reg[0]_i_3__0_n_1 ;
  wire \zero_count_reg[0]_i_3__0_n_10 ;
  wire \zero_count_reg[0]_i_3__0_n_11 ;
  wire \zero_count_reg[0]_i_3__0_n_12 ;
  wire \zero_count_reg[0]_i_3__0_n_13 ;
  wire \zero_count_reg[0]_i_3__0_n_14 ;
  wire \zero_count_reg[0]_i_3__0_n_15 ;
  wire \zero_count_reg[0]_i_3__0_n_2 ;
  wire \zero_count_reg[0]_i_3__0_n_3 ;
  wire \zero_count_reg[0]_i_3__0_n_4 ;
  wire \zero_count_reg[0]_i_3__0_n_5 ;
  wire \zero_count_reg[0]_i_3__0_n_6 ;
  wire \zero_count_reg[0]_i_3__0_n_7 ;
  wire \zero_count_reg[0]_i_3__0_n_8 ;
  wire \zero_count_reg[0]_i_3__0_n_9 ;
  wire \zero_count_reg[16]_i_1__0_n_0 ;
  wire \zero_count_reg[16]_i_1__0_n_1 ;
  wire \zero_count_reg[16]_i_1__0_n_10 ;
  wire \zero_count_reg[16]_i_1__0_n_11 ;
  wire \zero_count_reg[16]_i_1__0_n_12 ;
  wire \zero_count_reg[16]_i_1__0_n_13 ;
  wire \zero_count_reg[16]_i_1__0_n_14 ;
  wire \zero_count_reg[16]_i_1__0_n_15 ;
  wire \zero_count_reg[16]_i_1__0_n_2 ;
  wire \zero_count_reg[16]_i_1__0_n_3 ;
  wire \zero_count_reg[16]_i_1__0_n_4 ;
  wire \zero_count_reg[16]_i_1__0_n_5 ;
  wire \zero_count_reg[16]_i_1__0_n_6 ;
  wire \zero_count_reg[16]_i_1__0_n_7 ;
  wire \zero_count_reg[16]_i_1__0_n_8 ;
  wire \zero_count_reg[16]_i_1__0_n_9 ;
  wire \zero_count_reg[24]_i_1__0_n_1 ;
  wire \zero_count_reg[24]_i_1__0_n_10 ;
  wire \zero_count_reg[24]_i_1__0_n_11 ;
  wire \zero_count_reg[24]_i_1__0_n_12 ;
  wire \zero_count_reg[24]_i_1__0_n_13 ;
  wire \zero_count_reg[24]_i_1__0_n_14 ;
  wire \zero_count_reg[24]_i_1__0_n_15 ;
  wire \zero_count_reg[24]_i_1__0_n_2 ;
  wire \zero_count_reg[24]_i_1__0_n_3 ;
  wire \zero_count_reg[24]_i_1__0_n_4 ;
  wire \zero_count_reg[24]_i_1__0_n_5 ;
  wire \zero_count_reg[24]_i_1__0_n_6 ;
  wire \zero_count_reg[24]_i_1__0_n_7 ;
  wire \zero_count_reg[24]_i_1__0_n_8 ;
  wire \zero_count_reg[24]_i_1__0_n_9 ;
  wire \zero_count_reg[31]_0 ;
  wire \zero_count_reg[31]_1 ;
  wire \zero_count_reg[8]_i_1__0_n_0 ;
  wire \zero_count_reg[8]_i_1__0_n_1 ;
  wire \zero_count_reg[8]_i_1__0_n_10 ;
  wire \zero_count_reg[8]_i_1__0_n_11 ;
  wire \zero_count_reg[8]_i_1__0_n_12 ;
  wire \zero_count_reg[8]_i_1__0_n_13 ;
  wire \zero_count_reg[8]_i_1__0_n_14 ;
  wire \zero_count_reg[8]_i_1__0_n_15 ;
  wire \zero_count_reg[8]_i_1__0_n_2 ;
  wire \zero_count_reg[8]_i_1__0_n_3 ;
  wire \zero_count_reg[8]_i_1__0_n_4 ;
  wire \zero_count_reg[8]_i_1__0_n_5 ;
  wire \zero_count_reg[8]_i_1__0_n_6 ;
  wire \zero_count_reg[8]_i_1__0_n_7 ;
  wire \zero_count_reg[8]_i_1__0_n_8 ;
  wire \zero_count_reg[8]_i_1__0_n_9 ;
  wire [7:7]\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1__0_CO_UNCONNECTED ;
  wire [7:7]\NLW_zero_count_reg[24]_i_1__0_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hF7FFF7F7F0F0F0F0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__0 
       (.I0(hs_dp_sync_out),
        .I1(dl1_txrequesths),
        .I2(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__0_n_0 ),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl_tx_cal_st[0]),
        .I5(dl_tx_cal_st[1]),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFAFCFAFC0A0CFAFC)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__0 
       (.I0(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I1(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__0_n_0 ),
        .I2(dl_tx_cal_st[1]),
        .I3(dl_tx_cal_st[0]),
        .I4(dl1_txrequesths),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__0_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80008080)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__0 
       (.I0(hs_dp_sync_out),
        .I1(dl_tx_cal_st[1]),
        .I2(dl1_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl_tx_cal_st[0]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__0_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__0 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_n_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl_tx_cal_st[0]),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__0 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_n_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5__0_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[0] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__0_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1__0_n_0 ),
        .Q(dl_tx_cal_st[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[1] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1__0_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2__0_n_0 ),
        .Q(dl_tx_cal_st[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[0]),
        .I3(tx_dl1_hs_dp[0]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[1]),
        .I3(tx_dl1_hs_dp[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[2]),
        .I3(tx_dl1_hs_dp[2]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[3]),
        .I3(tx_dl1_hs_dp[3]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[4]),
        .I3(tx_dl1_hs_dp[4]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[5]),
        .I3(tx_dl1_hs_dp[5]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[6]),
        .I3(tx_dl1_hs_dp[6]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h04040444)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0 
       (.I0(gen_eot_r[7]),
        .I1(dl_tx_cal_st[1]),
        .I2(dl1_txrequesths),
        .I3(dl_tx_cal_st[0]),
        .I4(hs_dp_sync_out),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000015)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__0 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_n_0),
        .I3(dl_tx_cal_st[0]),
        .I4(dl_tx_cal_st[1]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .I2(dl1_txdatahs[7]),
        .I3(tx_dl1_hs_dp[7]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT5 #(
    .INIT(32'hFFFF0008)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0 
       (.I0(time_out_zero_reg_n_0),
        .I1(en_hs_datapath_posedge_r),
        .I2(dl_tx_cal_st[0]),
        .I3(dl_tx_cal_st[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0 
       (.I0(hs_dp_sync_out),
        .I1(dl_tx_cal_st[1]),
        .I2(dl1_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hFF01)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0 
       (.I0(dl_txrequesths_posedge_r),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h707000FF40400000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl1_txrequesths),
        .I3(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[2]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[3]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[4]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[5]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[6]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1__0_n_0 ),
        .Q(tx_dl1_hs_dp[7]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000554000000000)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0 
       (.I0(out),
        .I1(en_hs_datapath_posedge_r),
        .I2(timeout_zero_out_i_0),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I5(dl1_txrequesths),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1__0_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__0 
       (.I0(dl1_txdatahs[0]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[0]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__0 
       (.I0(dl1_txdatahs[1]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[1]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__0 
       (.I0(dl1_txdatahs[2]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[2]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__0 
       (.I0(dl1_txdatahs[3]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[3]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__0 
       (.I0(dl1_txdatahs[4]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[4]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__0 
       (.I0(dl1_txdatahs[5]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[5]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__0 
       (.I0(dl1_txdatahs[6]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[6]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__0 
       (.I0(dl1_txdatahs[7]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ),
        .I2(gen_eot_r[7]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'hFFFF5444)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_txrequesths_posedge_r),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_n_0),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h740000007400FFFF)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(hs_dp_sync_out),
        .I2(dl_tx_cal_st[0]),
        .I3(dl1_txrequesths),
        .I4(dl_tx_cal_st[1]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3__0_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1__0_n_0 ),
        .Q(gen_eot_r[0]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1__0_n_0 ),
        .Q(gen_eot_r[1]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1__0_n_0 ),
        .Q(gen_eot_r[2]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1__0_n_0 ),
        .Q(gen_eot_r[3]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1__0_n_0 ),
        .Q(gen_eot_r[4]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1__0_n_0 ),
        .Q(gen_eot_r[5]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1__0_n_0 ),
        .Q(gen_eot_r[6]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1__0_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2__0_n_0 ),
        .Q(gen_eot_r[7]),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    dl_txrequesths_posedge_r_i_1__0
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(dl_txrequesths_r),
        .I2(dl1_txrequesths),
        .I3(dl_txrequesths_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(dl_txrequesths_posedge_r_i_1__0_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1__0_n_0),
        .Q(dl_txrequesths_posedge_r),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl1_txrequesths),
        .Q(dl_txrequesths_r),
        .R(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    en_hs_datapath_posedge_r_i_1__0
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(en_hs_datapath_r),
        .I2(hs_dp_sync_out),
        .I3(en_hs_datapath_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(en_hs_datapath_posedge_r_i_1__0_n_0));
  FDRE en_hs_datapath_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_hs_datapath_posedge_r_i_1__0_n_0),
        .Q(en_hs_datapath_posedge_r),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h50515000)) 
    \gen_skewcal_cnt.time_out_trail_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_4__0_n_0 ),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(dl_tx_cal_st[1]),
        .I4(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.time_out_trail_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.time_out_trail_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\gen_skewcal_cnt.time_out_trail_i_1__0_n_0 ),
        .Q(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_10__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [13]),
        .I1(\gen_skewcal_cnt.trail_count_reg [12]),
        .I2(\gen_skewcal_cnt.trail_count_reg [15]),
        .I3(\gen_skewcal_cnt.trail_count_reg [14]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_11__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [5]),
        .I1(\gen_skewcal_cnt.trail_count_reg [4]),
        .I2(\gen_skewcal_cnt.trail_count_reg [7]),
        .I3(\gen_skewcal_cnt.trail_count_reg [6]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_11__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_12__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [29]),
        .I1(\gen_skewcal_cnt.trail_count_reg [28]),
        .I2(\gen_skewcal_cnt.trail_count_reg [31]),
        .I3(\gen_skewcal_cnt.trail_count_reg [30]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_13__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [21]),
        .I1(\gen_skewcal_cnt.trail_count_reg [20]),
        .I2(\gen_skewcal_cnt.trail_count_reg [23]),
        .I3(\gen_skewcal_cnt.trail_count_reg [22]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_13__0_n_0 ));
  LUT3 #(
    .INIT(8'hAB)) 
    \gen_skewcal_cnt.trail_count[0]_i_1__0 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \gen_skewcal_cnt.trail_count[0]_i_2__0 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_4__0_n_0 ),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .O(trail_count__0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_4__0 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_6__0_n_0 ),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_7__0_n_0 ),
        .I2(\gen_skewcal_cnt.trail_count[0]_i_8__0_n_0 ),
        .I3(\gen_skewcal_cnt.trail_count[0]_i_9__0_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_skewcal_cnt.trail_count[0]_i_5__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_6__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [10]),
        .I1(\gen_skewcal_cnt.trail_count_reg [11]),
        .I2(\gen_skewcal_cnt.trail_count_reg [8]),
        .I3(\gen_skewcal_cnt.trail_count_reg [9]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_10__0_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    \gen_skewcal_cnt.trail_count[0]_i_7__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [2]),
        .I1(\gen_skewcal_cnt.trail_count_reg [3]),
        .I2(\gen_skewcal_cnt.trail_count_reg [0]),
        .I3(\gen_skewcal_cnt.trail_count_reg [1]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_11__0_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_7__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_8__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [26]),
        .I1(\gen_skewcal_cnt.trail_count_reg [27]),
        .I2(\gen_skewcal_cnt.trail_count_reg [24]),
        .I3(\gen_skewcal_cnt.trail_count_reg [25]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_12__0_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_9__0 
       (.I0(\gen_skewcal_cnt.trail_count_reg [18]),
        .I1(\gen_skewcal_cnt.trail_count_reg [19]),
        .I2(\gen_skewcal_cnt.trail_count_reg [16]),
        .I3(\gen_skewcal_cnt.trail_count_reg [17]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_13__0_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_9__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [0]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[0]_i_3__0 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_0 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_1 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_2 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_3 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_4 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_5 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_6 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_8 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_9 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_10 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_11 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_12 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_13 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_14 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_15 }),
        .S({\gen_skewcal_cnt.trail_count_reg [7:1],\gen_skewcal_cnt.trail_count[0]_i_5__0_n_0 }));
  FDRE \gen_skewcal_cnt.trail_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [10]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [11]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [12]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [13]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [14]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [15]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [16]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[16]_i_1__0 
       (.CI(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_0 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_1 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_2 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_3 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_4 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_5 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_6 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_8 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_9 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_10 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_11 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_12 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_13 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_14 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [23:16]));
  FDRE \gen_skewcal_cnt.trail_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [17]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [18]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [19]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [1]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [20]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [21]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [22]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [23]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [24]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[24]_i_1__0 
       (.CI(\gen_skewcal_cnt.trail_count_reg[16]_i_1__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1__0_CO_UNCONNECTED [7],\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_1 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_2 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_3 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_4 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_5 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_6 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_8 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_9 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_10 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_11 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_12 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_13 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_14 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [31:24]));
  FDRE \gen_skewcal_cnt.trail_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [25]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [26]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [27]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [28]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [29]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [2]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [30]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1__0_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [31]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [3]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [4]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [5]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [6]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [7]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [8]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[8]_i_1__0 
       (.CI(\gen_skewcal_cnt.trail_count_reg[0]_i_3__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_0 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_1 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_2 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_3 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_4 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_5 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_6 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_8 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_9 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_10 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_11 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_12 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_13 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_14 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [15:8]));
  FDRE \gen_skewcal_cnt.trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1__0_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [9]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1__0
       (.I0(hs_xfer_done_i),
        .I1(hs_dp_sync_out),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(hs_xfer_done_reg_0),
        .O(hs_xfer_done_i_1__0_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1__0_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(data_hs[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(data_hs[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(data_hs[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(data_hs[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(data_hs[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(data_hs[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(data_hs[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(data_hs[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[14]));
  LUT6 #(
    .INIT(64'h5555504000000000)) 
    time_out_zero_i_1__1
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .I1(\zero_count[0]_i_7__0_n_0 ),
        .I2(\zero_count[0]_i_6__0_n_0 ),
        .I3(time_out_zero_i_2__0_n_0),
        .I4(time_out_zero_reg_n_0),
        .I5(time_out_zero_i_3__0_n_0),
        .O(time_out_zero_i_1__1_n_0));
  LUT4 #(
    .INIT(16'hF800)) 
    time_out_zero_i_2__0
       (.I0(zero_count_reg[0]),
        .I1(zero_count_reg[1]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[3]),
        .O(time_out_zero_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hAE0E0E0E0EAE0E0E)) 
    time_out_zero_i_3__0
       (.I0(hs_dp_sync_out),
        .I1(out),
        .I2(time_out_zero_reg_n_0),
        .I3(dl_tx_cal_st[1]),
        .I4(dl1_txrequesths),
        .I5(dl_tx_cal_st[0]),
        .O(time_out_zero_i_3__0_n_0));
  FDRE time_out_zero_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_zero_i_1__1_n_0),
        .Q(time_out_zero_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h04)) 
    tx_dl1_en_lp_tst_INST_0
       (.I0(hs_xfer_done_i),
        .I1(hs_dp_sync_out),
        .I2(esc_ctrl_i),
        .O(tx_dl1_en_lp_tst));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_10__0 
       (.I0(zero_count_reg[10]),
        .I1(zero_count_reg[11]),
        .I2(zero_count_reg[8]),
        .I3(zero_count_reg[9]),
        .I4(\zero_count[0]_i_13__0_n_0 ),
        .O(\zero_count[0]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \zero_count[0]_i_11__0 
       (.I0(\zero_count[0]_i_14__0_n_0 ),
        .I1(zero_count_reg[25]),
        .I2(zero_count_reg[24]),
        .I3(zero_count_reg[27]),
        .I4(zero_count_reg[26]),
        .I5(\zero_count[0]_i_15__0_n_0 ),
        .O(\zero_count[0]_i_11__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_12__0 
       (.I0(zero_count_reg[21]),
        .I1(zero_count_reg[20]),
        .I2(zero_count_reg[23]),
        .I3(zero_count_reg[22]),
        .O(\zero_count[0]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_13__0 
       (.I0(zero_count_reg[13]),
        .I1(zero_count_reg[12]),
        .I2(zero_count_reg[15]),
        .I3(zero_count_reg[14]),
        .O(\zero_count[0]_i_13__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_14__0 
       (.I0(zero_count_reg[29]),
        .I1(zero_count_reg[28]),
        .I2(zero_count_reg[31]),
        .I3(zero_count_reg[30]),
        .O(\zero_count[0]_i_14__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_15__0 
       (.I0(zero_count_reg[5]),
        .I1(zero_count_reg[4]),
        .I2(zero_count_reg[7]),
        .I3(zero_count_reg[6]),
        .O(\zero_count[0]_i_15__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAFF28FF)) 
    \zero_count[0]_i_1__0 
       (.I0(time_out_zero_reg_n_0),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .I3(\zero_count_reg[31]_0 ),
        .I4(\zero_count_reg[31]_1 ),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0]_0 ),
        .O(\zero_count[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000222A2A2A)) 
    \zero_count[0]_i_2__0 
       (.I0(\zero_count[0]_i_6__0_n_0 ),
        .I1(zero_count_reg[3]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[1]),
        .I4(zero_count_reg[0]),
        .I5(\zero_count[0]_i_7__0_n_0 ),
        .O(zero_count__0));
  LUT3 #(
    .INIT(8'hF8)) 
    \zero_count[0]_i_6__0 
       (.I0(en_hs_datapath_posedge_r),
        .I1(dl_txrequesths_posedge_r),
        .I2(out),
        .O(\zero_count[0]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \zero_count[0]_i_7__0 
       (.I0(\zero_count[0]_i_9__0_n_0 ),
        .I1(\zero_count[0]_i_10__0_n_0 ),
        .I2(\zero_count[0]_i_11__0_n_0 ),
        .O(\zero_count[0]_i_7__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \zero_count[0]_i_8__0 
       (.I0(zero_count_reg[0]),
        .O(\zero_count[0]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_9__0 
       (.I0(zero_count_reg[18]),
        .I1(zero_count_reg[19]),
        .I2(zero_count_reg[16]),
        .I3(zero_count_reg[17]),
        .I4(\zero_count[0]_i_12__0_n_0 ),
        .O(\zero_count[0]_i_9__0_n_0 ));
  FDRE \zero_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_15 ),
        .Q(zero_count_reg[0]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  CARRY8 \zero_count_reg[0]_i_3__0 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[0]_i_3__0_n_0 ,\zero_count_reg[0]_i_3__0_n_1 ,\zero_count_reg[0]_i_3__0_n_2 ,\zero_count_reg[0]_i_3__0_n_3 ,\zero_count_reg[0]_i_3__0_n_4 ,\zero_count_reg[0]_i_3__0_n_5 ,\zero_count_reg[0]_i_3__0_n_6 ,\zero_count_reg[0]_i_3__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\zero_count_reg[0]_i_3__0_n_8 ,\zero_count_reg[0]_i_3__0_n_9 ,\zero_count_reg[0]_i_3__0_n_10 ,\zero_count_reg[0]_i_3__0_n_11 ,\zero_count_reg[0]_i_3__0_n_12 ,\zero_count_reg[0]_i_3__0_n_13 ,\zero_count_reg[0]_i_3__0_n_14 ,\zero_count_reg[0]_i_3__0_n_15 }),
        .S({zero_count_reg[7:1],\zero_count[0]_i_8__0_n_0 }));
  FDRE \zero_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_13 ),
        .Q(zero_count_reg[10]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_12 ),
        .Q(zero_count_reg[11]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_11 ),
        .Q(zero_count_reg[12]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_10 ),
        .Q(zero_count_reg[13]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_9 ),
        .Q(zero_count_reg[14]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_8 ),
        .Q(zero_count_reg[15]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_15 ),
        .Q(zero_count_reg[16]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  CARRY8 \zero_count_reg[16]_i_1__0 
       (.CI(\zero_count_reg[8]_i_1__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[16]_i_1__0_n_0 ,\zero_count_reg[16]_i_1__0_n_1 ,\zero_count_reg[16]_i_1__0_n_2 ,\zero_count_reg[16]_i_1__0_n_3 ,\zero_count_reg[16]_i_1__0_n_4 ,\zero_count_reg[16]_i_1__0_n_5 ,\zero_count_reg[16]_i_1__0_n_6 ,\zero_count_reg[16]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[16]_i_1__0_n_8 ,\zero_count_reg[16]_i_1__0_n_9 ,\zero_count_reg[16]_i_1__0_n_10 ,\zero_count_reg[16]_i_1__0_n_11 ,\zero_count_reg[16]_i_1__0_n_12 ,\zero_count_reg[16]_i_1__0_n_13 ,\zero_count_reg[16]_i_1__0_n_14 ,\zero_count_reg[16]_i_1__0_n_15 }),
        .S(zero_count_reg[23:16]));
  FDRE \zero_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_14 ),
        .Q(zero_count_reg[17]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_13 ),
        .Q(zero_count_reg[18]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_12 ),
        .Q(zero_count_reg[19]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_14 ),
        .Q(zero_count_reg[1]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_11 ),
        .Q(zero_count_reg[20]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_10 ),
        .Q(zero_count_reg[21]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_9 ),
        .Q(zero_count_reg[22]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1__0_n_8 ),
        .Q(zero_count_reg[23]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_15 ),
        .Q(zero_count_reg[24]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  CARRY8 \zero_count_reg[24]_i_1__0 
       (.CI(\zero_count_reg[16]_i_1__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_zero_count_reg[24]_i_1__0_CO_UNCONNECTED [7],\zero_count_reg[24]_i_1__0_n_1 ,\zero_count_reg[24]_i_1__0_n_2 ,\zero_count_reg[24]_i_1__0_n_3 ,\zero_count_reg[24]_i_1__0_n_4 ,\zero_count_reg[24]_i_1__0_n_5 ,\zero_count_reg[24]_i_1__0_n_6 ,\zero_count_reg[24]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[24]_i_1__0_n_8 ,\zero_count_reg[24]_i_1__0_n_9 ,\zero_count_reg[24]_i_1__0_n_10 ,\zero_count_reg[24]_i_1__0_n_11 ,\zero_count_reg[24]_i_1__0_n_12 ,\zero_count_reg[24]_i_1__0_n_13 ,\zero_count_reg[24]_i_1__0_n_14 ,\zero_count_reg[24]_i_1__0_n_15 }),
        .S(zero_count_reg[31:24]));
  FDRE \zero_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_14 ),
        .Q(zero_count_reg[25]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_13 ),
        .Q(zero_count_reg[26]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_12 ),
        .Q(zero_count_reg[27]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_11 ),
        .Q(zero_count_reg[28]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_10 ),
        .Q(zero_count_reg[29]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_13 ),
        .Q(zero_count_reg[2]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_9 ),
        .Q(zero_count_reg[30]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1__0_n_8 ),
        .Q(zero_count_reg[31]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_12 ),
        .Q(zero_count_reg[3]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_11 ),
        .Q(zero_count_reg[4]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_10 ),
        .Q(zero_count_reg[5]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_9 ),
        .Q(zero_count_reg[6]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3__0_n_8 ),
        .Q(zero_count_reg[7]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  FDRE \zero_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_15 ),
        .Q(zero_count_reg[8]),
        .R(\zero_count[0]_i_1__0_n_0 ));
  CARRY8 \zero_count_reg[8]_i_1__0 
       (.CI(\zero_count_reg[0]_i_3__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[8]_i_1__0_n_0 ,\zero_count_reg[8]_i_1__0_n_1 ,\zero_count_reg[8]_i_1__0_n_2 ,\zero_count_reg[8]_i_1__0_n_3 ,\zero_count_reg[8]_i_1__0_n_4 ,\zero_count_reg[8]_i_1__0_n_5 ,\zero_count_reg[8]_i_1__0_n_6 ,\zero_count_reg[8]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[8]_i_1__0_n_8 ,\zero_count_reg[8]_i_1__0_n_9 ,\zero_count_reg[8]_i_1__0_n_10 ,\zero_count_reg[8]_i_1__0_n_11 ,\zero_count_reg[8]_i_1__0_n_12 ,\zero_count_reg[8]_i_1__0_n_13 ,\zero_count_reg[8]_i_1__0_n_14 ,\zero_count_reg[8]_i_1__0_n_15 }),
        .S(zero_count_reg[15:8]));
  FDRE \zero_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1__0_n_14 ),
        .Q(zero_count_reg[9]),
        .R(\zero_count[0]_i_1__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_hs_datapath" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_hs_datapath_90
   (en_hs_datapath_r,
    tx_dl0_hs_dp,
    hs_xfer_done_i,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ,
    time_out_zero_reg_0,
    tx_dl0_en_lp_tst,
    out,
    en_hs_datapath_r_reg_0,
    tx_div4_clk,
    dl0_txrequesths,
    hs_xfer_done_reg_0,
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_1 ,
    \zero_count_reg[31]_0 ,
    \zero_count_reg[31]_1 ,
    dl0_txdatahs,
    esc_ctrl_i);
  output en_hs_datapath_r;
  output [7:0]tx_dl0_hs_dp;
  output hs_xfer_done_i;
  output \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  output time_out_zero_reg_0;
  output tx_dl0_en_lp_tst;
  input out;
  input en_hs_datapath_r_reg_0;
  input tx_div4_clk;
  input dl0_txrequesths;
  input hs_xfer_done_reg_0;
  input \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_1 ;
  input \zero_count_reg[31]_0 ;
  input \zero_count_reg[31]_1 ;
  input [7:0]dl0_txdatahs;
  input esc_ctrl_i;

  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4_n_0 ;
  wire \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ;
  wire \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_1 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ;
  wire \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ;
  (* DONT_TOUCH *) wire [7:0]data_hs;
  wire [7:0]dl0_txdatahs;
  wire dl0_txrequesths;
  wire [1:0]dl_tx_cal_st;
  wire dl_txrequesths_posedge_r;
  wire dl_txrequesths_posedge_r_i_1_n_0;
  wire dl_txrequesths_r;
  wire en_hs_datapath_posedge_r;
  wire en_hs_datapath_posedge_r_i_1_n_0;
  wire en_hs_datapath_r;
  wire en_hs_datapath_r_reg_0;
  wire esc_ctrl_i;
  (* DONT_TOUCH *) wire [7:0]gen_eot_r;
  wire \gen_skewcal_cnt.time_out_trail_i_1_n_0 ;
  wire \gen_skewcal_cnt.time_out_trail_reg_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_10_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_11_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_12_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_13_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_1_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_4_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_5_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_6_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_7_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_8_n_0 ;
  wire \gen_skewcal_cnt.trail_count[0]_i_9_n_0 ;
  wire [31:0]\gen_skewcal_cnt.trail_count_reg ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[0]_i_3_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[16]_i_1_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[24]_i_1_n_9 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_0 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_1 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_10 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_11 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_12 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_13 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_14 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_15 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_2 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_3 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_4 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_5 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_6 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_7 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_8 ;
  wire \gen_skewcal_cnt.trail_count_reg[8]_i_1_n_9 ;
  (* DONT_TOUCH *) wire [15:0]hs_dp_quadtrature_r;
  wire hs_xfer_done_i;
  wire hs_xfer_done_i_1_n_0;
  wire hs_xfer_done_reg_0;
  wire out;
  wire time_out_zero_i_1__0_n_0;
  wire time_out_zero_i_2_n_0;
  wire time_out_zero_i_3_n_0;
  wire time_out_zero_reg_0;
  wire trail_count__0;
  wire tx_div4_clk;
  wire tx_dl0_en_lp_tst;
  (* DONT_TOUCH *) wire [7:0]tx_dl0_hs_dp;
  wire \zero_count[0]_i_10_n_0 ;
  wire \zero_count[0]_i_11_n_0 ;
  wire \zero_count[0]_i_12_n_0 ;
  wire \zero_count[0]_i_13_n_0 ;
  wire \zero_count[0]_i_14_n_0 ;
  wire \zero_count[0]_i_15_n_0 ;
  wire \zero_count[0]_i_1_n_0 ;
  wire \zero_count[0]_i_6_n_0 ;
  wire \zero_count[0]_i_7_n_0 ;
  wire \zero_count[0]_i_8_n_0 ;
  wire \zero_count[0]_i_9_n_0 ;
  wire zero_count__0;
  wire [31:0]zero_count_reg;
  wire \zero_count_reg[0]_i_3_n_0 ;
  wire \zero_count_reg[0]_i_3_n_1 ;
  wire \zero_count_reg[0]_i_3_n_10 ;
  wire \zero_count_reg[0]_i_3_n_11 ;
  wire \zero_count_reg[0]_i_3_n_12 ;
  wire \zero_count_reg[0]_i_3_n_13 ;
  wire \zero_count_reg[0]_i_3_n_14 ;
  wire \zero_count_reg[0]_i_3_n_15 ;
  wire \zero_count_reg[0]_i_3_n_2 ;
  wire \zero_count_reg[0]_i_3_n_3 ;
  wire \zero_count_reg[0]_i_3_n_4 ;
  wire \zero_count_reg[0]_i_3_n_5 ;
  wire \zero_count_reg[0]_i_3_n_6 ;
  wire \zero_count_reg[0]_i_3_n_7 ;
  wire \zero_count_reg[0]_i_3_n_8 ;
  wire \zero_count_reg[0]_i_3_n_9 ;
  wire \zero_count_reg[16]_i_1_n_0 ;
  wire \zero_count_reg[16]_i_1_n_1 ;
  wire \zero_count_reg[16]_i_1_n_10 ;
  wire \zero_count_reg[16]_i_1_n_11 ;
  wire \zero_count_reg[16]_i_1_n_12 ;
  wire \zero_count_reg[16]_i_1_n_13 ;
  wire \zero_count_reg[16]_i_1_n_14 ;
  wire \zero_count_reg[16]_i_1_n_15 ;
  wire \zero_count_reg[16]_i_1_n_2 ;
  wire \zero_count_reg[16]_i_1_n_3 ;
  wire \zero_count_reg[16]_i_1_n_4 ;
  wire \zero_count_reg[16]_i_1_n_5 ;
  wire \zero_count_reg[16]_i_1_n_6 ;
  wire \zero_count_reg[16]_i_1_n_7 ;
  wire \zero_count_reg[16]_i_1_n_8 ;
  wire \zero_count_reg[16]_i_1_n_9 ;
  wire \zero_count_reg[24]_i_1_n_1 ;
  wire \zero_count_reg[24]_i_1_n_10 ;
  wire \zero_count_reg[24]_i_1_n_11 ;
  wire \zero_count_reg[24]_i_1_n_12 ;
  wire \zero_count_reg[24]_i_1_n_13 ;
  wire \zero_count_reg[24]_i_1_n_14 ;
  wire \zero_count_reg[24]_i_1_n_15 ;
  wire \zero_count_reg[24]_i_1_n_2 ;
  wire \zero_count_reg[24]_i_1_n_3 ;
  wire \zero_count_reg[24]_i_1_n_4 ;
  wire \zero_count_reg[24]_i_1_n_5 ;
  wire \zero_count_reg[24]_i_1_n_6 ;
  wire \zero_count_reg[24]_i_1_n_7 ;
  wire \zero_count_reg[24]_i_1_n_8 ;
  wire \zero_count_reg[24]_i_1_n_9 ;
  wire \zero_count_reg[31]_0 ;
  wire \zero_count_reg[31]_1 ;
  wire \zero_count_reg[8]_i_1_n_0 ;
  wire \zero_count_reg[8]_i_1_n_1 ;
  wire \zero_count_reg[8]_i_1_n_10 ;
  wire \zero_count_reg[8]_i_1_n_11 ;
  wire \zero_count_reg[8]_i_1_n_12 ;
  wire \zero_count_reg[8]_i_1_n_13 ;
  wire \zero_count_reg[8]_i_1_n_14 ;
  wire \zero_count_reg[8]_i_1_n_15 ;
  wire \zero_count_reg[8]_i_1_n_2 ;
  wire \zero_count_reg[8]_i_1_n_3 ;
  wire \zero_count_reg[8]_i_1_n_4 ;
  wire \zero_count_reg[8]_i_1_n_5 ;
  wire \zero_count_reg[8]_i_1_n_6 ;
  wire \zero_count_reg[8]_i_1_n_7 ;
  wire \zero_count_reg[8]_i_1_n_8 ;
  wire \zero_count_reg[8]_i_1_n_9 ;
  wire [7:7]\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:7]\NLW_zero_count_reg[24]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFF7070F070)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1 
       (.I0(en_hs_datapath_r_reg_0),
        .I1(dl0_txrequesths),
        .I2(dl_tx_cal_st[1]),
        .I3(dl_tx_cal_st[0]),
        .I4(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFAFCFAFC0A0CFAFC)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1 
       (.I0(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I1(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3_n_0 ),
        .I2(dl_tx_cal_st[1]),
        .I3(dl_tx_cal_st[0]),
        .I4(dl0_txrequesths),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80008080)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2 
       (.I0(en_hs_datapath_r_reg_0),
        .I1(dl_tx_cal_st[1]),
        .I2(dl0_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I4(dl_tx_cal_st[0]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5_n_0 ),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(en_hs_datapath_r_reg_0),
        .I2(dl_tx_cal_st[0]),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_0),
        .O(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_5_n_0 ));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[0] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[0]_i_1_n_0 ),
        .Q(dl_tx_cal_st[0]),
        .R(out));
  (* FSM_ENCODED_STATES = "DL_TX_CAL_SOT2:101,DL_TX_CAL_SOT1:110,DL_TX_CAL_ZERO:000,DL_TX_HS_ST_SOT:011,DL_TX_CAL_DATA:100,DL_TX_HS_ST_DATA:010,DL_TX_CAL_EOT:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st_reg[1] 
       (.C(tx_div4_clk),
        .CE(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_1_n_0 ),
        .D(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_2_n_0 ),
        .Q(dl_tx_cal_st[1]),
        .R(out));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[0]),
        .I3(tx_dl0_hs_dp[0]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[1]),
        .I3(tx_dl0_hs_dp[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[2]),
        .I3(tx_dl0_hs_dp[2]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[3]),
        .I3(tx_dl0_hs_dp[3]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[4]),
        .I3(tx_dl0_hs_dp[4]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[5]),
        .I3(tx_dl0_hs_dp[5]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[6]),
        .I3(tx_dl0_hs_dp[6]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h04040444)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2 
       (.I0(gen_eot_r[7]),
        .I1(dl_tx_cal_st[1]),
        .I2(dl0_txrequesths),
        .I3(dl_tx_cal_st[0]),
        .I4(en_hs_datapath_r_reg_0),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000015)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(time_out_zero_reg_0),
        .I3(dl_tx_cal_st[0]),
        .I4(dl_tx_cal_st[1]),
        .I5(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2_n_0 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .I2(dl0_txdatahs[7]),
        .I3(tx_dl0_hs_dp[7]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'hFFFF0008)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2 
       (.I0(time_out_zero_reg_0),
        .I1(en_hs_datapath_posedge_r),
        .I2(dl_tx_cal_st[0]),
        .I3(dl_tx_cal_st[1]),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_2_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3 
       (.I0(en_hs_datapath_r_reg_0),
        .I1(dl_tx_cal_st[1]),
        .I2(dl0_txrequesths),
        .I3(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFF01)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4 
       (.I0(dl_txrequesths_posedge_r),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .I3(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h707000FF40400000)) 
    \HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(en_hs_datapath_r_reg_0),
        .I2(dl0_txrequesths),
        .I3(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_5_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[0] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[0]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[0]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[1] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[1]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[1]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[2] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[2]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[2]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[3] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[3]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[3]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[4] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[4]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[4]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[5] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[5]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[5]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[6] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[6]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[6]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.dl_tx_hs_dp_reg[7] 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_1_n_0 ),
        .Q(tx_dl0_hs_dp[7]),
        .R(out));
  LUT6 #(
    .INIT(64'h0000544400000000)) 
    \HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_1 ),
        .I1(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_0),
        .I4(out),
        .I5(dl0_txrequesths),
        .O(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1_n_0 ));
  FDRE \HS_BYTE_XFER_BLK2.dl_txreadyhs_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\HS_BYTE_XFER_BLK2.dl_txreadyhs_i_1_n_0 ),
        .Q(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1 
       (.I0(dl0_txdatahs[0]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[0]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1 
       (.I0(dl0_txdatahs[1]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[1]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1 
       (.I0(dl0_txdatahs[2]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[2]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1 
       (.I0(dl0_txdatahs[3]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[3]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1 
       (.I0(dl0_txdatahs[4]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[4]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1 
       (.I0(dl0_txdatahs[5]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[5]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1 
       (.I0(dl0_txdatahs[6]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[6]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_tx_cal_st[0]),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2 
       (.I0(dl0_txdatahs[7]),
        .I1(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ),
        .I2(gen_eot_r[7]),
        .I3(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'hFFFF5444)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3 
       (.I0(dl_tx_cal_st[1]),
        .I1(dl_txrequesths_posedge_r),
        .I2(en_hs_datapath_posedge_r),
        .I3(time_out_zero_reg_0),
        .I4(\HS_BYTE_XFER_BLK2.dl_tx_hs_dp[7]_i_3_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h740000007400FFFF)) 
    \HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4 
       (.I0(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_0 ),
        .I1(en_hs_datapath_r_reg_0),
        .I2(dl_tx_cal_st[0]),
        .I3(dl0_txrequesths),
        .I4(dl_tx_cal_st[1]),
        .I5(\FSM_sequential_HS_BYTE_XFER_BLK2.dl_tx_cal_st[1]_i_3_n_0 ),
        .O(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_4_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[0] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[0]_i_1_n_0 ),
        .Q(gen_eot_r[0]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[1] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[1]_i_1_n_0 ),
        .Q(gen_eot_r[1]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[2] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[2]_i_1_n_0 ),
        .Q(gen_eot_r[2]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[3] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[3]_i_1_n_0 ),
        .Q(gen_eot_r[3]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[4] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[4]_i_1_n_0 ),
        .Q(gen_eot_r[4]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[5] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[5]_i_1_n_0 ),
        .Q(gen_eot_r[5]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[6] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[6]_i_1_n_0 ),
        .Q(gen_eot_r[6]),
        .R(out));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \HS_BYTE_XFER_BLK2.gen_eot_r_reg[7] 
       (.C(tx_div4_clk),
        .CE(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_1_n_0 ),
        .D(\HS_BYTE_XFER_BLK2.gen_eot_r[7]_i_2_n_0 ),
        .Q(gen_eot_r[7]),
        .R(out));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    dl_txrequesths_posedge_r_i_1
       (.I0(out),
        .I1(dl_txrequesths_r),
        .I2(dl0_txrequesths),
        .I3(dl_txrequesths_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(dl_txrequesths_posedge_r_i_1_n_0));
  FDRE dl_txrequesths_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_txrequesths_posedge_r_i_1_n_0),
        .Q(dl_txrequesths_posedge_r),
        .R(1'b0));
  FDRE dl_txrequesths_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl0_txrequesths),
        .Q(dl_txrequesths_r),
        .R(out));
  LUT6 #(
    .INIT(64'h0000551055105510)) 
    en_hs_datapath_posedge_r_i_1
       (.I0(out),
        .I1(en_hs_datapath_r),
        .I2(en_hs_datapath_r_reg_0),
        .I3(en_hs_datapath_posedge_r),
        .I4(dl_tx_cal_st[1]),
        .I5(dl_tx_cal_st[0]),
        .O(en_hs_datapath_posedge_r_i_1_n_0));
  FDRE en_hs_datapath_posedge_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_hs_datapath_posedge_r_i_1_n_0),
        .Q(en_hs_datapath_posedge_r),
        .R(1'b0));
  FDRE en_hs_datapath_r_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_hs_datapath_r_reg_0),
        .Q(en_hs_datapath_r),
        .R(out));
  LUT5 #(
    .INIT(32'h50515000)) 
    \gen_skewcal_cnt.time_out_trail_i_1 
       (.I0(out),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_4_n_0 ),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(dl_tx_cal_st[1]),
        .I4(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.time_out_trail_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.time_out_trail_reg 
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(\gen_skewcal_cnt.time_out_trail_i_1_n_0 ),
        .Q(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hAB)) 
    \gen_skewcal_cnt.trail_count[0]_i_1 
       (.I0(out),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_10 
       (.I0(\gen_skewcal_cnt.trail_count_reg [13]),
        .I1(\gen_skewcal_cnt.trail_count_reg [12]),
        .I2(\gen_skewcal_cnt.trail_count_reg [15]),
        .I3(\gen_skewcal_cnt.trail_count_reg [14]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_11 
       (.I0(\gen_skewcal_cnt.trail_count_reg [5]),
        .I1(\gen_skewcal_cnt.trail_count_reg [4]),
        .I2(\gen_skewcal_cnt.trail_count_reg [7]),
        .I3(\gen_skewcal_cnt.trail_count_reg [6]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_12 
       (.I0(\gen_skewcal_cnt.trail_count_reg [29]),
        .I1(\gen_skewcal_cnt.trail_count_reg [28]),
        .I2(\gen_skewcal_cnt.trail_count_reg [31]),
        .I3(\gen_skewcal_cnt.trail_count_reg [30]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_13 
       (.I0(\gen_skewcal_cnt.trail_count_reg [21]),
        .I1(\gen_skewcal_cnt.trail_count_reg [20]),
        .I2(\gen_skewcal_cnt.trail_count_reg [23]),
        .I3(\gen_skewcal_cnt.trail_count_reg [22]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \gen_skewcal_cnt.trail_count[0]_i_2 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_4_n_0 ),
        .I1(dl_tx_cal_st[0]),
        .I2(dl_tx_cal_st[1]),
        .O(trail_count__0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_4 
       (.I0(\gen_skewcal_cnt.trail_count[0]_i_6_n_0 ),
        .I1(\gen_skewcal_cnt.trail_count[0]_i_7_n_0 ),
        .I2(\gen_skewcal_cnt.trail_count[0]_i_8_n_0 ),
        .I3(\gen_skewcal_cnt.trail_count[0]_i_9_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_skewcal_cnt.trail_count[0]_i_5 
       (.I0(\gen_skewcal_cnt.trail_count_reg [0]),
        .O(\gen_skewcal_cnt.trail_count[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_6 
       (.I0(\gen_skewcal_cnt.trail_count_reg [10]),
        .I1(\gen_skewcal_cnt.trail_count_reg [11]),
        .I2(\gen_skewcal_cnt.trail_count_reg [8]),
        .I3(\gen_skewcal_cnt.trail_count_reg [9]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_10_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    \gen_skewcal_cnt.trail_count[0]_i_7 
       (.I0(\gen_skewcal_cnt.trail_count_reg [2]),
        .I1(\gen_skewcal_cnt.trail_count_reg [3]),
        .I2(\gen_skewcal_cnt.trail_count_reg [0]),
        .I3(\gen_skewcal_cnt.trail_count_reg [1]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_11_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_8 
       (.I0(\gen_skewcal_cnt.trail_count_reg [26]),
        .I1(\gen_skewcal_cnt.trail_count_reg [27]),
        .I2(\gen_skewcal_cnt.trail_count_reg [24]),
        .I3(\gen_skewcal_cnt.trail_count_reg [25]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_12_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_skewcal_cnt.trail_count[0]_i_9 
       (.I0(\gen_skewcal_cnt.trail_count_reg [18]),
        .I1(\gen_skewcal_cnt.trail_count_reg [19]),
        .I2(\gen_skewcal_cnt.trail_count_reg [16]),
        .I3(\gen_skewcal_cnt.trail_count_reg [17]),
        .I4(\gen_skewcal_cnt.trail_count[0]_i_13_n_0 ),
        .O(\gen_skewcal_cnt.trail_count[0]_i_9_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [0]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[0]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_0 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_1 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_2 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_3 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_4 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_5 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_6 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_8 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_9 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_10 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_11 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_12 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_13 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_14 ,\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_15 }),
        .S({\gen_skewcal_cnt.trail_count_reg [7:1],\gen_skewcal_cnt.trail_count[0]_i_5_n_0 }));
  FDRE \gen_skewcal_cnt.trail_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [10]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [11]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [12]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [13]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [14]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [15]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [16]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[16]_i_1 
       (.CI(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_0 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_1 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_2 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_3 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_4 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_5 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_6 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_8 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_9 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_10 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_11 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_12 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_13 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_14 ,\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [23:16]));
  FDRE \gen_skewcal_cnt.trail_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [17]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [18]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [19]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [1]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [20]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [21]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [22]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [23]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [24]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[24]_i_1 
       (.CI(\gen_skewcal_cnt.trail_count_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_skewcal_cnt.trail_count_reg[24]_i_1_CO_UNCONNECTED [7],\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_1 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_2 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_3 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_4 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_5 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_6 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_8 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_9 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_10 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_11 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_12 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_13 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_14 ,\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [31:24]));
  FDRE \gen_skewcal_cnt.trail_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [25]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [26]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [27]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [28]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [29]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_13 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [2]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [30]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[24]_i_1_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [31]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_12 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [3]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_11 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [4]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_10 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [5]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_9 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [6]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_8 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [7]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  FDRE \gen_skewcal_cnt.trail_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_15 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [8]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  CARRY8 \gen_skewcal_cnt.trail_count_reg[8]_i_1 
       (.CI(\gen_skewcal_cnt.trail_count_reg[0]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_0 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_1 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_2 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_3 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_4 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_5 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_6 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_8 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_9 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_10 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_11 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_12 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_13 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_14 ,\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_15 }),
        .S(\gen_skewcal_cnt.trail_count_reg [15:8]));
  FDRE \gen_skewcal_cnt.trail_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(trail_count__0),
        .D(\gen_skewcal_cnt.trail_count_reg[8]_i_1_n_14 ),
        .Q(\gen_skewcal_cnt.trail_count_reg [9]),
        .R(\gen_skewcal_cnt.trail_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'hC8FF)) 
    hs_xfer_done_i_1
       (.I0(hs_xfer_done_i),
        .I1(en_hs_datapath_r_reg_0),
        .I2(\gen_skewcal_cnt.time_out_trail_reg_n_0 ),
        .I3(hs_xfer_done_reg_0),
        .O(hs_xfer_done_i_1_n_0));
  FDRE hs_xfer_done_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i_1_n_0),
        .Q(hs_xfer_done_i),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(data_hs[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(data_hs[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(data_hs[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(data_hs[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(data_hs[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(data_hs[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(data_hs[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(data_hs[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(hs_dp_quadtrature_r[14]));
  LUT6 #(
    .INIT(64'h5555504000000000)) 
    time_out_zero_i_1__0
       (.I0(out),
        .I1(\zero_count[0]_i_7_n_0 ),
        .I2(\zero_count[0]_i_6_n_0 ),
        .I3(time_out_zero_i_2_n_0),
        .I4(time_out_zero_reg_0),
        .I5(time_out_zero_i_3_n_0),
        .O(time_out_zero_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hF800)) 
    time_out_zero_i_2
       (.I0(zero_count_reg[0]),
        .I1(zero_count_reg[1]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[3]),
        .O(time_out_zero_i_2_n_0));
  LUT6 #(
    .INIT(64'h80208020FFFFAAAA)) 
    time_out_zero_i_3
       (.I0(en_hs_datapath_r_reg_0),
        .I1(dl_tx_cal_st[1]),
        .I2(dl0_txrequesths),
        .I3(dl_tx_cal_st[0]),
        .I4(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_1 ),
        .I5(time_out_zero_reg_0),
        .O(time_out_zero_i_3_n_0));
  FDRE time_out_zero_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(time_out_zero_i_1__0_n_0),
        .Q(time_out_zero_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h04)) 
    tx_dl0_en_lp_tst_INST_0
       (.I0(hs_xfer_done_i),
        .I1(en_hs_datapath_r_reg_0),
        .I2(esc_ctrl_i),
        .O(tx_dl0_en_lp_tst));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAFF28FF)) 
    \zero_count[0]_i_1 
       (.I0(time_out_zero_reg_0),
        .I1(dl_tx_cal_st[1]),
        .I2(dl_tx_cal_st[0]),
        .I3(\zero_count_reg[31]_0 ),
        .I4(\zero_count_reg[31]_1 ),
        .I5(out),
        .O(\zero_count[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_10 
       (.I0(zero_count_reg[10]),
        .I1(zero_count_reg[11]),
        .I2(zero_count_reg[8]),
        .I3(zero_count_reg[9]),
        .I4(\zero_count[0]_i_13_n_0 ),
        .O(\zero_count[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \zero_count[0]_i_11 
       (.I0(\zero_count[0]_i_14_n_0 ),
        .I1(zero_count_reg[25]),
        .I2(zero_count_reg[24]),
        .I3(zero_count_reg[27]),
        .I4(zero_count_reg[26]),
        .I5(\zero_count[0]_i_15_n_0 ),
        .O(\zero_count[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_12 
       (.I0(zero_count_reg[21]),
        .I1(zero_count_reg[20]),
        .I2(zero_count_reg[23]),
        .I3(zero_count_reg[22]),
        .O(\zero_count[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_13 
       (.I0(zero_count_reg[13]),
        .I1(zero_count_reg[12]),
        .I2(zero_count_reg[15]),
        .I3(zero_count_reg[14]),
        .O(\zero_count[0]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_14 
       (.I0(zero_count_reg[29]),
        .I1(zero_count_reg[28]),
        .I2(zero_count_reg[31]),
        .I3(zero_count_reg[30]),
        .O(\zero_count[0]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \zero_count[0]_i_15 
       (.I0(zero_count_reg[5]),
        .I1(zero_count_reg[4]),
        .I2(zero_count_reg[7]),
        .I3(zero_count_reg[6]),
        .O(\zero_count[0]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h00000000222A2A2A)) 
    \zero_count[0]_i_2 
       (.I0(\zero_count[0]_i_6_n_0 ),
        .I1(zero_count_reg[3]),
        .I2(zero_count_reg[2]),
        .I3(zero_count_reg[1]),
        .I4(zero_count_reg[0]),
        .I5(\zero_count[0]_i_7_n_0 ),
        .O(zero_count__0));
  LUT3 #(
    .INIT(8'hF8)) 
    \zero_count[0]_i_6 
       (.I0(dl_txrequesths_posedge_r),
        .I1(en_hs_datapath_posedge_r),
        .I2(\HS_BYTE_XFER_BLK2.dl_txreadyhs_reg_1 ),
        .O(\zero_count[0]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \zero_count[0]_i_7 
       (.I0(\zero_count[0]_i_9_n_0 ),
        .I1(\zero_count[0]_i_10_n_0 ),
        .I2(\zero_count[0]_i_11_n_0 ),
        .O(\zero_count[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \zero_count[0]_i_8 
       (.I0(zero_count_reg[0]),
        .O(\zero_count[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \zero_count[0]_i_9 
       (.I0(zero_count_reg[18]),
        .I1(zero_count_reg[19]),
        .I2(zero_count_reg[16]),
        .I3(zero_count_reg[17]),
        .I4(\zero_count[0]_i_12_n_0 ),
        .O(\zero_count[0]_i_9_n_0 ));
  FDRE \zero_count_reg[0] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_15 ),
        .Q(zero_count_reg[0]),
        .R(\zero_count[0]_i_1_n_0 ));
  CARRY8 \zero_count_reg[0]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[0]_i_3_n_0 ,\zero_count_reg[0]_i_3_n_1 ,\zero_count_reg[0]_i_3_n_2 ,\zero_count_reg[0]_i_3_n_3 ,\zero_count_reg[0]_i_3_n_4 ,\zero_count_reg[0]_i_3_n_5 ,\zero_count_reg[0]_i_3_n_6 ,\zero_count_reg[0]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\zero_count_reg[0]_i_3_n_8 ,\zero_count_reg[0]_i_3_n_9 ,\zero_count_reg[0]_i_3_n_10 ,\zero_count_reg[0]_i_3_n_11 ,\zero_count_reg[0]_i_3_n_12 ,\zero_count_reg[0]_i_3_n_13 ,\zero_count_reg[0]_i_3_n_14 ,\zero_count_reg[0]_i_3_n_15 }),
        .S({zero_count_reg[7:1],\zero_count[0]_i_8_n_0 }));
  FDRE \zero_count_reg[10] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_13 ),
        .Q(zero_count_reg[10]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[11] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_12 ),
        .Q(zero_count_reg[11]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[12] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_11 ),
        .Q(zero_count_reg[12]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[13] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_10 ),
        .Q(zero_count_reg[13]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[14] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_9 ),
        .Q(zero_count_reg[14]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[15] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_8 ),
        .Q(zero_count_reg[15]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[16] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_15 ),
        .Q(zero_count_reg[16]),
        .R(\zero_count[0]_i_1_n_0 ));
  CARRY8 \zero_count_reg[16]_i_1 
       (.CI(\zero_count_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[16]_i_1_n_0 ,\zero_count_reg[16]_i_1_n_1 ,\zero_count_reg[16]_i_1_n_2 ,\zero_count_reg[16]_i_1_n_3 ,\zero_count_reg[16]_i_1_n_4 ,\zero_count_reg[16]_i_1_n_5 ,\zero_count_reg[16]_i_1_n_6 ,\zero_count_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[16]_i_1_n_8 ,\zero_count_reg[16]_i_1_n_9 ,\zero_count_reg[16]_i_1_n_10 ,\zero_count_reg[16]_i_1_n_11 ,\zero_count_reg[16]_i_1_n_12 ,\zero_count_reg[16]_i_1_n_13 ,\zero_count_reg[16]_i_1_n_14 ,\zero_count_reg[16]_i_1_n_15 }),
        .S(zero_count_reg[23:16]));
  FDRE \zero_count_reg[17] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_14 ),
        .Q(zero_count_reg[17]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[18] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_13 ),
        .Q(zero_count_reg[18]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[19] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_12 ),
        .Q(zero_count_reg[19]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[1] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_14 ),
        .Q(zero_count_reg[1]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[20] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_11 ),
        .Q(zero_count_reg[20]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[21] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_10 ),
        .Q(zero_count_reg[21]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[22] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_9 ),
        .Q(zero_count_reg[22]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[23] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[16]_i_1_n_8 ),
        .Q(zero_count_reg[23]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[24] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_15 ),
        .Q(zero_count_reg[24]),
        .R(\zero_count[0]_i_1_n_0 ));
  CARRY8 \zero_count_reg[24]_i_1 
       (.CI(\zero_count_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_zero_count_reg[24]_i_1_CO_UNCONNECTED [7],\zero_count_reg[24]_i_1_n_1 ,\zero_count_reg[24]_i_1_n_2 ,\zero_count_reg[24]_i_1_n_3 ,\zero_count_reg[24]_i_1_n_4 ,\zero_count_reg[24]_i_1_n_5 ,\zero_count_reg[24]_i_1_n_6 ,\zero_count_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[24]_i_1_n_8 ,\zero_count_reg[24]_i_1_n_9 ,\zero_count_reg[24]_i_1_n_10 ,\zero_count_reg[24]_i_1_n_11 ,\zero_count_reg[24]_i_1_n_12 ,\zero_count_reg[24]_i_1_n_13 ,\zero_count_reg[24]_i_1_n_14 ,\zero_count_reg[24]_i_1_n_15 }),
        .S(zero_count_reg[31:24]));
  FDRE \zero_count_reg[25] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_14 ),
        .Q(zero_count_reg[25]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[26] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_13 ),
        .Q(zero_count_reg[26]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[27] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_12 ),
        .Q(zero_count_reg[27]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[28] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_11 ),
        .Q(zero_count_reg[28]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[29] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_10 ),
        .Q(zero_count_reg[29]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[2] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_13 ),
        .Q(zero_count_reg[2]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[30] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_9 ),
        .Q(zero_count_reg[30]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[31] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[24]_i_1_n_8 ),
        .Q(zero_count_reg[31]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[3] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_12 ),
        .Q(zero_count_reg[3]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[4] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_11 ),
        .Q(zero_count_reg[4]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[5] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_10 ),
        .Q(zero_count_reg[5]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[6] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_9 ),
        .Q(zero_count_reg[6]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[7] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[0]_i_3_n_8 ),
        .Q(zero_count_reg[7]),
        .R(\zero_count[0]_i_1_n_0 ));
  FDRE \zero_count_reg[8] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_15 ),
        .Q(zero_count_reg[8]),
        .R(\zero_count[0]_i_1_n_0 ));
  CARRY8 \zero_count_reg[8]_i_1 
       (.CI(\zero_count_reg[0]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\zero_count_reg[8]_i_1_n_0 ,\zero_count_reg[8]_i_1_n_1 ,\zero_count_reg[8]_i_1_n_2 ,\zero_count_reg[8]_i_1_n_3 ,\zero_count_reg[8]_i_1_n_4 ,\zero_count_reg[8]_i_1_n_5 ,\zero_count_reg[8]_i_1_n_6 ,\zero_count_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\zero_count_reg[8]_i_1_n_8 ,\zero_count_reg[8]_i_1_n_9 ,\zero_count_reg[8]_i_1_n_10 ,\zero_count_reg[8]_i_1_n_11 ,\zero_count_reg[8]_i_1_n_12 ,\zero_count_reg[8]_i_1_n_13 ,\zero_count_reg[8]_i_1_n_14 ,\zero_count_reg[8]_i_1_n_15 }),
        .S(zero_count_reg[15:8]));
  FDRE \zero_count_reg[9] 
       (.C(tx_div4_clk),
        .CE(zero_count__0),
        .D(\zero_count_reg[8]_i_1_n_14 ),
        .Q(zero_count_reg[9]),
        .R(\zero_count[0]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_support_rst_logic" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_support_rst_logic
   (core_rst_0,
    system_rst,
    system_rst_escclk,
    system_rst_byteclk,
    system_rst_div4clk,
    phy_rst,
    core_rst,
    out,
    core_clk,
    system_rst_in,
    phy_ready);
  output core_rst_0;
  output system_rst;
  output system_rst_escclk;
  output system_rst_byteclk;
  output system_rst_div4clk;
  output phy_rst;
  input core_rst;
  input out;
  input core_clk;
  input system_rst_in;
  input phy_ready;

  wire \FSM_sequential_rst_blk_state[0]_i_1_n_0 ;
  wire core_clk;
  wire core_rst;
  wire core_rst_0;
  wire core_rst_sync;
  wire out;
  wire phy_rdy_sync_i_n_0;
  wire phy_rdy_sync_i_n_1;
  wire phy_rdy_sync_i_n_2;
  wire phy_rdy_sync_i_n_3;
  wire phy_rdy_sync_i_n_5;
  wire phy_rdy_sync_i_n_6;
  wire phy_ready;
  wire phy_rst;
  wire rst_blk_state;
  wire [1:0]rst_blk_state__0;
  (* DONT_TOUCH *) wire system_rst;
  (* DONT_TOUCH *) wire system_rst_byteclk;
  (* DONT_TOUCH *) wire system_rst_div4clk;
  (* DONT_TOUCH *) wire system_rst_escclk;
  wire system_rst_in;

  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_rst_blk_state[0]_i_1 
       (.I0(rst_blk_state__0[1]),
        .I1(rst_blk_state__0[0]),
        .O(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[0] 
       (.C(core_clk),
        .CE(rst_blk_state),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ),
        .Q(rst_blk_state__0[0]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[1] 
       (.C(core_clk),
        .CE(rst_blk_state),
        .CLR(core_rst_sync),
        .D(phy_rdy_sync_i_n_5),
        .Q(rst_blk_state__0[1]));
  LUT3 #(
    .INIT(8'hEF)) 
    cl_ulpsactivenot_i_1
       (.I0(core_rst),
        .I1(system_rst),
        .I2(out),
        .O(core_rst_0));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1 core_rst_sync_i
       (.core_clk(core_clk),
        .out(core_rst_sync),
        .system_rst_in(system_rst_in));
  mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_14 phy_rdy_sync_i
       (.D(phy_rdy_sync_i_n_5),
        .E(rst_blk_state),
        .Q(rst_blk_state__0),
        .core_clk(core_clk),
        .phy_ready(phy_ready),
        .phy_rst(phy_rst),
        .s_level_out_d3_reg_0(phy_rdy_sync_i_n_0),
        .s_level_out_d3_reg_1(phy_rdy_sync_i_n_1),
        .s_level_out_d3_reg_2(phy_rdy_sync_i_n_2),
        .s_level_out_d3_reg_3(phy_rdy_sync_i_n_3),
        .s_level_out_d3_reg_4(phy_rdy_sync_i_n_6),
        .system_rst(system_rst),
        .system_rst_byteclk(system_rst_byteclk),
        .system_rst_div4clk(system_rst_div4clk),
        .system_rst_escclk(system_rst_escclk));
  FDPE phy_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_6),
        .PRE(core_rst_sync),
        .Q(phy_rst));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_byteclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_1),
        .PRE(core_rst_sync),
        .Q(system_rst_byteclk));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_div4clk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_2),
        .PRE(core_rst_sync),
        .Q(system_rst_div4clk));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_escclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_0),
        .PRE(core_rst_sync),
        .Q(system_rst_escclk));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_rdy_sync_i_n_3),
        .PRE(core_rst_sync),
        .Q(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell
   (system_rst_byteclk,
    oserdes_clkdiv_in);
  input system_rst_byteclk;
  input oserdes_clkdiv_in;

  wire oserdes_clkdiv_in;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = system_rst_byteclk;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(oserdes_clkdiv_in),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_10
   (out,
    s_level_out_d3_reg_0,
    system_rst_byteclk,
    tx_div4_clk,
    \post_count_reg[31] );
  output out;
  output s_level_out_d3_reg_0;
  input system_rst_byteclk;
  input tx_div4_clk;
  input \post_count_reg[31] ;

  wire p_level_in_int;
  wire \post_count_reg[31] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  assign p_level_in_int = system_rst_byteclk;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT2 #(
    .INIT(4'hB)) 
    \post_count[0]_i_1 
       (.I0(s_level_out_d3),
        .I1(\post_count_reg[31] ),
        .O(s_level_out_d3_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_11
   (out,
    system_rst_escclk,
    dl0_txclkesc);
  output out;
  input system_rst_escclk;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = system_rst_escclk;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_12
   (out,
    system_rst_div4clk,
    tx_div4_clk);
  output out;
  input system_rst_div4clk;
  input tx_div4_clk;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  assign p_level_in_int = system_rst_div4clk;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell_13
   (out,
    cl_init_done_coreclk_i,
    dl0_txclkesc);
  output out;
  input cl_init_done_coreclk_i;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = cl_init_done_coreclk_i;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0
   (out,
    init_done_reg,
    cl_tx_state1,
    core_rst,
    cl_enable,
    core_clk,
    \cl_tx_state_reg[1] ,
    system_rst);
  output out;
  output init_done_reg;
  output cl_tx_state1;
  input core_rst;
  input cl_enable;
  input core_clk;
  input \cl_tx_state_reg[1] ;
  input system_rst;

  wire cl_enable;
  wire cl_tx_state1;
  wire \cl_tx_state_reg[1] ;
  wire core_clk;
  wire core_rst;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT4 #(
    .INIT(16'hAAFB)) 
    cl_stopstate_i_1
       (.I0(core_rst),
        .I1(s_level_out_d2),
        .I2(system_rst),
        .I3(\cl_tx_state_reg[1] ),
        .O(cl_tx_state1));
  LUT3 #(
    .INIT(8'h8A)) 
    cl_stopstate_i_7
       (.I0(\cl_tx_state_reg[1] ),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .O(init_done_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_22
   (out,
    init_done_byteclk_pos_r0,
    s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk,
    init_done_byteclk_r);
  output out;
  output init_done_byteclk_pos_r0;
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;
  input init_done_byteclk_r;

  wire init_done_byteclk_pos_r0;
  wire init_done_byteclk_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT2 #(
    .INIT(4'h2)) 
    init_done_byteclk_pos_r_i_1
       (.I0(s_level_out_d2),
        .I1(init_done_byteclk_r),
        .O(init_done_byteclk_pos_r0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_32
   (s_level_out_d2_reg_0,
    out,
    core_clk,
    dl_stopstate_i,
    cl_init_done_coreclk_i);
  output s_level_out_d2_reg_0;
  input out;
  input core_clk;
  input dl_stopstate_i;
  input cl_init_done_coreclk_i;

  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire dl_stopstate_i;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT3 #(
    .INIT(8'hE0)) 
    dl_stopstate_coreclk_i_1__2
       (.I0(s_level_out_d2),
        .I1(dl_stopstate_i),
        .I2(cl_init_done_coreclk_i),
        .O(s_level_out_d2_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(out),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_37
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    core_rst,
    dl3_enable,
    core_clk,
    Q,
    system_rst,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    cl_init_done_coreclk_i);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  input core_rst;
  input dl3_enable;
  input core_clk;
  input [1:0]Q;
  input system_rst;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input cl_init_done_coreclk_i;

  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire [1:0]Q;
  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl3_enable;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'hFFEFAAAA)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_4 
       (.I0(Q[0]),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(cl_init_done_coreclk_i),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT5 #(
    .INIT(32'h0020AAAA)) 
    en_lp_01_cnt_i_4
       (.I0(Q[1]),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(cl_init_done_coreclk_i),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl3_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_48
   (out,
    s_level_out_d1_cdc_to_reg_0,
    core_clk);
  output out;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_56
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    core_rst,
    dl2_enable,
    core_clk,
    Q,
    system_rst,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    cl_init_done_coreclk_i);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input core_rst;
  input dl2_enable;
  input core_clk;
  input [0:0]Q;
  input system_rst;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input cl_init_done_coreclk_i;

  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire [0:0]Q;
  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl2_enable;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'hFFEFAAAA)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_3__1 
       (.I0(Q),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(cl_init_done_coreclk_i),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl2_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_67
   (out,
    s_level_out_d1_cdc_to_reg_0,
    core_clk);
  output out;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_75
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    core_rst,
    dl1_enable,
    core_clk,
    Q,
    system_rst,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    cl_init_done_coreclk_i);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input core_rst;
  input dl1_enable;
  input core_clk;
  input [0:0]Q;
  input system_rst;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input cl_init_done_coreclk_i;

  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire [0:0]Q;
  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl1_enable;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'hFFEFAAAA)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_3__0 
       (.I0(Q),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(cl_init_done_coreclk_i),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_86
   (out,
    s_level_out_d1_cdc_to_reg_0,
    core_clk);
  output out;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized0_94
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    core_rst,
    dl0_enable,
    core_clk,
    Q,
    system_rst,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    cl_init_done_coreclk_i);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input core_rst;
  input dl0_enable;
  input core_clk;
  input [0:0]Q;
  input system_rst;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input cl_init_done_coreclk_i;

  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire [0:0]Q;
  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'hFFEFAAAA)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_3 
       (.I0(Q),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(cl_init_done_coreclk_i),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1
   (out,
    system_rst_in,
    core_clk);
  output out;
  input system_rst_in;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst_in;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_100
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_14
   (s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    s_level_out_d3_reg_3,
    E,
    D,
    s_level_out_d3_reg_4,
    phy_ready,
    core_clk,
    Q,
    system_rst_escclk,
    system_rst_byteclk,
    system_rst_div4clk,
    system_rst,
    phy_rst);
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  output s_level_out_d3_reg_3;
  output [0:0]E;
  output [0:0]D;
  output s_level_out_d3_reg_4;
  input phy_ready;
  input core_clk;
  input [1:0]Q;
  input system_rst_escclk;
  input system_rst_byteclk;
  input system_rst_div4clk;
  input system_rst;
  input phy_rst;

  wire [0:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire core_clk;
  wire phy_ready;
  wire phy_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  wire s_level_out_d3_reg_3;
  wire s_level_out_d3_reg_4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;
  wire system_rst_byteclk;
  wire system_rst_div4clk;
  wire system_rst_escclk;

  LUT3 #(
    .INIT(8'hE7)) 
    \FSM_sequential_rst_blk_state[1]_i_1 
       (.I0(Q[0]),
        .I1(s_level_out_d3),
        .I2(Q[1]),
        .O(E));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_rst_blk_state[1]_i_2 
       (.I0(s_level_out_d3),
        .I1(Q[0]),
        .O(D));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT4 #(
    .INIT(16'h3909)) 
    phy_rst_i_1
       (.I0(s_level_out_d3),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(phy_rst),
        .O(s_level_out_d3_reg_4));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(phy_ready),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h3D0D)) 
    system_rst_byteclk_i_1
       (.I0(s_level_out_d3),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(system_rst_byteclk),
        .O(s_level_out_d3_reg_1));
  LUT4 #(
    .INIT(16'h3D0D)) 
    system_rst_div4clk_i_1
       (.I0(s_level_out_d3),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(system_rst_div4clk),
        .O(s_level_out_d3_reg_2));
  LUT4 #(
    .INIT(16'h3D0D)) 
    system_rst_escclk_i_1
       (.I0(s_level_out_d3),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(system_rst_escclk),
        .O(s_level_out_d3_reg_0));
  LUT4 #(
    .INIT(16'h3D0D)) 
    system_rst_i_1
       (.I0(s_level_out_d3),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(system_rst),
        .O(s_level_out_d3_reg_3));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_15
   (cl_txclkactivehs,
    s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk);
  output cl_txclkactivehs;
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign cl_txclkactivehs = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_16
   (out,
    \cl_tx_state_reg[3] ,
    \cl_tx_state_reg[3]_0 ,
    s_level_out_d3_reg_0,
    \cl_tx_state_reg[3]_1 ,
    cl_tx_state,
    \cl_tx_state_reg[3]_2 ,
    s_level_out_d3_reg_1,
    init_done_reg,
    s_level_out_d3_reg_2,
    \cl_tx_state_reg[0] ,
    tx_cl_en_lp_tst_coreclk_reg,
    \cl_tx_state_reg[1] ,
    lp_01_r_reg,
    \cl_tx_state_reg[3]_3 ,
    s_level_out_d2_reg_0,
    cl_stopstate_reg,
    core_rst,
    cl_txrequesths,
    core_clk,
    cl_txclkactivehs_reg,
    \cl_tx_state_reg[0]_0 ,
    hs_clk_state_r_reg,
    \cl_tx_state_reg[1]_0 ,
    \cl_tx_state_reg[1]_1 ,
    \cl_tx_state_reg[0]_1 ,
    \cl_tx_state_reg[0]_2 ,
    \cl_tx_state_reg[0]_3 ,
    tx_cl_lp_cn_reg,
    \cl_tx_state_reg[0]_4 ,
    \cl_tx_state_reg[0]_5 ,
    \cl_tx_state_reg[0]_6 ,
    start_clkpost_r_reg,
    hs_clk_state_r_reg_0,
    \cl_tx_state_reg[0]_7 ,
    time_out_zero,
    cl_txclkactivehs_reg_0,
    reset_timer_r_reg,
    reset_timer_r_reg_0,
    en_lp_01_cnt_reg,
    start_clkpost_r_reg_0,
    reset_timer_r_reg_1,
    cl_stopstate_reg_0,
    cl_stopstate_reg_1,
    cl_stopstate_reg_2,
    \cl_tx_state_reg[0]_8 ,
    en_lp_01_cnt_reg_0,
    \cl_tx_state_reg[1]_2 ,
    \cl_tx_state_reg[0]_9 ,
    \cl_tx_state_reg[0]_10 ,
    dl_hs_exit_done_i,
    hs_clk_state_r_reg_1,
    tx_cl_en_lp_tst_coreclk_reg_0,
    tx_cl_en_lp_tst_coreclk_reg_1,
    cl_txclkactivehs_reg_1,
    en_lp_01_cnt_reg_1,
    reset_timer_r_reg_2,
    reset_timer_r_reg_3,
    reset_timer_r_reg_4,
    \cl_tx_state_reg[1]_3 ,
    system_rst,
    cl_stopstate_reg_3,
    cl_stopstate_reg_4,
    cl_stopstate_reg_5,
    cl_stopstate);
  output out;
  output \cl_tx_state_reg[3] ;
  output \cl_tx_state_reg[3]_0 ;
  output s_level_out_d3_reg_0;
  output \cl_tx_state_reg[3]_1 ;
  output cl_tx_state;
  output \cl_tx_state_reg[3]_2 ;
  output s_level_out_d3_reg_1;
  output init_done_reg;
  output s_level_out_d3_reg_2;
  output \cl_tx_state_reg[0] ;
  output tx_cl_en_lp_tst_coreclk_reg;
  output \cl_tx_state_reg[1] ;
  output lp_01_r_reg;
  output \cl_tx_state_reg[3]_3 ;
  output s_level_out_d2_reg_0;
  output cl_stopstate_reg;
  input core_rst;
  input cl_txrequesths;
  input core_clk;
  input cl_txclkactivehs_reg;
  input \cl_tx_state_reg[0]_0 ;
  input hs_clk_state_r_reg;
  input \cl_tx_state_reg[1]_0 ;
  input \cl_tx_state_reg[1]_1 ;
  input \cl_tx_state_reg[0]_1 ;
  input \cl_tx_state_reg[0]_2 ;
  input \cl_tx_state_reg[0]_3 ;
  input tx_cl_lp_cn_reg;
  input \cl_tx_state_reg[0]_4 ;
  input \cl_tx_state_reg[0]_5 ;
  input \cl_tx_state_reg[0]_6 ;
  input start_clkpost_r_reg;
  input hs_clk_state_r_reg_0;
  input \cl_tx_state_reg[0]_7 ;
  input time_out_zero;
  input cl_txclkactivehs_reg_0;
  input reset_timer_r_reg;
  input reset_timer_r_reg_0;
  input en_lp_01_cnt_reg;
  input start_clkpost_r_reg_0;
  input reset_timer_r_reg_1;
  input cl_stopstate_reg_0;
  input cl_stopstate_reg_1;
  input cl_stopstate_reg_2;
  input \cl_tx_state_reg[0]_8 ;
  input en_lp_01_cnt_reg_0;
  input \cl_tx_state_reg[1]_2 ;
  input \cl_tx_state_reg[0]_9 ;
  input \cl_tx_state_reg[0]_10 ;
  input [3:0]dl_hs_exit_done_i;
  input hs_clk_state_r_reg_1;
  input tx_cl_en_lp_tst_coreclk_reg_0;
  input tx_cl_en_lp_tst_coreclk_reg_1;
  input cl_txclkactivehs_reg_1;
  input en_lp_01_cnt_reg_1;
  input reset_timer_r_reg_2;
  input reset_timer_r_reg_3;
  input reset_timer_r_reg_4;
  input \cl_tx_state_reg[1]_3 ;
  input system_rst;
  input cl_stopstate_reg_3;
  input cl_stopstate_reg_4;
  input cl_stopstate_reg_5;
  input cl_stopstate;

  wire cl_stopstate;
  wire cl_stopstate_i_5_n_0;
  wire cl_stopstate_reg;
  wire cl_stopstate_reg_0;
  wire cl_stopstate_reg_1;
  wire cl_stopstate_reg_2;
  wire cl_stopstate_reg_3;
  wire cl_stopstate_reg_4;
  wire cl_stopstate_reg_5;
  wire cl_tx_state;
  wire \cl_tx_state[0]_i_2_n_0 ;
  wire \cl_tx_state[0]_i_3_n_0 ;
  wire \cl_tx_state[0]_i_4_n_0 ;
  wire \cl_tx_state[1]_i_2_n_0 ;
  wire \cl_tx_state[1]_i_4_n_0 ;
  wire \cl_tx_state[1]_i_5_n_0 ;
  wire \cl_tx_state[2]_i_5_n_0 ;
  wire \cl_tx_state[2]_i_6_n_0 ;
  wire \cl_tx_state[3]_i_13_n_0 ;
  wire \cl_tx_state[3]_i_15_n_0 ;
  wire \cl_tx_state[3]_i_3_n_0 ;
  wire \cl_tx_state[3]_i_4_n_0 ;
  wire \cl_tx_state[3]_i_7_n_0 ;
  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg[0]_1 ;
  wire \cl_tx_state_reg[0]_10 ;
  wire \cl_tx_state_reg[0]_2 ;
  wire \cl_tx_state_reg[0]_3 ;
  wire \cl_tx_state_reg[0]_4 ;
  wire \cl_tx_state_reg[0]_5 ;
  wire \cl_tx_state_reg[0]_6 ;
  wire \cl_tx_state_reg[0]_7 ;
  wire \cl_tx_state_reg[0]_8 ;
  wire \cl_tx_state_reg[0]_9 ;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[1]_0 ;
  wire \cl_tx_state_reg[1]_1 ;
  wire \cl_tx_state_reg[1]_2 ;
  wire \cl_tx_state_reg[1]_3 ;
  wire \cl_tx_state_reg[3] ;
  wire \cl_tx_state_reg[3]_0 ;
  wire \cl_tx_state_reg[3]_1 ;
  wire \cl_tx_state_reg[3]_2 ;
  wire \cl_tx_state_reg[3]_3 ;
  wire cl_txclkactivehs_i_2_n_0;
  wire cl_txclkactivehs_i_3_n_0;
  wire cl_txclkactivehs_i_4_n_0;
  wire cl_txclkactivehs_reg;
  wire cl_txclkactivehs_reg_0;
  wire cl_txclkactivehs_reg_1;
  wire cl_txrequesths;
  wire core_clk;
  wire core_rst;
  wire [3:0]dl_hs_exit_done_i;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire hs_clk_state_r_i_2_n_0;
  wire hs_clk_state_r_i_3_n_0;
  wire hs_clk_state_r_i_4_n_0;
  wire hs_clk_state_r_reg;
  wire hs_clk_state_r_reg_0;
  wire hs_clk_state_r_reg_1;
  wire init_done_reg;
  wire lp_01_r_reg;
  wire reset_timer_r_i_11_n_0;
  wire reset_timer_r_i_2_n_0;
  wire reset_timer_r_i_5_n_0;
  wire reset_timer_r_i_6_n_0;
  wire reset_timer_r_reg;
  wire reset_timer_r_reg_0;
  wire reset_timer_r_reg_1;
  wire reset_timer_r_reg_2;
  wire reset_timer_r_reg_3;
  wire reset_timer_r_reg_4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire start_clkpost_r_reg;
  wire start_clkpost_r_reg_0;
  wire system_rst;
  wire time_out_zero;
  wire tx_cl_en_lp_tst_coreclk_i_2_n_0;
  wire tx_cl_en_lp_tst_coreclk_reg;
  wire tx_cl_en_lp_tst_coreclk_reg_0;
  wire tx_cl_en_lp_tst_coreclk_reg_1;
  wire tx_cl_lp_cn_reg;
  wire tx_cl_lp_cp_i_4_n_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFEEEFFFFFEEE0)) 
    cl_stopstate_i_2
       (.I0(cl_stopstate_reg_3),
        .I1(cl_stopstate_reg_0),
        .I2(cl_stopstate_i_5_n_0),
        .I3(cl_stopstate_reg_4),
        .I4(cl_stopstate_reg_5),
        .I5(cl_stopstate),
        .O(cl_stopstate_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF02)) 
    cl_stopstate_i_5
       (.I0(\cl_tx_state_reg[0]_5 ),
        .I1(\cl_tx_state_reg[1]_0 ),
        .I2(s_level_out_d3),
        .I3(cl_stopstate_reg_0),
        .I4(cl_stopstate_reg_1),
        .I5(cl_stopstate_reg_2),
        .O(cl_stopstate_i_5_n_0));
  LUT6 #(
    .INIT(64'hDCDFDCDCDCDFDCDF)) 
    \cl_tx_state[0]_i_1 
       (.I0(\cl_tx_state[0]_i_2_n_0 ),
        .I1(\cl_tx_state[0]_i_3_n_0 ),
        .I2(cl_txclkactivehs_reg),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(\cl_tx_state[0]_i_4_n_0 ),
        .I5(\cl_tx_state_reg[0]_1 ),
        .O(\cl_tx_state_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hF0F3F0FAF003F0FA)) 
    \cl_tx_state[0]_i_2 
       (.I0(s_level_out_d3),
        .I1(\cl_tx_state_reg[0]_2 ),
        .I2(hs_clk_state_r_reg),
        .I3(\cl_tx_state_reg[1]_0 ),
        .I4(\cl_tx_state_reg[0]_0 ),
        .I5(\cl_tx_state_reg[0]_3 ),
        .O(\cl_tx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F00000F0008080)) 
    \cl_tx_state[0]_i_3 
       (.I0(s_level_out_d3),
        .I1(\cl_tx_state_reg[0]_9 ),
        .I2(\cl_tx_state_reg[0]_5 ),
        .I3(\cl_tx_state_reg[0]_10 ),
        .I4(\cl_tx_state_reg[1]_0 ),
        .I5(hs_clk_state_r_reg),
        .O(\cl_tx_state[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \cl_tx_state[0]_i_4 
       (.I0(s_level_out_d3),
        .I1(hs_clk_state_r_reg),
        .O(\cl_tx_state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFBFBBBBFF8F8888)) 
    \cl_tx_state[1]_i_1 
       (.I0(\cl_tx_state[1]_i_2_n_0 ),
        .I1(cl_tx_state),
        .I2(\cl_tx_state_reg[1]_3 ),
        .I3(system_rst),
        .I4(\cl_tx_state_reg[1]_2 ),
        .I5(\cl_tx_state_reg[1]_0 ),
        .O(s_level_out_d2_reg_0));
  LUT6 #(
    .INIT(64'hFFFF55C0000055C0)) 
    \cl_tx_state[1]_i_2 
       (.I0(\cl_tx_state_reg[1]_1 ),
        .I1(\cl_tx_state[1]_i_4_n_0 ),
        .I2(\cl_tx_state_reg[0]_1 ),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(cl_txclkactivehs_reg),
        .I5(\cl_tx_state[1]_i_5_n_0 ),
        .O(\cl_tx_state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7CFF)) 
    \cl_tx_state[1]_i_4 
       (.I0(en_lp_01_cnt_reg),
        .I1(s_level_out_d3),
        .I2(hs_clk_state_r_reg),
        .I3(\cl_tx_state_reg[1]_0 ),
        .O(\cl_tx_state[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF5FC)) 
    \cl_tx_state[1]_i_5 
       (.I0(\cl_tx_state_reg[0]_2 ),
        .I1(s_level_out_d3),
        .I2(\cl_tx_state_reg[1]_0 ),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(hs_clk_state_r_reg),
        .O(\cl_tx_state[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h40040004)) 
    \cl_tx_state[2]_i_5 
       (.I0(\cl_tx_state_reg[0]_0 ),
        .I1(\cl_tx_state_reg[1]_0 ),
        .I2(hs_clk_state_r_reg),
        .I3(s_level_out_d3),
        .I4(en_lp_01_cnt_reg),
        .O(\cl_tx_state[2]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h0F00FA0C)) 
    \cl_tx_state[2]_i_6 
       (.I0(\cl_tx_state_reg[0]_2 ),
        .I1(s_level_out_d3),
        .I2(hs_clk_state_r_reg),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(\cl_tx_state_reg[1]_0 ),
        .O(\cl_tx_state[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFE00)) 
    \cl_tx_state[3]_i_1 
       (.I0(\cl_tx_state[3]_i_3_n_0 ),
        .I1(\cl_tx_state[3]_i_4_n_0 ),
        .I2(\cl_tx_state_reg[0]_4 ),
        .I3(\cl_tx_state_reg[0]_5 ),
        .I4(\cl_tx_state[3]_i_7_n_0 ),
        .I5(\cl_tx_state_reg[0]_6 ),
        .O(cl_tx_state));
  LUT5 #(
    .INIT(32'h0FFD0FF1)) 
    \cl_tx_state[3]_i_10 
       (.I0(s_level_out_d3),
        .I1(\cl_tx_state_reg[0]_0 ),
        .I2(hs_clk_state_r_reg),
        .I3(\cl_tx_state_reg[1]_0 ),
        .I4(\cl_tx_state_reg[0]_2 ),
        .O(s_level_out_d3_reg_0));
  LUT2 #(
    .INIT(4'hE)) 
    \cl_tx_state[3]_i_13 
       (.I0(s_level_out_d3),
        .I1(hs_clk_state_r_reg),
        .O(\cl_tx_state[3]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hAA2A)) 
    \cl_tx_state[3]_i_15 
       (.I0(\cl_tx_state_reg[1]_0 ),
        .I1(hs_clk_state_r_reg),
        .I2(s_level_out_d3),
        .I3(en_lp_01_cnt_reg),
        .O(\cl_tx_state[3]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \cl_tx_state[3]_i_17 
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[2]),
        .I2(dl_hs_exit_done_i[1]),
        .I3(dl_hs_exit_done_i[3]),
        .I4(dl_hs_exit_done_i[0]),
        .O(s_level_out_d3_reg_2));
  LUT6 #(
    .INIT(64'h5040100010001000)) 
    \cl_tx_state[3]_i_3 
       (.I0(\cl_tx_state_reg[1]_0 ),
        .I1(hs_clk_state_r_reg),
        .I2(s_level_out_d3),
        .I3(\cl_tx_state_reg[0]_9 ),
        .I4(time_out_zero),
        .I5(cl_txclkactivehs_reg_0),
        .O(\cl_tx_state[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00FC5555)) 
    \cl_tx_state[3]_i_4 
       (.I0(s_level_out_d3),
        .I1(\cl_tx_state_reg[0]_10 ),
        .I2(\cl_tx_state_reg[0]_7 ),
        .I3(hs_clk_state_r_reg),
        .I4(\cl_tx_state_reg[1]_0 ),
        .O(\cl_tx_state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFE00F000)) 
    \cl_tx_state[3]_i_7 
       (.I0(\cl_tx_state[3]_i_13_n_0 ),
        .I1(\cl_tx_state_reg[0]_3 ),
        .I2(\cl_tx_state_reg[0]_8 ),
        .I3(en_lp_01_cnt_reg_0),
        .I4(\cl_tx_state[3]_i_15_n_0 ),
        .I5(cl_stopstate_reg_0),
        .O(\cl_tx_state[3]_i_7_n_0 ));
  MUXF7 \cl_tx_state_reg[2]_i_4 
       (.I0(\cl_tx_state[2]_i_5_n_0 ),
        .I1(\cl_tx_state[2]_i_6_n_0 ),
        .O(\cl_tx_state_reg[3]_2 ),
        .S(cl_txclkactivehs_reg));
  LUT6 #(
    .INIT(64'hBAAAFFFFBAAA0000)) 
    cl_txclkactivehs_i_1
       (.I0(cl_txclkactivehs_i_2_n_0),
        .I1(\cl_tx_state_reg[1]_0 ),
        .I2(s_level_out_d3),
        .I3(cl_txclkactivehs_reg),
        .I4(cl_txclkactivehs_i_3_n_0),
        .I5(cl_txclkactivehs_reg_1),
        .O(\cl_tx_state_reg[1] ));
  LUT5 #(
    .INIT(32'h40000000)) 
    cl_txclkactivehs_i_2
       (.I0(\cl_tx_state_reg[1]_0 ),
        .I1(\cl_tx_state_reg[0]_0 ),
        .I2(time_out_zero),
        .I3(s_level_out_d3),
        .I4(cl_txclkactivehs_reg_0),
        .O(cl_txclkactivehs_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF450505)) 
    cl_txclkactivehs_i_3
       (.I0(cl_txclkactivehs_i_4_n_0),
        .I1(start_clkpost_r_reg),
        .I2(\cl_tx_state_reg[1]_0 ),
        .I3(\cl_tx_state_reg[0]_4 ),
        .I4(\cl_tx_state_reg[0]_5 ),
        .I5(hs_clk_state_r_reg_0),
        .O(cl_txclkactivehs_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF8080FF80)) 
    cl_txclkactivehs_i_4
       (.I0(\cl_tx_state_reg[0]_7 ),
        .I1(s_level_out_d3),
        .I2(cl_txclkactivehs_reg),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(\cl_tx_state_reg[1]_0 ),
        .I5(hs_clk_state_r_reg),
        .O(cl_txclkactivehs_i_4_n_0));
  LUT6 #(
    .INIT(64'h75FFFF5500A00000)) 
    en_lp_01_cnt_i_1
       (.I0(en_lp_01_cnt_reg_0),
        .I1(en_lp_01_cnt_reg),
        .I2(s_level_out_d3),
        .I3(hs_clk_state_r_reg),
        .I4(\cl_tx_state_reg[1]_0 ),
        .I5(en_lp_01_cnt_reg_1),
        .O(lp_01_r_reg));
  LUT6 #(
    .INIT(64'h5D5DFDFF5D5D0D00)) 
    hs_clk_state_r_i_1
       (.I0(hs_clk_state_r_i_2_n_0),
        .I1(hs_clk_state_r_i_3_n_0),
        .I2(hs_clk_state_r_reg),
        .I3(hs_clk_state_r_i_4_n_0),
        .I4(hs_clk_state_r_reg_0),
        .I5(hs_clk_state_r_reg_1),
        .O(\cl_tx_state_reg[0] ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    hs_clk_state_r_i_2
       (.I0(time_out_zero),
        .I1(s_level_out_d3),
        .I2(cl_txclkactivehs_reg_0),
        .I3(hs_clk_state_r_reg),
        .O(hs_clk_state_r_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    hs_clk_state_r_i_3
       (.I0(s_level_out_d3),
        .I1(cl_txclkactivehs_reg),
        .O(hs_clk_state_r_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000005FFC000000)) 
    hs_clk_state_r_i_4
       (.I0(s_level_out_d3),
        .I1(\cl_tx_state_reg[0]_10 ),
        .I2(\cl_tx_state_reg[0]_7 ),
        .I3(\cl_tx_state_reg[1]_0 ),
        .I4(\cl_tx_state_reg[0]_0 ),
        .I5(cl_txclkactivehs_reg),
        .O(hs_clk_state_r_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hABAAABFFA8AAA800)) 
    reset_timer_r_i_1
       (.I0(reset_timer_r_i_2_n_0),
        .I1(reset_timer_r_reg_2),
        .I2(reset_timer_r_reg_3),
        .I3(cl_txclkactivehs_reg),
        .I4(reset_timer_r_i_5_n_0),
        .I5(reset_timer_r_reg_4),
        .O(\cl_tx_state_reg[3]_3 ));
  LUT2 #(
    .INIT(4'h2)) 
    reset_timer_r_i_11
       (.I0(s_level_out_d3),
        .I1(en_lp_01_cnt_reg),
        .O(reset_timer_r_i_11_n_0));
  LUT6 #(
    .INIT(64'hEFFFAAAAAAAAAAAA)) 
    reset_timer_r_i_2
       (.I0(reset_timer_r_i_6_n_0),
        .I1(reset_timer_r_reg),
        .I2(\cl_tx_state_reg[0]_3 ),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(cl_txclkactivehs_reg),
        .I5(reset_timer_r_reg_0),
        .O(reset_timer_r_i_2_n_0));
  LUT6 #(
    .INIT(64'hE0EFEFEFE0E0EFEF)) 
    reset_timer_r_i_5
       (.I0(\cl_tx_state[3]_i_3_n_0 ),
        .I1(reset_timer_r_reg_1),
        .I2(\cl_tx_state_reg[0]_0 ),
        .I3(reset_timer_r_i_11_n_0),
        .I4(hs_clk_state_r_reg),
        .I5(\cl_tx_state_reg[1]_0 ),
        .O(reset_timer_r_i_5_n_0));
  LUT6 #(
    .INIT(64'h00000000007FFFFF)) 
    reset_timer_r_i_6
       (.I0(s_level_out_d3),
        .I1(en_lp_01_cnt_reg),
        .I2(hs_clk_state_r_reg),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(\cl_tx_state_reg[1]_0 ),
        .I5(cl_txclkactivehs_reg),
        .O(reset_timer_r_i_6_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'h5500115055551150)) 
    start_clkpost_r_i_3
       (.I0(\cl_tx_state_reg[0]_4 ),
        .I1(start_clkpost_r_reg),
        .I2(s_level_out_d3),
        .I3(\cl_tx_state_reg[1]_0 ),
        .I4(hs_clk_state_r_reg),
        .I5(start_clkpost_r_reg_0),
        .O(s_level_out_d3_reg_1));
  LUT4 #(
    .INIT(16'hABA8)) 
    tx_cl_en_lp_tst_coreclk_i_1
       (.I0(tx_cl_en_lp_tst_coreclk_i_2_n_0),
        .I1(\cl_tx_state_reg[3] ),
        .I2(tx_cl_en_lp_tst_coreclk_reg_0),
        .I3(tx_cl_en_lp_tst_coreclk_reg_1),
        .O(tx_cl_en_lp_tst_coreclk_reg));
  LUT6 #(
    .INIT(64'hFFAA00AA00800080)) 
    tx_cl_en_lp_tst_coreclk_i_2
       (.I0(s_level_out_d3),
        .I1(hs_clk_state_r_reg),
        .I2(\cl_tx_state_reg[1]_0 ),
        .I3(cl_txclkactivehs_reg),
        .I4(\cl_tx_state_reg[0]_3 ),
        .I5(\cl_tx_state_reg[0]_0 ),
        .O(tx_cl_en_lp_tst_coreclk_i_2_n_0));
  LUT5 #(
    .INIT(32'h01110145)) 
    tx_cl_en_lp_tst_coreclk_i_3
       (.I0(cl_txclkactivehs_reg),
        .I1(\cl_tx_state_reg[0]_0 ),
        .I2(hs_clk_state_r_reg),
        .I3(s_level_out_d3),
        .I4(\cl_tx_state_reg[1]_0 ),
        .O(\cl_tx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF888888B8)) 
    tx_cl_lp_cp_i_1
       (.I0(tx_cl_lp_cn_reg),
        .I1(cl_txclkactivehs_reg),
        .I2(\cl_tx_state_reg[0]_0 ),
        .I3(\cl_tx_state_reg[1]_0 ),
        .I4(s_level_out_d3),
        .I5(tx_cl_lp_cp_i_4_n_0),
        .O(\cl_tx_state_reg[3]_1 ));
  LUT6 #(
    .INIT(64'hAAAA2AAA8A8A0A8A)) 
    tx_cl_lp_cp_i_4
       (.I0(en_lp_01_cnt_reg_0),
        .I1(\cl_tx_state_reg[1]_0 ),
        .I2(hs_clk_state_r_reg),
        .I3(s_level_out_d3),
        .I4(en_lp_01_cnt_reg),
        .I5(\cl_tx_state_reg[1]_2 ),
        .O(tx_cl_lp_cp_i_4_n_0));
  LUT6 #(
    .INIT(64'hC0004444C0C00000)) 
    tx_cl_lp_cp_i_6
       (.I0(\cl_tx_state_reg[1]_2 ),
        .I1(en_lp_01_cnt_reg_0),
        .I2(s_level_out_d3),
        .I3(en_lp_01_cnt_reg),
        .I4(\cl_tx_state_reg[1]_0 ),
        .I5(hs_clk_state_r_reg),
        .O(init_done_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_17
   (out,
    \cl_tx_state_reg[3] ,
    \cl_tx_state_reg[1] ,
    \cl_tx_state_reg[0] ,
    s_level_out_d3_reg_0,
    \cl_tx_state_reg[1]_0 ,
    core_rst,
    cl_txrequesths_negedge_r,
    core_clk,
    start_clkpost_r_reg,
    \cl_tx_state_reg[3]_0 ,
    start_clkpost_r_reg_0,
    \cl_tx_state_reg[2] ,
    start_clkpost_r_reg_1,
    \cl_tx_state_reg[2]_0 ,
    hs_active_all,
    \cl_tx_state_reg[3]_1 ,
    start_clkpost_r_reg_2,
    \cl_tx_state_reg[3]_2 ,
    \cl_tx_state[1]_i_2 ,
    start_clkpost_r_reg_3,
    dl_hs_exit_done_i,
    start_clkpost_r_reg_4,
    start_clkpost_r_reg_5);
  output out;
  output \cl_tx_state_reg[3] ;
  output \cl_tx_state_reg[1] ;
  output \cl_tx_state_reg[0] ;
  output s_level_out_d3_reg_0;
  output \cl_tx_state_reg[1]_0 ;
  input core_rst;
  input cl_txrequesths_negedge_r;
  input core_clk;
  input start_clkpost_r_reg;
  input \cl_tx_state_reg[3]_0 ;
  input start_clkpost_r_reg_0;
  input \cl_tx_state_reg[2] ;
  input start_clkpost_r_reg_1;
  input \cl_tx_state_reg[2]_0 ;
  input hs_active_all;
  input \cl_tx_state_reg[3]_1 ;
  input start_clkpost_r_reg_2;
  input \cl_tx_state_reg[3]_2 ;
  input \cl_tx_state[1]_i_2 ;
  input start_clkpost_r_reg_3;
  input [3:0]dl_hs_exit_done_i;
  input start_clkpost_r_reg_4;
  input start_clkpost_r_reg_5;

  wire \cl_tx_state[1]_i_2 ;
  wire \cl_tx_state[2]_i_2_n_0 ;
  wire \cl_tx_state[3]_i_9_n_0 ;
  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[1]_0 ;
  wire \cl_tx_state_reg[2] ;
  wire \cl_tx_state_reg[2]_0 ;
  wire \cl_tx_state_reg[3] ;
  wire \cl_tx_state_reg[3]_0 ;
  wire \cl_tx_state_reg[3]_1 ;
  wire \cl_tx_state_reg[3]_2 ;
  wire cl_txrequesths_negedge_r;
  wire core_clk;
  wire core_rst;
  wire [3:0]dl_hs_exit_done_i;
  wire hs_active_all;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire start_clkpost_r_i_2_n_0;
  wire start_clkpost_r_reg;
  wire start_clkpost_r_reg_0;
  wire start_clkpost_r_reg_1;
  wire start_clkpost_r_reg_2;
  wire start_clkpost_r_reg_3;
  wire start_clkpost_r_reg_4;
  wire start_clkpost_r_reg_5;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hF0BFF0B0F0B0F0B0)) 
    \cl_tx_state[1]_i_3 
       (.I0(start_clkpost_r_reg_2),
        .I1(s_level_out_d3),
        .I2(start_clkpost_r_reg_0),
        .I3(\cl_tx_state_reg[3]_1 ),
        .I4(\cl_tx_state_reg[3]_2 ),
        .I5(\cl_tx_state[1]_i_2 ),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004700)) 
    \cl_tx_state[2]_i_1 
       (.I0(\cl_tx_state[2]_i_2_n_0 ),
        .I1(start_clkpost_r_reg_0),
        .I2(\cl_tx_state_reg[2] ),
        .I3(start_clkpost_r_reg_1),
        .I4(start_clkpost_r_reg),
        .I5(\cl_tx_state_reg[2]_0 ),
        .O(\cl_tx_state_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF8000FFFF)) 
    \cl_tx_state[2]_i_2 
       (.I0(dl_hs_exit_done_i[2]),
        .I1(dl_hs_exit_done_i[1]),
        .I2(dl_hs_exit_done_i[3]),
        .I3(dl_hs_exit_done_i[0]),
        .I4(s_level_out_d3),
        .I5(\cl_tx_state_reg[3]_1 ),
        .O(\cl_tx_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFBB0000000F0000)) 
    \cl_tx_state[3]_i_9 
       (.I0(start_clkpost_r_reg_2),
        .I1(s_level_out_d3),
        .I2(\cl_tx_state_reg[3]_2 ),
        .I3(\cl_tx_state_reg[3]_1 ),
        .I4(start_clkpost_r_reg_0),
        .I5(start_clkpost_r_reg_1),
        .O(\cl_tx_state[3]_i_9_n_0 ));
  MUXF7 \cl_tx_state_reg[3]_i_2 
       (.I0(\cl_tx_state[3]_i_9_n_0 ),
        .I1(\cl_tx_state_reg[3]_0 ),
        .O(\cl_tx_state_reg[3] ),
        .S(start_clkpost_r_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hFC440000FC44FFFF)) 
    reset_timer_r_i_10
       (.I0(hs_active_all),
        .I1(\cl_tx_state_reg[3]_1 ),
        .I2(s_level_out_d3),
        .I3(start_clkpost_r_reg_2),
        .I4(start_clkpost_r_reg_0),
        .I5(\cl_tx_state_reg[3]_2 ),
        .O(\cl_tx_state_reg[0] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txrequesths_negedge_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFFFFFEBF00000280)) 
    start_clkpost_r_i_1
       (.I0(start_clkpost_r_i_2_n_0),
        .I1(start_clkpost_r_reg_0),
        .I2(start_clkpost_r_reg_1),
        .I3(start_clkpost_r_reg),
        .I4(start_clkpost_r_reg_4),
        .I5(start_clkpost_r_reg_5),
        .O(\cl_tx_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h1F1010101F1F1F1F)) 
    start_clkpost_r_i_2
       (.I0(start_clkpost_r_reg),
        .I1(start_clkpost_r_reg_3),
        .I2(\cl_tx_state_reg[3]_1 ),
        .I3(s_level_out_d3),
        .I4(start_clkpost_r_reg_2),
        .I5(start_clkpost_r_reg_0),
        .O(start_clkpost_r_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_18
   (out,
    time_out_trail_reg,
    \cl_tx_state_reg[3] ,
    \cl_tx_state_reg[1] ,
    \cl_tx_state_reg[2] ,
    time_out_prepare_reg,
    s_level_out_d3_reg_0,
    \cl_tx_state_reg[1]_0 ,
    s_level_out_d3_reg_1,
    time_out_hsexit_reg,
    core_rst,
    cl_txulpsclk,
    core_clk,
    en_lp_10_cnt_reg,
    en_lp_11_cnt_reg,
    en_lp_11_cnt_reg_0,
    en_lp_11_cnt_reg_1,
    en_lp_11_cnt_reg_2,
    time_out_trail,
    en_lp_11_cnt_reg_3,
    en_lp_10_cnt_reg_0,
    \cl_tx_state_reg[0] ,
    \cl_tx_state_reg[0]_0 ,
    \cl_tx_state_reg[0]_1 ,
    tx_cl_lp_cp_i_3_0,
    en_lp_10_cnt_reg_1,
    tx_cl_lp_cn_reg,
    tx_cl_lp_cn_reg_0,
    tx_cl_lp_cn_reg_1,
    tx_cl_lp_cn_reg_2,
    en_lp_11_cnt_i_3_0,
    tx_cl_en_lp_tst_coreclk_reg,
    tx_cl_en_lp_tst_coreclk_reg_0,
    en_lp_10_cnt_reg_2,
    en_lp_11_cnt_reg_4,
    en_lp_11_cnt_reg_5);
  output out;
  output time_out_trail_reg;
  output \cl_tx_state_reg[3] ;
  output \cl_tx_state_reg[1] ;
  output \cl_tx_state_reg[2] ;
  output time_out_prepare_reg;
  output s_level_out_d3_reg_0;
  output \cl_tx_state_reg[1]_0 ;
  output s_level_out_d3_reg_1;
  output time_out_hsexit_reg;
  input core_rst;
  input cl_txulpsclk;
  input core_clk;
  input en_lp_10_cnt_reg;
  input en_lp_11_cnt_reg;
  input en_lp_11_cnt_reg_0;
  input en_lp_11_cnt_reg_1;
  input en_lp_11_cnt_reg_2;
  input time_out_trail;
  input en_lp_11_cnt_reg_3;
  input en_lp_10_cnt_reg_0;
  input \cl_tx_state_reg[0] ;
  input \cl_tx_state_reg[0]_0 ;
  input \cl_tx_state_reg[0]_1 ;
  input tx_cl_lp_cp_i_3_0;
  input en_lp_10_cnt_reg_1;
  input tx_cl_lp_cn_reg;
  input tx_cl_lp_cn_reg_0;
  input tx_cl_lp_cn_reg_1;
  input tx_cl_lp_cn_reg_2;
  input en_lp_11_cnt_i_3_0;
  input tx_cl_en_lp_tst_coreclk_reg;
  input tx_cl_en_lp_tst_coreclk_reg_0;
  input en_lp_10_cnt_reg_2;
  input en_lp_11_cnt_reg_4;
  input en_lp_11_cnt_reg_5;

  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[0]_0 ;
  wire \cl_tx_state_reg[0]_1 ;
  wire \cl_tx_state_reg[1] ;
  wire \cl_tx_state_reg[1]_0 ;
  wire \cl_tx_state_reg[2] ;
  wire \cl_tx_state_reg[3] ;
  wire cl_txulpsclk;
  wire core_clk;
  wire core_rst;
  wire en_lp_10_cnt_i_2_n_0;
  wire en_lp_10_cnt_i_3_n_0;
  wire en_lp_10_cnt_reg;
  wire en_lp_10_cnt_reg_0;
  wire en_lp_10_cnt_reg_1;
  wire en_lp_10_cnt_reg_2;
  wire en_lp_11_cnt;
  wire en_lp_11_cnt_i_3_0;
  wire en_lp_11_cnt_i_4_n_0;
  wire en_lp_11_cnt_reg;
  wire en_lp_11_cnt_reg_0;
  wire en_lp_11_cnt_reg_1;
  wire en_lp_11_cnt_reg_2;
  wire en_lp_11_cnt_reg_3;
  wire en_lp_11_cnt_reg_4;
  wire en_lp_11_cnt_reg_5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire time_out_hsexit_reg;
  wire time_out_prepare_reg;
  wire time_out_trail;
  wire time_out_trail_reg;
  wire tx_cl_en_lp_tst_coreclk_reg;
  wire tx_cl_en_lp_tst_coreclk_reg_0;
  wire tx_cl_lp_cn_i_2_n_0;
  wire tx_cl_lp_cn_reg;
  wire tx_cl_lp_cn_reg_0;
  wire tx_cl_lp_cn_reg_1;
  wire tx_cl_lp_cn_reg_2;
  wire tx_cl_lp_cp_i_3_0;
  wire tx_cl_lp_cp_i_7_n_0;
  wire tx_cl_lp_cp_i_8_n_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h20882088A888A800)) 
    cl_stopstate_i_6
       (.I0(tx_cl_lp_cn_reg),
        .I1(en_lp_10_cnt_reg_0),
        .I2(tx_cl_lp_cn_reg_0),
        .I3(en_lp_11_cnt_reg_3),
        .I4(s_level_out_d3),
        .I5(tx_cl_lp_cn_reg_1),
        .O(\cl_tx_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    cl_stopstate_i_9
       (.I0(s_level_out_d3),
        .I1(en_lp_10_cnt_reg),
        .I2(en_lp_11_cnt_reg),
        .I3(en_lp_10_cnt_reg_1),
        .I4(en_lp_11_cnt_reg_3),
        .I5(en_lp_10_cnt_reg_0),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h888888888A8A8AAA)) 
    \cl_tx_state[3]_i_8 
       (.I0(en_lp_11_cnt_reg),
        .I1(tx_cl_lp_cp_i_7_n_0),
        .I2(\cl_tx_state_reg[0] ),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(\cl_tx_state_reg[0]_1 ),
        .I5(en_lp_10_cnt_reg),
        .O(\cl_tx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hAA08FFFFAA080000)) 
    en_lp_10_cnt_i_1
       (.I0(s_level_out_d3),
        .I1(en_lp_10_cnt_reg),
        .I2(en_lp_10_cnt_reg_1),
        .I3(en_lp_10_cnt_reg_0),
        .I4(en_lp_10_cnt_i_2_n_0),
        .I5(en_lp_10_cnt_reg_2),
        .O(s_level_out_d3_reg_1));
  LUT6 #(
    .INIT(64'h000000005555F755)) 
    en_lp_10_cnt_i_2
       (.I0(en_lp_10_cnt_reg),
        .I1(s_level_out_d3),
        .I2(en_lp_10_cnt_reg_1),
        .I3(en_lp_11_cnt_reg),
        .I4(en_lp_10_cnt_reg_0),
        .I5(en_lp_10_cnt_i_3_n_0),
        .O(en_lp_10_cnt_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000FFD0)) 
    en_lp_10_cnt_i_3
       (.I0(s_level_out_d3),
        .I1(tx_cl_lp_cn_reg_1),
        .I2(en_lp_10_cnt_reg_0),
        .I3(en_lp_11_cnt_reg),
        .I4(en_lp_10_cnt_reg),
        .I5(en_lp_11_cnt_reg_3),
        .O(en_lp_10_cnt_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFE0FFFFAFE00000)) 
    en_lp_11_cnt_i_1
       (.I0(en_lp_11_cnt_reg_4),
        .I1(en_lp_11_cnt_reg_1),
        .I2(en_lp_11_cnt_reg_3),
        .I3(en_lp_10_cnt_reg),
        .I4(en_lp_11_cnt),
        .I5(en_lp_11_cnt_reg_5),
        .O(time_out_hsexit_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFF40704040)) 
    en_lp_11_cnt_i_3
       (.I0(en_lp_11_cnt_i_4_n_0),
        .I1(en_lp_10_cnt_reg),
        .I2(en_lp_11_cnt_reg),
        .I3(en_lp_11_cnt_reg_0),
        .I4(en_lp_11_cnt_reg_1),
        .I5(en_lp_11_cnt_reg_2),
        .O(en_lp_11_cnt));
  LUT5 #(
    .INIT(32'h55CCCCFC)) 
    en_lp_11_cnt_i_4
       (.I0(en_lp_11_cnt_i_3_0),
        .I1(s_level_out_d3),
        .I2(en_lp_10_cnt_reg_1),
        .I3(en_lp_11_cnt_reg_3),
        .I4(en_lp_10_cnt_reg_0),
        .O(en_lp_11_cnt_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsclk),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hFFFFFFFF00400F40)) 
    tx_cl_en_lp_tst_coreclk_i_4
       (.I0(\cl_tx_state_reg[0]_0 ),
        .I1(tx_cl_en_lp_tst_coreclk_reg),
        .I2(en_lp_10_cnt_reg),
        .I3(en_lp_11_cnt_reg),
        .I4(tx_cl_en_lp_tst_coreclk_reg_0),
        .I5(s_level_out_d3_reg_0),
        .O(time_out_prepare_reg));
  LUT6 #(
    .INIT(64'h8AAA8AAA8A8A8AAA)) 
    tx_cl_lp_cn_i_1
       (.I0(\cl_tx_state_reg[2] ),
        .I1(tx_cl_lp_cn_i_2_n_0),
        .I2(tx_cl_lp_cn_reg),
        .I3(en_lp_10_cnt_reg_0),
        .I4(en_lp_11_cnt_reg_3),
        .I5(tx_cl_lp_cn_reg_0),
        .O(\cl_tx_state_reg[1] ));
  LUT5 #(
    .INIT(32'h0CC4CCC4)) 
    tx_cl_lp_cn_i_2
       (.I0(s_level_out_d3),
        .I1(en_lp_10_cnt_reg_0),
        .I2(en_lp_11_cnt_reg_3),
        .I3(tx_cl_lp_cn_reg_1),
        .I4(tx_cl_lp_cn_reg_2),
        .O(tx_cl_lp_cn_i_2_n_0));
  LUT6 #(
    .INIT(64'hAAFEAAAAAAAEAAAA)) 
    tx_cl_lp_cp_i_3
       (.I0(tx_cl_lp_cp_i_7_n_0),
        .I1(time_out_trail),
        .I2(en_lp_11_cnt_reg_3),
        .I3(en_lp_10_cnt_reg),
        .I4(en_lp_10_cnt_reg_0),
        .I5(en_lp_11_cnt_reg_1),
        .O(time_out_trail_reg));
  LUT5 #(
    .INIT(32'hFFFF5140)) 
    tx_cl_lp_cp_i_5
       (.I0(en_lp_10_cnt_reg),
        .I1(en_lp_11_cnt_reg_3),
        .I2(en_lp_11_cnt_reg_1),
        .I3(time_out_trail),
        .I4(tx_cl_lp_cp_i_8_n_0),
        .O(\cl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h0A2A022A0A220222)) 
    tx_cl_lp_cp_i_7
       (.I0(en_lp_10_cnt_reg),
        .I1(s_level_out_d3),
        .I2(en_lp_10_cnt_reg_0),
        .I3(en_lp_11_cnt_reg_3),
        .I4(tx_cl_lp_cp_i_3_0),
        .I5(en_lp_10_cnt_reg_1),
        .O(tx_cl_lp_cp_i_7_n_0));
  LUT6 #(
    .INIT(64'h8F8FAFAF8FAF8FAF)) 
    tx_cl_lp_cp_i_8
       (.I0(en_lp_10_cnt_reg),
        .I1(en_lp_10_cnt_reg_0),
        .I2(en_lp_11_cnt_reg),
        .I3(en_lp_10_cnt_reg_1),
        .I4(s_level_out_d3),
        .I5(en_lp_11_cnt_reg_3),
        .O(tx_cl_lp_cp_i_8_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_19
   (out,
    \cl_tx_state_reg[0] ,
    lp_10_r_reg,
    \cl_tx_state_reg[3] ,
    core_rst,
    cl_txulpsexit,
    core_clk,
    cl_ulpsactivenot_reg,
    cl_ulpsactivenot_reg_0,
    cl_ulpsactivenot_reg_1,
    tx_cl_lp_cp_reg,
    tx_cl_lp_cp_reg_0,
    tx_cl_lp_cp_reg_1,
    reset_timer_r_reg,
    cl_ulpsactivenot_reg_2,
    cl_ulpsactivenot_reg_3,
    cl_ulpsactivenot);
  output out;
  output \cl_tx_state_reg[0] ;
  output lp_10_r_reg;
  output \cl_tx_state_reg[3] ;
  input core_rst;
  input cl_txulpsexit;
  input core_clk;
  input cl_ulpsactivenot_reg;
  input cl_ulpsactivenot_reg_0;
  input cl_ulpsactivenot_reg_1;
  input tx_cl_lp_cp_reg;
  input tx_cl_lp_cp_reg_0;
  input tx_cl_lp_cp_reg_1;
  input reset_timer_r_reg;
  input cl_ulpsactivenot_reg_2;
  input cl_ulpsactivenot_reg_3;
  input cl_ulpsactivenot;

  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[3] ;
  wire cl_txulpsexit;
  wire cl_ulpsactivenot;
  wire cl_ulpsactivenot_i_3_n_0;
  wire cl_ulpsactivenot_reg;
  wire cl_ulpsactivenot_reg_0;
  wire cl_ulpsactivenot_reg_1;
  wire cl_ulpsactivenot_reg_2;
  wire cl_ulpsactivenot_reg_3;
  wire core_clk;
  wire core_rst;
  wire lp_10_r_reg;
  wire reset_timer_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_cl_lp_cp_reg;
  wire tx_cl_lp_cp_reg_0;
  wire tx_cl_lp_cp_reg_1;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFD1FF0000D100)) 
    cl_ulpsactivenot_i_2
       (.I0(cl_ulpsactivenot_reg_2),
        .I1(cl_ulpsactivenot_reg_0),
        .I2(s_level_out_d3),
        .I3(cl_ulpsactivenot_i_3_n_0),
        .I4(cl_ulpsactivenot_reg_3),
        .I5(cl_ulpsactivenot),
        .O(\cl_tx_state_reg[3] ));
  LUT5 #(
    .INIT(32'h8F800F0F)) 
    cl_ulpsactivenot_i_3
       (.I0(s_level_out_d3),
        .I1(cl_ulpsactivenot_reg),
        .I2(cl_ulpsactivenot_reg_0),
        .I3(cl_ulpsactivenot_reg_1),
        .I4(tx_cl_lp_cp_reg),
        .O(cl_ulpsactivenot_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'h30003D3D00000000)) 
    reset_timer_r_i_4
       (.I0(cl_ulpsactivenot_reg_1),
        .I1(reset_timer_r_reg),
        .I2(cl_ulpsactivenot_reg_0),
        .I3(s_level_out_d3),
        .I4(cl_ulpsactivenot_reg),
        .I5(tx_cl_lp_cp_reg),
        .O(lp_10_r_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_txulpsexit),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    tx_cl_lp_cp_i_2
       (.I0(cl_ulpsactivenot_reg_0),
        .I1(s_level_out_d3),
        .I2(tx_cl_lp_cp_reg),
        .I3(tx_cl_lp_cp_reg_0),
        .I4(tx_cl_lp_cp_reg_1),
        .O(\cl_tx_state_reg[0] ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_20
   (out,
    cl_txrequesths_0,
    tx_div4_clk,
    cl_txrequesths,
    \prepare_zero_cnt_reg[0] ,
    \prepare_zero_cnt_reg[0]_0 );
  output out;
  output cl_txrequesths_0;
  input tx_div4_clk;
  input cl_txrequesths;
  input \prepare_zero_cnt_reg[0] ;
  input \prepare_zero_cnt_reg[0]_0 ;

  wire cl_txrequesths;
  wire cl_txrequesths_0;
  wire \prepare_zero_cnt_reg[0] ;
  wire \prepare_zero_cnt_reg[0]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT4 #(
    .INIT(16'hE000)) 
    \prepare_zero_cnt[0]_i_2 
       (.I0(cl_txrequesths),
        .I1(s_level_out_d3),
        .I2(\prepare_zero_cnt_reg[0] ),
        .I3(\prepare_zero_cnt_reg[0]_0 ),
        .O(cl_txrequesths_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_21
   (cl_txrequesths_0,
    s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk,
    cl_txrequesths,
    cl_txrequesths_r,
    out,
    cl_txrequesths_negedge_r);
  output cl_txrequesths_0;
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;
  input cl_txrequesths;
  input cl_txrequesths_r;
  input out;
  input cl_txrequesths_negedge_r;

  wire cl_txrequesths;
  wire cl_txrequesths_0;
  wire cl_txrequesths_negedge_r;
  wire cl_txrequesths_r;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT5 #(
    .INIT(32'h44F44444)) 
    cl_txrequesths_negedge_r_i_1
       (.I0(cl_txrequesths),
        .I1(cl_txrequesths_r),
        .I2(s_level_out_d3),
        .I3(out),
        .I4(cl_txrequesths_negedge_r),
        .O(cl_txrequesths_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_23
   (out,
    s_level_out_d3_reg_0,
    s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk,
    time_out_post_reg,
    time_out_post_reg_0,
    time_out_post_reg_1,
    time_out_post_reg_2,
    time_out_post);
  output out;
  output s_level_out_d3_reg_0;
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;
  input time_out_post_reg;
  input time_out_post_reg_0;
  input time_out_post_reg_1;
  input time_out_post_reg_2;
  input time_out_post;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire time_out_post;
  wire time_out_post_reg;
  wire time_out_post_reg_0;
  wire time_out_post_reg_1;
  wire time_out_post_reg_2;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFF000001000000)) 
    time_out_post_i_1
       (.I0(time_out_post_reg),
        .I1(time_out_post_reg_0),
        .I2(time_out_post_reg_1),
        .I3(time_out_post_reg_2),
        .I4(s_level_out_d3),
        .I5(time_out_post),
        .O(s_level_out_d3_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_24
   (out,
    xmit_clk_r0,
    xmit_clk_r_reg,
    s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk,
    \prepare_zero_cnt_reg[31] ,
    time_out_post,
    init_done_byteclk_pos_r,
    start_clkzero_byteclk_sync_r,
    xmit_clk_r_reg_0,
    cl_txrequesths,
    xmit_clk_r_reg_1,
    xmit_clk_r_reg_2);
  output out;
  output xmit_clk_r0;
  output xmit_clk_r_reg;
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;
  input \prepare_zero_cnt_reg[31] ;
  input time_out_post;
  input init_done_byteclk_pos_r;
  input start_clkzero_byteclk_sync_r;
  input xmit_clk_r_reg_0;
  input cl_txrequesths;
  input xmit_clk_r_reg_1;
  input xmit_clk_r_reg_2;

  wire cl_txrequesths;
  wire init_done_byteclk_pos_r;
  wire \prepare_zero_cnt_reg[31] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire start_clkzero_byteclk_sync_r;
  wire time_out_post;
  wire tx_div4_clk;
  wire xmit_clk_r0;
  wire xmit_clk_r_reg;
  wire xmit_clk_r_reg_0;
  wire xmit_clk_r_reg_1;
  wire xmit_clk_r_reg_2;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT5 #(
    .INIT(32'hFEFFFEFE)) 
    \prepare_zero_cnt[0]_i_1 
       (.I0(\prepare_zero_cnt_reg[31] ),
        .I1(time_out_post),
        .I2(init_done_byteclk_pos_r),
        .I3(start_clkzero_byteclk_sync_r),
        .I4(s_level_out_d3),
        .O(xmit_clk_r0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AAAAFEAA)) 
    xmit_clk_r_i_1
       (.I0(xmit_clk_r_reg_0),
        .I1(cl_txrequesths),
        .I2(xmit_clk_r_reg_1),
        .I3(s_level_out_d3),
        .I4(xmit_clk_r_reg_2),
        .I5(xmit_clk_r0),
        .O(xmit_clk_r_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_25
   (out,
    s_level_out_d3_reg_0,
    time_out_trail_reg,
    time_out_trail_reg_0,
    O,
    \trail_count_reg[15] ,
    \trail_count_reg[23] ,
    \trail_count_reg[31] ,
    time_out_trail_reg_1,
    \cl_tx_state_reg[0] ,
    core_rst,
    time_out_post,
    core_clk,
    \trail_count_reg[31]_0 ,
    \trail_count_reg[31]_1 ,
    \trail_count_reg[31]_2 ,
    \trail_count_reg[31]_3 ,
    trail_count_reg,
    reset_timer_r_i_3_0,
    reset_timer_r_i_2,
    time_out_trail,
    reset_timer_r_reg,
    time_out_trail_reg_2);
  output out;
  output s_level_out_d3_reg_0;
  output time_out_trail_reg;
  output time_out_trail_reg_0;
  output [7:0]O;
  output [7:0]\trail_count_reg[15] ;
  output [7:0]\trail_count_reg[23] ;
  output [7:0]\trail_count_reg[31] ;
  output time_out_trail_reg_1;
  output \cl_tx_state_reg[0] ;
  input core_rst;
  input time_out_post;
  input core_clk;
  input \trail_count_reg[31]_0 ;
  input \trail_count_reg[31]_1 ;
  input \trail_count_reg[31]_2 ;
  input \trail_count_reg[31]_3 ;
  input [31:0]trail_count_reg;
  input reset_timer_r_i_3_0;
  input reset_timer_r_i_2;
  input time_out_trail;
  input reset_timer_r_reg;
  input time_out_trail_reg_2;

  wire [7:0]O;
  wire \cl_tx_state_reg[0] ;
  wire core_clk;
  wire core_rst;
  wire reset_timer_r_i_2;
  wire reset_timer_r_i_3_0;
  wire reset_timer_r_i_9_n_0;
  wire reset_timer_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire time_out_post;
  wire time_out_trail;
  wire time_out_trail0;
  wire time_out_trail_i_2_n_0;
  wire time_out_trail_reg;
  wire time_out_trail_reg_0;
  wire time_out_trail_reg_1;
  wire time_out_trail_reg_2;
  wire \trail_count[0]_i_10_n_0 ;
  wire \trail_count[0]_i_11_n_0 ;
  wire \trail_count[0]_i_12_n_0 ;
  wire \trail_count[0]_i_5_n_0 ;
  wire \trail_count[0]_i_6_n_0 ;
  wire \trail_count[0]_i_7_n_0 ;
  wire \trail_count[0]_i_8_n_0 ;
  wire \trail_count[0]_i_9_n_0 ;
  wire \trail_count[16]_i_2_n_0 ;
  wire \trail_count[16]_i_3_n_0 ;
  wire \trail_count[16]_i_4_n_0 ;
  wire \trail_count[16]_i_5_n_0 ;
  wire \trail_count[16]_i_6_n_0 ;
  wire \trail_count[16]_i_7_n_0 ;
  wire \trail_count[16]_i_8_n_0 ;
  wire \trail_count[16]_i_9_n_0 ;
  wire \trail_count[24]_i_2_n_0 ;
  wire \trail_count[24]_i_3_n_0 ;
  wire \trail_count[24]_i_4_n_0 ;
  wire \trail_count[24]_i_5_n_0 ;
  wire \trail_count[24]_i_6_n_0 ;
  wire \trail_count[24]_i_7_n_0 ;
  wire \trail_count[24]_i_8_n_0 ;
  wire \trail_count[24]_i_9_n_0 ;
  wire \trail_count[8]_i_2_n_0 ;
  wire \trail_count[8]_i_3_n_0 ;
  wire \trail_count[8]_i_4_n_0 ;
  wire \trail_count[8]_i_5_n_0 ;
  wire \trail_count[8]_i_6_n_0 ;
  wire \trail_count[8]_i_7_n_0 ;
  wire \trail_count[8]_i_8_n_0 ;
  wire \trail_count[8]_i_9_n_0 ;
  wire [31:0]trail_count_reg;
  wire \trail_count_reg[0]_i_2_n_0 ;
  wire \trail_count_reg[0]_i_2_n_1 ;
  wire \trail_count_reg[0]_i_2_n_2 ;
  wire \trail_count_reg[0]_i_2_n_3 ;
  wire \trail_count_reg[0]_i_2_n_4 ;
  wire \trail_count_reg[0]_i_2_n_5 ;
  wire \trail_count_reg[0]_i_2_n_6 ;
  wire \trail_count_reg[0]_i_2_n_7 ;
  wire [7:0]\trail_count_reg[15] ;
  wire \trail_count_reg[16]_i_1_n_0 ;
  wire \trail_count_reg[16]_i_1_n_1 ;
  wire \trail_count_reg[16]_i_1_n_2 ;
  wire \trail_count_reg[16]_i_1_n_3 ;
  wire \trail_count_reg[16]_i_1_n_4 ;
  wire \trail_count_reg[16]_i_1_n_5 ;
  wire \trail_count_reg[16]_i_1_n_6 ;
  wire \trail_count_reg[16]_i_1_n_7 ;
  wire [7:0]\trail_count_reg[23] ;
  wire \trail_count_reg[24]_i_1_n_1 ;
  wire \trail_count_reg[24]_i_1_n_2 ;
  wire \trail_count_reg[24]_i_1_n_3 ;
  wire \trail_count_reg[24]_i_1_n_4 ;
  wire \trail_count_reg[24]_i_1_n_5 ;
  wire \trail_count_reg[24]_i_1_n_6 ;
  wire \trail_count_reg[24]_i_1_n_7 ;
  wire [7:0]\trail_count_reg[31] ;
  wire \trail_count_reg[31]_0 ;
  wire \trail_count_reg[31]_1 ;
  wire \trail_count_reg[31]_2 ;
  wire \trail_count_reg[31]_3 ;
  wire \trail_count_reg[8]_i_1_n_0 ;
  wire \trail_count_reg[8]_i_1_n_1 ;
  wire \trail_count_reg[8]_i_1_n_2 ;
  wire \trail_count_reg[8]_i_1_n_3 ;
  wire \trail_count_reg[8]_i_1_n_4 ;
  wire \trail_count_reg[8]_i_1_n_5 ;
  wire \trail_count_reg[8]_i_1_n_6 ;
  wire \trail_count_reg[8]_i_1_n_7 ;
  wire [7:7]\NLW_trail_count_reg[24]_i_1_CO_UNCONNECTED ;

  assign out = s_level_out_d3;
  LUT5 #(
    .INIT(32'h053FF53F)) 
    \cl_tx_state[3]_i_16 
       (.I0(time_out_trail),
        .I1(s_level_out_d3),
        .I2(\trail_count_reg[31]_0 ),
        .I3(\trail_count_reg[31]_3 ),
        .I4(reset_timer_r_i_3_0),
        .O(time_out_trail_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'h00000000FF20FF23)) 
    reset_timer_r_i_3
       (.I0(time_out_trail),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_3 ),
        .I3(reset_timer_r_i_9_n_0),
        .I4(reset_timer_r_reg),
        .I5(\trail_count_reg[31]_1 ),
        .O(time_out_trail_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0C0AFA0)) 
    reset_timer_r_i_8
       (.I0(s_level_out_d3),
        .I1(reset_timer_r_i_3_0),
        .I2(\trail_count_reg[31]_0 ),
        .I3(reset_timer_r_i_2),
        .I4(\trail_count_reg[31]_3 ),
        .I5(\trail_count_reg[31]_1 ),
        .O(s_level_out_d3_reg_0));
  LUT4 #(
    .INIT(16'hB080)) 
    reset_timer_r_i_9
       (.I0(reset_timer_r_i_3_0),
        .I1(\trail_count_reg[31]_3 ),
        .I2(\trail_count_reg[31]_0 ),
        .I3(s_level_out_d3),
        .O(reset_timer_r_i_9_n_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_post),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT3 #(
    .INIT(8'h54)) 
    time_out_trail_i_1
       (.I0(time_out_trail_i_2_n_0),
        .I1(time_out_trail_reg_2),
        .I2(time_out_trail),
        .O(time_out_trail_reg_1));
  LUT5 #(
    .INIT(32'h55555515)) 
    time_out_trail_i_2
       (.I0(s_level_out_d3),
        .I1(\trail_count_reg[31]_3 ),
        .I2(\trail_count_reg[31]_2 ),
        .I3(\trail_count_reg[31]_1 ),
        .I4(\trail_count_reg[31]_0 ),
        .O(time_out_trail_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000EFFFFFFFFFFF)) 
    \trail_count[0]_i_1 
       (.I0(\trail_count_reg[31]_0 ),
        .I1(\trail_count_reg[31]_1 ),
        .I2(\trail_count_reg[31]_2 ),
        .I3(\trail_count_reg[31]_3 ),
        .I4(s_level_out_d3),
        .I5(time_out_trail_reg_2),
        .O(\cl_tx_state_reg[0] ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[0]_i_10 
       (.I0(trail_count_reg[2]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[0]_i_11 
       (.I0(trail_count_reg[1]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h5555555501000000)) 
    \trail_count[0]_i_12 
       (.I0(trail_count_reg[0]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1000)) 
    \trail_count[0]_i_4 
       (.I0(\trail_count_reg[31]_0 ),
        .I1(\trail_count_reg[31]_1 ),
        .I2(\trail_count_reg[31]_2 ),
        .I3(\trail_count_reg[31]_3 ),
        .I4(s_level_out_d3),
        .O(time_out_trail0));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[0]_i_5 
       (.I0(trail_count_reg[7]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[0]_i_6 
       (.I0(trail_count_reg[6]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[0]_i_7 
       (.I0(trail_count_reg[5]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[0]_i_8 
       (.I0(trail_count_reg[4]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[0]_i_9 
       (.I0(trail_count_reg[3]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_2 
       (.I0(trail_count_reg[23]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_3 
       (.I0(trail_count_reg[22]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_4 
       (.I0(trail_count_reg[21]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_5 
       (.I0(trail_count_reg[20]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_6 
       (.I0(trail_count_reg[19]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_7 
       (.I0(trail_count_reg[18]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_8 
       (.I0(trail_count_reg[17]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[16]_i_9 
       (.I0(trail_count_reg[16]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[16]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_2 
       (.I0(trail_count_reg[31]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_3 
       (.I0(trail_count_reg[30]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_4 
       (.I0(trail_count_reg[29]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_5 
       (.I0(trail_count_reg[28]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_6 
       (.I0(trail_count_reg[27]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_7 
       (.I0(trail_count_reg[26]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_8 
       (.I0(trail_count_reg[25]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[24]_i_9 
       (.I0(trail_count_reg[24]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[24]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_2 
       (.I0(trail_count_reg[15]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_3 
       (.I0(trail_count_reg[14]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_4 
       (.I0(trail_count_reg[13]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_5 
       (.I0(trail_count_reg[12]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_6 
       (.I0(trail_count_reg[11]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_7 
       (.I0(trail_count_reg[10]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_8 
       (.I0(trail_count_reg[9]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA02000000)) 
    \trail_count[8]_i_9 
       (.I0(trail_count_reg[8]),
        .I1(\trail_count_reg[31]_0 ),
        .I2(\trail_count_reg[31]_1 ),
        .I3(\trail_count_reg[31]_2 ),
        .I4(\trail_count_reg[31]_3 ),
        .I5(s_level_out_d3),
        .O(\trail_count[8]_i_9_n_0 ));
  CARRY8 \trail_count_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\trail_count_reg[0]_i_2_n_0 ,\trail_count_reg[0]_i_2_n_1 ,\trail_count_reg[0]_i_2_n_2 ,\trail_count_reg[0]_i_2_n_3 ,\trail_count_reg[0]_i_2_n_4 ,\trail_count_reg[0]_i_2_n_5 ,\trail_count_reg[0]_i_2_n_6 ,\trail_count_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,time_out_trail0}),
        .O(O),
        .S({\trail_count[0]_i_5_n_0 ,\trail_count[0]_i_6_n_0 ,\trail_count[0]_i_7_n_0 ,\trail_count[0]_i_8_n_0 ,\trail_count[0]_i_9_n_0 ,\trail_count[0]_i_10_n_0 ,\trail_count[0]_i_11_n_0 ,\trail_count[0]_i_12_n_0 }));
  CARRY8 \trail_count_reg[16]_i_1 
       (.CI(\trail_count_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\trail_count_reg[16]_i_1_n_0 ,\trail_count_reg[16]_i_1_n_1 ,\trail_count_reg[16]_i_1_n_2 ,\trail_count_reg[16]_i_1_n_3 ,\trail_count_reg[16]_i_1_n_4 ,\trail_count_reg[16]_i_1_n_5 ,\trail_count_reg[16]_i_1_n_6 ,\trail_count_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\trail_count_reg[23] ),
        .S({\trail_count[16]_i_2_n_0 ,\trail_count[16]_i_3_n_0 ,\trail_count[16]_i_4_n_0 ,\trail_count[16]_i_5_n_0 ,\trail_count[16]_i_6_n_0 ,\trail_count[16]_i_7_n_0 ,\trail_count[16]_i_8_n_0 ,\trail_count[16]_i_9_n_0 }));
  CARRY8 \trail_count_reg[24]_i_1 
       (.CI(\trail_count_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_trail_count_reg[24]_i_1_CO_UNCONNECTED [7],\trail_count_reg[24]_i_1_n_1 ,\trail_count_reg[24]_i_1_n_2 ,\trail_count_reg[24]_i_1_n_3 ,\trail_count_reg[24]_i_1_n_4 ,\trail_count_reg[24]_i_1_n_5 ,\trail_count_reg[24]_i_1_n_6 ,\trail_count_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\trail_count_reg[31] ),
        .S({\trail_count[24]_i_2_n_0 ,\trail_count[24]_i_3_n_0 ,\trail_count[24]_i_4_n_0 ,\trail_count[24]_i_5_n_0 ,\trail_count[24]_i_6_n_0 ,\trail_count[24]_i_7_n_0 ,\trail_count[24]_i_8_n_0 ,\trail_count[24]_i_9_n_0 }));
  CARRY8 \trail_count_reg[8]_i_1 
       (.CI(\trail_count_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\trail_count_reg[8]_i_1_n_0 ,\trail_count_reg[8]_i_1_n_1 ,\trail_count_reg[8]_i_1_n_2 ,\trail_count_reg[8]_i_1_n_3 ,\trail_count_reg[8]_i_1_n_4 ,\trail_count_reg[8]_i_1_n_5 ,\trail_count_reg[8]_i_1_n_6 ,\trail_count_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\trail_count_reg[15] ),
        .S({\trail_count[8]_i_2_n_0 ,\trail_count[8]_i_3_n_0 ,\trail_count[8]_i_4_n_0 ,\trail_count[8]_i_5_n_0 ,\trail_count[8]_i_6_n_0 ,\trail_count[8]_i_7_n_0 ,\trail_count[8]_i_8_n_0 ,\trail_count[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_26
   (tx_cl_en_lp_tst,
    tx_cl_en_hs_tst,
    s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk);
  output tx_cl_en_lp_tst;
  output tx_cl_en_hs_tst;
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_cl_en_hs_tst;
  wire tx_div4_clk;

  assign tx_cl_en_lp_tst = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    tx_cl_en_hs_tst_INST_0
       (.I0(s_level_out_d3),
        .O(tx_cl_en_hs_tst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_27
   (out,
    \cl_tx_state_reg[3] ,
    s_level_out_d3_reg_0,
    core_rst,
    xmit_clk_pre_r,
    core_clk,
    hs_clk_state_r_reg,
    hs_clk_state_r_reg_0,
    hs_clk_state_r_reg_1,
    time_out_zero,
    hs_clk_state_r_reg_2,
    \cl_tx_state_reg[2] );
  output out;
  output \cl_tx_state_reg[3] ;
  output s_level_out_d3_reg_0;
  input core_rst;
  input xmit_clk_pre_r;
  input core_clk;
  input hs_clk_state_r_reg;
  input hs_clk_state_r_reg_0;
  input hs_clk_state_r_reg_1;
  input time_out_zero;
  input hs_clk_state_r_reg_2;
  input \cl_tx_state_reg[2] ;

  wire \cl_tx_state_reg[2] ;
  wire \cl_tx_state_reg[3] ;
  wire core_clk;
  wire core_rst;
  wire hs_clk_state_r_reg;
  wire hs_clk_state_r_reg_0;
  wire hs_clk_state_r_reg_1;
  wire hs_clk_state_r_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire time_out_zero;
  wire xmit_clk_pre_r;

  assign out = s_level_out_d3;
  LUT5 #(
    .INIT(32'h77FF0FFF)) 
    \cl_tx_state[2]_i_3 
       (.I0(s_level_out_d3),
        .I1(time_out_zero),
        .I2(\cl_tx_state_reg[2] ),
        .I3(hs_clk_state_r_reg_1),
        .I4(hs_clk_state_r_reg_0),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    hs_clk_state_r_i_5
       (.I0(hs_clk_state_r_reg),
        .I1(hs_clk_state_r_reg_0),
        .I2(s_level_out_d3),
        .I3(hs_clk_state_r_reg_1),
        .I4(time_out_zero),
        .I5(hs_clk_state_r_reg_2),
        .O(\cl_tx_state_reg[3] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(xmit_clk_pre_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_28
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_29
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_30
   (out,
    s_level_out_d3_reg_0,
    en_cal_hs_datapath,
    tx_div4_clk,
    hs_dp_sync_out);
  output out;
  output s_level_out_d3_reg_0;
  input en_cal_hs_datapath;
  input tx_div4_clk;
  input hs_dp_sync_out;

  wire en_cal_hs_datapath;
  wire hs_dp_sync_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \zero_count[0]_i_4__2 
       (.I0(s_level_out_d3),
        .I1(hs_dp_sync_out),
        .O(s_level_out_d3_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_31
   (s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk);
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_33
   (out,
    cl_txclkactivehs_reg,
    core_rst,
    hs_xfer_done_i,
    core_clk,
    cl_txclkactivehs_i,
    dl_hs_exit_done_i,
    \FSM_sequential_dl_tx_sm_state[2]_i_6__2 );
  output out;
  output cl_txclkactivehs_reg;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;
  input cl_txclkactivehs_i;
  input [2:0]dl_hs_exit_done_i;
  input \FSM_sequential_dl_tx_sm_state[2]_i_6__2 ;

  wire \FSM_sequential_dl_tx_sm_state[2]_i_6__2 ;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire [2:0]dl_hs_exit_done_i;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hD555555500000000)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_11__2 
       (.I0(cl_txclkactivehs_i),
        .I1(dl_hs_exit_done_i[1]),
        .I2(dl_hs_exit_done_i[0]),
        .I3(s_level_out_d3),
        .I4(dl_hs_exit_done_i[2]),
        .I5(\FSM_sequential_dl_tx_sm_state[2]_i_6__2 ),
        .O(cl_txclkactivehs_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_34
   (s_level_out_d3_reg_0,
    dl3_forcetxstopmode,
    dl0_txclkesc,
    esc_ctrl_all_sm_reg);
  output s_level_out_d3_reg_0;
  input dl3_forcetxstopmode;
  input dl0_txclkesc;
  input esc_ctrl_all_sm_reg;

  wire dl0_txclkesc;
  wire dl3_forcetxstopmode;
  wire esc_ctrl_all_sm_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1__2 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl3_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_35
   (out,
    esc_start,
    dl0_txclkesc);
  output out;
  input esc_start;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire esc_start;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_36
   (D,
    \bit_cnt_reg[0] ,
    \esc_cmd_data_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[3] ,
    \esc_cmd_data_reg[0]_0 ,
    E,
    \FSM_sequential_dl_tx_state_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \dl3_txdataesc[7] ,
    dl3_txvalidesc_0,
    dl3_txvalidesc_1,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_state_reg[1] ,
    \dl3_txtriggeresc[0] ,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    dl3_txulpsesc_0,
    dl3_txlpdtesc_0,
    esc_ctrl_t_reg,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    Q,
    \FSM_sequential_dl_tx_state[2]_i_4__2_0 ,
    \esc_cmd_data_reg[0]_1 ,
    txlpdtesc_r,
    txulpsesc_r,
    \bit_cnt_reg[0]_0 ,
    \bit_cnt_reg[0]_1 ,
    \bit_cnt_reg[0]_2 ,
    esc_ctrl_t_reg_0,
    dl3_txrequestesc,
    \bit_cnt_reg[0]_3 ,
    \bit_cnt_reg[3] ,
    \bit_cnt_reg[3]_0 ,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \esc_cmd_data_reg[6] ,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_reg_3,
    \FSM_sequential_dl_tx_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_state_reg[0]_3 ,
    esc_ctrl_all_sm_reg,
    out,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_axi_if_reg,
    \bit_cnt_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[3]_0 ,
    \esc_cmd_data_reg[7] ,
    dl3_txvalidesc,
    dl3_txulpsexit,
    \esc_cmd_data_reg[6]_0 ,
    \esc_cmd_data_reg[5] ,
    \esc_cmd_data_reg[5]_0 ,
    dl3_txdataesc,
    \esc_cmd_data_reg[6]_1 ,
    \esc_cmd_data_reg[3] ,
    txulpsesc_r_reg,
    tx_dl_lp_dn_esc_i,
    \FSM_sequential_dl_tx_state_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[0]_5 ,
    \esc_cmd_data_reg[0]_2 ,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    txulpsesc_r_reg_0,
    tx_dl_lp_dn_reg_3,
    dl3_ulpsactivenot,
    dl3_txtriggeresc,
    dl3_txulpsesc,
    dl3_txlpdtesc,
    esc_ctrl_t_reg_1,
    esc_ctrl_t_reg_2);
  output [3:0]D;
  output [1:0]\bit_cnt_reg[0] ;
  output \esc_cmd_data_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[3] ;
  output \esc_cmd_data_reg[0]_0 ;
  output [0:0]E;
  output \FSM_sequential_dl_tx_state_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[0]_0 ;
  output \FSM_sequential_dl_tx_state_reg[0]_1 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\dl3_txdataesc[7] ;
  output [0:0]dl3_txvalidesc_0;
  output dl3_txvalidesc_1;
  output s_level_out_d3_reg_0;
  output [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output [0:0]\dl3_txtriggeresc[0] ;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  output dl3_txulpsesc_0;
  output dl3_txlpdtesc_0;
  output esc_ctrl_t_reg;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state[2]_i_4__2_0 ;
  input \esc_cmd_data_reg[0]_1 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input \bit_cnt_reg[0]_0 ;
  input \bit_cnt_reg[0]_1 ;
  input \bit_cnt_reg[0]_2 ;
  input esc_ctrl_t_reg_0;
  input dl3_txrequestesc;
  input [3:0]\bit_cnt_reg[0]_3 ;
  input \bit_cnt_reg[3] ;
  input \bit_cnt_reg[3]_0 ;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input [7:0]\esc_cmd_data_reg[6] ;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_reg_3;
  input \FSM_sequential_dl_tx_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_state_reg[0]_3 ;
  input esc_ctrl_all_sm_reg;
  input out;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_axi_if_reg;
  input \bit_cnt_reg[0]_4 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  input \esc_cmd_data_reg[7] ;
  input dl3_txvalidesc;
  input dl3_txulpsexit;
  input \esc_cmd_data_reg[6]_0 ;
  input \esc_cmd_data_reg[5] ;
  input \esc_cmd_data_reg[5]_0 ;
  input [7:0]dl3_txdataesc;
  input \esc_cmd_data_reg[6]_1 ;
  input \esc_cmd_data_reg[3] ;
  input txulpsesc_r_reg;
  input tx_dl_lp_dn_esc_i;
  input \FSM_sequential_dl_tx_state_reg[0]_4 ;
  input \FSM_sequential_dl_tx_state_reg[0]_5 ;
  input \esc_cmd_data_reg[0]_2 ;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input txulpsesc_r_reg_0;
  input tx_dl_lp_dn_reg_3;
  input dl3_ulpsactivenot;
  input [3:0]dl3_txtriggeresc;
  input dl3_txulpsesc;
  input dl3_txlpdtesc;
  input esc_ctrl_t_reg_1;
  input esc_ctrl_t_reg_2;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_3__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__2_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_12__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_13__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_14__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8__2_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9__2_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire \FSM_sequential_dl_tx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_4 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_5 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  wire [3:0]Q;
  wire \bit_cnt[0]_i_2__2_n_0 ;
  wire \bit_cnt[3]_i_13__2_n_0 ;
  wire \bit_cnt[3]_i_3__2_n_0 ;
  wire \bit_cnt[3]_i_4__2_n_0 ;
  wire \bit_cnt[3]_i_5__2_n_0 ;
  wire \bit_cnt[3]_i_6__2_n_0 ;
  wire \bit_cnt[3]_i_8__2_n_0 ;
  wire [1:0]\bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[0]_1 ;
  wire \bit_cnt_reg[0]_2 ;
  wire [3:0]\bit_cnt_reg[0]_3 ;
  wire \bit_cnt_reg[0]_4 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire dl0_txclkesc;
  wire [7:0]dl3_txdataesc;
  wire [7:0]\dl3_txdataesc[7] ;
  wire dl3_txlpdtesc;
  wire dl3_txlpdtesc_0;
  wire dl3_txrequestesc;
  wire [3:0]dl3_txtriggeresc;
  wire [0:0]\dl3_txtriggeresc[0] ;
  wire dl3_txulpsesc;
  wire dl3_txulpsesc_0;
  wire dl3_txulpsexit;
  wire dl3_txvalidesc;
  wire [0:0]dl3_txvalidesc_0;
  wire dl3_txvalidesc_1;
  wire dl3_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3__2_n_0;
  wire \esc_cmd_data[0]_i_2__2_n_0 ;
  wire \esc_cmd_data[0]_i_3__2_n_0 ;
  wire \esc_cmd_data[0]_i_4__2_n_0 ;
  wire \esc_cmd_data[1]_i_2__2_n_0 ;
  wire \esc_cmd_data[2]_i_2__2_n_0 ;
  wire \esc_cmd_data[5]_i_2__2_n_0 ;
  wire \esc_cmd_data[6]_i_2__2_n_0 ;
  wire \esc_cmd_data[7]_i_5__2_n_0 ;
  wire \esc_cmd_data[7]_i_8__2_n_0 ;
  wire \esc_cmd_data_reg[0] ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg[0]_1 ;
  wire \esc_cmd_data_reg[0]_2 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[5] ;
  wire \esc_cmd_data_reg[5]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire \esc_cmd_data_reg[6]_0 ;
  wire \esc_cmd_data_reg[6]_1 ;
  wire \esc_cmd_data_reg[7] ;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_ctrl_t_i_2__2_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire esc_ctrl_t_reg_2;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_10__2_n_0;
  wire tx_dl_lp_dn_i_11__2_n_0;
  wire tx_dl_lp_dn_i_13__2_n_0;
  wire tx_dl_lp_dn_i_14__2_n_0;
  wire tx_dl_lp_dn_i_3__2_n_0;
  wire tx_dl_lp_dn_i_5__2_n_0;
  wire tx_dl_lp_dn_i_8__2_n_0;
  wire tx_dl_lp_dn_i_9__2_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;
  wire tx_dl_lp_dp_i_2__5_n_0;
  wire tx_dl_lp_dp_i_4__2_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3__2_n_0 ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0604)) 
    \FSM_sequential_dl_tx_state[0]_i_1__2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[0]_i_2__2_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_3__2_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h888F888888888888)) 
    \FSM_sequential_dl_tx_state[0]_i_2__2 
       (.I0(esc_ctrl_t_reg_0),
        .I1(\FSM_sequential_dl_tx_state[0]_i_4__2_n_0 ),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h00003000FF0030AA)) 
    \FSM_sequential_dl_tx_state[0]_i_3__2 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ),
        .I1(Q[0]),
        .I2(\FSM_sequential_dl_tx_state[0]_i_5__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h3F3FBFBF3F3FBFFF)) 
    \FSM_sequential_dl_tx_state[0]_i_4__2 
       (.I0(Q[2]),
        .I1(s_level_out_d3),
        .I2(dl3_txrequestesc),
        .I3(txulpsesc_r),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'hFF7F7F7F)) 
    \FSM_sequential_dl_tx_state[0]_i_5__2 
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl3_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl3_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[0]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFEEEEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[1]_i_1__2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3__2_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(dl_ulpsactivenot_i_3__2_n_0),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAEFAE)) 
    \FSM_sequential_dl_tx_state[1]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[1]_i_5__2_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0010001000100000)) 
    \FSM_sequential_dl_tx_state[1]_i_3__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I1(Q[2]),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(dl_ulpsactivenot_i_3__2_n_0),
        .I4(txulpsesc_r),
        .I5(txlpdtesc_r),
        .O(\FSM_sequential_dl_tx_state[1]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \FSM_sequential_dl_tx_state[1]_i_4__2 
       (.I0(dl3_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(\bit_cnt[3]_i_5__2_n_0 ),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h0A000A0C0A000A00)) 
    \FSM_sequential_dl_tx_state[1]_i_5__2 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4__2_0 ),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(dl_ulpsactivenot_i_3__2_n_0),
        .I3(txlpdtesc_r),
        .I4(txulpsesc_r),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAFAAABAA)) 
    \FSM_sequential_dl_tx_state[2]_i_1__2 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_2__2_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAB00AA0000000000)) 
    \FSM_sequential_dl_tx_state[2]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .I1(\bit_cnt_reg[0]_2 ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(Q[0]),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[2]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFE000000)) 
    \FSM_sequential_dl_tx_state[2]_i_3__2 
       (.I0(txulpsesc_r),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(txlpdtesc_r),
        .I3(s_level_out_d3),
        .I4(dl3_txrequestesc),
        .O(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF07000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4__2 
       (.I0(Q[0]),
        .I1(txlpdtesc_r),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6__2_n_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF000455550004)) 
    \FSM_sequential_dl_tx_state[2]_i_6__2 
       (.I0(\bit_cnt_reg[0]_1 ),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(\bit_cnt_reg[0]_2 ),
        .I4(dl_ulpsactivenot_i_3__2_n_0),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4__2_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0FFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_10__2 
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(Q[2]),
        .I2(txulpsesc_r_reg),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(\bit_cnt[3]_i_5__2_n_0 ),
        .I5(\bit_cnt_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_10__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_12__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[3]_0 [3]),
        .I4(txulpsesc_r),
        .I5(dl_ulpsactivenot_i_3__2_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_12__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \FSM_sequential_dl_tx_state[3]_i_13__2 
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[3]_i_13__2_n_0 ));
  LUT6 #(
    .INIT(64'h0D0D55070D0D5505)) 
    \FSM_sequential_dl_tx_state[3]_i_14__2 
       (.I0(Q[1]),
        .I1(\bit_cnt[3]_i_5__2_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state[3]_i_14__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEE)) 
    \FSM_sequential_dl_tx_state[3]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_2 ),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[3]_i_8__2_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_9__2_n_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAEAAAA)) 
    \FSM_sequential_dl_tx_state[3]_i_3__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10__2_n_0 ),
        .I1(esc_ctrl_t_reg_0),
        .I2(Q[2]),
        .I3(txlpdtesc_r),
        .I4(\FSM_sequential_dl_tx_state[3]_i_12__2_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_13__2_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \FSM_sequential_dl_tx_state[3]_i_4__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12__2_n_0 ),
        .I1(Q[0]),
        .I2(out),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(tx_dl_lp_dn_i_5__2_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'h01FFFFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7__2 
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl3_txrequestesc),
        .I4(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ));
  LUT4 #(
    .INIT(16'h0444)) 
    \FSM_sequential_dl_tx_state[3]_i_8__2 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(dl3_txrequestesc),
        .I3(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_8__2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFEEEEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_9__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_14__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_4 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_state_reg[0]_5 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_9__2_n_0 ));
  LUT6 #(
    .INIT(64'h000000FF000000EF)) 
    \bit_cnt[0]_i_1__2 
       (.I0(\bit_cnt_reg[0]_3 [2]),
        .I1(\bit_cnt_reg[0]_3 [1]),
        .I2(\bit_cnt_reg[0]_3 [3]),
        .I3(\bit_cnt_reg[0]_1 ),
        .I4(\bit_cnt_reg[0]_3 [0]),
        .I5(\bit_cnt[0]_i_2__2_n_0 ),
        .O(\bit_cnt_reg[0] [0]));
  LUT5 #(
    .INIT(32'hABFFFFFF)) 
    \bit_cnt[0]_i_2__2 
       (.I0(Q[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl3_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000001F0)) 
    \bit_cnt[3]_i_13__2 
       (.I0(\bit_cnt[3]_i_5__2_n_0 ),
        .I1(\esc_cmd_data_reg[6]_0 ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\bit_cnt[3]_i_13__2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFFFEEEE)) 
    \bit_cnt[3]_i_1__2 
       (.I0(\bit_cnt[3]_i_3__2_n_0 ),
        .I1(\bit_cnt[3]_i_4__2_n_0 ),
        .I2(\bit_cnt[3]_i_5__2_n_0 ),
        .I3(\bit_cnt[3]_i_6__2_n_0 ),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h0000CA300000CA00)) 
    \bit_cnt[3]_i_2__2 
       (.I0(\bit_cnt[3]_i_8__2_n_0 ),
        .I1(\bit_cnt_reg[3] ),
        .I2(\bit_cnt_reg[0]_3 [0]),
        .I3(\bit_cnt_reg[0]_3 [3]),
        .I4(\bit_cnt_reg[0]_1 ),
        .I5(\bit_cnt_reg[3]_0 ),
        .O(\bit_cnt_reg[0] [1]));
  LUT6 #(
    .INIT(64'h02020F0300020003)) 
    \bit_cnt[3]_i_3__2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12__2_n_0 ),
        .I1(Q[2]),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(Q[1]),
        .I4(\bit_cnt[3]_i_5__2_n_0 ),
        .I5(\bit_cnt_reg[0]_4 ),
        .O(\bit_cnt[3]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10000000)) 
    \bit_cnt[3]_i_4__2 
       (.I0(\bit_cnt[3]_i_5__2_n_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(Q[2]),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(\bit_cnt[3]_i_13__2_n_0 ),
        .O(\bit_cnt[3]_i_4__2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_5__2 
       (.I0(dl3_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txlpdtesc_r),
        .O(\bit_cnt[3]_i_5__2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_6__2 
       (.I0(dl3_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .O(\bit_cnt[3]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFAB)) 
    \bit_cnt[3]_i_8__2 
       (.I0(dl_ulpsactivenot_i_3__2_n_0),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_3 [2]),
        .I5(\bit_cnt_reg[0]_3 [1]),
        .O(\bit_cnt[3]_i_8__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000070400000000)) 
    dl_txreadyesc_i_1__2
       (.I0(dl3_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(dl_txreadyesc_reg),
        .I3(dl_txreadyesc_reg_0),
        .I4(dl_ulpsactivenot_i_3__2_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl3_txvalidesc_1));
  LUT6 #(
    .INIT(64'hFFFFFEFFEEEEEEEE)) 
    dl_ulpsactivenot_i_1__2
       (.I0(dl_txreadyesc_reg),
        .I1(dl3_txulpsexit),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(txulpsesc_r),
        .I4(dl_ulpsactivenot_i_3__2_n_0),
        .I5(dl3_ulpsactivenot),
        .O(s_level_out_d3_reg_0));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_3__2
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .O(dl_ulpsactivenot_i_3__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \esc_cmd_data[0]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl3_txdataesc[0]),
        .I4(\esc_cmd_data[0]_i_2__2_n_0 ),
        .I5(\esc_cmd_data[0]_i_3__2_n_0 ),
        .O(\dl3_txdataesc[7] [0]));
  LUT5 #(
    .INIT(32'h01000000)) 
    \esc_cmd_data[0]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\esc_cmd_data[0]_i_4__2_n_0 ),
        .I4(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h2A00000000000000)) 
    \esc_cmd_data[0]_i_3__2 
       (.I0(\esc_cmd_data_reg[6]_1 ),
        .I1(dl3_txvalidesc),
        .I2(\esc_cmd_data_reg[7] ),
        .I3(dl3_txrequestesc),
        .I4(s_level_out_d3),
        .I5(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h007F7F7F)) 
    \esc_cmd_data[0]_i_4__2 
       (.I0(txulpsesc_r),
        .I1(s_level_out_d3),
        .I2(dl3_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl3_txvalidesc),
        .O(\esc_cmd_data[0]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[1]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl3_txdataesc[1]),
        .I4(\esc_cmd_data[1]_i_2__2_n_0 ),
        .O(\dl3_txdataesc[7] [1]));
  LUT6 #(
    .INIT(64'hA8FF000000000000)) 
    \esc_cmd_data[1]_i_2__2 
       (.I0(\bit_cnt[3]_i_6__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5__2_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[1]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[2]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl3_txdataesc[2]),
        .I4(\esc_cmd_data[2]_i_2__2_n_0 ),
        .O(\dl3_txdataesc[7] [2]));
  LUT6 #(
    .INIT(64'hA2FF000000000000)) 
    \esc_cmd_data[2]_i_2__2 
       (.I0(\bit_cnt[3]_i_6__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5__2_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[2]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[3]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [4]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__2_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl3_txdataesc[3]),
        .O(\dl3_txdataesc[7] [3]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[4]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [5]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__2_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl3_txdataesc[4]),
        .O(\dl3_txdataesc[7] [4]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[5]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [6]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__2_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl3_txdataesc[5]),
        .O(\dl3_txdataesc[7] [5]));
  LUT6 #(
    .INIT(64'h0000008088008888)) 
    \esc_cmd_data[5]_i_2__2 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[6]_1 ),
        .I2(txulpsesc_r),
        .I3(dl_ulpsactivenot_i_3__2_n_0),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[5]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFF888F88F8888888)) 
    \esc_cmd_data[6]_i_1__2 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(\esc_cmd_data_reg[6]_1 ),
        .I4(\esc_cmd_data[6]_i_2__2_n_0 ),
        .I5(dl3_txdataesc[6]),
        .O(\dl3_txdataesc[7] [6]));
  LUT5 #(
    .INIT(32'h3AAA2AAA)) 
    \esc_cmd_data[6]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(txlpdtesc_r),
        .I2(dl3_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r),
        .O(\esc_cmd_data[6]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDDDFFFDDDDD)) 
    \esc_cmd_data[7]_i_1__2 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[7]_i_5__2_n_0 ),
        .I3(\esc_cmd_data_reg[0]_1 ),
        .I4(\esc_cmd_data_reg[0]_2 ),
        .I5(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .O(dl3_txvalidesc_0));
  LUT6 #(
    .INIT(64'hEEAFAFAF00000000)) 
    \esc_cmd_data[7]_i_2__2 
       (.I0(\esc_cmd_data[7]_i_8__2_n_0 ),
        .I1(dl3_txdataesc[7]),
        .I2(\bit_cnt[3]_i_5__2_n_0 ),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl3_txvalidesc),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\dl3_txdataesc[7] [7]));
  LUT4 #(
    .INIT(16'hE000)) 
    \esc_cmd_data[7]_i_5__2 
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .I2(s_level_out_d3),
        .I3(dl3_txrequestesc),
        .O(\esc_cmd_data[7]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h5400000054005400)) 
    \esc_cmd_data[7]_i_8__2 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(dl_ulpsactivenot_i_3__2_n_0),
        .I5(txulpsesc_r),
        .O(\esc_cmd_data[7]_i_8__2_n_0 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_all_sm_i_1__2
       (.I0(Q[0]),
        .I1(esc_ctrl_all_sm_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0] ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_axi_if_i_2__2
       (.I0(Q[0]),
        .I1(esc_ctrl_axi_if_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_lane_sm_i_1__2
       (.I0(Q[0]),
        .I1(esc_ctrl_lane_sm_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00000000E2222222)) 
    esc_ctrl_t_i_1__2
       (.I0(esc_ctrl_t_reg_1),
        .I1(esc_ctrl_t_i_2__2_n_0),
        .I2(esc_ctrl_t_reg_0),
        .I3(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ),
        .I4(out),
        .I5(esc_ctrl_t_reg_2),
        .O(esc_ctrl_t_reg));
  LUT5 #(
    .INIT(32'h00032E0A)) 
    esc_ctrl_t_i_2__2
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(esc_ctrl_t_i_2__2_n_0));
  LUT4 #(
    .INIT(16'hE222)) 
    esc_stopstate_i_2__2
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .I1(Q[1]),
        .I2(\FSM_sequential_dl_tx_state[2]_i_3__2_n_0 ),
        .I3(out),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    tx_dl_lp_dn_i_10__2
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(dl_ulpsactivenot_i_3__2_n_0),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_2),
        .O(tx_dl_lp_dn_i_10__2_n_0));
  LUT4 #(
    .INIT(16'h0080)) 
    tx_dl_lp_dn_i_11__2
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl3_txrequestesc),
        .I3(\esc_cmd_data_reg[6] [0]),
        .O(tx_dl_lp_dn_i_11__2_n_0));
  LUT6 #(
    .INIT(64'h00000F4000000040)) 
    tx_dl_lp_dn_i_13__2
       (.I0(dl_ulpsactivenot_i_3__2_n_0),
        .I1(txlpdtesc_r),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_13__2_n_0));
  LUT6 #(
    .INIT(64'h000000000000F777)) 
    tx_dl_lp_dn_i_14__2
       (.I0(s_level_out_d3),
        .I1(dl3_txrequestesc),
        .I2(Q[2]),
        .I3(dl3_txulpsexit),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_14__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    tx_dl_lp_dn_i_1__5
       (.I0(tx_dl_lp_dn_i_3__2_n_0),
        .I1(Q[3]),
        .I2(tx_dl_lp_dp_reg),
        .I3(tx_dl_lp_dn_i_5__2_n_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    tx_dl_lp_dn_i_2__2
       (.I0(tx_dl_lp_dn_i_8__2_n_0),
        .I1(tx_dl_lp_dn_i_9__2_n_0),
        .I2(tx_dl_lp_dn_i_10__2_n_0),
        .I3(tx_dl_lp_dn_i_11__2_n_0),
        .I4(tx_dl_lp_dn_reg),
        .I5(tx_dl_lp_dn_i_13__2_n_0),
        .O(\esc_cmd_data_reg[0] ));
  LUT6 #(
    .INIT(64'h2222FFFF2222E222)) 
    tx_dl_lp_dn_i_3__2
       (.I0(dl_ulpsactivenot_i_3__2_n_0),
        .I1(Q[2]),
        .I2(tx_dl_lp_dp_reg_2),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4__2_n_0 ),
        .O(tx_dl_lp_dn_i_3__2_n_0));
  LUT6 #(
    .INIT(64'hABAAAAAAABABABAB)) 
    tx_dl_lp_dn_i_5__2
       (.I0(tx_dl_lp_dn_i_14__2_n_0),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl3_txvalidesc),
        .I5(txlpdtesc_r),
        .O(tx_dl_lp_dn_i_5__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    tx_dl_lp_dn_i_8__2
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(\bit_cnt[3]_i_6__2_n_0 ),
        .I2(tx_dl_lp_dn_reg_2),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_3),
        .O(tx_dl_lp_dn_i_8__2_n_0));
  LUT6 #(
    .INIT(64'h00080A0A00F80A0A)) 
    tx_dl_lp_dn_i_9__2
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(dl_ulpsactivenot_i_3__2_n_0),
        .O(tx_dl_lp_dn_i_9__2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    tx_dl_lp_dp_i_1__5
       (.I0(tx_dl_lp_dp_i_2__5_n_0),
        .I1(tx_dl_lp_dp_reg_3),
        .I2(tx_dl_lp_dn_reg),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dp_i_4__2_n_0),
        .O(\esc_cmd_data_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0200FFFF02000808)) 
    tx_dl_lp_dp_i_2__5
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(dl3_txulpsexit),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_7__2_n_0 ),
        .O(tx_dl_lp_dp_i_2__5_n_0));
  LUT6 #(
    .INIT(64'h040404040404FF04)) 
    tx_dl_lp_dp_i_4__2
       (.I0(txlpdtesc_r),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(dl_ulpsactivenot_i_3__2_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(tx_dl_lp_dp_i_4__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txlpdtesc_r_i_1__2
       (.I0(dl3_txlpdtesc),
        .I1(txulpsesc_r_reg),
        .I2(dl3_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txlpdtesc_r),
        .O(dl3_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[0]_i_1__2 
       (.I0(dl_ulpsactivenot_i_3__2_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl3_txtriggeresc[0]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [0]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[1]_i_1__2 
       (.I0(dl_ulpsactivenot_i_3__2_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl3_txtriggeresc[1]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [1]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[2]_i_1__2 
       (.I0(dl_ulpsactivenot_i_3__2_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl3_txtriggeresc[2]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [2]));
  LUT6 #(
    .INIT(64'hFF0FFF0FFF0FEF0F)) 
    \txtriggeresc_r[3]_i_1__2 
       (.I0(dl3_txtriggeresc[0]),
        .I1(dl3_txtriggeresc[3]),
        .I2(txulpsesc_r_reg_0),
        .I3(\txtriggeresc_r[3]_i_3__2_n_0 ),
        .I4(dl3_txtriggeresc[2]),
        .I5(dl3_txtriggeresc[1]),
        .O(\dl3_txtriggeresc[0] ));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[3]_i_2__2 
       (.I0(dl_ulpsactivenot_i_3__2_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl3_txtriggeresc[3]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [3]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \txtriggeresc_r[3]_i_3__2 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(dl3_txrequestesc),
        .I5(s_level_out_d3),
        .O(\txtriggeresc_r[3]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txulpsesc_r_i_1__2
       (.I0(dl3_txulpsesc),
        .I1(txulpsesc_r_reg),
        .I2(dl3_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txulpsesc_r),
        .O(dl3_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_38
   (out,
    dl_stopstate_reg,
    init_done_reg,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    E,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    core_rst,
    dl3_forcetxstopmode,
    core_clk,
    dl_stopstate_reg_0,
    dl_stopstate_i,
    Q,
    dl_stopstate_reg_1,
    dl_stopstate_reg_2,
    en_hs_datapath_reg,
    en_hs_datapath_reg_0,
    cl_txclkactivehs_i,
    hs_xfer_done_all,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_2 ,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    cl_init_done_coreclk_i,
    esc_start_reg,
    system_rst);
  output out;
  output dl_stopstate_reg;
  output init_done_reg;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output [0:0]E;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  input core_rst;
  input dl3_forcetxstopmode;
  input core_clk;
  input dl_stopstate_reg_0;
  input dl_stopstate_i;
  input [2:0]Q;
  input dl_stopstate_reg_1;
  input dl_stopstate_reg_2;
  input en_hs_datapath_reg;
  input en_hs_datapath_reg_0;
  input cl_txclkactivehs_i;
  input hs_xfer_done_all;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input cl_init_done_coreclk_i;
  input esc_start_reg;
  input system_rst;

  wire [0:0]E;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_5__2_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl3_forcetxstopmode;
  wire dl_stopstate_i;
  wire dl_stopstate_i_2__2_n_0;
  wire dl_stopstate_i_4__2_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_stopstate_reg_2;
  wire en_cal_hs_datapath_i_3__2_n_0;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire esc_start_reg;
  wire hs_xfer_done_all;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFEEFECCCCCCCC)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_1__2 
       (.I0(en_hs_datapath_reg_0),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I2(Q[1]),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .I4(\FSM_sequential_dl_tx_sm_state[2]_i_5__2_n_0 ),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .O(E));
  LUT5 #(
    .INIT(32'hEFEFEFFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_5__2 
       (.I0(init_done_reg),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_i),
        .I3(tx_dl_lp_dn_reg),
        .I4(tx_dl_lp_dn_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'hEEFFEFEFEEEEEEEE)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_6__2 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0]_2 ),
        .I1(init_done_reg),
        .I2(Q[0]),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT4 #(
    .INIT(16'hAA8A)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_8__2 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d3),
        .I2(esc_start_reg),
        .I3(system_rst),
        .O(init_done_reg));
  LUT4 #(
    .INIT(16'hABA8)) 
    dl_stopstate_i_1__2
       (.I0(dl_stopstate_i_2__2_n_0),
        .I1(dl_stopstate_reg_0),
        .I2(dl_stopstate_i_4__2_n_0),
        .I3(dl_stopstate_i),
        .O(dl_stopstate_reg));
  LUT5 #(
    .INIT(32'hAAFFAABF)) 
    dl_stopstate_i_2__2
       (.I0(init_done_reg),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(dl_stopstate_reg_1),
        .I4(dl_stopstate_reg_2),
        .O(dl_stopstate_i_2__2_n_0));
  LUT5 #(
    .INIT(32'hAEAAAFEA)) 
    dl_stopstate_i_4__2
       (.I0(init_done_reg),
        .I1(en_hs_datapath_reg),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(dl_stopstate_i_4__2_n_0));
  LUT5 #(
    .INIT(32'hAAAFAAAE)) 
    en_cal_hs_datapath_i_1__2
       (.I0(en_cal_hs_datapath_i_3__2_n_0),
        .I1(en_hs_datapath_reg),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(en_hs_datapath_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'hAAAABBBBEEAEBBBB)) 
    en_cal_hs_datapath_i_3__2
       (.I0(init_done_reg),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_i),
        .I3(hs_xfer_done_all),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(en_cal_hs_datapath_i_3__2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl3_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'hFFFF8A88)) 
    tx_dl_lp_dp_i_1__6
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I1(\FSM_sequential_dl_tx_sm_state[2]_i_5__2_n_0 ),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .I3(Q[1]),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_39
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    s_level_out_d3_reg_0,
    s_level_out_d3_reg_1,
    s_level_out_d3_reg_2,
    core_rst,
    dl3_txrequestesc,
    core_clk,
    dl_status_bit_6_reg,
    Q,
    dl_status_bit_6_reg_0,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    esc_start_reg,
    timeout_hsexit_all,
    dl_stopstate_i_2__2,
    esc_active_sync_r);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output s_level_out_d3_reg_0;
  output s_level_out_d3_reg_1;
  output s_level_out_d3_reg_2;
  input core_rst;
  input dl3_txrequestesc;
  input core_clk;
  input dl_status_bit_6_reg;
  input [2:0]Q;
  input dl_status_bit_6_reg_0;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input esc_start_reg;
  input timeout_hsexit_all;
  input dl_stopstate_i_2__2;
  input esc_active_sync_r;

  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire [2:0]Q;
  wire core_clk;
  wire core_rst;
  wire dl3_txrequestesc;
  wire dl_status_bit_6_i_3__2_n_0;
  wire dl_status_bit_6_i_4__2_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire dl_stopstate_i_2__2;
  wire esc_active_sync_r;
  wire esc_start_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  wire s_level_out_d3_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;

  assign out = s_level_out_d3;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_3__2 
       (.I0(s_level_out_d3),
        .I1(esc_start_reg),
        .O(s_level_out_d3_reg_2));
  LUT6 #(
    .INIT(64'hFFFFFFFFD1D111D1)) 
    dl_status_bit_6_i_1__2
       (.I0(dl_status_bit_6_reg),
        .I1(Q[2]),
        .I2(dl_status_bit_6_reg_0),
        .I3(Q[1]),
        .I4(dl_status_bit_6_i_3__2_n_0),
        .I5(dl_status_bit_6_i_4__2_n_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT3 #(
    .INIT(8'hBF)) 
    dl_status_bit_6_i_3__2
       (.I0(Q[0]),
        .I1(esc_start_reg),
        .I2(s_level_out_d3),
        .O(dl_status_bit_6_i_3__2_n_0));
  LUT6 #(
    .INIT(64'hEECCCCCCEECCFCCC)) 
    dl_status_bit_6_i_4__2
       (.I0(s_level_out_d3_reg_0),
        .I1(dl_status_bit_6_reg_1),
        .I2(dl_status_bit_6_reg_2),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(dl_status_bit_6_i_4__2_n_0));
  LUT6 #(
    .INIT(64'h0070FF7000700070)) 
    dl_status_bit_6_i_5__2
       (.I0(s_level_out_d3),
        .I1(esc_start_reg),
        .I2(timeout_hsexit_all),
        .I3(Q[0]),
        .I4(dl_stopstate_i_2__2),
        .I5(esc_active_sync_r),
        .O(s_level_out_d3_reg_0));
  LUT4 #(
    .INIT(16'hFF70)) 
    esc_start_i_3
       (.I0(s_level_out_d3),
        .I1(esc_start_reg),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(s_level_out_d3_reg_1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl3_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_40
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    en_hs_datapath14_out,
    s_level_out_d3_reg_1,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    init_done_reg,
    timeout_prepare_reg,
    dl_status_bit_6_reg,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    Q,
    en_lp_01_cnt_reg,
    en_lp_01_cnt_reg_0,
    tx_dl_lp_dn_reg,
    en_hs_datapath_reg,
    cl_txclkactivehs_i,
    en_lp_01_cnt_reg_1,
    en_lp_01_cnt_reg_2,
    tx_dl_lp_dn_reg_0,
    en_lp_01_cnt_reg_3,
    cl_init_done_coreclk_i,
    dl_stopstate_reg,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    dl_status_bit_6_reg_0,
    tx_dl_lp_dp_reg);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output s_level_out_d3_reg_0;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  output en_hs_datapath14_out;
  output s_level_out_d3_reg_1;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output init_done_reg;
  output timeout_prepare_reg;
  output dl_status_bit_6_reg;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input [2:0]Q;
  input en_lp_01_cnt_reg;
  input en_lp_01_cnt_reg_0;
  input tx_dl_lp_dn_reg;
  input en_hs_datapath_reg;
  input cl_txclkactivehs_i;
  input en_lp_01_cnt_reg_1;
  input en_lp_01_cnt_reg_2;
  input tx_dl_lp_dn_reg_0;
  input en_lp_01_cnt_reg_3;
  input cl_init_done_coreclk_i;
  input dl_stopstate_reg;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input dl_status_bit_6_reg_0;
  input tx_dl_lp_dp_reg;

  wire \FSM_sequential_dl_tx_sm_state[2]_i_10__1_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_stopstate_reg;
  wire dl_txrequesths_r;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg;
  wire en_lp_01_cnt15_out;
  wire en_lp_01_cnt_i_3__2_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire en_lp_01_cnt_reg_3;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_prepare_reg;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_3__6_n_0;
  wire tx_dl_lp_dp_i_4__3_n_0;
  wire tx_dl_lp_dp_reg;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000FF1FFFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_3__2 
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg),
        .I2(cl_txclkactivehs_i),
        .I3(en_lp_01_cnt_reg_2),
        .I4(tx_dl_lp_dp_reg),
        .I5(tx_dl_lp_dn_reg_0),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h00E0FFFFFFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_10__1 
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg),
        .I2(cl_txclkactivehs_i),
        .I3(en_lp_01_cnt_reg_1),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'h000033BB00003FFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_3__2 
       (.I0(cl_init_done_coreclk_i),
        .I1(\FSM_sequential_dl_tx_sm_state[2]_i_10__1_n_0 ),
        .I2(s_level_out_d3_reg_0),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(init_done_reg));
  LUT6 #(
    .INIT(64'hF3FFC3F7F3FFF3F7)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_9__2 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(s_level_out_d3_reg_1),
        .I5(en_lp_01_cnt_reg_1),
        .O(timeout_prepare_reg));
  LUT6 #(
    .INIT(64'h0505111100FF5555)) 
    dl_status_bit_6_i_2__2
       (.I0(dl_status_bit_6_reg_0),
        .I1(cl_init_done_coreclk_i),
        .I2(s_level_out_d3_reg_1),
        .I3(s_level_out_d3_reg_0),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(dl_status_bit_6_reg));
  LUT6 #(
    .INIT(64'h00FF00008080C0C0)) 
    dl_stopstate_i_3__2
       (.I0(s_level_out_d3_reg_1),
        .I1(Q[0]),
        .I2(cl_init_done_coreclk_i),
        .I3(dl_stopstate_reg),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT5 #(
    .INIT(32'h01010151)) 
    dl_stopstate_i_5
       (.I0(Q[2]),
        .I1(cl_init_done_coreclk_i),
        .I2(Q[1]),
        .I3(s_level_out_d3_reg_0),
        .I4(Q[0]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  LUT3 #(
    .INIT(8'h1F)) 
    en_cal_hs_datapath_i_4__1
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg),
        .I2(cl_txclkactivehs_i),
        .O(s_level_out_d3_reg_1));
  LUT6 #(
    .INIT(64'h000000000000A800)) 
    en_hs_datapath_i_1__2
       (.I0(Q[2]),
        .I1(s_level_out_d3),
        .I2(en_hs_datapath_reg),
        .I3(cl_txclkactivehs_i),
        .I4(Q[0]),
        .I5(en_lp_01_cnt_reg),
        .O(en_hs_datapath14_out));
  LUT5 #(
    .INIT(32'hAAFEAA02)) 
    en_lp_01_cnt_i_1__3
       (.I0(en_lp_01_cnt15_out),
        .I1(Q[2]),
        .I2(en_lp_01_cnt_i_3__2_n_0),
        .I3(en_lp_01_cnt_reg),
        .I4(en_lp_01_cnt_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h0407040400000000)) 
    en_lp_01_cnt_i_2__2
       (.I0(en_lp_01_cnt_reg_1),
        .I1(Q[0]),
        .I2(s_level_out_d3_reg_1),
        .I3(en_lp_01_cnt_reg_2),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(en_lp_01_cnt_reg_3),
        .O(en_lp_01_cnt15_out));
  LUT6 #(
    .INIT(64'h0FF00FF00BF0FBF0)) 
    en_lp_01_cnt_i_3__2
       (.I0(en_lp_01_cnt_reg_2),
        .I1(tx_dl_lp_dn_reg_0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(en_lp_01_cnt_reg_1),
        .I5(s_level_out_d3_reg_1),
        .O(en_lp_01_cnt_i_3__2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEEEFEE)) 
    tx_dl_lp_dn_i_1__6
       (.I0(tx_dl_lp_dn_reg),
        .I1(tx_dl_lp_dp_i_4__3_n_0),
        .I2(s_level_out_d3_reg_0),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0008)) 
    tx_dl_lp_dp_i_2__6
       (.I0(tx_dl_lp_dp_i_3__6_n_0),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(tx_dl_lp_dn_reg),
        .I5(tx_dl_lp_dp_i_4__3_n_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFF1F000000000000)) 
    tx_dl_lp_dp_i_3__6
       (.I0(s_level_out_d3),
        .I1(en_hs_datapath_reg),
        .I2(cl_txclkactivehs_i),
        .I3(en_lp_01_cnt_reg_2),
        .I4(tx_dl_lp_dp_reg),
        .I5(tx_dl_lp_dn_reg_0),
        .O(tx_dl_lp_dp_i_3__6_n_0));
  LUT6 #(
    .INIT(64'h00000000BF0FB00F)) 
    tx_dl_lp_dp_i_4__3
       (.I0(s_level_out_d3_reg_1),
        .I1(en_lp_01_cnt_reg_1),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(cl_init_done_coreclk_i),
        .I5(Q[2]),
        .O(tx_dl_lp_dp_i_4__3_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_41
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    D,
    en_cal_hs_datapath13_out,
    core_rst,
    core_clk,
    esc_start_reg,
    esc_start_reg_0,
    esc_start_reg_1,
    Q,
    esc_start,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    en_cal_hs_datapath_reg,
    en_cal_hs_datapath_reg_0,
    cl_txclkactivehs_i,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_sm_state[1]_i_2__2_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_2 ,
    \FSM_sequential_dl_tx_sm_state[2]_i_7__2_0 );
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output [2:0]D;
  output en_cal_hs_datapath13_out;
  input core_rst;
  input core_clk;
  input esc_start_reg;
  input esc_start_reg_0;
  input esc_start_reg_1;
  input [2:0]Q;
  input esc_start;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[2] ;
  input \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input en_cal_hs_datapath_reg;
  input en_cal_hs_datapath_reg_0;
  input cl_txclkactivehs_i;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input \FSM_sequential_dl_tx_sm_state[1]_i_2__2_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  input \FSM_sequential_dl_tx_sm_state[2]_i_7__2_0 ;

  wire [2:0]D;
  wire \FSM_sequential_dl_tx_sm_state[0]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_2__2_0 ;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_2__2_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_4__2_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_12__0_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_7__2_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_7__2_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  wire [2:0]Q;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire en_cal_hs_datapath13_out;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire esc_start;
  wire esc_start_reg;
  wire esc_start_reg_0;
  wire esc_start_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000000033AA0FFF)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_1__2 
       (.I0(\FSM_sequential_dl_tx_sm_state[0]_i_2__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h8880)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_2__2 
       (.I0(en_cal_hs_datapath_reg),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_sm_state[0]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAA2)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_1__2 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2__2_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(esc_start_reg),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFDFFFDCFFCFFFC)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_sm_state[0]_i_2__2_n_0 ),
        .I1(esc_start_reg),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_sm_state[1]_i_4__2_n_0 ),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_2__2_n_0 ));
  LUT4 #(
    .INIT(16'h8880)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_4__2 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2__2_0 ),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_4__2_n_0 ));
  LUT5 #(
    .INIT(32'hDFDFDFFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_12__0 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state[2]_i_7__2_0 ),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'h040F)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_2__2 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_7__2_n_0 ),
        .I1(Q[1]),
        .I2(esc_start_reg),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[2] ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hF0F7FFF7FFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_7__2 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_12__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_2 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_7__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000D0)) 
    en_cal_hs_datapath_i_2__2
       (.I0(en_cal_hs_datapath_reg),
        .I1(s_level_out_d3),
        .I2(Q[2]),
        .I3(en_cal_hs_datapath_reg_0),
        .I4(Q[0]),
        .I5(esc_start_reg),
        .O(en_cal_hs_datapath13_out));
  LUT6 #(
    .INIT(64'h1311131310111010)) 
    esc_start_i_1__2
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_7__2_n_0 ),
        .I1(esc_start_reg),
        .I2(esc_start_reg_0),
        .I3(esc_start_reg_1),
        .I4(Q[1]),
        .I5(esc_start),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_42
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    s_level_out_d3_reg_0,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    Q,
    esc_active_sync_r,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    timeout_hsexit_all);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output s_level_out_d3_reg_0;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input [2:0]Q;
  input esc_active_sync_r;
  input \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input timeout_hsexit_all;

  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire [2:0]Q;
  wire core_clk;
  wire core_rst;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hB0B0B0B0B0BFBFBF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_4__2 
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(Q[0]),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I5(timeout_hsexit_all),
        .O(s_level_out_d3_reg_0));
  LUT5 #(
    .INIT(32'h00800000)) 
    esc_start_i_2__2
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(s_level_out_d3),
        .I4(esc_active_sync_r),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_43
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_44
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_45
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_46
   (out,
    s_level_out_d3_reg_0,
    en_cal_hs_datapath,
    tx_div4_clk,
    hs_dp_sync_out);
  output out;
  output s_level_out_d3_reg_0;
  input en_cal_hs_datapath;
  input tx_div4_clk;
  input hs_dp_sync_out;

  wire en_cal_hs_datapath;
  wire hs_dp_sync_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \zero_count[0]_i_4__1 
       (.I0(s_level_out_d3),
        .I1(hs_dp_sync_out),
        .O(s_level_out_d3_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_47
   (dl_status_reg,
    tx_div4_clk);
  input [0:0]dl_status_reg;
  input tx_div4_clk;

  wire [0:0]dl_status_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_status_reg),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_49
   (out,
    s_level_out_d3_reg_0,
    core_rst,
    hs_xfer_done_i,
    core_clk,
    dl_hs_exit_done_i,
    cl_txclkactivehs_i_3);
  output out;
  output s_level_out_d3_reg_0;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;
  input [2:0]dl_hs_exit_done_i;
  input cl_txclkactivehs_i_3;

  wire cl_txclkactivehs_i_3;
  wire core_clk;
  wire core_rst;
  wire [2:0]dl_hs_exit_done_i;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT5 #(
    .INIT(32'h80000000)) 
    start_clkpost_r_i_5
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[1]),
        .I2(dl_hs_exit_done_i[2]),
        .I3(dl_hs_exit_done_i[0]),
        .I4(cl_txclkactivehs_i_3),
        .O(s_level_out_d3_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_53
   (s_level_out_d3_reg_0,
    dl2_forcetxstopmode,
    dl0_txclkesc,
    esc_ctrl_all_sm_reg);
  output s_level_out_d3_reg_0;
  input dl2_forcetxstopmode;
  input dl0_txclkesc;
  input esc_ctrl_all_sm_reg;

  wire dl0_txclkesc;
  wire dl2_forcetxstopmode;
  wire esc_ctrl_all_sm_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1__1 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl2_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_54
   (out,
    esc_start,
    dl0_txclkesc);
  output out;
  input esc_start;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire esc_start;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_55
   (D,
    \bit_cnt_reg[0] ,
    \esc_cmd_data_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[3] ,
    \esc_cmd_data_reg[0]_0 ,
    E,
    \FSM_sequential_dl_tx_state_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \dl2_txdataesc[7] ,
    dl2_txvalidesc_0,
    dl2_txvalidesc_1,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_state_reg[1] ,
    \dl2_txtriggeresc[0] ,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    dl2_txulpsesc_0,
    dl2_txlpdtesc_0,
    esc_ctrl_t_reg,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    Q,
    \FSM_sequential_dl_tx_state[2]_i_4__1_0 ,
    \esc_cmd_data_reg[0]_1 ,
    txlpdtesc_r,
    txulpsesc_r,
    \bit_cnt_reg[0]_0 ,
    \bit_cnt_reg[0]_1 ,
    \bit_cnt_reg[0]_2 ,
    esc_ctrl_t_reg_0,
    dl2_txrequestesc,
    \bit_cnt_reg[0]_3 ,
    \bit_cnt_reg[3] ,
    \bit_cnt_reg[3]_0 ,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \esc_cmd_data_reg[6] ,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_reg_3,
    \FSM_sequential_dl_tx_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_state_reg[0]_3 ,
    esc_ctrl_all_sm_reg,
    out,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_axi_if_reg,
    \bit_cnt_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[3]_0 ,
    \esc_cmd_data_reg[7] ,
    dl2_txvalidesc,
    dl2_txulpsexit,
    \esc_cmd_data_reg[6]_0 ,
    \esc_cmd_data_reg[5] ,
    \esc_cmd_data_reg[5]_0 ,
    dl2_txdataesc,
    \esc_cmd_data_reg[6]_1 ,
    \esc_cmd_data_reg[3] ,
    txulpsesc_r_reg,
    tx_dl_lp_dn_esc_i,
    \FSM_sequential_dl_tx_state_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[0]_5 ,
    \esc_cmd_data_reg[0]_2 ,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    txulpsesc_r_reg_0,
    tx_dl_lp_dn_reg_3,
    dl2_ulpsactivenot,
    dl2_txtriggeresc,
    dl2_txulpsesc,
    dl2_txlpdtesc,
    esc_ctrl_t_reg_1,
    esc_ctrl_t_reg_2);
  output [3:0]D;
  output [1:0]\bit_cnt_reg[0] ;
  output \esc_cmd_data_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[3] ;
  output \esc_cmd_data_reg[0]_0 ;
  output [0:0]E;
  output \FSM_sequential_dl_tx_state_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[0]_0 ;
  output \FSM_sequential_dl_tx_state_reg[0]_1 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\dl2_txdataesc[7] ;
  output [0:0]dl2_txvalidesc_0;
  output dl2_txvalidesc_1;
  output s_level_out_d3_reg_0;
  output [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output [0:0]\dl2_txtriggeresc[0] ;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  output dl2_txulpsesc_0;
  output dl2_txlpdtesc_0;
  output esc_ctrl_t_reg;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state[2]_i_4__1_0 ;
  input \esc_cmd_data_reg[0]_1 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input \bit_cnt_reg[0]_0 ;
  input \bit_cnt_reg[0]_1 ;
  input \bit_cnt_reg[0]_2 ;
  input esc_ctrl_t_reg_0;
  input dl2_txrequestesc;
  input [3:0]\bit_cnt_reg[0]_3 ;
  input \bit_cnt_reg[3] ;
  input \bit_cnt_reg[3]_0 ;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input [7:0]\esc_cmd_data_reg[6] ;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_reg_3;
  input \FSM_sequential_dl_tx_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_state_reg[0]_3 ;
  input esc_ctrl_all_sm_reg;
  input out;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_axi_if_reg;
  input \bit_cnt_reg[0]_4 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  input \esc_cmd_data_reg[7] ;
  input dl2_txvalidesc;
  input dl2_txulpsexit;
  input \esc_cmd_data_reg[6]_0 ;
  input \esc_cmd_data_reg[5] ;
  input \esc_cmd_data_reg[5]_0 ;
  input [7:0]dl2_txdataesc;
  input \esc_cmd_data_reg[6]_1 ;
  input \esc_cmd_data_reg[3] ;
  input txulpsesc_r_reg;
  input tx_dl_lp_dn_esc_i;
  input \FSM_sequential_dl_tx_state_reg[0]_4 ;
  input \FSM_sequential_dl_tx_state_reg[0]_5 ;
  input \esc_cmd_data_reg[0]_2 ;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input txulpsesc_r_reg_0;
  input tx_dl_lp_dn_reg_3;
  input dl2_ulpsactivenot;
  input [3:0]dl2_txtriggeresc;
  input dl2_txulpsesc;
  input dl2_txlpdtesc;
  input esc_ctrl_t_reg_1;
  input esc_ctrl_t_reg_2;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_3__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_5__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__1_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_12__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_13__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_14__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8__1_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9__1_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire \FSM_sequential_dl_tx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_4 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_5 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  wire [3:0]Q;
  wire \bit_cnt[0]_i_2__1_n_0 ;
  wire \bit_cnt[3]_i_13__1_n_0 ;
  wire \bit_cnt[3]_i_3__1_n_0 ;
  wire \bit_cnt[3]_i_4__1_n_0 ;
  wire \bit_cnt[3]_i_5__1_n_0 ;
  wire \bit_cnt[3]_i_6__1_n_0 ;
  wire \bit_cnt[3]_i_8__1_n_0 ;
  wire [1:0]\bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[0]_1 ;
  wire \bit_cnt_reg[0]_2 ;
  wire [3:0]\bit_cnt_reg[0]_3 ;
  wire \bit_cnt_reg[0]_4 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire dl0_txclkesc;
  wire [7:0]dl2_txdataesc;
  wire [7:0]\dl2_txdataesc[7] ;
  wire dl2_txlpdtesc;
  wire dl2_txlpdtesc_0;
  wire dl2_txrequestesc;
  wire [3:0]dl2_txtriggeresc;
  wire [0:0]\dl2_txtriggeresc[0] ;
  wire dl2_txulpsesc;
  wire dl2_txulpsesc_0;
  wire dl2_txulpsexit;
  wire dl2_txvalidesc;
  wire [0:0]dl2_txvalidesc_0;
  wire dl2_txvalidesc_1;
  wire dl2_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3__1_n_0;
  wire \esc_cmd_data[0]_i_2__1_n_0 ;
  wire \esc_cmd_data[0]_i_3__1_n_0 ;
  wire \esc_cmd_data[0]_i_4__1_n_0 ;
  wire \esc_cmd_data[1]_i_2__1_n_0 ;
  wire \esc_cmd_data[2]_i_2__1_n_0 ;
  wire \esc_cmd_data[5]_i_2__1_n_0 ;
  wire \esc_cmd_data[6]_i_2__1_n_0 ;
  wire \esc_cmd_data[7]_i_5__1_n_0 ;
  wire \esc_cmd_data[7]_i_8__1_n_0 ;
  wire \esc_cmd_data_reg[0] ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg[0]_1 ;
  wire \esc_cmd_data_reg[0]_2 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[5] ;
  wire \esc_cmd_data_reg[5]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire \esc_cmd_data_reg[6]_0 ;
  wire \esc_cmd_data_reg[6]_1 ;
  wire \esc_cmd_data_reg[7] ;
  wire esc_ctrl_all_sm_reg;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_ctrl_t_i_2__1_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire esc_ctrl_t_reg_2;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_10__1_n_0;
  wire tx_dl_lp_dn_i_11__1_n_0;
  wire tx_dl_lp_dn_i_13__1_n_0;
  wire tx_dl_lp_dn_i_14__1_n_0;
  wire tx_dl_lp_dn_i_3__1_n_0;
  wire tx_dl_lp_dn_i_5__1_n_0;
  wire tx_dl_lp_dn_i_8__1_n_0;
  wire tx_dl_lp_dn_i_9__1_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;
  wire tx_dl_lp_dp_i_2__3_n_0;
  wire tx_dl_lp_dp_i_4__1_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3__1_n_0 ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0604)) 
    \FSM_sequential_dl_tx_state[0]_i_1__1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[0]_i_2__1_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_3__1_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h888F888888888888)) 
    \FSM_sequential_dl_tx_state[0]_i_2__1 
       (.I0(esc_ctrl_t_reg_0),
        .I1(\FSM_sequential_dl_tx_state[0]_i_4__1_n_0 ),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h00003000FF0030AA)) 
    \FSM_sequential_dl_tx_state[0]_i_3__1 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ),
        .I1(Q[0]),
        .I2(\FSM_sequential_dl_tx_state[0]_i_5__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h3F3FBFBF3F3FBFFF)) 
    \FSM_sequential_dl_tx_state[0]_i_4__1 
       (.I0(Q[2]),
        .I1(s_level_out_d3),
        .I2(dl2_txrequestesc),
        .I3(txulpsesc_r),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'hFF7F7F7F)) 
    \FSM_sequential_dl_tx_state[0]_i_5__1 
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl2_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl2_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[0]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFEEEEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[1]_i_1__1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3__1_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(dl_ulpsactivenot_i_3__1_n_0),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAEFAE)) 
    \FSM_sequential_dl_tx_state[1]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[1]_i_5__1_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0010001000100000)) 
    \FSM_sequential_dl_tx_state[1]_i_3__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I1(Q[2]),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(dl_ulpsactivenot_i_3__1_n_0),
        .I4(txulpsesc_r),
        .I5(txlpdtesc_r),
        .O(\FSM_sequential_dl_tx_state[1]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \FSM_sequential_dl_tx_state[1]_i_4__1 
       (.I0(dl2_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(\bit_cnt[3]_i_5__1_n_0 ),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h0A000A0C0A000A00)) 
    \FSM_sequential_dl_tx_state[1]_i_5__1 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4__1_0 ),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(dl_ulpsactivenot_i_3__1_n_0),
        .I3(txlpdtesc_r),
        .I4(txulpsesc_r),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAFAAABAA)) 
    \FSM_sequential_dl_tx_state[2]_i_1__1 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_2__1_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAB00AA0000000000)) 
    \FSM_sequential_dl_tx_state[2]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .I1(\bit_cnt_reg[0]_2 ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(Q[0]),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[2]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFE000000)) 
    \FSM_sequential_dl_tx_state[2]_i_3__1 
       (.I0(txulpsesc_r),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(txlpdtesc_r),
        .I3(s_level_out_d3),
        .I4(dl2_txrequestesc),
        .O(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF07000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4__1 
       (.I0(Q[0]),
        .I1(txlpdtesc_r),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6__1_n_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF000455550004)) 
    \FSM_sequential_dl_tx_state[2]_i_6__1 
       (.I0(\bit_cnt_reg[0]_1 ),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(\bit_cnt_reg[0]_2 ),
        .I4(dl_ulpsactivenot_i_3__1_n_0),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4__1_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0FFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_10__1 
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(Q[2]),
        .I2(txulpsesc_r_reg),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(\bit_cnt[3]_i_5__1_n_0 ),
        .I5(\bit_cnt_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_12__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[3]_0 [3]),
        .I4(txulpsesc_r),
        .I5(dl_ulpsactivenot_i_3__1_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_12__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \FSM_sequential_dl_tx_state[3]_i_13__1 
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[3]_i_13__1_n_0 ));
  LUT6 #(
    .INIT(64'h0D0D55070D0D5505)) 
    \FSM_sequential_dl_tx_state[3]_i_14__1 
       (.I0(Q[1]),
        .I1(\bit_cnt[3]_i_5__1_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state[3]_i_14__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEE)) 
    \FSM_sequential_dl_tx_state[3]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_2 ),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[3]_i_8__1_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_9__1_n_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAEAAAA)) 
    \FSM_sequential_dl_tx_state[3]_i_3__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10__1_n_0 ),
        .I1(esc_ctrl_t_reg_0),
        .I2(Q[2]),
        .I3(txlpdtesc_r),
        .I4(\FSM_sequential_dl_tx_state[3]_i_12__1_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_13__1_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \FSM_sequential_dl_tx_state[3]_i_4__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12__1_n_0 ),
        .I1(Q[0]),
        .I2(out),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(tx_dl_lp_dn_i_5__1_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h01FFFFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7__1 
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl2_txrequestesc),
        .I4(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ));
  LUT4 #(
    .INIT(16'h0444)) 
    \FSM_sequential_dl_tx_state[3]_i_8__1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(dl2_txrequestesc),
        .I3(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_8__1_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFEEEEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_9__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_14__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_4 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_state_reg[0]_5 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'h000000FF000000EF)) 
    \bit_cnt[0]_i_1__1 
       (.I0(\bit_cnt_reg[0]_3 [2]),
        .I1(\bit_cnt_reg[0]_3 [1]),
        .I2(\bit_cnt_reg[0]_3 [3]),
        .I3(\bit_cnt_reg[0]_1 ),
        .I4(\bit_cnt_reg[0]_3 [0]),
        .I5(\bit_cnt[0]_i_2__1_n_0 ),
        .O(\bit_cnt_reg[0] [0]));
  LUT5 #(
    .INIT(32'hABFFFFFF)) 
    \bit_cnt[0]_i_2__1 
       (.I0(Q[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl2_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000001F0)) 
    \bit_cnt[3]_i_13__1 
       (.I0(\bit_cnt[3]_i_5__1_n_0 ),
        .I1(\esc_cmd_data_reg[6]_0 ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\bit_cnt[3]_i_13__1_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFFFEEEE)) 
    \bit_cnt[3]_i_1__1 
       (.I0(\bit_cnt[3]_i_3__1_n_0 ),
        .I1(\bit_cnt[3]_i_4__1_n_0 ),
        .I2(\bit_cnt[3]_i_5__1_n_0 ),
        .I3(\bit_cnt[3]_i_6__1_n_0 ),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h0000CA300000CA00)) 
    \bit_cnt[3]_i_2__1 
       (.I0(\bit_cnt[3]_i_8__1_n_0 ),
        .I1(\bit_cnt_reg[3] ),
        .I2(\bit_cnt_reg[0]_3 [0]),
        .I3(\bit_cnt_reg[0]_3 [3]),
        .I4(\bit_cnt_reg[0]_1 ),
        .I5(\bit_cnt_reg[3]_0 ),
        .O(\bit_cnt_reg[0] [1]));
  LUT6 #(
    .INIT(64'h02020F0300020003)) 
    \bit_cnt[3]_i_3__1 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12__1_n_0 ),
        .I1(Q[2]),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(Q[1]),
        .I4(\bit_cnt[3]_i_5__1_n_0 ),
        .I5(\bit_cnt_reg[0]_4 ),
        .O(\bit_cnt[3]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10000000)) 
    \bit_cnt[3]_i_4__1 
       (.I0(\bit_cnt[3]_i_5__1_n_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(Q[2]),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(\bit_cnt[3]_i_13__1_n_0 ),
        .O(\bit_cnt[3]_i_4__1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_5__1 
       (.I0(dl2_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txlpdtesc_r),
        .O(\bit_cnt[3]_i_5__1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_6__1 
       (.I0(dl2_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .O(\bit_cnt[3]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFAB)) 
    \bit_cnt[3]_i_8__1 
       (.I0(dl_ulpsactivenot_i_3__1_n_0),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_3 [2]),
        .I5(\bit_cnt_reg[0]_3 [1]),
        .O(\bit_cnt[3]_i_8__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000070400000000)) 
    dl_txreadyesc_i_1__1
       (.I0(dl2_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(dl_txreadyesc_reg),
        .I3(dl_txreadyesc_reg_0),
        .I4(dl_ulpsactivenot_i_3__1_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl2_txvalidesc_1));
  LUT6 #(
    .INIT(64'hFFFFFEFFEEEEEEEE)) 
    dl_ulpsactivenot_i_1__1
       (.I0(dl_txreadyesc_reg),
        .I1(dl2_txulpsexit),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(txulpsesc_r),
        .I4(dl_ulpsactivenot_i_3__1_n_0),
        .I5(dl2_ulpsactivenot),
        .O(s_level_out_d3_reg_0));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_3__1
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .O(dl_ulpsactivenot_i_3__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \esc_cmd_data[0]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl2_txdataesc[0]),
        .I4(\esc_cmd_data[0]_i_2__1_n_0 ),
        .I5(\esc_cmd_data[0]_i_3__1_n_0 ),
        .O(\dl2_txdataesc[7] [0]));
  LUT5 #(
    .INIT(32'h01000000)) 
    \esc_cmd_data[0]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\esc_cmd_data[0]_i_4__1_n_0 ),
        .I4(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h2A00000000000000)) 
    \esc_cmd_data[0]_i_3__1 
       (.I0(\esc_cmd_data_reg[6]_1 ),
        .I1(dl2_txvalidesc),
        .I2(\esc_cmd_data_reg[7] ),
        .I3(dl2_txrequestesc),
        .I4(s_level_out_d3),
        .I5(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h007F7F7F)) 
    \esc_cmd_data[0]_i_4__1 
       (.I0(txulpsesc_r),
        .I1(s_level_out_d3),
        .I2(dl2_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl2_txvalidesc),
        .O(\esc_cmd_data[0]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[1]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl2_txdataesc[1]),
        .I4(\esc_cmd_data[1]_i_2__1_n_0 ),
        .O(\dl2_txdataesc[7] [1]));
  LUT6 #(
    .INIT(64'hA8FF000000000000)) 
    \esc_cmd_data[1]_i_2__1 
       (.I0(\bit_cnt[3]_i_6__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5__1_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[1]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[2]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl2_txdataesc[2]),
        .I4(\esc_cmd_data[2]_i_2__1_n_0 ),
        .O(\dl2_txdataesc[7] [2]));
  LUT6 #(
    .INIT(64'hA2FF000000000000)) 
    \esc_cmd_data[2]_i_2__1 
       (.I0(\bit_cnt[3]_i_6__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5__1_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[2]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[3]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [4]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__1_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl2_txdataesc[3]),
        .O(\dl2_txdataesc[7] [3]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[4]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [5]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__1_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl2_txdataesc[4]),
        .O(\dl2_txdataesc[7] [4]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[5]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [6]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__1_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl2_txdataesc[5]),
        .O(\dl2_txdataesc[7] [5]));
  LUT6 #(
    .INIT(64'h0000008088008888)) 
    \esc_cmd_data[5]_i_2__1 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[6]_1 ),
        .I2(txulpsesc_r),
        .I3(dl_ulpsactivenot_i_3__1_n_0),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[5]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFF888F88F8888888)) 
    \esc_cmd_data[6]_i_1__1 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(\esc_cmd_data_reg[6]_1 ),
        .I4(\esc_cmd_data[6]_i_2__1_n_0 ),
        .I5(dl2_txdataesc[6]),
        .O(\dl2_txdataesc[7] [6]));
  LUT5 #(
    .INIT(32'h3AAA2AAA)) 
    \esc_cmd_data[6]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(txlpdtesc_r),
        .I2(dl2_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r),
        .O(\esc_cmd_data[6]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDDDFFFDDDDD)) 
    \esc_cmd_data[7]_i_1__1 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[7]_i_5__1_n_0 ),
        .I3(\esc_cmd_data_reg[0]_1 ),
        .I4(\esc_cmd_data_reg[0]_2 ),
        .I5(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .O(dl2_txvalidesc_0));
  LUT6 #(
    .INIT(64'hEEAFAFAF00000000)) 
    \esc_cmd_data[7]_i_2__1 
       (.I0(\esc_cmd_data[7]_i_8__1_n_0 ),
        .I1(dl2_txdataesc[7]),
        .I2(\bit_cnt[3]_i_5__1_n_0 ),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl2_txvalidesc),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\dl2_txdataesc[7] [7]));
  LUT4 #(
    .INIT(16'hE000)) 
    \esc_cmd_data[7]_i_5__1 
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .I2(s_level_out_d3),
        .I3(dl2_txrequestesc),
        .O(\esc_cmd_data[7]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h5400000054005400)) 
    \esc_cmd_data[7]_i_8__1 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(dl_ulpsactivenot_i_3__1_n_0),
        .I5(txulpsesc_r),
        .O(\esc_cmd_data[7]_i_8__1_n_0 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_all_sm_i_1__1
       (.I0(Q[0]),
        .I1(esc_ctrl_all_sm_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0] ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_axi_if_i_2__1
       (.I0(Q[0]),
        .I1(esc_ctrl_axi_if_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_lane_sm_i_1__1
       (.I0(Q[0]),
        .I1(esc_ctrl_lane_sm_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00000000E2222222)) 
    esc_ctrl_t_i_1__1
       (.I0(esc_ctrl_t_reg_1),
        .I1(esc_ctrl_t_i_2__1_n_0),
        .I2(esc_ctrl_t_reg_0),
        .I3(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ),
        .I4(out),
        .I5(esc_ctrl_t_reg_2),
        .O(esc_ctrl_t_reg));
  LUT5 #(
    .INIT(32'h00032E0A)) 
    esc_ctrl_t_i_2__1
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(esc_ctrl_t_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hE222)) 
    esc_stopstate_i_2__1
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .I1(Q[1]),
        .I2(\FSM_sequential_dl_tx_state[2]_i_3__1_n_0 ),
        .I3(out),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    tx_dl_lp_dn_i_10__1
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(dl_ulpsactivenot_i_3__1_n_0),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_2),
        .O(tx_dl_lp_dn_i_10__1_n_0));
  LUT4 #(
    .INIT(16'h0080)) 
    tx_dl_lp_dn_i_11__1
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl2_txrequestesc),
        .I3(\esc_cmd_data_reg[6] [0]),
        .O(tx_dl_lp_dn_i_11__1_n_0));
  LUT6 #(
    .INIT(64'h00000F4000000040)) 
    tx_dl_lp_dn_i_13__1
       (.I0(dl_ulpsactivenot_i_3__1_n_0),
        .I1(txlpdtesc_r),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_13__1_n_0));
  LUT6 #(
    .INIT(64'h000000000000F777)) 
    tx_dl_lp_dn_i_14__1
       (.I0(s_level_out_d3),
        .I1(dl2_txrequestesc),
        .I2(Q[2]),
        .I3(dl2_txulpsexit),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_14__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    tx_dl_lp_dn_i_1__3
       (.I0(tx_dl_lp_dn_i_3__1_n_0),
        .I1(Q[3]),
        .I2(tx_dl_lp_dp_reg),
        .I3(tx_dl_lp_dn_i_5__1_n_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    tx_dl_lp_dn_i_2__1
       (.I0(tx_dl_lp_dn_i_8__1_n_0),
        .I1(tx_dl_lp_dn_i_9__1_n_0),
        .I2(tx_dl_lp_dn_i_10__1_n_0),
        .I3(tx_dl_lp_dn_i_11__1_n_0),
        .I4(tx_dl_lp_dn_reg),
        .I5(tx_dl_lp_dn_i_13__1_n_0),
        .O(\esc_cmd_data_reg[0] ));
  LUT6 #(
    .INIT(64'h2222FFFF2222E222)) 
    tx_dl_lp_dn_i_3__1
       (.I0(dl_ulpsactivenot_i_3__1_n_0),
        .I1(Q[2]),
        .I2(tx_dl_lp_dp_reg_2),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4__1_n_0 ),
        .O(tx_dl_lp_dn_i_3__1_n_0));
  LUT6 #(
    .INIT(64'hABAAAAAAABABABAB)) 
    tx_dl_lp_dn_i_5__1
       (.I0(tx_dl_lp_dn_i_14__1_n_0),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl2_txvalidesc),
        .I5(txlpdtesc_r),
        .O(tx_dl_lp_dn_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    tx_dl_lp_dn_i_8__1
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(\bit_cnt[3]_i_6__1_n_0 ),
        .I2(tx_dl_lp_dn_reg_2),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_3),
        .O(tx_dl_lp_dn_i_8__1_n_0));
  LUT6 #(
    .INIT(64'h00080A0A00F80A0A)) 
    tx_dl_lp_dn_i_9__1
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(dl_ulpsactivenot_i_3__1_n_0),
        .O(tx_dl_lp_dn_i_9__1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    tx_dl_lp_dp_i_1__3
       (.I0(tx_dl_lp_dp_i_2__3_n_0),
        .I1(tx_dl_lp_dp_reg_3),
        .I2(tx_dl_lp_dn_reg),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dp_i_4__1_n_0),
        .O(\esc_cmd_data_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0200FFFF02000808)) 
    tx_dl_lp_dp_i_2__3
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(dl2_txulpsexit),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_7__1_n_0 ),
        .O(tx_dl_lp_dp_i_2__3_n_0));
  LUT6 #(
    .INIT(64'h040404040404FF04)) 
    tx_dl_lp_dp_i_4__1
       (.I0(txlpdtesc_r),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(dl_ulpsactivenot_i_3__1_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(tx_dl_lp_dp_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txlpdtesc_r_i_1__1
       (.I0(dl2_txlpdtesc),
        .I1(txulpsesc_r_reg),
        .I2(dl2_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txlpdtesc_r),
        .O(dl2_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[0]_i_1__1 
       (.I0(dl_ulpsactivenot_i_3__1_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl2_txtriggeresc[0]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [0]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[1]_i_1__1 
       (.I0(dl_ulpsactivenot_i_3__1_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl2_txtriggeresc[1]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [1]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[2]_i_1__1 
       (.I0(dl_ulpsactivenot_i_3__1_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl2_txtriggeresc[2]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [2]));
  LUT6 #(
    .INIT(64'hFF0FFF0FFF0FEF0F)) 
    \txtriggeresc_r[3]_i_1__1 
       (.I0(dl2_txtriggeresc[0]),
        .I1(dl2_txtriggeresc[3]),
        .I2(txulpsesc_r_reg_0),
        .I3(\txtriggeresc_r[3]_i_3__1_n_0 ),
        .I4(dl2_txtriggeresc[2]),
        .I5(dl2_txtriggeresc[1]),
        .O(\dl2_txtriggeresc[0] ));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[3]_i_2__1 
       (.I0(dl_ulpsactivenot_i_3__1_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl2_txtriggeresc[3]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [3]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \txtriggeresc_r[3]_i_3__1 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(dl2_txrequestesc),
        .I5(s_level_out_d3),
        .O(\txtriggeresc_r[3]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txulpsesc_r_i_1__1
       (.I0(dl2_txulpsesc),
        .I1(txulpsesc_r_reg),
        .I2(dl2_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txulpsesc_r),
        .O(dl2_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_57
   (out,
    dl_stopstate_reg,
    init_done_reg,
    en_hs_datapath14_out,
    cl_txclkactivehs_reg,
    core_rst,
    dl2_forcetxstopmode,
    core_clk,
    dl_stopstate_reg_0,
    dl_stopstate_reg_1,
    dl_stopstate_i,
    Q,
    cl_init_done_coreclk_i,
    dl_stopstate_reg_2,
    cl_txclkactivehs_i,
    en_hs_datapath_reg,
    en_hs_datapath_reg_0,
    SR,
    dl_stopstate_reg_3,
    system_rst);
  output out;
  output dl_stopstate_reg;
  output init_done_reg;
  output en_hs_datapath14_out;
  output cl_txclkactivehs_reg;
  input core_rst;
  input dl2_forcetxstopmode;
  input core_clk;
  input dl_stopstate_reg_0;
  input dl_stopstate_reg_1;
  input dl_stopstate_i;
  input [2:0]Q;
  input cl_init_done_coreclk_i;
  input dl_stopstate_reg_2;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg;
  input en_hs_datapath_reg_0;
  input [0:0]SR;
  input dl_stopstate_reg_3;
  input system_rst;

  wire [2:0]Q;
  wire [0:0]SR;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl2_forcetxstopmode;
  wire dl_stopstate_i;
  wire dl_stopstate_i_4__1_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_stopstate_reg_2;
  wire dl_stopstate_reg_3;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d3;
  LUT4 #(
    .INIT(16'hAA8A)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_9__1 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d3),
        .I2(dl_stopstate_reg_3),
        .I3(system_rst),
        .O(init_done_reg));
  LUT5 #(
    .INIT(32'hABABABBB)) 
    dl_status_bit_6_i_4__1
       (.I0(init_done_reg),
        .I1(SR),
        .I2(cl_txclkactivehs_i),
        .I3(en_hs_datapath_reg),
        .I4(en_hs_datapath_reg_0),
        .O(cl_txclkactivehs_reg));
  LUT5 #(
    .INIT(32'hEEEFEEE0)) 
    dl_stopstate_i_1__1
       (.I0(init_done_reg),
        .I1(dl_stopstate_reg_0),
        .I2(dl_stopstate_reg_1),
        .I3(dl_stopstate_i_4__1_n_0),
        .I4(dl_stopstate_i),
        .O(dl_stopstate_reg));
  LUT6 #(
    .INIT(64'hAABBFEEEAAAABAEE)) 
    dl_stopstate_i_4__1
       (.I0(init_done_reg),
        .I1(Q[1]),
        .I2(cl_init_done_coreclk_i),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(dl_stopstate_reg_2),
        .O(dl_stopstate_i_4__1_n_0));
  LUT6 #(
    .INIT(64'h0200020002000000)) 
    en_hs_datapath_i_1__1
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(init_done_reg),
        .I3(cl_txclkactivehs_i),
        .I4(en_hs_datapath_reg),
        .I5(en_hs_datapath_reg_0),
        .O(en_hs_datapath14_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl2_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_58
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    timeout_hsexit_reg,
    s_level_out_d3_reg_0,
    core_rst,
    dl2_txrequestesc,
    core_clk,
    Q,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    esc_active_sync_r,
    esc_start_reg);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output timeout_hsexit_reg;
  output s_level_out_d3_reg_0;
  input core_rst;
  input dl2_txrequestesc;
  input core_clk;
  input [2:0]Q;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input esc_active_sync_r;
  input esc_start_reg;

  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire [2:0]Q;
  wire core_clk;
  wire core_rst;
  wire dl2_txrequestesc;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire esc_active_sync_r;
  wire esc_start_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_reg;

  assign out = s_level_out_d3;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_2__1 
       (.I0(s_level_out_d3),
        .I1(dl_status_bit_6_reg),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hDFFF000000000000)) 
    dl_status_bit_6_i_3__1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(dl_status_bit_6_reg),
        .I3(s_level_out_d3),
        .I4(Q[2]),
        .I5(dl_status_bit_6_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'hFF0F7777FFFF0000)) 
    esc_start_i_2__1
       (.I0(dl_status_bit_6_reg),
        .I1(s_level_out_d3),
        .I2(esc_active_sync_r),
        .I3(esc_start_reg),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(timeout_hsexit_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl2_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_59
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    cl_txclkactivehs_reg,
    D,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    s_level_out_d2_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    en_cal_hs_datapath13_out,
    \FSM_sequential_dl_tx_sm_state_reg[1]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    init_done_reg,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    Q,
    en_lp_01_cnt_reg,
    en_lp_01_cnt_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    cl_init_done_coreclk_i,
    \FSM_sequential_dl_tx_sm_state_reg[2]_2 ,
    en_cal_hs_datapath_reg,
    tx_dl_lp_dp_reg,
    en_hs_datapath_reg,
    cl_txclkactivehs_i,
    en_cal_hs_datapath_reg_0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    en_lp_01_cnt_reg_1,
    en_lp_01_cnt_reg_2,
    tx_dl_lp_dp_reg_0);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output cl_txclkactivehs_reg;
  output [0:0]D;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output s_level_out_d2_reg_0;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  output en_cal_hs_datapath13_out;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  output init_done_reg;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input [2:0]Q;
  input en_lp_01_cnt_reg;
  input en_lp_01_cnt_reg_0;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input cl_init_done_coreclk_i;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  input en_cal_hs_datapath_reg;
  input tx_dl_lp_dp_reg;
  input en_hs_datapath_reg;
  input cl_txclkactivehs_i;
  input en_cal_hs_datapath_reg_0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input en_lp_01_cnt_reg_1;
  input en_lp_01_cnt_reg_2;
  input tx_dl_lp_dp_reg_0;

  wire [0:0]D;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_10__0_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_7__1_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_i_2__1_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire dl_txrequesths_r;
  wire en_cal_hs_datapath13_out;
  wire en_cal_hs_datapath_i_3__1_n_0;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire en_hs_datapath_reg;
  wire en_lp_01_cnt_i_2__1_n_0;
  wire en_lp_01_cnt_i_3__1_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_3__4_n_0;
  wire tx_dl_lp_dp_i_4__6_n_0;
  wire tx_dl_lp_dp_i_5__5_n_0;
  wire tx_dl_lp_dp_i_6__1_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000BBBFFFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_4__1 
       (.I0(en_lp_01_cnt_reg_2),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(en_lp_01_cnt_reg_1),
        .O(s_level_out_d2_reg_0));
  LUT6 #(
    .INIT(64'h77777777F7F7F777)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_10__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(en_cal_hs_datapath_reg_0),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'h0075)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_7__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[2]_2 ),
        .I2(Q[1]),
        .I3(en_lp_01_cnt_reg),
        .O(D));
  LUT6 #(
    .INIT(64'h050D050F050D0F0F)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_5__1 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_10__0_n_0 ),
        .I1(cl_init_done_coreclk_i),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(s_level_out_d2_reg_0),
        .O(init_done_reg));
  LUT6 #(
    .INIT(64'hCFFFCFFFC3DFCFDF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_7__1 
       (.I0(en_cal_hs_datapath_reg),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I5(cl_txclkactivehs_reg),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFCFDFDFCFCFDFD)) 
    dl_status_bit_6_i_1__1
       (.I0(dl_status_bit_6_i_2__1_n_0),
        .I1(dl_status_bit_6_reg),
        .I2(dl_status_bit_6_reg_0),
        .I3(dl_status_bit_6_reg_1),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h00300030503F5F3F)) 
    dl_status_bit_6_i_2__1
       (.I0(cl_txclkactivehs_reg),
        .I1(s_level_out_d2_reg_0),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(cl_init_done_coreclk_i),
        .I5(dl_status_bit_6_reg_2),
        .O(dl_status_bit_6_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAFF)) 
    en_cal_hs_datapath_i_1__1
       (.I0(en_cal_hs_datapath_i_3__1_n_0),
        .I1(Q[1]),
        .I2(en_hs_datapath_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(en_lp_01_cnt_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0100000001000100)) 
    en_cal_hs_datapath_i_2__1
       (.I0(cl_txclkactivehs_reg),
        .I1(en_lp_01_cnt_reg),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(en_cal_hs_datapath_reg_0),
        .I5(en_cal_hs_datapath_reg),
        .O(en_cal_hs_datapath13_out));
  LUT6 #(
    .INIT(64'h000000000000FF57)) 
    en_cal_hs_datapath_i_3__1
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg_0),
        .I3(en_cal_hs_datapath_reg),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(en_cal_hs_datapath_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h57)) 
    en_cal_hs_datapath_i_4__0
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg_0),
        .O(cl_txclkactivehs_reg));
  LUT6 #(
    .INIT(64'h0F0F0F0200000002)) 
    en_lp_01_cnt_i_1__2
       (.I0(Q[1]),
        .I1(en_lp_01_cnt_i_2__1_n_0),
        .I2(en_lp_01_cnt_reg),
        .I3(en_lp_01_cnt_i_3__1_n_0),
        .I4(Q[2]),
        .I5(en_lp_01_cnt_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT5 #(
    .INIT(32'hFBFBF8FB)) 
    en_lp_01_cnt_i_2__1
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_reg),
        .I3(en_lp_01_cnt_reg_1),
        .I4(en_lp_01_cnt_reg_2),
        .O(en_lp_01_cnt_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h0FF00FD00FF0FFD0)) 
    en_lp_01_cnt_i_3__1
       (.I0(en_lp_01_cnt_reg_1),
        .I1(en_lp_01_cnt_reg_2),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(cl_txclkactivehs_reg),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(en_lp_01_cnt_i_3__1_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEFEEEE)) 
    tx_dl_lp_dn_i_1__4
       (.I0(tx_dl_lp_dp_i_5__5_n_0),
        .I1(tx_dl_lp_dp_reg),
        .I2(s_level_out_d2_reg_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFEEFEEEEEEEEE)) 
    tx_dl_lp_dp_i_1__4
       (.I0(tx_dl_lp_dp_i_3__4_n_0),
        .I1(tx_dl_lp_dp_i_4__6_n_0),
        .I2(Q[1]),
        .I3(tx_dl_lp_dn_reg),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(tx_dl_lp_dp_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAEAA)) 
    tx_dl_lp_dp_i_2__4
       (.I0(tx_dl_lp_dp_i_5__5_n_0),
        .I1(tx_dl_lp_dp_i_6__1_n_0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(tx_dl_lp_dp_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT4 #(
    .INIT(16'h0010)) 
    tx_dl_lp_dp_i_3__4
       (.I0(s_level_out_d2_reg_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(tx_dl_lp_dp_i_3__4_n_0));
  LUT6 #(
    .INIT(64'h4541454145410501)) 
    tx_dl_lp_dp_i_4__6
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(cl_init_done_coreclk_i),
        .I4(cl_txclkactivehs_reg),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(tx_dl_lp_dp_i_4__6_n_0));
  LUT6 #(
    .INIT(64'h4555005545000055)) 
    tx_dl_lp_dp_i_5__5
       (.I0(Q[2]),
        .I1(cl_txclkactivehs_reg),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(cl_init_done_coreclk_i),
        .O(tx_dl_lp_dp_i_5__5_n_0));
  LUT6 #(
    .INIT(64'hBBBF000000000000)) 
    tx_dl_lp_dp_i_6__1
       (.I0(en_lp_01_cnt_reg_2),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(en_lp_01_cnt_reg_1),
        .O(tx_dl_lp_dp_i_6__1_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_60
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    D,
    s_level_out_d3_reg_0,
    core_rst,
    core_clk,
    esc_start_reg,
    esc_start_reg_0,
    Q,
    esc_start,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[1]_1 ,
    cl_txclkactivehs_i,
    \FSM_sequential_dl_tx_sm_state_reg[1]_2 ,
    esc_start_reg_1,
    esc_start_reg_2,
    esc_start_reg_3,
    \FSM_sequential_dl_tx_sm_state[2]_i_8__1_0 );
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output [1:0]D;
  output s_level_out_d3_reg_0;
  input core_rst;
  input core_clk;
  input esc_start_reg;
  input esc_start_reg_0;
  input [2:0]Q;
  input esc_start;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  input cl_txclkactivehs_i;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_2 ;
  input esc_start_reg_1;
  input esc_start_reg_2;
  input esc_start_reg_3;
  input \FSM_sequential_dl_tx_sm_state[2]_i_8__1_0 ;

  wire [1:0]D;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_2__1_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_3__1_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_11__1_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_8__1_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_2 ;
  wire [2:0]Q;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire esc_start;
  wire esc_start_reg;
  wire esc_start_reg_0;
  wire esc_start_reg_1;
  wire esc_start_reg_2;
  wire esc_start_reg_3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000000033AA0FFF)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_1__1 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_2 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFCFDF0FFFCFDFC)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_1__1 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2__1_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state[1]_i_3__1_n_0 ),
        .I2(esc_start_reg),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hA800)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_2__1 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ),
        .I1(s_level_out_d3),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I3(cl_txclkactivehs_i),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h6E6E6EEEEEEEEEEE)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_3__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[1]_2 ),
        .I3(s_level_out_d3),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I5(cl_txclkactivehs_i),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1FFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_11__1 
       (.I0(s_level_out_d3),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I2(cl_txclkactivehs_i),
        .I3(esc_start_reg_3),
        .I4(\FSM_sequential_dl_tx_sm_state[2]_i_8__1_0 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_11__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF1F)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_3__1 
       (.I0(s_level_out_d3),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I2(cl_txclkactivehs_i),
        .I3(esc_start_reg),
        .I4(Q[0]),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hBBFFBBFFAFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_8__1 
       (.I0(Q[0]),
        .I1(esc_start_reg_1),
        .I2(\FSM_sequential_dl_tx_sm_state[2]_i_11__1_n_0 ),
        .I3(esc_start_reg_2),
        .I4(esc_start_reg_3),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT5 #(
    .INIT(32'h31330100)) 
    esc_start_i_1__1
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I1(esc_start_reg),
        .I2(esc_start_reg_0),
        .I3(Q[1]),
        .I4(esc_start),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_61
   (out,
    E,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    s_level_out_d3_reg_1,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    Q,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    cl_init_done_coreclk_i,
    dl_stopstate_reg,
    \FSM_sequential_dl_tx_sm_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_3 ,
    esc_active_sync_r,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    timeout_hsexit_all);
  output out;
  output [0:0]E;
  output s_level_out_d3_reg_0;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  output s_level_out_d3_reg_1;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input [2:0]Q;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input cl_init_done_coreclk_i;
  input dl_stopstate_reg;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_3 ;
  input esc_active_sync_r;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input timeout_hsexit_all;

  wire [0:0]E;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_3 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_stopstate_reg;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFFF00FFBAFF00)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_1__1 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I1(s_level_out_d3_reg_0),
        .I2(Q[1]),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[2] ),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(E));
  LUT6 #(
    .INIT(64'hB0B0B0B0B0BFBFBF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_4__1 
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(Q[0]),
        .I3(dl_status_bit_6_reg_0),
        .I4(dl_status_bit_6_reg),
        .I5(timeout_hsexit_all),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF503050F0)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_6__1 
       (.I0(s_level_out_d3_reg_0),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0]_2 ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_3 ),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h44440FFF44440000)) 
    dl_status_bit_6_i_5__1
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(dl_status_bit_6_reg),
        .I3(dl_status_bit_6_reg_0),
        .I4(Q[0]),
        .I5(timeout_hsexit_all),
        .O(s_level_out_d3_reg_1));
  LUT6 #(
    .INIT(64'hBFBCBFBCBFBC8F8C)) 
    dl_stopstate_i_2__1
       (.I0(s_level_out_d3_reg_1),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(cl_init_done_coreclk_i),
        .I4(dl_stopstate_reg),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    dl_stopstate_i_3__1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(s_level_out_d3_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_62
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_63
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_64
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_65
   (out,
    s_level_out_d3_reg_0,
    en_cal_hs_datapath,
    tx_div4_clk,
    hs_dp_sync_out);
  output out;
  output s_level_out_d3_reg_0;
  input en_cal_hs_datapath;
  input tx_div4_clk;
  input hs_dp_sync_out;

  wire en_cal_hs_datapath;
  wire hs_dp_sync_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \zero_count[0]_i_4__0 
       (.I0(s_level_out_d3),
        .I1(hs_dp_sync_out),
        .O(s_level_out_d3_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_66
   (dl_status_reg,
    tx_div4_clk);
  input [0:0]dl_status_reg;
  input tx_div4_clk;

  wire [0:0]dl_status_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(dl_status_reg),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_68
   (out,
    hs_xfer_done_all,
    core_rst,
    hs_xfer_done_i,
    core_clk,
    dl_hs_exit_done_i);
  output out;
  output hs_xfer_done_all;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;
  input [2:0]dl_hs_exit_done_i;

  wire core_clk;
  wire core_rst;
  wire [2:0]dl_hs_exit_done_i;
  wire hs_xfer_done_all;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT4 #(
    .INIT(16'h8000)) 
    en_cal_hs_datapath_i_5__0
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[0]),
        .I2(dl_hs_exit_done_i[2]),
        .I3(dl_hs_exit_done_i[1]),
        .O(hs_xfer_done_all));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_72
   (s_level_out_d3_reg_0,
    dl1_forcetxstopmode,
    dl0_txclkesc,
    esc_ctrl_all_sm_reg);
  output s_level_out_d3_reg_0;
  input dl1_forcetxstopmode;
  input dl0_txclkesc;
  input esc_ctrl_all_sm_reg;

  wire dl0_txclkesc;
  wire dl1_forcetxstopmode;
  wire esc_ctrl_all_sm_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1__0 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl1_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_73
   (out,
    esc_start,
    dl0_txclkesc);
  output out;
  input esc_start;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire esc_start;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_74
   (D,
    \bit_cnt_reg[0] ,
    \esc_cmd_data_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[3] ,
    \esc_cmd_data_reg[0]_0 ,
    E,
    \FSM_sequential_dl_tx_state_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \dl1_txdataesc[7] ,
    dl1_txvalidesc_0,
    dl1_txvalidesc_1,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_state_reg[1] ,
    \dl1_txtriggeresc[0] ,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    dl1_txulpsesc_0,
    dl1_txlpdtesc_0,
    esc_ctrl_t_reg,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    Q,
    \FSM_sequential_dl_tx_state[2]_i_4__0_0 ,
    \esc_cmd_data_reg[0]_1 ,
    txlpdtesc_r,
    txulpsesc_r,
    \bit_cnt_reg[0]_0 ,
    \bit_cnt_reg[0]_1 ,
    \bit_cnt_reg[0]_2 ,
    esc_ctrl_t_reg_0,
    dl1_txrequestesc,
    \bit_cnt_reg[0]_3 ,
    \bit_cnt_reg[3] ,
    \bit_cnt_reg[3]_0 ,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \esc_cmd_data_reg[6] ,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_reg_3,
    \FSM_sequential_dl_tx_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_state_reg[0]_3 ,
    out,
    esc_ctrl_t_reg_1,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_axi_if_reg,
    \bit_cnt_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[3]_0 ,
    \esc_cmd_data_reg[7] ,
    dl1_txvalidesc,
    dl1_txulpsexit,
    \esc_cmd_data_reg[6]_0 ,
    \esc_cmd_data_reg[5] ,
    \esc_cmd_data_reg[5]_0 ,
    dl1_txdataesc,
    \esc_cmd_data_reg[6]_1 ,
    \esc_cmd_data_reg[3] ,
    txulpsesc_r_reg,
    tx_dl_lp_dn_esc_i,
    \FSM_sequential_dl_tx_state_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[0]_5 ,
    \esc_cmd_data_reg[0]_2 ,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    txulpsesc_r_reg_0,
    tx_dl_lp_dn_reg_3,
    dl1_ulpsactivenot,
    dl1_txtriggeresc,
    dl1_txulpsesc,
    dl1_txlpdtesc,
    esc_ctrl_t_reg_2,
    esc_ctrl_t_reg_3);
  output [3:0]D;
  output [1:0]\bit_cnt_reg[0] ;
  output \esc_cmd_data_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[3] ;
  output \esc_cmd_data_reg[0]_0 ;
  output [0:0]E;
  output \FSM_sequential_dl_tx_state_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[0]_0 ;
  output \FSM_sequential_dl_tx_state_reg[0]_1 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\dl1_txdataesc[7] ;
  output [0:0]dl1_txvalidesc_0;
  output dl1_txvalidesc_1;
  output s_level_out_d3_reg_0;
  output [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output [0:0]\dl1_txtriggeresc[0] ;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  output dl1_txulpsesc_0;
  output dl1_txlpdtesc_0;
  output esc_ctrl_t_reg;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state[2]_i_4__0_0 ;
  input \esc_cmd_data_reg[0]_1 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input \bit_cnt_reg[0]_0 ;
  input \bit_cnt_reg[0]_1 ;
  input \bit_cnt_reg[0]_2 ;
  input esc_ctrl_t_reg_0;
  input dl1_txrequestesc;
  input [3:0]\bit_cnt_reg[0]_3 ;
  input \bit_cnt_reg[3] ;
  input \bit_cnt_reg[3]_0 ;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input [7:0]\esc_cmd_data_reg[6] ;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_reg_3;
  input \FSM_sequential_dl_tx_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_state_reg[0]_3 ;
  input out;
  input esc_ctrl_t_reg_1;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_axi_if_reg;
  input \bit_cnt_reg[0]_4 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  input \esc_cmd_data_reg[7] ;
  input dl1_txvalidesc;
  input dl1_txulpsexit;
  input \esc_cmd_data_reg[6]_0 ;
  input \esc_cmd_data_reg[5] ;
  input \esc_cmd_data_reg[5]_0 ;
  input [7:0]dl1_txdataesc;
  input \esc_cmd_data_reg[6]_1 ;
  input \esc_cmd_data_reg[3] ;
  input txulpsesc_r_reg;
  input tx_dl_lp_dn_esc_i;
  input \FSM_sequential_dl_tx_state_reg[0]_4 ;
  input \FSM_sequential_dl_tx_state_reg[0]_5 ;
  input \esc_cmd_data_reg[0]_2 ;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input txulpsesc_r_reg_0;
  input tx_dl_lp_dn_reg_3;
  input dl1_ulpsactivenot;
  input [3:0]dl1_txtriggeresc;
  input dl1_txulpsesc;
  input dl1_txlpdtesc;
  input esc_ctrl_t_reg_2;
  input esc_ctrl_t_reg_3;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__0_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_12__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_13__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_14__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8__0_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9__0_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire \FSM_sequential_dl_tx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_4 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_5 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  wire [3:0]Q;
  wire \bit_cnt[0]_i_2__0_n_0 ;
  wire \bit_cnt[3]_i_13__0_n_0 ;
  wire \bit_cnt[3]_i_3__0_n_0 ;
  wire \bit_cnt[3]_i_4__0_n_0 ;
  wire \bit_cnt[3]_i_5__0_n_0 ;
  wire \bit_cnt[3]_i_6__0_n_0 ;
  wire \bit_cnt[3]_i_8__0_n_0 ;
  wire [1:0]\bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[0]_1 ;
  wire \bit_cnt_reg[0]_2 ;
  wire [3:0]\bit_cnt_reg[0]_3 ;
  wire \bit_cnt_reg[0]_4 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire dl0_txclkesc;
  wire [7:0]dl1_txdataesc;
  wire [7:0]\dl1_txdataesc[7] ;
  wire dl1_txlpdtesc;
  wire dl1_txlpdtesc_0;
  wire dl1_txrequestesc;
  wire [3:0]dl1_txtriggeresc;
  wire [0:0]\dl1_txtriggeresc[0] ;
  wire dl1_txulpsesc;
  wire dl1_txulpsesc_0;
  wire dl1_txulpsexit;
  wire dl1_txvalidesc;
  wire [0:0]dl1_txvalidesc_0;
  wire dl1_txvalidesc_1;
  wire dl1_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3__0_n_0;
  wire \esc_cmd_data[0]_i_2__0_n_0 ;
  wire \esc_cmd_data[0]_i_3__0_n_0 ;
  wire \esc_cmd_data[0]_i_4__0_n_0 ;
  wire \esc_cmd_data[1]_i_2__0_n_0 ;
  wire \esc_cmd_data[2]_i_2__0_n_0 ;
  wire \esc_cmd_data[5]_i_2__0_n_0 ;
  wire \esc_cmd_data[6]_i_2__0_n_0 ;
  wire \esc_cmd_data[7]_i_5__0_n_0 ;
  wire \esc_cmd_data[7]_i_8__0_n_0 ;
  wire \esc_cmd_data_reg[0] ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg[0]_1 ;
  wire \esc_cmd_data_reg[0]_2 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[5] ;
  wire \esc_cmd_data_reg[5]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire \esc_cmd_data_reg[6]_0 ;
  wire \esc_cmd_data_reg[6]_1 ;
  wire \esc_cmd_data_reg[7] ;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_ctrl_t_i_2__0_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire esc_ctrl_t_reg_2;
  wire esc_ctrl_t_reg_3;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_10__0_n_0;
  wire tx_dl_lp_dn_i_11__0_n_0;
  wire tx_dl_lp_dn_i_13__0_n_0;
  wire tx_dl_lp_dn_i_14__0_n_0;
  wire tx_dl_lp_dn_i_3__0_n_0;
  wire tx_dl_lp_dn_i_5__0_n_0;
  wire tx_dl_lp_dn_i_8__0_n_0;
  wire tx_dl_lp_dn_i_9__0_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;
  wire tx_dl_lp_dp_i_2__1_n_0;
  wire tx_dl_lp_dp_i_4__0_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3__0_n_0 ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0604)) 
    \FSM_sequential_dl_tx_state[0]_i_1__0 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[0]_i_2__0_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_3__0_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h888F888888888888)) 
    \FSM_sequential_dl_tx_state[0]_i_2__0 
       (.I0(esc_ctrl_t_reg_0),
        .I1(\FSM_sequential_dl_tx_state[0]_i_4__0_n_0 ),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00003000FF0030AA)) 
    \FSM_sequential_dl_tx_state[0]_i_3__0 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ),
        .I1(Q[0]),
        .I2(\FSM_sequential_dl_tx_state[0]_i_5__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h3F3FBFBF3F3FBFFF)) 
    \FSM_sequential_dl_tx_state[0]_i_4__0 
       (.I0(Q[2]),
        .I1(s_level_out_d3),
        .I2(dl1_txrequestesc),
        .I3(txulpsesc_r),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFF7F7F7F)) 
    \FSM_sequential_dl_tx_state[0]_i_5__0 
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl1_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl1_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[0]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFEEEEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[1]_i_1__0 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3__0_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(dl_ulpsactivenot_i_3__0_n_0),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAEFAE)) 
    \FSM_sequential_dl_tx_state[1]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[1]_i_5__0_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0010001000100000)) 
    \FSM_sequential_dl_tx_state[1]_i_3__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I1(Q[2]),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(dl_ulpsactivenot_i_3__0_n_0),
        .I4(txulpsesc_r),
        .I5(txlpdtesc_r),
        .O(\FSM_sequential_dl_tx_state[1]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \FSM_sequential_dl_tx_state[1]_i_4__0 
       (.I0(dl1_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(\bit_cnt[3]_i_5__0_n_0 ),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0A000A0C0A000A00)) 
    \FSM_sequential_dl_tx_state[1]_i_5__0 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4__0_0 ),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(dl_ulpsactivenot_i_3__0_n_0),
        .I3(txlpdtesc_r),
        .I4(txulpsesc_r),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAFAAABAA)) 
    \FSM_sequential_dl_tx_state[2]_i_1__0 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_2__0_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAB00AA0000000000)) 
    \FSM_sequential_dl_tx_state[2]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .I1(\bit_cnt_reg[0]_2 ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(Q[0]),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[2]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFE000000)) 
    \FSM_sequential_dl_tx_state[2]_i_3__0 
       (.I0(txulpsesc_r),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(txlpdtesc_r),
        .I3(s_level_out_d3),
        .I4(dl1_txrequestesc),
        .O(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF07000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4__0 
       (.I0(Q[0]),
        .I1(txlpdtesc_r),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6__0_n_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF000455550004)) 
    \FSM_sequential_dl_tx_state[2]_i_6__0 
       (.I0(\bit_cnt_reg[0]_1 ),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(\bit_cnt_reg[0]_2 ),
        .I4(dl_ulpsactivenot_i_3__0_n_0),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4__0_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0FFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_10__0 
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(Q[2]),
        .I2(txulpsesc_r_reg),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(\bit_cnt[3]_i_5__0_n_0 ),
        .I5(\bit_cnt_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_12__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[3]_0 [3]),
        .I4(txulpsesc_r),
        .I5(dl_ulpsactivenot_i_3__0_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \FSM_sequential_dl_tx_state[3]_i_13__0 
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[3]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'h0D0D55070D0D5505)) 
    \FSM_sequential_dl_tx_state[3]_i_14__0 
       (.I0(Q[1]),
        .I1(\bit_cnt[3]_i_5__0_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(esc_ctrl_t_reg_1),
        .O(\FSM_sequential_dl_tx_state[3]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEE)) 
    \FSM_sequential_dl_tx_state[3]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_2 ),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[3]_i_8__0_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_9__0_n_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAEAAAA)) 
    \FSM_sequential_dl_tx_state[3]_i_3__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10__0_n_0 ),
        .I1(esc_ctrl_t_reg_0),
        .I2(Q[2]),
        .I3(txlpdtesc_r),
        .I4(\FSM_sequential_dl_tx_state[3]_i_12__0_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_13__0_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \FSM_sequential_dl_tx_state[3]_i_4__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12__0_n_0 ),
        .I1(Q[0]),
        .I2(esc_ctrl_t_reg_1),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(tx_dl_lp_dn_i_5__0_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h01FFFFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7__0 
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl1_txrequestesc),
        .I4(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ));
  LUT4 #(
    .INIT(16'h0444)) 
    \FSM_sequential_dl_tx_state[3]_i_8__0 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(dl1_txrequestesc),
        .I3(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFEEEEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_9__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_14__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_4 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_state_reg[0]_5 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000FF000000EF)) 
    \bit_cnt[0]_i_1__0 
       (.I0(\bit_cnt_reg[0]_3 [2]),
        .I1(\bit_cnt_reg[0]_3 [1]),
        .I2(\bit_cnt_reg[0]_3 [3]),
        .I3(\bit_cnt_reg[0]_1 ),
        .I4(\bit_cnt_reg[0]_3 [0]),
        .I5(\bit_cnt[0]_i_2__0_n_0 ),
        .O(\bit_cnt_reg[0] [0]));
  LUT5 #(
    .INIT(32'hABFFFFFF)) 
    \bit_cnt[0]_i_2__0 
       (.I0(Q[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl1_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000001F0)) 
    \bit_cnt[3]_i_13__0 
       (.I0(\bit_cnt[3]_i_5__0_n_0 ),
        .I1(\esc_cmd_data_reg[6]_0 ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\bit_cnt[3]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFFFEEEE)) 
    \bit_cnt[3]_i_1__0 
       (.I0(\bit_cnt[3]_i_3__0_n_0 ),
        .I1(\bit_cnt[3]_i_4__0_n_0 ),
        .I2(\bit_cnt[3]_i_5__0_n_0 ),
        .I3(\bit_cnt[3]_i_6__0_n_0 ),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h0000CA300000CA00)) 
    \bit_cnt[3]_i_2__0 
       (.I0(\bit_cnt[3]_i_8__0_n_0 ),
        .I1(\bit_cnt_reg[3] ),
        .I2(\bit_cnt_reg[0]_3 [0]),
        .I3(\bit_cnt_reg[0]_3 [3]),
        .I4(\bit_cnt_reg[0]_1 ),
        .I5(\bit_cnt_reg[3]_0 ),
        .O(\bit_cnt_reg[0] [1]));
  LUT6 #(
    .INIT(64'h02020F0300020003)) 
    \bit_cnt[3]_i_3__0 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12__0_n_0 ),
        .I1(Q[2]),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(Q[1]),
        .I4(\bit_cnt[3]_i_5__0_n_0 ),
        .I5(\bit_cnt_reg[0]_4 ),
        .O(\bit_cnt[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10000000)) 
    \bit_cnt[3]_i_4__0 
       (.I0(\bit_cnt[3]_i_5__0_n_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(Q[2]),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(\bit_cnt[3]_i_13__0_n_0 ),
        .O(\bit_cnt[3]_i_4__0_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_5__0 
       (.I0(dl1_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txlpdtesc_r),
        .O(\bit_cnt[3]_i_5__0_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_6__0 
       (.I0(dl1_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .O(\bit_cnt[3]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFAB)) 
    \bit_cnt[3]_i_8__0 
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_3 [2]),
        .I5(\bit_cnt_reg[0]_3 [1]),
        .O(\bit_cnt[3]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000070400000000)) 
    dl_txreadyesc_i_1__0
       (.I0(dl1_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(dl_txreadyesc_reg),
        .I3(dl_txreadyesc_reg_0),
        .I4(dl_ulpsactivenot_i_3__0_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl1_txvalidesc_1));
  LUT6 #(
    .INIT(64'hFFFFFEFFEEEEEEEE)) 
    dl_ulpsactivenot_i_1__0
       (.I0(dl_txreadyesc_reg),
        .I1(dl1_txulpsexit),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(txulpsesc_r),
        .I4(dl_ulpsactivenot_i_3__0_n_0),
        .I5(dl1_ulpsactivenot),
        .O(s_level_out_d3_reg_0));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_3__0
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .O(dl_ulpsactivenot_i_3__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \esc_cmd_data[0]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl1_txdataesc[0]),
        .I4(\esc_cmd_data[0]_i_2__0_n_0 ),
        .I5(\esc_cmd_data[0]_i_3__0_n_0 ),
        .O(\dl1_txdataesc[7] [0]));
  LUT5 #(
    .INIT(32'h01000000)) 
    \esc_cmd_data[0]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\esc_cmd_data[0]_i_4__0_n_0 ),
        .I4(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h2A00000000000000)) 
    \esc_cmd_data[0]_i_3__0 
       (.I0(\esc_cmd_data_reg[6]_1 ),
        .I1(dl1_txvalidesc),
        .I2(\esc_cmd_data_reg[7] ),
        .I3(dl1_txrequestesc),
        .I4(s_level_out_d3),
        .I5(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h007F7F7F)) 
    \esc_cmd_data[0]_i_4__0 
       (.I0(txulpsesc_r),
        .I1(s_level_out_d3),
        .I2(dl1_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl1_txvalidesc),
        .O(\esc_cmd_data[0]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[1]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl1_txdataesc[1]),
        .I4(\esc_cmd_data[1]_i_2__0_n_0 ),
        .O(\dl1_txdataesc[7] [1]));
  LUT6 #(
    .INIT(64'hA8FF000000000000)) 
    \esc_cmd_data[1]_i_2__0 
       (.I0(\bit_cnt[3]_i_6__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5__0_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[2]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl1_txdataesc[2]),
        .I4(\esc_cmd_data[2]_i_2__0_n_0 ),
        .O(\dl1_txdataesc[7] [2]));
  LUT6 #(
    .INIT(64'hA2FF000000000000)) 
    \esc_cmd_data[2]_i_2__0 
       (.I0(\bit_cnt[3]_i_6__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5__0_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[2]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[3]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [4]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__0_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl1_txdataesc[3]),
        .O(\dl1_txdataesc[7] [3]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[4]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [5]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__0_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl1_txdataesc[4]),
        .O(\dl1_txdataesc[7] [4]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[5]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [6]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2__0_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl1_txdataesc[5]),
        .O(\dl1_txdataesc[7] [5]));
  LUT6 #(
    .INIT(64'h0000008088008888)) 
    \esc_cmd_data[5]_i_2__0 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[6]_1 ),
        .I2(txulpsesc_r),
        .I3(dl_ulpsactivenot_i_3__0_n_0),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF888F88F8888888)) 
    \esc_cmd_data[6]_i_1__0 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(\esc_cmd_data_reg[6]_1 ),
        .I4(\esc_cmd_data[6]_i_2__0_n_0 ),
        .I5(dl1_txdataesc[6]),
        .O(\dl1_txdataesc[7] [6]));
  LUT5 #(
    .INIT(32'h3AAA2AAA)) 
    \esc_cmd_data[6]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(txlpdtesc_r),
        .I2(dl1_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r),
        .O(\esc_cmd_data[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDDDFFFDDDDD)) 
    \esc_cmd_data[7]_i_1__0 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[7]_i_5__0_n_0 ),
        .I3(\esc_cmd_data_reg[0]_1 ),
        .I4(\esc_cmd_data_reg[0]_2 ),
        .I5(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .O(dl1_txvalidesc_0));
  LUT6 #(
    .INIT(64'hEEAFAFAF00000000)) 
    \esc_cmd_data[7]_i_2__0 
       (.I0(\esc_cmd_data[7]_i_8__0_n_0 ),
        .I1(dl1_txdataesc[7]),
        .I2(\bit_cnt[3]_i_5__0_n_0 ),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl1_txvalidesc),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\dl1_txdataesc[7] [7]));
  LUT4 #(
    .INIT(16'hE000)) 
    \esc_cmd_data[7]_i_5__0 
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .I2(s_level_out_d3),
        .I3(dl1_txrequestesc),
        .O(\esc_cmd_data[7]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h5400000054005400)) 
    \esc_cmd_data[7]_i_8__0 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(dl_ulpsactivenot_i_3__0_n_0),
        .I5(txulpsesc_r),
        .O(\esc_cmd_data[7]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_all_sm_i_1__0
       (.I0(Q[0]),
        .I1(out),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ),
        .I5(esc_ctrl_t_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[0] ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_axi_if_i_2__0
       (.I0(Q[0]),
        .I1(esc_ctrl_axi_if_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ),
        .I5(esc_ctrl_t_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_lane_sm_i_1__0
       (.I0(Q[0]),
        .I1(esc_ctrl_lane_sm_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ),
        .I5(esc_ctrl_t_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00000000E2222222)) 
    esc_ctrl_t_i_1__0
       (.I0(esc_ctrl_t_reg_2),
        .I1(esc_ctrl_t_i_2__0_n_0),
        .I2(esc_ctrl_t_reg_0),
        .I3(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ),
        .I4(esc_ctrl_t_reg_1),
        .I5(esc_ctrl_t_reg_3),
        .O(esc_ctrl_t_reg));
  LUT5 #(
    .INIT(32'h00032E0A)) 
    esc_ctrl_t_i_2__0
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(esc_ctrl_t_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hE222)) 
    esc_stopstate_i_2__0
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .I1(Q[1]),
        .I2(\FSM_sequential_dl_tx_state[2]_i_3__0_n_0 ),
        .I3(esc_ctrl_t_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    tx_dl_lp_dn_i_10__0
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(dl_ulpsactivenot_i_3__0_n_0),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_2),
        .O(tx_dl_lp_dn_i_10__0_n_0));
  LUT4 #(
    .INIT(16'h0080)) 
    tx_dl_lp_dn_i_11__0
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl1_txrequestesc),
        .I3(\esc_cmd_data_reg[6] [0]),
        .O(tx_dl_lp_dn_i_11__0_n_0));
  LUT6 #(
    .INIT(64'h00000F4000000040)) 
    tx_dl_lp_dn_i_13__0
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(txlpdtesc_r),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_13__0_n_0));
  LUT6 #(
    .INIT(64'h000000000000F777)) 
    tx_dl_lp_dn_i_14__0
       (.I0(s_level_out_d3),
        .I1(dl1_txrequestesc),
        .I2(Q[2]),
        .I3(dl1_txulpsexit),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_14__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    tx_dl_lp_dn_i_1__1
       (.I0(tx_dl_lp_dn_i_3__0_n_0),
        .I1(Q[3]),
        .I2(tx_dl_lp_dp_reg),
        .I3(tx_dl_lp_dn_i_5__0_n_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    tx_dl_lp_dn_i_2__0
       (.I0(tx_dl_lp_dn_i_8__0_n_0),
        .I1(tx_dl_lp_dn_i_9__0_n_0),
        .I2(tx_dl_lp_dn_i_10__0_n_0),
        .I3(tx_dl_lp_dn_i_11__0_n_0),
        .I4(tx_dl_lp_dn_reg),
        .I5(tx_dl_lp_dn_i_13__0_n_0),
        .O(\esc_cmd_data_reg[0] ));
  LUT6 #(
    .INIT(64'h2222FFFF2222E222)) 
    tx_dl_lp_dn_i_3__0
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(Q[2]),
        .I2(tx_dl_lp_dp_reg_2),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4__0_n_0 ),
        .O(tx_dl_lp_dn_i_3__0_n_0));
  LUT6 #(
    .INIT(64'hABAAAAAAABABABAB)) 
    tx_dl_lp_dn_i_5__0
       (.I0(tx_dl_lp_dn_i_14__0_n_0),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl1_txvalidesc),
        .I5(txlpdtesc_r),
        .O(tx_dl_lp_dn_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    tx_dl_lp_dn_i_8__0
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(\bit_cnt[3]_i_6__0_n_0 ),
        .I2(tx_dl_lp_dn_reg_2),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_3),
        .O(tx_dl_lp_dn_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h00080A0A00F80A0A)) 
    tx_dl_lp_dn_i_9__0
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(dl_ulpsactivenot_i_3__0_n_0),
        .O(tx_dl_lp_dn_i_9__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    tx_dl_lp_dp_i_1__1
       (.I0(tx_dl_lp_dp_i_2__1_n_0),
        .I1(tx_dl_lp_dp_reg_3),
        .I2(tx_dl_lp_dn_reg),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dp_i_4__0_n_0),
        .O(\esc_cmd_data_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0200FFFF02000808)) 
    tx_dl_lp_dp_i_2__1
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(dl1_txulpsexit),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_7__0_n_0 ),
        .O(tx_dl_lp_dp_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h040404040404FF04)) 
    tx_dl_lp_dp_i_4__0
       (.I0(txlpdtesc_r),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(dl_ulpsactivenot_i_3__0_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(tx_dl_lp_dp_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txlpdtesc_r_i_1__0
       (.I0(dl1_txlpdtesc),
        .I1(txulpsesc_r_reg),
        .I2(dl1_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txlpdtesc_r),
        .O(dl1_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[0]_i_1__0 
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl1_txtriggeresc[0]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [0]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[1]_i_1__0 
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl1_txtriggeresc[1]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [1]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[2]_i_1__0 
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl1_txtriggeresc[2]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [2]));
  LUT6 #(
    .INIT(64'hFF0FFF0FFF0FEF0F)) 
    \txtriggeresc_r[3]_i_1__0 
       (.I0(dl1_txtriggeresc[0]),
        .I1(dl1_txtriggeresc[3]),
        .I2(txulpsesc_r_reg_0),
        .I3(\txtriggeresc_r[3]_i_3__0_n_0 ),
        .I4(dl1_txtriggeresc[2]),
        .I5(dl1_txtriggeresc[1]),
        .O(\dl1_txtriggeresc[0] ));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[3]_i_2__0 
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl1_txtriggeresc[3]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [3]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \txtriggeresc_r[3]_i_3__0 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(dl1_txrequestesc),
        .I5(s_level_out_d3),
        .O(\txtriggeresc_r[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txulpsesc_r_i_1__0
       (.I0(dl1_txulpsesc),
        .I1(txulpsesc_r_reg),
        .I2(dl1_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txulpsesc_r),
        .O(dl1_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_76
   (out,
    dl_stopstate_reg,
    init_done_reg,
    en_hs_datapath14_out,
    cl_txclkactivehs_reg,
    core_rst,
    dl1_forcetxstopmode,
    core_clk,
    dl_stopstate_reg_0,
    dl_stopstate_reg_1,
    dl_stopstate_i,
    Q,
    cl_init_done_coreclk_i,
    dl_stopstate_reg_2,
    cl_txclkactivehs_i,
    en_hs_datapath_reg,
    en_hs_datapath_reg_0,
    SR,
    dl_stopstate_reg_3,
    system_rst);
  output out;
  output dl_stopstate_reg;
  output init_done_reg;
  output en_hs_datapath14_out;
  output cl_txclkactivehs_reg;
  input core_rst;
  input dl1_forcetxstopmode;
  input core_clk;
  input dl_stopstate_reg_0;
  input dl_stopstate_reg_1;
  input dl_stopstate_i;
  input [2:0]Q;
  input cl_init_done_coreclk_i;
  input dl_stopstate_reg_2;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg;
  input en_hs_datapath_reg_0;
  input [0:0]SR;
  input dl_stopstate_reg_3;
  input system_rst;

  wire [2:0]Q;
  wire [0:0]SR;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl1_forcetxstopmode;
  wire dl_stopstate_i;
  wire dl_stopstate_i_4__0_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_stopstate_reg_2;
  wire dl_stopstate_reg_3;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d3;
  LUT4 #(
    .INIT(16'hAA8A)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_9__0 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d3),
        .I2(dl_stopstate_reg_3),
        .I3(system_rst),
        .O(init_done_reg));
  LUT5 #(
    .INIT(32'hABABABBB)) 
    dl_status_bit_6_i_4__0
       (.I0(init_done_reg),
        .I1(SR),
        .I2(cl_txclkactivehs_i),
        .I3(en_hs_datapath_reg),
        .I4(en_hs_datapath_reg_0),
        .O(cl_txclkactivehs_reg));
  LUT5 #(
    .INIT(32'hEEEFEEE0)) 
    dl_stopstate_i_1__0
       (.I0(init_done_reg),
        .I1(dl_stopstate_reg_0),
        .I2(dl_stopstate_reg_1),
        .I3(dl_stopstate_i_4__0_n_0),
        .I4(dl_stopstate_i),
        .O(dl_stopstate_reg));
  LUT6 #(
    .INIT(64'hAABBFEEEAAAABAEE)) 
    dl_stopstate_i_4__0
       (.I0(init_done_reg),
        .I1(Q[1]),
        .I2(cl_init_done_coreclk_i),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(dl_stopstate_reg_2),
        .O(dl_stopstate_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h0200020002000000)) 
    en_hs_datapath_i_1__0
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(init_done_reg),
        .I3(cl_txclkactivehs_i),
        .I4(en_hs_datapath_reg),
        .I5(en_hs_datapath_reg_0),
        .O(en_hs_datapath14_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_77
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    timeout_hsexit_reg,
    s_level_out_d3_reg_0,
    core_rst,
    dl1_txrequestesc,
    core_clk,
    Q,
    timeout_hsexit,
    dl_status_bit_6_reg,
    esc_active_sync_r,
    esc_start_reg);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output timeout_hsexit_reg;
  output s_level_out_d3_reg_0;
  input core_rst;
  input dl1_txrequestesc;
  input core_clk;
  input [2:0]Q;
  input [0:0]timeout_hsexit;
  input dl_status_bit_6_reg;
  input esc_active_sync_r;
  input esc_start_reg;

  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire [2:0]Q;
  wire core_clk;
  wire core_rst;
  wire dl1_txrequestesc;
  wire dl_status_bit_6_reg;
  wire esc_active_sync_r;
  wire esc_start_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire [0:0]timeout_hsexit;
  wire timeout_hsexit_reg;

  assign out = s_level_out_d3;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_2__0 
       (.I0(s_level_out_d3),
        .I1(timeout_hsexit),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hDFFF000000000000)) 
    dl_status_bit_6_i_3__0
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(timeout_hsexit),
        .I3(s_level_out_d3),
        .I4(Q[2]),
        .I5(dl_status_bit_6_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'hFF0F7777FFFF0000)) 
    esc_start_i_2__0
       (.I0(timeout_hsexit),
        .I1(s_level_out_d3),
        .I2(esc_active_sync_r),
        .I3(esc_start_reg),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(timeout_hsexit_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_78
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    cl_txclkactivehs_reg,
    D,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    s_level_out_d2_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    en_cal_hs_datapath13_out,
    \FSM_sequential_dl_tx_sm_state_reg[1]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    init_done_reg,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    Q,
    en_lp_01_cnt_reg,
    en_lp_01_cnt_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    cl_init_done_coreclk_i,
    \FSM_sequential_dl_tx_sm_state_reg[2]_2 ,
    en_cal_hs_datapath_reg,
    tx_dl_lp_dp_reg,
    en_hs_datapath_reg,
    cl_txclkactivehs_i,
    en_cal_hs_datapath_reg_0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    en_lp_01_cnt_reg_1,
    en_lp_01_cnt_reg_2,
    tx_dl_lp_dp_reg_0);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output cl_txclkactivehs_reg;
  output [0:0]D;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output s_level_out_d2_reg_0;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  output en_cal_hs_datapath13_out;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  output init_done_reg;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input [2:0]Q;
  input en_lp_01_cnt_reg;
  input en_lp_01_cnt_reg_0;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input cl_init_done_coreclk_i;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  input en_cal_hs_datapath_reg;
  input tx_dl_lp_dp_reg;
  input en_hs_datapath_reg;
  input cl_txclkactivehs_i;
  input en_cal_hs_datapath_reg_0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input en_lp_01_cnt_reg_1;
  input en_lp_01_cnt_reg_2;
  input tx_dl_lp_dp_reg_0;

  wire [0:0]D;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_10_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_i_2__0_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire dl_txrequesths_r;
  wire en_cal_hs_datapath13_out;
  wire en_cal_hs_datapath_i_3__0_n_0;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire en_hs_datapath_reg;
  wire en_lp_01_cnt_i_2__0_n_0;
  wire en_lp_01_cnt_i_3__0_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_3__2_n_0;
  wire tx_dl_lp_dp_i_4__5_n_0;
  wire tx_dl_lp_dp_i_5__4_n_0;
  wire tx_dl_lp_dp_i_6__0_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000BBBFFFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_4__0 
       (.I0(en_lp_01_cnt_reg_2),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(en_lp_01_cnt_reg_1),
        .O(s_level_out_d2_reg_0));
  LUT6 #(
    .INIT(64'h77777777F7F7F777)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_10 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(en_cal_hs_datapath_reg_0),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h0075)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_7__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[2]_2 ),
        .I2(Q[1]),
        .I3(en_lp_01_cnt_reg),
        .O(D));
  LUT6 #(
    .INIT(64'h050D050F050D0F0F)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_5__0 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_10_n_0 ),
        .I1(cl_init_done_coreclk_i),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(s_level_out_d2_reg_0),
        .O(init_done_reg));
  LUT6 #(
    .INIT(64'hCFFFCFFFC3DFCFDF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_7__0 
       (.I0(en_cal_hs_datapath_reg),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I5(cl_txclkactivehs_reg),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFCFDFDFCFCFDFD)) 
    dl_status_bit_6_i_1__0
       (.I0(dl_status_bit_6_i_2__0_n_0),
        .I1(dl_status_bit_6_reg),
        .I2(dl_status_bit_6_reg_0),
        .I3(dl_status_bit_6_reg_1),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h00300030503F5F3F)) 
    dl_status_bit_6_i_2__0
       (.I0(cl_txclkactivehs_reg),
        .I1(s_level_out_d2_reg_0),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(cl_init_done_coreclk_i),
        .I5(dl_status_bit_6_reg_2),
        .O(dl_status_bit_6_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAFF)) 
    en_cal_hs_datapath_i_1__0
       (.I0(en_cal_hs_datapath_i_3__0_n_0),
        .I1(Q[1]),
        .I2(en_hs_datapath_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(en_lp_01_cnt_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0100000001000100)) 
    en_cal_hs_datapath_i_2__0
       (.I0(cl_txclkactivehs_reg),
        .I1(en_lp_01_cnt_reg),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(en_cal_hs_datapath_reg_0),
        .I5(en_cal_hs_datapath_reg),
        .O(en_cal_hs_datapath13_out));
  LUT6 #(
    .INIT(64'h000000000000FF57)) 
    en_cal_hs_datapath_i_3__0
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg_0),
        .I3(en_cal_hs_datapath_reg),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(en_cal_hs_datapath_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h57)) 
    en_cal_hs_datapath_i_4
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg_0),
        .O(cl_txclkactivehs_reg));
  LUT6 #(
    .INIT(64'h0F0F0F0200000002)) 
    en_lp_01_cnt_i_1__1
       (.I0(Q[1]),
        .I1(en_lp_01_cnt_i_2__0_n_0),
        .I2(en_lp_01_cnt_reg),
        .I3(en_lp_01_cnt_i_3__0_n_0),
        .I4(Q[2]),
        .I5(en_lp_01_cnt_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT5 #(
    .INIT(32'hFBFBF8FB)) 
    en_lp_01_cnt_i_2__0
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_reg),
        .I3(en_lp_01_cnt_reg_1),
        .I4(en_lp_01_cnt_reg_2),
        .O(en_lp_01_cnt_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0FF00FD00FF0FFD0)) 
    en_lp_01_cnt_i_3__0
       (.I0(en_lp_01_cnt_reg_1),
        .I1(en_lp_01_cnt_reg_2),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(cl_txclkactivehs_reg),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(en_lp_01_cnt_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEFEEEE)) 
    tx_dl_lp_dn_i_1__2
       (.I0(tx_dl_lp_dp_i_5__4_n_0),
        .I1(tx_dl_lp_dp_reg),
        .I2(s_level_out_d2_reg_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFEEFEEEEEEEEE)) 
    tx_dl_lp_dp_i_1__2
       (.I0(tx_dl_lp_dp_i_3__2_n_0),
        .I1(tx_dl_lp_dp_i_4__5_n_0),
        .I2(Q[1]),
        .I3(tx_dl_lp_dn_reg),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(tx_dl_lp_dp_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAEAA)) 
    tx_dl_lp_dp_i_2__2
       (.I0(tx_dl_lp_dp_i_5__4_n_0),
        .I1(tx_dl_lp_dp_i_6__0_n_0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(tx_dl_lp_dp_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT4 #(
    .INIT(16'h0010)) 
    tx_dl_lp_dp_i_3__2
       (.I0(s_level_out_d2_reg_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(tx_dl_lp_dp_i_3__2_n_0));
  LUT6 #(
    .INIT(64'h4541454145410501)) 
    tx_dl_lp_dp_i_4__5
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(cl_init_done_coreclk_i),
        .I4(cl_txclkactivehs_reg),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(tx_dl_lp_dp_i_4__5_n_0));
  LUT6 #(
    .INIT(64'h4555005545000055)) 
    tx_dl_lp_dp_i_5__4
       (.I0(Q[2]),
        .I1(cl_txclkactivehs_reg),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(cl_init_done_coreclk_i),
        .O(tx_dl_lp_dp_i_5__4_n_0));
  LUT6 #(
    .INIT(64'hBBBF000000000000)) 
    tx_dl_lp_dp_i_6__0
       (.I0(en_lp_01_cnt_reg_2),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(en_lp_01_cnt_reg_1),
        .O(tx_dl_lp_dp_i_6__0_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_79
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    D,
    s_level_out_d3_reg_0,
    core_rst,
    core_clk,
    esc_start_reg,
    esc_start_reg_0,
    Q,
    esc_start,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[1]_1 ,
    cl_txclkactivehs_i,
    \FSM_sequential_dl_tx_sm_state_reg[1]_2 ,
    timeout_hsexit,
    esc_start_reg_1,
    esc_start_reg_2,
    \FSM_sequential_dl_tx_sm_state[2]_i_8__0_0 );
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output [1:0]D;
  output s_level_out_d3_reg_0;
  input core_rst;
  input core_clk;
  input esc_start_reg;
  input esc_start_reg_0;
  input [2:0]Q;
  input esc_start;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  input cl_txclkactivehs_i;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_2 ;
  input [0:0]timeout_hsexit;
  input esc_start_reg_1;
  input esc_start_reg_2;
  input \FSM_sequential_dl_tx_sm_state[2]_i_8__0_0 ;

  wire [1:0]D;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_11__0_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_8__0_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_2 ;
  wire [2:0]Q;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire esc_start;
  wire esc_start_reg;
  wire esc_start_reg_0;
  wire esc_start_reg_1;
  wire esc_start_reg_2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire [0:0]timeout_hsexit;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000000033AA0FFF)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_1__0 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_2 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFCFDF0FFFCFDFC)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_1__0 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state[1]_i_3__0_n_0 ),
        .I2(esc_start_reg),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hA800)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_2__0 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ),
        .I1(s_level_out_d3),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I3(cl_txclkactivehs_i),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h6E6E6EEEEEEEEEEE)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_3__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[1]_2 ),
        .I3(s_level_out_d3),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I5(cl_txclkactivehs_i),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1FFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_11__0 
       (.I0(s_level_out_d3),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I2(cl_txclkactivehs_i),
        .I3(esc_start_reg_2),
        .I4(\FSM_sequential_dl_tx_sm_state[2]_i_8__0_0 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF1F)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_3__0 
       (.I0(s_level_out_d3),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I2(cl_txclkactivehs_i),
        .I3(esc_start_reg),
        .I4(Q[0]),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hBBFFBBFFAFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_8__0 
       (.I0(Q[0]),
        .I1(timeout_hsexit),
        .I2(\FSM_sequential_dl_tx_sm_state[2]_i_11__0_n_0 ),
        .I3(esc_start_reg_1),
        .I4(esc_start_reg_2),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT5 #(
    .INIT(32'h31330100)) 
    esc_start_i_1__0
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I1(esc_start_reg),
        .I2(esc_start_reg_0),
        .I3(Q[1]),
        .I4(esc_start),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_80
   (out,
    E,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    s_level_out_d3_reg_1,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    Q,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    cl_init_done_coreclk_i,
    dl_stopstate_reg,
    \FSM_sequential_dl_tx_sm_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_3 ,
    esc_active_sync_r,
    dl_status_bit_6_reg,
    timeout_hsexit,
    timeout_hsexit_all);
  output out;
  output [0:0]E;
  output s_level_out_d3_reg_0;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  output s_level_out_d3_reg_1;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input [2:0]Q;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input cl_init_done_coreclk_i;
  input dl_stopstate_reg;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_3 ;
  input esc_active_sync_r;
  input dl_status_bit_6_reg;
  input [0:0]timeout_hsexit;
  input timeout_hsexit_all;

  wire [0:0]E;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_3 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_reg;
  wire dl_stopstate_reg;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire [0:0]timeout_hsexit;
  wire timeout_hsexit_all;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFFF00FFBAFF00)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_1__0 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I1(s_level_out_d3_reg_0),
        .I2(Q[1]),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[2] ),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(E));
  LUT6 #(
    .INIT(64'hB0B0B0B0B0BFBFBF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_4__0 
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(Q[0]),
        .I3(timeout_hsexit),
        .I4(dl_status_bit_6_reg),
        .I5(timeout_hsexit_all),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF503050F0)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_6__0 
       (.I0(s_level_out_d3_reg_0),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0]_2 ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_3 ),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h44440FFF44440000)) 
    dl_status_bit_6_i_5__0
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(dl_status_bit_6_reg),
        .I3(timeout_hsexit),
        .I4(Q[0]),
        .I5(timeout_hsexit_all),
        .O(s_level_out_d3_reg_1));
  LUT6 #(
    .INIT(64'hBFBCBFBCBFBC8F8C)) 
    dl_stopstate_i_2__0
       (.I0(s_level_out_d3_reg_1),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(cl_init_done_coreclk_i),
        .I4(dl_stopstate_reg),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    dl_stopstate_i_3__0
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(s_level_out_d3_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_81
   (core_rst,
    core_clk);
  input core_rst;
  input core_clk;

  wire core_clk;
  wire core_rst;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_82
   (out,
    core_clk);
  output out;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_83
   (out,
    tx_div4_clk);
  output out;
  input tx_div4_clk;

  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_84
   (out,
    s_level_out_d3_reg_0,
    en_cal_hs_datapath,
    tx_div4_clk,
    hs_dp_sync_out);
  output out;
  output s_level_out_d3_reg_0;
  input en_cal_hs_datapath;
  input tx_div4_clk;
  input hs_dp_sync_out;

  wire en_cal_hs_datapath;
  wire hs_dp_sync_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(en_cal_hs_datapath),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \zero_count[0]_i_4 
       (.I0(s_level_out_d3),
        .I1(hs_dp_sync_out),
        .O(s_level_out_d3_reg_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_85
   (out,
    dl1_txrequesths_0,
    dl2_txrequesths_0,
    dl3_txrequesths_0,
    dl0_txrequesths_0,
    s_level_out_d1_cdc_to_reg_0,
    tx_div4_clk,
    dl1_txrequesths,
    dl2_txrequesths,
    dl3_txrequesths,
    dl0_txrequesths);
  output out;
  output dl1_txrequesths_0;
  output dl2_txrequesths_0;
  output dl3_txrequesths_0;
  output dl0_txrequesths_0;
  input s_level_out_d1_cdc_to_reg_0;
  input tx_div4_clk;
  input dl1_txrequesths;
  input dl2_txrequesths;
  input dl3_txrequesths;
  input dl0_txrequesths;

  wire dl0_txrequesths;
  wire dl0_txrequesths_0;
  wire dl1_txrequesths;
  wire dl1_txrequesths_0;
  wire dl2_txrequesths;
  wire dl2_txrequesths_0;
  wire dl3_txrequesths;
  wire dl3_txrequesths_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_div4_clk;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(tx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \zero_count[0]_i_5 
       (.I0(dl0_txrequesths),
        .I1(s_level_out_d3),
        .O(dl0_txrequesths_0));
  LUT2 #(
    .INIT(4'h7)) 
    \zero_count[0]_i_5__0 
       (.I0(dl1_txrequesths),
        .I1(s_level_out_d3),
        .O(dl1_txrequesths_0));
  LUT2 #(
    .INIT(4'h7)) 
    \zero_count[0]_i_5__1 
       (.I0(dl2_txrequesths),
        .I1(s_level_out_d3),
        .O(dl2_txrequesths_0));
  LUT2 #(
    .INIT(4'h7)) 
    \zero_count[0]_i_5__2 
       (.I0(dl3_txrequesths),
        .I1(s_level_out_d3),
        .O(dl3_txrequesths_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_87
   (hs_xfer_done,
    en_hs_datapath_reg,
    s_level_out_d3_reg_0,
    core_rst,
    hs_xfer_done_i,
    core_clk,
    \cl_tx_state_reg[0] ,
    dl_status_reg,
    \cl_tx_state_reg[0]_0 ,
    dl_hs_exit_done_i);
  output hs_xfer_done;
  output en_hs_datapath_reg;
  output s_level_out_d3_reg_0;
  input core_rst;
  input hs_xfer_done_i;
  input core_clk;
  input \cl_tx_state_reg[0] ;
  input [2:0]dl_status_reg;
  input \cl_tx_state_reg[0]_0 ;
  input [2:0]dl_hs_exit_done_i;

  wire \cl_tx_state_reg[0] ;
  wire \cl_tx_state_reg[0]_0 ;
  wire core_clk;
  wire core_rst;
  wire [2:0]dl_hs_exit_done_i;
  wire [2:0]dl_status_reg;
  wire en_hs_datapath_reg;
  wire hs_xfer_done_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign hs_xfer_done = s_level_out_d3;
  LUT4 #(
    .INIT(16'h8000)) 
    \cl_tx_state[3]_i_11 
       (.I0(s_level_out_d3),
        .I1(dl_hs_exit_done_i[2]),
        .I2(dl_hs_exit_done_i[0]),
        .I3(dl_hs_exit_done_i[1]),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'h4444444444444445)) 
    \cl_tx_state[3]_i_5 
       (.I0(\cl_tx_state_reg[0] ),
        .I1(s_level_out_d3_reg_0),
        .I2(dl_status_reg[2]),
        .I3(\cl_tx_state_reg[0]_0 ),
        .I4(dl_status_reg[0]),
        .I5(dl_status_reg[1]),
        .O(en_hs_datapath_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(hs_xfer_done_i),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_91
   (s_level_out_d3_reg_0,
    dl0_forcetxstopmode,
    dl0_txclkesc,
    esc_ctrl_all_sm_reg);
  output s_level_out_d3_reg_0;
  input dl0_forcetxstopmode;
  input dl0_txclkesc;
  input esc_ctrl_all_sm_reg;

  wire dl0_forcetxstopmode;
  wire dl0_txclkesc;
  wire esc_ctrl_all_sm_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_tx_state[3]_i_1 
       (.I0(s_level_out_d3),
        .I1(esc_ctrl_all_sm_reg),
        .O(s_level_out_d3_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(dl0_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_92
   (out,
    esc_start,
    dl0_txclkesc);
  output out;
  input esc_start;
  input dl0_txclkesc;

  wire dl0_txclkesc;
  wire esc_start;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(esc_start),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_93
   (D,
    \bit_cnt_reg[0] ,
    \esc_cmd_data_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[3] ,
    \esc_cmd_data_reg[0]_0 ,
    E,
    \FSM_sequential_dl_tx_state_reg[0] ,
    \FSM_sequential_dl_tx_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_state_reg[2] ,
    \dl0_txdataesc[7] ,
    dl0_txvalidesc_0,
    dl0_txvalidesc_1,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_state_reg[1] ,
    \dl0_txtriggeresc[0] ,
    \FSM_sequential_dl_tx_state_reg[1]_0 ,
    dl0_txulpsesc_0,
    dl0_txlpdtesc_0,
    esc_ctrl_t_reg,
    s_level_out_d1_cdc_to_reg_0,
    dl0_txclkesc,
    Q,
    \FSM_sequential_dl_tx_state[2]_i_4_0 ,
    \esc_cmd_data_reg[0]_1 ,
    txlpdtesc_r,
    txulpsesc_r,
    \bit_cnt_reg[0]_0 ,
    \bit_cnt_reg[0]_1 ,
    \bit_cnt_reg[0]_2 ,
    esc_ctrl_t_reg_0,
    dl0_txrequestesc,
    \bit_cnt_reg[0]_3 ,
    \bit_cnt_reg[3] ,
    \bit_cnt_reg[3]_0 ,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    \esc_cmd_data_reg[6] ,
    tx_dl_lp_dn_reg_1,
    tx_dl_lp_dn_reg_2,
    tx_dl_lp_dp_reg,
    tx_dl_lp_dp_reg_0,
    tx_dl_lp_dp_reg_1,
    tx_dl_lp_dp_reg_2,
    tx_dl_lp_dp_reg_3,
    \FSM_sequential_dl_tx_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_state_reg[0]_3 ,
    esc_ctrl_all_sm,
    out,
    esc_ctrl_lane_sm_reg,
    esc_ctrl_axi_if_reg,
    \bit_cnt_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[3]_0 ,
    \esc_cmd_data_reg[7] ,
    dl0_txvalidesc,
    dl0_txulpsexit,
    \esc_cmd_data_reg[6]_0 ,
    \esc_cmd_data_reg[5] ,
    \esc_cmd_data_reg[5]_0 ,
    dl0_txdataesc,
    \esc_cmd_data_reg[6]_1 ,
    \esc_cmd_data_reg[3] ,
    txulpsesc_r_reg,
    tx_dl_lp_dn_esc_i,
    \FSM_sequential_dl_tx_state_reg[0]_4 ,
    \FSM_sequential_dl_tx_state_reg[0]_5 ,
    \esc_cmd_data_reg[0]_2 ,
    dl_txreadyesc_reg,
    dl_txreadyesc_reg_0,
    txulpsesc_r_reg_0,
    tx_dl_lp_dn_reg_3,
    dl0_ulpsactivenot,
    dl0_txtriggeresc,
    dl0_txulpsesc,
    dl0_txlpdtesc,
    esc_ctrl_t_reg_1,
    esc_ctrl_t_reg_2);
  output [3:0]D;
  output [1:0]\bit_cnt_reg[0] ;
  output \esc_cmd_data_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[3] ;
  output \esc_cmd_data_reg[0]_0 ;
  output [0:0]E;
  output \FSM_sequential_dl_tx_state_reg[0] ;
  output \FSM_sequential_dl_tx_state_reg[0]_0 ;
  output \FSM_sequential_dl_tx_state_reg[0]_1 ;
  output [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  output [7:0]\dl0_txdataesc[7] ;
  output [0:0]dl0_txvalidesc_0;
  output dl0_txvalidesc_1;
  output s_level_out_d3_reg_0;
  output [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  output [0:0]\dl0_txtriggeresc[0] ;
  output \FSM_sequential_dl_tx_state_reg[1]_0 ;
  output dl0_txulpsesc_0;
  output dl0_txlpdtesc_0;
  output esc_ctrl_t_reg;
  input s_level_out_d1_cdc_to_reg_0;
  input dl0_txclkesc;
  input [3:0]Q;
  input \FSM_sequential_dl_tx_state[2]_i_4_0 ;
  input \esc_cmd_data_reg[0]_1 ;
  input txlpdtesc_r;
  input txulpsesc_r;
  input \bit_cnt_reg[0]_0 ;
  input \bit_cnt_reg[0]_1 ;
  input \bit_cnt_reg[0]_2 ;
  input esc_ctrl_t_reg_0;
  input dl0_txrequestesc;
  input [3:0]\bit_cnt_reg[0]_3 ;
  input \bit_cnt_reg[3] ;
  input \bit_cnt_reg[3]_0 ;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input [7:0]\esc_cmd_data_reg[6] ;
  input tx_dl_lp_dn_reg_1;
  input tx_dl_lp_dn_reg_2;
  input tx_dl_lp_dp_reg;
  input tx_dl_lp_dp_reg_0;
  input tx_dl_lp_dp_reg_1;
  input tx_dl_lp_dp_reg_2;
  input tx_dl_lp_dp_reg_3;
  input \FSM_sequential_dl_tx_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_state_reg[0]_3 ;
  input esc_ctrl_all_sm;
  input out;
  input esc_ctrl_lane_sm_reg;
  input esc_ctrl_axi_if_reg;
  input \bit_cnt_reg[0]_4 ;
  input [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  input \esc_cmd_data_reg[7] ;
  input dl0_txvalidesc;
  input dl0_txulpsexit;
  input \esc_cmd_data_reg[6]_0 ;
  input \esc_cmd_data_reg[5] ;
  input \esc_cmd_data_reg[5]_0 ;
  input [7:0]dl0_txdataesc;
  input \esc_cmd_data_reg[6]_1 ;
  input \esc_cmd_data_reg[3] ;
  input txulpsesc_r_reg;
  input tx_dl_lp_dn_esc_i;
  input \FSM_sequential_dl_tx_state_reg[0]_4 ;
  input \FSM_sequential_dl_tx_state_reg[0]_5 ;
  input \esc_cmd_data_reg[0]_2 ;
  input dl_txreadyesc_reg;
  input dl_txreadyesc_reg_0;
  input txulpsesc_r_reg_0;
  input tx_dl_lp_dn_reg_3;
  input dl0_ulpsactivenot;
  input [3:0]dl0_txtriggeresc;
  input dl0_txulpsesc;
  input dl0_txlpdtesc;
  input esc_ctrl_t_reg_1;
  input esc_ctrl_t_reg_2;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_tx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_3_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[0]_i_5_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_2_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_3_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[1]_i_5_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_2_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_3_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[2]_i_6_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_10_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_12_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_13_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_14_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_4_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_7_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_dl_tx_state[3]_i_9_n_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0] ;
  wire \FSM_sequential_dl_tx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_3 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_4 ;
  wire \FSM_sequential_dl_tx_state_reg[0]_5 ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[1] ;
  wire \FSM_sequential_dl_tx_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_dl_tx_state_reg[2] ;
  wire \FSM_sequential_dl_tx_state_reg[3] ;
  wire [3:0]\FSM_sequential_dl_tx_state_reg[3]_0 ;
  wire [3:0]Q;
  wire \bit_cnt[0]_i_2_n_0 ;
  wire \bit_cnt[3]_i_13_n_0 ;
  wire \bit_cnt[3]_i_3_n_0 ;
  wire \bit_cnt[3]_i_4_n_0 ;
  wire \bit_cnt[3]_i_5_n_0 ;
  wire \bit_cnt[3]_i_6_n_0 ;
  wire \bit_cnt[3]_i_8_n_0 ;
  wire [1:0]\bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[0]_1 ;
  wire \bit_cnt_reg[0]_2 ;
  wire [3:0]\bit_cnt_reg[0]_3 ;
  wire \bit_cnt_reg[0]_4 ;
  wire \bit_cnt_reg[3] ;
  wire \bit_cnt_reg[3]_0 ;
  wire dl0_txclkesc;
  wire [7:0]dl0_txdataesc;
  wire [7:0]\dl0_txdataesc[7] ;
  wire dl0_txlpdtesc;
  wire dl0_txlpdtesc_0;
  wire dl0_txrequestesc;
  wire [3:0]dl0_txtriggeresc;
  wire [0:0]\dl0_txtriggeresc[0] ;
  wire dl0_txulpsesc;
  wire dl0_txulpsesc_0;
  wire dl0_txulpsexit;
  wire dl0_txvalidesc;
  wire [0:0]dl0_txvalidesc_0;
  wire dl0_txvalidesc_1;
  wire dl0_ulpsactivenot;
  wire dl_txreadyesc_reg;
  wire dl_txreadyesc_reg_0;
  wire dl_ulpsactivenot_i_3_n_0;
  wire \esc_cmd_data[0]_i_2_n_0 ;
  wire \esc_cmd_data[0]_i_3_n_0 ;
  wire \esc_cmd_data[0]_i_4_n_0 ;
  wire \esc_cmd_data[1]_i_2_n_0 ;
  wire \esc_cmd_data[2]_i_2_n_0 ;
  wire \esc_cmd_data[5]_i_2_n_0 ;
  wire \esc_cmd_data[6]_i_2_n_0 ;
  wire \esc_cmd_data[7]_i_5_n_0 ;
  wire \esc_cmd_data[7]_i_8_n_0 ;
  wire \esc_cmd_data_reg[0] ;
  wire \esc_cmd_data_reg[0]_0 ;
  wire \esc_cmd_data_reg[0]_1 ;
  wire \esc_cmd_data_reg[0]_2 ;
  wire \esc_cmd_data_reg[3] ;
  wire \esc_cmd_data_reg[5] ;
  wire \esc_cmd_data_reg[5]_0 ;
  wire [7:0]\esc_cmd_data_reg[6] ;
  wire \esc_cmd_data_reg[6]_0 ;
  wire \esc_cmd_data_reg[6]_1 ;
  wire \esc_cmd_data_reg[7] ;
  wire esc_ctrl_all_sm;
  wire esc_ctrl_axi_if_reg;
  wire esc_ctrl_lane_sm_reg;
  wire esc_ctrl_t_i_2_n_0;
  wire esc_ctrl_t_reg;
  wire esc_ctrl_t_reg_0;
  wire esc_ctrl_t_reg_1;
  wire esc_ctrl_t_reg_2;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_esc_i;
  wire tx_dl_lp_dn_i_10_n_0;
  wire tx_dl_lp_dn_i_11_n_0;
  wire tx_dl_lp_dn_i_13_n_0;
  wire tx_dl_lp_dn_i_14_n_0;
  wire tx_dl_lp_dn_i_3_n_0;
  wire tx_dl_lp_dn_i_5_n_0;
  wire tx_dl_lp_dn_i_8_n_0;
  wire tx_dl_lp_dn_i_9_n_0;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dn_reg_1;
  wire tx_dl_lp_dn_reg_2;
  wire tx_dl_lp_dn_reg_3;
  wire tx_dl_lp_dp_i_2_n_0;
  wire tx_dl_lp_dp_i_4_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;
  wire tx_dl_lp_dp_reg_1;
  wire tx_dl_lp_dp_reg_2;
  wire tx_dl_lp_dp_reg_3;
  wire txlpdtesc_r;
  wire \txtriggeresc_r[3]_i_3_n_0 ;
  wire txulpsesc_r;
  wire txulpsesc_r_reg;
  wire txulpsesc_r_reg_0;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0604)) 
    \FSM_sequential_dl_tx_state[0]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[0]_i_2_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[0]_i_3_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h888F888888888888)) 
    \FSM_sequential_dl_tx_state[0]_i_2 
       (.I0(esc_ctrl_t_reg_0),
        .I1(\FSM_sequential_dl_tx_state[0]_i_4_n_0 ),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00003000FF0030AA)) 
    \FSM_sequential_dl_tx_state[0]_i_3 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ),
        .I1(Q[0]),
        .I2(\FSM_sequential_dl_tx_state[0]_i_5_n_0 ),
        .I3(Q[3]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3F3FBFBF3F3FBFFF)) 
    \FSM_sequential_dl_tx_state[0]_i_4 
       (.I0(Q[2]),
        .I1(s_level_out_d3),
        .I2(dl0_txrequestesc),
        .I3(txulpsesc_r),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFF7F7F7F)) 
    \FSM_sequential_dl_tx_state[0]_i_5 
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl0_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl0_txvalidesc),
        .O(\FSM_sequential_dl_tx_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEFEEEEEEEFEEE)) 
    \FSM_sequential_dl_tx_state[1]_i_1 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[1]_i_3_n_0 ),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(dl_ulpsactivenot_i_3_n_0),
        .I5(Q[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAEFAE)) 
    \FSM_sequential_dl_tx_state[1]_i_2 
       (.I0(\FSM_sequential_dl_tx_state[1]_i_4_n_0 ),
        .I1(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\FSM_sequential_dl_tx_state[1]_i_5_n_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0010001000100000)) 
    \FSM_sequential_dl_tx_state[1]_i_3 
       (.I0(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I1(Q[2]),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(dl_ulpsactivenot_i_3_n_0),
        .I4(txulpsesc_r),
        .I5(txlpdtesc_r),
        .O(\FSM_sequential_dl_tx_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \FSM_sequential_dl_tx_state[1]_i_4 
       (.I0(dl0_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(\bit_cnt[3]_i_5_n_0 ),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0A000A0C0A000A00)) 
    \FSM_sequential_dl_tx_state[1]_i_5 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_4_0 ),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(dl_ulpsactivenot_i_3_n_0),
        .I3(txlpdtesc_r),
        .I4(txulpsesc_r),
        .I5(\bit_cnt_reg[0]_0 ),
        .O(\FSM_sequential_dl_tx_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAFAAABAA)) 
    \FSM_sequential_dl_tx_state[2]_i_1 
       (.I0(\FSM_sequential_dl_tx_state[2]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAB00AA0000000000)) 
    \FSM_sequential_dl_tx_state[2]_i_2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .I1(\bit_cnt_reg[0]_2 ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(Q[0]),
        .I4(txlpdtesc_r),
        .I5(tx_dl_lp_dn_reg_2),
        .O(\FSM_sequential_dl_tx_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFE000000)) 
    \FSM_sequential_dl_tx_state[2]_i_3 
       (.I0(txulpsesc_r),
        .I1(\esc_cmd_data_reg[0]_1 ),
        .I2(txlpdtesc_r),
        .I3(s_level_out_d3),
        .I4(dl0_txrequestesc),
        .O(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF07000000)) 
    \FSM_sequential_dl_tx_state[2]_i_4 
       (.I0(Q[0]),
        .I1(txlpdtesc_r),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_state[2]_i_6_n_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF000455550004)) 
    \FSM_sequential_dl_tx_state[2]_i_6 
       (.I0(\bit_cnt_reg[0]_1 ),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(\bit_cnt_reg[0]_2 ),
        .I4(dl_ulpsactivenot_i_3_n_0),
        .I5(\FSM_sequential_dl_tx_state[2]_i_4_0 ),
        .O(\FSM_sequential_dl_tx_state[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0F0F0FFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_10 
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(Q[2]),
        .I2(txulpsesc_r_reg),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(\bit_cnt[3]_i_5_n_0 ),
        .I5(\bit_cnt_reg[0]_1 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \FSM_sequential_dl_tx_state[3]_i_12 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\FSM_sequential_dl_tx_state_reg[3]_0 [3]),
        .I4(txulpsesc_r),
        .I5(dl_ulpsactivenot_i_3_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \FSM_sequential_dl_tx_state[3]_i_13 
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_state[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0D0D55070D0D5505)) 
    \FSM_sequential_dl_tx_state[3]_i_14 
       (.I0(Q[1]),
        .I1(\bit_cnt[3]_i_5_n_0 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state[3]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFEE)) 
    \FSM_sequential_dl_tx_state[3]_i_2 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_4_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_2 ),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .I4(\FSM_sequential_dl_tx_state[3]_i_8_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_9_n_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAEAAAA)) 
    \FSM_sequential_dl_tx_state[3]_i_3 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_10_n_0 ),
        .I1(esc_ctrl_t_reg_0),
        .I2(Q[2]),
        .I3(txlpdtesc_r),
        .I4(\FSM_sequential_dl_tx_state[3]_i_12_n_0 ),
        .I5(\FSM_sequential_dl_tx_state[3]_i_13_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \FSM_sequential_dl_tx_state[3]_i_4 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12_n_0 ),
        .I1(Q[0]),
        .I2(out),
        .I3(txlpdtesc_r),
        .I4(Q[3]),
        .I5(tx_dl_lp_dn_i_5_n_0),
        .O(\FSM_sequential_dl_tx_state[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h01FFFFFF)) 
    \FSM_sequential_dl_tx_state[3]_i_7 
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl0_txrequestesc),
        .I4(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h0444)) 
    \FSM_sequential_dl_tx_state[3]_i_8 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(dl0_txrequestesc),
        .I3(s_level_out_d3),
        .O(\FSM_sequential_dl_tx_state[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFEEEEEE)) 
    \FSM_sequential_dl_tx_state[3]_i_9 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_14_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[0]_4 ),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_state_reg[0]_5 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h000000FF000000EF)) 
    \bit_cnt[0]_i_1 
       (.I0(\bit_cnt_reg[0]_3 [2]),
        .I1(\bit_cnt_reg[0]_3 [1]),
        .I2(\bit_cnt_reg[0]_3 [3]),
        .I3(\bit_cnt_reg[0]_1 ),
        .I4(\bit_cnt_reg[0]_3 [0]),
        .I5(\bit_cnt[0]_i_2_n_0 ),
        .O(\bit_cnt_reg[0] [0]));
  LUT5 #(
    .INIT(32'hABFFFFFF)) 
    \bit_cnt[0]_i_2 
       (.I0(Q[2]),
        .I1(txlpdtesc_r),
        .I2(txulpsesc_r),
        .I3(dl0_txrequestesc),
        .I4(s_level_out_d3),
        .O(\bit_cnt[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEEFFFEEEE)) 
    \bit_cnt[3]_i_1 
       (.I0(\bit_cnt[3]_i_3_n_0 ),
        .I1(\bit_cnt[3]_i_4_n_0 ),
        .I2(\bit_cnt[3]_i_5_n_0 ),
        .I3(\bit_cnt[3]_i_6_n_0 ),
        .I4(\bit_cnt_reg[0]_0 ),
        .I5(\bit_cnt_reg[0]_2 ),
        .O(\FSM_sequential_dl_tx_state_reg[2] ));
  LUT6 #(
    .INIT(64'h00000000000001F0)) 
    \bit_cnt[3]_i_13 
       (.I0(\bit_cnt[3]_i_5_n_0 ),
        .I1(\esc_cmd_data_reg[6]_0 ),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\bit_cnt[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000CA300000CA00)) 
    \bit_cnt[3]_i_2 
       (.I0(\bit_cnt[3]_i_8_n_0 ),
        .I1(\bit_cnt_reg[3] ),
        .I2(\bit_cnt_reg[0]_3 [0]),
        .I3(\bit_cnt_reg[0]_3 [3]),
        .I4(\bit_cnt_reg[0]_1 ),
        .I5(\bit_cnt_reg[3]_0 ),
        .O(\bit_cnt_reg[0] [1]));
  LUT6 #(
    .INIT(64'h02020F0300020003)) 
    \bit_cnt[3]_i_3 
       (.I0(\FSM_sequential_dl_tx_state[3]_i_12_n_0 ),
        .I1(Q[2]),
        .I2(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .I3(Q[1]),
        .I4(\bit_cnt[3]_i_5_n_0 ),
        .I5(\bit_cnt_reg[0]_4 ),
        .O(\bit_cnt[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10000000)) 
    \bit_cnt[3]_i_4 
       (.I0(\bit_cnt[3]_i_5_n_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(tx_dl_lp_dn_esc_i),
        .I3(Q[2]),
        .I4(tx_dl_lp_dp_reg_2),
        .I5(\bit_cnt[3]_i_13_n_0 ),
        .O(\bit_cnt[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_5 
       (.I0(dl0_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txlpdtesc_r),
        .O(\bit_cnt[3]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \bit_cnt[3]_i_6 
       (.I0(dl0_txrequestesc),
        .I1(s_level_out_d3),
        .I2(txulpsesc_r),
        .O(\bit_cnt[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFAB)) 
    \bit_cnt[3]_i_8 
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(txulpsesc_r),
        .I2(txlpdtesc_r),
        .I3(Q[2]),
        .I4(\bit_cnt_reg[0]_3 [2]),
        .I5(\bit_cnt_reg[0]_3 [1]),
        .O(\bit_cnt[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000070400000000)) 
    dl_txreadyesc_i_1
       (.I0(dl0_txvalidesc),
        .I1(\esc_cmd_data_reg[7] ),
        .I2(dl_txreadyesc_reg),
        .I3(dl_txreadyesc_reg_0),
        .I4(dl_ulpsactivenot_i_3_n_0),
        .I5(txulpsesc_r_reg_0),
        .O(dl0_txvalidesc_1));
  LUT6 #(
    .INIT(64'hFFFFFEFFEEEEEEEE)) 
    dl_ulpsactivenot_i_1
       (.I0(dl_txreadyesc_reg),
        .I1(dl0_txulpsexit),
        .I2(\bit_cnt_reg[0]_2 ),
        .I3(txulpsesc_r),
        .I4(dl_ulpsactivenot_i_3_n_0),
        .I5(dl0_ulpsactivenot),
        .O(s_level_out_d3_reg_0));
  LUT2 #(
    .INIT(4'h7)) 
    dl_ulpsactivenot_i_3
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .O(dl_ulpsactivenot_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \esc_cmd_data[0]_i_1 
       (.I0(\esc_cmd_data_reg[6] [1]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl0_txdataesc[0]),
        .I4(\esc_cmd_data[0]_i_2_n_0 ),
        .I5(\esc_cmd_data[0]_i_3_n_0 ),
        .O(\dl0_txdataesc[7] [0]));
  LUT5 #(
    .INIT(32'h01000000)) 
    \esc_cmd_data[0]_i_2 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\esc_cmd_data[0]_i_4_n_0 ),
        .I4(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2A00000000000000)) 
    \esc_cmd_data[0]_i_3 
       (.I0(\esc_cmd_data_reg[6]_1 ),
        .I1(dl0_txvalidesc),
        .I2(\esc_cmd_data_reg[7] ),
        .I3(dl0_txrequestesc),
        .I4(s_level_out_d3),
        .I5(txlpdtesc_r),
        .O(\esc_cmd_data[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h007F7F7F)) 
    \esc_cmd_data[0]_i_4 
       (.I0(txulpsesc_r),
        .I1(s_level_out_d3),
        .I2(dl0_txrequestesc),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl0_txvalidesc),
        .O(\esc_cmd_data[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[1]_i_1 
       (.I0(\esc_cmd_data_reg[6] [2]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl0_txdataesc[1]),
        .I4(\esc_cmd_data[1]_i_2_n_0 ),
        .O(\dl0_txdataesc[7] [1]));
  LUT6 #(
    .INIT(64'hA8FF000000000000)) 
    \esc_cmd_data[1]_i_2 
       (.I0(\bit_cnt[3]_i_6_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \esc_cmd_data[2]_i_1 
       (.I0(\esc_cmd_data_reg[6] [3]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[5]_0 ),
        .I3(dl0_txdataesc[2]),
        .I4(\esc_cmd_data[2]_i_2_n_0 ),
        .O(\dl0_txdataesc[7] [2]));
  LUT6 #(
    .INIT(64'hA2FF000000000000)) 
    \esc_cmd_data[2]_i_2 
       (.I0(\bit_cnt[3]_i_6_n_0 ),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I3(\bit_cnt[3]_i_5_n_0 ),
        .I4(\esc_cmd_data_reg[6]_0 ),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\esc_cmd_data[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[3]_i_1 
       (.I0(\esc_cmd_data_reg[6] [4]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl0_txdataesc[3]),
        .O(\dl0_txdataesc[7] [3]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[4]_i_1 
       (.I0(\esc_cmd_data_reg[6] [5]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl0_txdataesc[4]),
        .O(\dl0_txdataesc[7] [4]));
  LUT5 #(
    .INIT(32'hFFF8F8F8)) 
    \esc_cmd_data[5]_i_1 
       (.I0(\esc_cmd_data_reg[6] [6]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[5]_i_2_n_0 ),
        .I3(\esc_cmd_data_reg[5]_0 ),
        .I4(dl0_txdataesc[5]),
        .O(\dl0_txdataesc[7] [5]));
  LUT6 #(
    .INIT(64'h0000008088008888)) 
    \esc_cmd_data[5]_i_2 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[6]_1 ),
        .I2(txulpsesc_r),
        .I3(dl_ulpsactivenot_i_3_n_0),
        .I4(txlpdtesc_r),
        .I5(\esc_cmd_data_reg[3] ),
        .O(\esc_cmd_data[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF888F88F8888888)) 
    \esc_cmd_data[6]_i_1 
       (.I0(\esc_cmd_data_reg[6] [7]),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data_reg[6]_0 ),
        .I3(\esc_cmd_data_reg[6]_1 ),
        .I4(\esc_cmd_data[6]_i_2_n_0 ),
        .I5(dl0_txdataesc[6]),
        .O(\dl0_txdataesc[7] [6]));
  LUT5 #(
    .INIT(32'h3AAA2AAA)) 
    \esc_cmd_data[6]_i_2 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(txlpdtesc_r),
        .I2(dl0_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r),
        .O(\esc_cmd_data[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDDDFFFDDDDD)) 
    \esc_cmd_data[7]_i_1 
       (.I0(\esc_cmd_data_reg[6]_0 ),
        .I1(\esc_cmd_data_reg[5] ),
        .I2(\esc_cmd_data[7]_i_5_n_0 ),
        .I3(\esc_cmd_data_reg[0]_1 ),
        .I4(\esc_cmd_data_reg[0]_2 ),
        .I5(\FSM_sequential_dl_tx_state_reg[0]_3 ),
        .O(dl0_txvalidesc_0));
  LUT6 #(
    .INIT(64'hEEAFAFAF00000000)) 
    \esc_cmd_data[7]_i_2 
       (.I0(\esc_cmd_data[7]_i_8_n_0 ),
        .I1(dl0_txdataesc[7]),
        .I2(\bit_cnt[3]_i_5_n_0 ),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl0_txvalidesc),
        .I5(\esc_cmd_data_reg[6]_1 ),
        .O(\dl0_txdataesc[7] [7]));
  LUT4 #(
    .INIT(16'hE000)) 
    \esc_cmd_data[7]_i_5 
       (.I0(txlpdtesc_r),
        .I1(txulpsesc_r),
        .I2(s_level_out_d3),
        .I3(dl0_txrequestesc),
        .O(\esc_cmd_data[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5400000054005400)) 
    \esc_cmd_data[7]_i_8 
       (.I0(\FSM_sequential_dl_tx_state_reg[3]_0 [0]),
        .I1(\FSM_sequential_dl_tx_state_reg[3]_0 [1]),
        .I2(\FSM_sequential_dl_tx_state_reg[3]_0 [2]),
        .I3(\esc_cmd_data_reg[6]_0 ),
        .I4(dl_ulpsactivenot_i_3_n_0),
        .I5(txulpsesc_r),
        .O(\esc_cmd_data[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_all_sm_i_1
       (.I0(Q[0]),
        .I1(esc_ctrl_all_sm),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0] ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_axi_if_i_2
       (.I0(Q[0]),
        .I1(esc_ctrl_axi_if_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h04FC0000040C0000)) 
    esc_ctrl_lane_sm_i_1
       (.I0(Q[0]),
        .I1(esc_ctrl_lane_sm_reg),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ),
        .I5(out),
        .O(\FSM_sequential_dl_tx_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00000000E2222222)) 
    esc_ctrl_t_i_1
       (.I0(esc_ctrl_t_reg_1),
        .I1(esc_ctrl_t_i_2_n_0),
        .I2(esc_ctrl_t_reg_0),
        .I3(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ),
        .I4(out),
        .I5(esc_ctrl_t_reg_2),
        .O(esc_ctrl_t_reg));
  LUT5 #(
    .INIT(32'h00032E0A)) 
    esc_ctrl_t_i_2
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(esc_ctrl_t_i_2_n_0));
  LUT4 #(
    .INIT(16'hE222)) 
    esc_stopstate_i_2
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .I1(Q[1]),
        .I2(\FSM_sequential_dl_tx_state[2]_i_3_n_0 ),
        .I3(out),
        .O(\FSM_sequential_dl_tx_state_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(dl0_txclkesc),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    tx_dl_lp_dn_i_1
       (.I0(tx_dl_lp_dn_i_3_n_0),
        .I1(Q[3]),
        .I2(tx_dl_lp_dp_reg),
        .I3(tx_dl_lp_dn_i_5_n_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(tx_dl_lp_dp_reg_1),
        .O(\FSM_sequential_dl_tx_state_reg[3] ));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    tx_dl_lp_dn_i_10
       (.I0(\esc_cmd_data_reg[0]_1 ),
        .I1(dl_ulpsactivenot_i_3_n_0),
        .I2(tx_dl_lp_dn_reg_0),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_2),
        .O(tx_dl_lp_dn_i_10_n_0));
  LUT4 #(
    .INIT(16'h0080)) 
    tx_dl_lp_dn_i_11
       (.I0(txlpdtesc_r),
        .I1(s_level_out_d3),
        .I2(dl0_txrequestesc),
        .I3(\esc_cmd_data_reg[6] [0]),
        .O(tx_dl_lp_dn_i_11_n_0));
  LUT6 #(
    .INIT(64'h00000F4000000040)) 
    tx_dl_lp_dn_i_13
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(txlpdtesc_r),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(tx_dl_lp_dn_i_13_n_0));
  LUT6 #(
    .INIT(64'h000000000000F777)) 
    tx_dl_lp_dn_i_14
       (.I0(s_level_out_d3),
        .I1(dl0_txrequestesc),
        .I2(Q[2]),
        .I3(dl0_txulpsexit),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(tx_dl_lp_dn_i_14_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    tx_dl_lp_dn_i_2
       (.I0(tx_dl_lp_dn_i_8_n_0),
        .I1(tx_dl_lp_dn_i_9_n_0),
        .I2(tx_dl_lp_dn_i_10_n_0),
        .I3(tx_dl_lp_dn_i_11_n_0),
        .I4(tx_dl_lp_dn_reg),
        .I5(tx_dl_lp_dn_i_13_n_0),
        .O(\esc_cmd_data_reg[0] ));
  LUT6 #(
    .INIT(64'h2222FFFF2222E222)) 
    tx_dl_lp_dn_i_3
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(Q[2]),
        .I2(tx_dl_lp_dp_reg_2),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[0]_i_4_n_0 ),
        .O(tx_dl_lp_dn_i_3_n_0));
  LUT6 #(
    .INIT(64'hABAAAAAAABABABAB)) 
    tx_dl_lp_dn_i_5
       (.I0(tx_dl_lp_dn_i_14_n_0),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\esc_cmd_data_reg[7] ),
        .I4(dl0_txvalidesc),
        .I5(txlpdtesc_r),
        .O(tx_dl_lp_dn_i_5_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    tx_dl_lp_dn_i_8
       (.I0(\bit_cnt_reg[0]_2 ),
        .I1(\bit_cnt[3]_i_6_n_0 ),
        .I2(tx_dl_lp_dn_reg_2),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dn_reg_1),
        .I5(tx_dl_lp_dn_reg_3),
        .O(tx_dl_lp_dn_i_8_n_0));
  LUT6 #(
    .INIT(64'h00080A0A00F80A0A)) 
    tx_dl_lp_dn_i_9
       (.I0(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(dl_ulpsactivenot_i_3_n_0),
        .O(tx_dl_lp_dn_i_9_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEEE)) 
    tx_dl_lp_dp_i_1
       (.I0(tx_dl_lp_dp_i_2_n_0),
        .I1(tx_dl_lp_dp_reg_3),
        .I2(tx_dl_lp_dn_reg),
        .I3(\esc_cmd_data_reg[6] [0]),
        .I4(tx_dl_lp_dp_i_4_n_0),
        .O(\esc_cmd_data_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0200FFFF02000808)) 
    tx_dl_lp_dp_i_2
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(dl0_txulpsexit),
        .I4(Q[3]),
        .I5(\FSM_sequential_dl_tx_state[3]_i_7_n_0 ),
        .O(tx_dl_lp_dp_i_2_n_0));
  LUT6 #(
    .INIT(64'h040404040404FF04)) 
    tx_dl_lp_dp_i_4
       (.I0(txlpdtesc_r),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(dl_ulpsactivenot_i_3_n_0),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(tx_dl_lp_dp_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txlpdtesc_r_i_1
       (.I0(dl0_txlpdtesc),
        .I1(txulpsesc_r_reg),
        .I2(dl0_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txlpdtesc_r),
        .O(dl0_txlpdtesc_0));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[0]_i_1 
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl0_txtriggeresc[0]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [0]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[1]_i_1 
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl0_txtriggeresc[1]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [1]));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[2]_i_1 
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl0_txtriggeresc[2]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [2]));
  LUT6 #(
    .INIT(64'hFF0FFF0FFF0FEF0F)) 
    \txtriggeresc_r[3]_i_1 
       (.I0(dl0_txtriggeresc[0]),
        .I1(dl0_txtriggeresc[3]),
        .I2(txulpsesc_r_reg_0),
        .I3(\txtriggeresc_r[3]_i_3_n_0 ),
        .I4(dl0_txtriggeresc[2]),
        .I5(dl0_txtriggeresc[1]),
        .O(\dl0_txtriggeresc[0] ));
  LUT6 #(
    .INIT(64'h0010000400000000)) 
    \txtriggeresc_r[3]_i_2 
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl0_txtriggeresc[3]),
        .O(\FSM_sequential_dl_tx_state_reg[1] [3]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \txtriggeresc_r[3]_i_3 
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(dl0_txrequestesc),
        .I5(s_level_out_d3),
        .O(\txtriggeresc_r[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0008000A000)) 
    txulpsesc_r_i_1
       (.I0(dl0_txulpsesc),
        .I1(txulpsesc_r_reg),
        .I2(dl0_txrequestesc),
        .I3(s_level_out_d3),
        .I4(txulpsesc_r_reg_0),
        .I5(txulpsesc_r),
        .O(dl0_txulpsesc_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_95
   (out,
    dl_stopstate_reg,
    init_done_reg,
    en_hs_datapath14_out,
    cl_txclkactivehs_reg,
    core_rst,
    dl0_forcetxstopmode,
    core_clk,
    dl_stopstate_reg_0,
    dl_stopstate_reg_1,
    dl_stopstate_i,
    Q,
    cl_init_done_coreclk_i,
    dl_stopstate_reg_2,
    cl_txclkactivehs_i,
    en_hs_datapath_reg,
    en_hs_datapath_reg_0,
    SR,
    dl_stopstate_reg_3,
    system_rst);
  output out;
  output dl_stopstate_reg;
  output init_done_reg;
  output en_hs_datapath14_out;
  output cl_txclkactivehs_reg;
  input core_rst;
  input dl0_forcetxstopmode;
  input core_clk;
  input dl_stopstate_reg_0;
  input dl_stopstate_reg_1;
  input dl_stopstate_i;
  input [2:0]Q;
  input cl_init_done_coreclk_i;
  input dl_stopstate_reg_2;
  input cl_txclkactivehs_i;
  input en_hs_datapath_reg;
  input en_hs_datapath_reg_0;
  input [0:0]SR;
  input dl_stopstate_reg_3;
  input system_rst;

  wire [2:0]Q;
  wire [0:0]SR;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl0_forcetxstopmode;
  wire dl_stopstate_i;
  wire dl_stopstate_i_4_n_0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_stopstate_reg_2;
  wire dl_stopstate_reg_3;
  wire en_hs_datapath14_out;
  wire en_hs_datapath_reg;
  wire en_hs_datapath_reg_0;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d3;
  LUT4 #(
    .INIT(16'hAA8A)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_9 
       (.I0(cl_init_done_coreclk_i),
        .I1(s_level_out_d3),
        .I2(dl_stopstate_reg_3),
        .I3(system_rst),
        .O(init_done_reg));
  LUT5 #(
    .INIT(32'hABABABBB)) 
    dl_status_bit_6_i_4
       (.I0(init_done_reg),
        .I1(SR),
        .I2(cl_txclkactivehs_i),
        .I3(en_hs_datapath_reg),
        .I4(en_hs_datapath_reg_0),
        .O(cl_txclkactivehs_reg));
  LUT5 #(
    .INIT(32'hEEEFEEE0)) 
    dl_stopstate_i_1
       (.I0(init_done_reg),
        .I1(dl_stopstate_reg_0),
        .I2(dl_stopstate_reg_1),
        .I3(dl_stopstate_i_4_n_0),
        .I4(dl_stopstate_i),
        .O(dl_stopstate_reg));
  LUT6 #(
    .INIT(64'hAABBFEEEAAAABAEE)) 
    dl_stopstate_i_4
       (.I0(init_done_reg),
        .I1(Q[1]),
        .I2(cl_init_done_coreclk_i),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(dl_stopstate_reg_2),
        .O(dl_stopstate_i_4_n_0));
  LUT6 #(
    .INIT(64'h0200020002000000)) 
    en_hs_datapath_i_1
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(init_done_reg),
        .I3(cl_txclkactivehs_i),
        .I4(en_hs_datapath_reg),
        .I5(en_hs_datapath_reg_0),
        .O(en_hs_datapath14_out));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_forcetxstopmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_96
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    timeout_hsexit_reg,
    s_level_out_d3_reg_0,
    core_rst,
    dl0_txrequestesc,
    core_clk,
    Q,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    esc_active_sync_r,
    esc_start_reg);
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output timeout_hsexit_reg;
  output s_level_out_d3_reg_0;
  input core_rst;
  input dl0_txrequestesc;
  input core_clk;
  input [2:0]Q;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input esc_active_sync_r;
  input esc_start_reg;

  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire [2:0]Q;
  wire core_clk;
  wire core_rst;
  wire dl0_txrequestesc;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire esc_active_sync_r;
  wire esc_start_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_reg;

  assign out = s_level_out_d3;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_2 
       (.I0(s_level_out_d3),
        .I1(dl_status_bit_6_reg),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hDFFF000000000000)) 
    dl_status_bit_6_i_3
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(dl_status_bit_6_reg),
        .I3(s_level_out_d3),
        .I4(Q[2]),
        .I5(dl_status_bit_6_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT6 #(
    .INIT(64'hFF0F7777FFFF0000)) 
    esc_start_i_2
       (.I0(dl_status_bit_6_reg),
        .I1(s_level_out_d3),
        .I2(esc_active_sync_r),
        .I3(esc_start_reg),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(timeout_hsexit_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_txrequestesc),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_97
   (out,
    cl_txclkactivehs_reg,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    D,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    s_level_out_d2_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    en_cal_hs_datapath13_out,
    \FSM_sequential_dl_tx_sm_state_reg[1]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    init_done_reg,
    core_rst,
    dl_txrequesths_r,
    core_clk,
    Q,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    cl_init_done_coreclk_i,
    en_lp_01_cnt_reg,
    en_lp_01_cnt_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[2]_2 ,
    en_cal_hs_datapath_reg,
    tx_dl_lp_dp_reg,
    en_hs_datapath_reg,
    cl_txclkactivehs_i,
    en_cal_hs_datapath_reg_0,
    tx_dl_lp_dn_reg,
    tx_dl_lp_dn_reg_0,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    dl_status_bit_6_reg_1,
    dl_status_bit_6_reg_2,
    en_lp_01_cnt_reg_1,
    en_lp_01_cnt_reg_2,
    tx_dl_lp_dp_reg_0);
  output out;
  output cl_txclkactivehs_reg;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output [0:0]D;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output s_level_out_d2_reg_0;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  output en_cal_hs_datapath13_out;
  output \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  output init_done_reg;
  input core_rst;
  input dl_txrequesths_r;
  input core_clk;
  input [2:0]Q;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input cl_init_done_coreclk_i;
  input en_lp_01_cnt_reg;
  input en_lp_01_cnt_reg_0;
  input \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  input en_cal_hs_datapath_reg;
  input tx_dl_lp_dp_reg;
  input en_hs_datapath_reg;
  input cl_txclkactivehs_i;
  input en_cal_hs_datapath_reg_0;
  input tx_dl_lp_dn_reg;
  input tx_dl_lp_dn_reg_0;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input dl_status_bit_6_reg_1;
  input dl_status_bit_6_reg_2;
  input en_lp_01_cnt_reg_1;
  input en_lp_01_cnt_reg_2;
  input tx_dl_lp_dp_reg_0;

  wire [0:0]D;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_11_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_7_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_2 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire cl_txclkactivehs_i;
  wire cl_txclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_i_2_n_0;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_status_bit_6_reg_1;
  wire dl_status_bit_6_reg_2;
  wire dl_txrequesths_r;
  wire en_cal_hs_datapath13_out;
  wire en_cal_hs_datapath_i_3_n_0;
  wire en_cal_hs_datapath_reg;
  wire en_cal_hs_datapath_reg_0;
  wire en_hs_datapath_reg;
  wire en_lp_01_cnt_i_2_n_0;
  wire en_lp_01_cnt_i_3_n_0;
  wire en_lp_01_cnt_reg;
  wire en_lp_01_cnt_reg_0;
  wire en_lp_01_cnt_reg_1;
  wire en_lp_01_cnt_reg_2;
  wire init_done_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_dl_lp_dn_reg;
  wire tx_dl_lp_dn_reg_0;
  wire tx_dl_lp_dp_i_3__0_n_0;
  wire tx_dl_lp_dp_i_4__4_n_0;
  wire tx_dl_lp_dp_i_5__3_n_0;
  wire tx_dl_lp_dp_i_6_n_0;
  wire tx_dl_lp_dp_reg;
  wire tx_dl_lp_dp_reg_0;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000BBBFFFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_4 
       (.I0(en_lp_01_cnt_reg_2),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(en_lp_01_cnt_reg_1),
        .O(s_level_out_d2_reg_0));
  LUT6 #(
    .INIT(64'h77777777F7F7F777)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_11 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_i),
        .I3(s_level_out_d3),
        .I4(en_cal_hs_datapath_reg_0),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h0075)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_2 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_7_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[2]_2 ),
        .I2(Q[1]),
        .I3(en_lp_01_cnt_reg),
        .O(D));
  LUT6 #(
    .INIT(64'h050D050F050D0F0F)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_5 
       (.I0(\FSM_sequential_dl_tx_sm_state[2]_i_11_n_0 ),
        .I1(cl_init_done_coreclk_i),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(s_level_out_d2_reg_0),
        .O(init_done_reg));
  LUT6 #(
    .INIT(64'hCFFFCFFFC3DFCFDF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_7 
       (.I0(en_cal_hs_datapath_reg),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I5(cl_txclkactivehs_reg),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFCFDFDFCFCFDFD)) 
    dl_status_bit_6_i_1
       (.I0(dl_status_bit_6_i_2_n_0),
        .I1(dl_status_bit_6_reg),
        .I2(dl_status_bit_6_reg_0),
        .I3(dl_status_bit_6_reg_1),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h00300030503F5F3F)) 
    dl_status_bit_6_i_2
       (.I0(cl_txclkactivehs_reg),
        .I1(s_level_out_d2_reg_0),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(cl_init_done_coreclk_i),
        .I5(dl_status_bit_6_reg_2),
        .O(dl_status_bit_6_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAFF)) 
    en_cal_hs_datapath_i_1
       (.I0(en_cal_hs_datapath_i_3_n_0),
        .I1(Q[1]),
        .I2(en_hs_datapath_reg),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(en_lp_01_cnt_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0100000001000100)) 
    en_cal_hs_datapath_i_2
       (.I0(cl_txclkactivehs_reg),
        .I1(en_lp_01_cnt_reg),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(en_cal_hs_datapath_reg_0),
        .I5(en_cal_hs_datapath_reg),
        .O(en_cal_hs_datapath13_out));
  LUT6 #(
    .INIT(64'h000000000000FF57)) 
    en_cal_hs_datapath_i_3
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg_0),
        .I3(en_cal_hs_datapath_reg),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(en_cal_hs_datapath_i_3_n_0));
  LUT3 #(
    .INIT(8'h57)) 
    en_cal_hs_datapath_i_5
       (.I0(cl_txclkactivehs_i),
        .I1(s_level_out_d3),
        .I2(en_cal_hs_datapath_reg_0),
        .O(cl_txclkactivehs_reg));
  LUT6 #(
    .INIT(64'h0F0F0F0200000002)) 
    en_lp_01_cnt_i_1__0
       (.I0(Q[1]),
        .I1(en_lp_01_cnt_i_2_n_0),
        .I2(en_lp_01_cnt_reg),
        .I3(en_lp_01_cnt_i_3_n_0),
        .I4(Q[2]),
        .I5(en_lp_01_cnt_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT5 #(
    .INIT(32'hFBFBF8FB)) 
    en_lp_01_cnt_i_2
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I1(Q[0]),
        .I2(cl_txclkactivehs_reg),
        .I3(en_lp_01_cnt_reg_1),
        .I4(en_lp_01_cnt_reg_2),
        .O(en_lp_01_cnt_i_2_n_0));
  LUT6 #(
    .INIT(64'h0FF00FD00FF0FFD0)) 
    en_lp_01_cnt_i_3
       (.I0(en_lp_01_cnt_reg_1),
        .I1(en_lp_01_cnt_reg_2),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(cl_txclkactivehs_reg),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(en_lp_01_cnt_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_txrequesths_r),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEFEEEE)) 
    tx_dl_lp_dn_i_1__0
       (.I0(tx_dl_lp_dp_i_5__3_n_0),
        .I1(tx_dl_lp_dp_reg),
        .I2(s_level_out_d2_reg_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFEEFEEEEEEEEE)) 
    tx_dl_lp_dp_i_1__0
       (.I0(tx_dl_lp_dp_i_3__0_n_0),
        .I1(tx_dl_lp_dp_i_4__4_n_0),
        .I2(Q[1]),
        .I3(tx_dl_lp_dn_reg),
        .I4(tx_dl_lp_dn_reg_0),
        .I5(tx_dl_lp_dp_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAAEAA)) 
    tx_dl_lp_dp_i_2__0
       (.I0(tx_dl_lp_dp_i_5__3_n_0),
        .I1(tx_dl_lp_dp_i_6_n_0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(tx_dl_lp_dp_reg),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT4 #(
    .INIT(16'h0010)) 
    tx_dl_lp_dp_i_3__0
       (.I0(s_level_out_d2_reg_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .O(tx_dl_lp_dp_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h4541454145410501)) 
    tx_dl_lp_dp_i_4__4
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(cl_init_done_coreclk_i),
        .I4(cl_txclkactivehs_reg),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .O(tx_dl_lp_dp_i_4__4_n_0));
  LUT6 #(
    .INIT(64'h4555005545000055)) 
    tx_dl_lp_dp_i_5__3
       (.I0(Q[2]),
        .I1(cl_txclkactivehs_reg),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(cl_init_done_coreclk_i),
        .O(tx_dl_lp_dp_i_5__3_n_0));
  LUT6 #(
    .INIT(64'hBBBF000000000000)) 
    tx_dl_lp_dp_i_6
       (.I0(en_lp_01_cnt_reg_2),
        .I1(cl_txclkactivehs_i),
        .I2(s_level_out_d3),
        .I3(en_cal_hs_datapath_reg_0),
        .I4(tx_dl_lp_dp_reg_0),
        .I5(en_lp_01_cnt_reg_1),
        .O(tx_dl_lp_dp_i_6_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_98
   (out,
    \FSM_sequential_dl_tx_sm_state_reg[1] ,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    D,
    s_level_out_d3_reg_0,
    core_rst,
    core_clk,
    esc_start_reg,
    esc_start_reg_0,
    Q,
    esc_start,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_sm_state_reg[1]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[1]_1 ,
    cl_txclkactivehs_i,
    \FSM_sequential_dl_tx_sm_state_reg[1]_2 ,
    esc_start_reg_1,
    esc_start_reg_2,
    esc_start_reg_3,
    \FSM_sequential_dl_tx_sm_state[2]_i_8_0 );
  output out;
  output \FSM_sequential_dl_tx_sm_state_reg[1] ;
  output \FSM_sequential_dl_tx_sm_state_reg[0] ;
  output [1:0]D;
  output s_level_out_d3_reg_0;
  input core_rst;
  input core_clk;
  input esc_start_reg;
  input esc_start_reg_0;
  input [2:0]Q;
  input esc_start;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  input cl_txclkactivehs_i;
  input \FSM_sequential_dl_tx_sm_state_reg[1]_2 ;
  input esc_start_reg_1;
  input esc_start_reg_2;
  input esc_start_reg_3;
  input \FSM_sequential_dl_tx_sm_state[2]_i_8_0 ;

  wire [1:0]D;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_2_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[1]_i_3_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_12_n_0 ;
  wire \FSM_sequential_dl_tx_sm_state[2]_i_8_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[1]_2 ;
  wire [2:0]Q;
  wire cl_txclkactivehs_i;
  wire core_clk;
  wire core_rst;
  wire esc_start;
  wire esc_start_reg;
  wire esc_start_reg_0;
  wire esc_start_reg_1;
  wire esc_start_reg_2;
  wire esc_start_reg_3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'h0000000033AA0FFF)) 
    \FSM_sequential_dl_tx_sm_state[0]_i_1 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_2 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFCFDF0FFFCFDFC)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_1 
       (.I0(\FSM_sequential_dl_tx_sm_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_tx_sm_state[1]_i_3_n_0 ),
        .I2(esc_start_reg),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hA800)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_2 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[1]_0 ),
        .I1(s_level_out_d3),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I3(cl_txclkactivehs_i),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6E6E6EEEEEEEEEEE)) 
    \FSM_sequential_dl_tx_sm_state[1]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\FSM_sequential_dl_tx_sm_state_reg[1]_2 ),
        .I3(s_level_out_d3),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I5(cl_txclkactivehs_i),
        .O(\FSM_sequential_dl_tx_sm_state[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1FFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_12 
       (.I0(s_level_out_d3),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I2(cl_txclkactivehs_i),
        .I3(esc_start_reg_3),
        .I4(\FSM_sequential_dl_tx_sm_state[2]_i_8_0 ),
        .O(\FSM_sequential_dl_tx_sm_state[2]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFF1F)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_3 
       (.I0(s_level_out_d3),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[1]_1 ),
        .I2(cl_txclkactivehs_i),
        .I3(esc_start_reg),
        .I4(Q[0]),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hBBFFBBFFAFFFFFFF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_8 
       (.I0(Q[0]),
        .I1(esc_start_reg_1),
        .I2(\FSM_sequential_dl_tx_sm_state[2]_i_12_n_0 ),
        .I3(esc_start_reg_2),
        .I4(esc_start_reg_3),
        .I5(Q[2]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[0] ));
  LUT5 #(
    .INIT(32'h31330100)) 
    esc_start_i_1
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I1(esc_start_reg),
        .I2(esc_start_reg_0),
        .I3(Q[1]),
        .I4(esc_start),
        .O(\FSM_sequential_dl_tx_sm_state_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized1_99
   (out,
    E,
    s_level_out_d3_reg_0,
    \FSM_sequential_dl_tx_sm_state_reg[2] ,
    \FSM_sequential_dl_tx_sm_state_reg[2]_0 ,
    s_level_out_d3_reg_1,
    \FSM_sequential_dl_tx_sm_state_reg[2]_1 ,
    core_rst,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    \FSM_sequential_dl_tx_sm_state_reg[0] ,
    Q,
    \FSM_sequential_dl_tx_sm_state_reg[0]_0 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_1 ,
    cl_init_done_coreclk_i,
    dl_stopstate_reg,
    \FSM_sequential_dl_tx_sm_state_reg[0]_2 ,
    \FSM_sequential_dl_tx_sm_state_reg[0]_3 ,
    esc_active_sync_r,
    dl_status_bit_6_reg,
    dl_status_bit_6_reg_0,
    timeout_hsexit_all);
  output out;
  output [0:0]E;
  output s_level_out_d3_reg_0;
  output \FSM_sequential_dl_tx_sm_state_reg[2] ;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  output s_level_out_d3_reg_1;
  output \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  input core_rst;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input \FSM_sequential_dl_tx_sm_state_reg[0] ;
  input [2:0]Q;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  input cl_init_done_coreclk_i;
  input dl_stopstate_reg;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  input \FSM_sequential_dl_tx_sm_state_reg[0]_3 ;
  input esc_active_sync_r;
  input dl_status_bit_6_reg;
  input dl_status_bit_6_reg_0;
  input timeout_hsexit_all;

  wire [0:0]E;
  wire \FSM_sequential_dl_tx_sm_state_reg[0] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_1 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_2 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[0]_3 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2] ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_0 ;
  wire \FSM_sequential_dl_tx_sm_state_reg[2]_1 ;
  wire [2:0]Q;
  wire cl_init_done_coreclk_i;
  wire core_clk;
  wire core_rst;
  wire dl_status_bit_6_reg;
  wire dl_status_bit_6_reg_0;
  wire dl_stopstate_reg;
  wire esc_active_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  wire s_level_out_d3_reg_0;
  wire s_level_out_d3_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire timeout_hsexit_all;

  assign out = s_level_out_d3;
  LUT6 #(
    .INIT(64'hFFFFFF00FFBAFF00)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_1 
       (.I0(\FSM_sequential_dl_tx_sm_state_reg[0] ),
        .I1(s_level_out_d3_reg_0),
        .I2(Q[1]),
        .I3(\FSM_sequential_dl_tx_sm_state_reg[0]_0 ),
        .I4(\FSM_sequential_dl_tx_sm_state_reg[2] ),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_1 ),
        .O(E));
  LUT6 #(
    .INIT(64'hB0B0B0B0B0BFBFBF)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_4 
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(Q[0]),
        .I3(dl_status_bit_6_reg_0),
        .I4(dl_status_bit_6_reg),
        .I5(timeout_hsexit_all),
        .O(s_level_out_d3_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF503050F0)) 
    \FSM_sequential_dl_tx_sm_state[2]_i_6 
       (.I0(s_level_out_d3_reg_0),
        .I1(\FSM_sequential_dl_tx_sm_state_reg[0]_2 ),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\FSM_sequential_dl_tx_sm_state_reg[0]_3 ),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2] ));
  LUT6 #(
    .INIT(64'h44440FFF44440000)) 
    dl_status_bit_6_i_5
       (.I0(s_level_out_d3),
        .I1(esc_active_sync_r),
        .I2(dl_status_bit_6_reg),
        .I3(dl_status_bit_6_reg_0),
        .I4(Q[0]),
        .I5(timeout_hsexit_all),
        .O(s_level_out_d3_reg_1));
  LUT6 #(
    .INIT(64'hBFBCBFBCBFBC8F8C)) 
    dl_stopstate_i_2
       (.I0(s_level_out_d3_reg_1),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(cl_init_done_coreclk_i),
        .I4(dl_stopstate_reg),
        .I5(Q[0]),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    dl_stopstate_i_3
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(s_level_out_d3_reg_0),
        .O(\FSM_sequential_dl_tx_sm_state_reg[2]_1 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_tx_sync_cell" *) 
module mipi_dphy_0_mipi_dphy_v4_1_3_tx_sync_cell__parameterized2
   (out,
    in0,
    core_clk);
  output out;
  input in0;
  input core_clk;

  wire core_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
