#
# create_project.tcl: Tcl script for re-creating Vivado project
#
# Generated by Vivado on Fri Jun 26 14:29:32 +0200 2015
#
#    Modified by diana.ungureanu@enclustra.com

source scripts/settings.tcl

set project_base_name ${hw_base_platform}${module_name}

set VivadoVersion 2017

foreach hw_platform $hw_platforms {

    set run_dir "Vivado${part_specific_text}${hw_platform}"
    set project_name ${project_base_name}_${hw_platform}

    # Set the reference directory for source file relative paths (by default the value is script directory path)
    set origin_dir "."
    
    # Set the directory path for the original project from where this script was exported
    set orig_proj_dir "[file normalize "$origin_dir/${run_dir}"]"
    
    # Create project
    create_project ${project_name} ./${run_dir}
    
    # Set the directory path for the new project
    set proj_dir [get_property directory [current_project]]
    
    # Set project properties
    set obj [get_projects ${project_name}]
    set_property "default_lib" "xil_defaultlib" $obj
    set_property "part" "${fpga_part}" $obj
    set_property "simulator_language" "Mixed" $obj
    
    # Create 'sources_1' fileset (if not found)
    if {[string equal [get_filesets -quiet sources_1] ""]} {
    create_fileset -srcset sources_1
    }
    
    # Set 'sources_1' fileset object
    set obj [get_filesets sources_1]
    set files [list \
    "[file normalize "$origin_dir/src/system_top_${hw_platform}.vhd"]"\
    ]
    add_files -norecurse -fileset $obj $files
    
    
    set file "$origin_dir/src/system_top_${hw_platform}.vhd"
    set file [file normalize $file]
    set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
    set_property "file_type" "VHDL" $file_obj
    
    #############################################
    #
    #
    #create BD creation script
    source scripts/${project_base_name}_bd_${hw_platform}.tcl
    #
    #
    #############################################
    
    
    # Set 'sources_1' fileset properties
    set obj [get_filesets sources_1]
    set_property "top" "system_top" $obj


    # ###

    # Create '${hw_base_platform}${hw_platform}' fileset (if not found)
    if {[string equal [get_filesets -quiet ${hw_base_platform}${hw_platform}] ""]} {
    create_fileset -constrset ${hw_base_platform}${hw_platform}
    }

    # Set '${hw_base_platform}${hw_platform}' fileset object
    set obj [get_filesets ${hw_base_platform}${hw_platform}]
    
    # Add/Import constrs file and set constrs file properties
    set file "[file normalize "$origin_dir/src/${project_base_name}_${hw_platform}.xdc"]"
    set file_added [add_files -norecurse -fileset $obj $file]
    set file "$origin_dir/src/${project_base_name}_${hw_platform}.xdc"
    set file [file normalize $file]
    set file_obj [get_files -of_objects [get_filesets ${hw_base_platform}${hw_platform}] [list "*$file"]]
    set_property "file_type" "XDC" $file_obj
    
    # Set '${hw_base_platform}${hw_platform}' fileset properties
    set obj [get_filesets ${hw_base_platform}${hw_platform}]
    
        
    # #####################
    # Create runs
    # #####################
    
    # Create '${hw_base_platform}${hw_platform}_synth' run (if not found)
    if {[string equal [get_runs -quiet ${hw_base_platform}${hw_platform}_synth] ""]} {
    create_run -name ${hw_base_platform}${hw_platform}_synth -part ${fpga_part} -flow "Vivado Synthesis ${VivadoVersion}" -strategy "Vivado Synthesis Defaults" -constrset ${hw_base_platform}${hw_platform}
    } else {
    set_property strategy "Vivado Synthesis Defaults" [get_runs ${hw_base_platform}${hw_platform}_synth]
    set_property flow "Vivado Synthesis" [get_runs ${hw_base_platform}${hw_platform}_synth]
    }
    set obj [get_runs ${hw_base_platform}${hw_platform}_synth]
    set_property "constrset" "${hw_base_platform}${hw_platform}" $obj
    set_property "part" "${fpga_part}" $obj
    
    
    # Create '${hw_base_platform}${hw_platform}_impl' run (if not found)
    if {[string equal [get_runs -quiet ${hw_base_platform}${hw_platform}_impl] ""]} {
    create_run -name ${hw_base_platform}${hw_platform}_impl -part ${fpga_part} -flow "Vivado Implementation ${VivadoVersion}" -strategy "Vivado Implementation Defaults" -constrset ${hw_base_platform}${hw_platform} -parent_run ${hw_base_platform}${hw_platform}_synth
    } else {
    set_property strategy "Vivado Implementation Defaults" [get_runs ${hw_base_platform}${hw_platform}_impl]
    set_property flow "Vivado Implementation" [get_runs ${hw_base_platform}${hw_platform}_impl]
    }
    set obj [get_runs ${hw_base_platform}${hw_platform}_impl]
    set_property "constrset" "${hw_base_platform}${hw_platform}" $obj
    set_property "part" "${fpga_part}" $obj
    set_property "steps.write_bitstream.args.readback_file" "0" $obj
    set_property "steps.write_bitstream.args.verbose" "0" $obj


    #delete dummy runs created by Vivado
    delete_runs "synth_1 impl_1"
    
    # remove out-of-context (OOC) run
    set_property synth_checkpoint_mode None [get_files  ./${run_dir}/${project_name}.srcs/sources_1/bd/${project_base_name}/${project_base_name}.bd]

    puts "INFO: Project created:${project_name}"

}